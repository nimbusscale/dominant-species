var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.322,1,1.592]],["body/interfaces/Action.html",[0,0.485,1,2.813,2,1.838,3,0.371,4,0.335,5,0.335,6,4.763,7,0.199,8,0.615,9,1.929,10,1.167,11,0.232,12,0.019,13,0.371,14,0.017,15,0.017]],["title/components/ActionPawnComponent.html",[16,1.507,17,2.032]],["body/components/ActionPawnComponent.html",[1,2.919,3,0.244,4,0.22,5,0.22,7,0.131,10,0.959,11,0.152,12,0.02,13,0.244,14,0.013,15,0.013,16,2.322,17,3.367,18,2.949,19,2.327,20,2.327,21,2.327,22,5.488,23,4.438,24,3.131,25,2.327,26,4.28,27,4.28,28,3.996,29,4.311,30,4.991,31,3.181,32,2.949,33,3.181,34,4.991,35,3.181,36,4.991,37,3.811,38,4.342,39,1.569,40,2.757,41,0.907,42,4.876,43,3.36,44,4.068,45,0.938,46,0.848,47,1.09,48,3.651,49,3.651,50,3.651,51,2.532,52,3.651,53,3.131,54,3.651,55,0.449,56,3.131,57,3.811,58,0.848,59,2.788,60,2.788,61,2.532,62,3.131,63,1.771,64,2.532,65,2.327,66,0.268,67,1.272,68,1.151,69,3.651,70,3.651,71,3.811,72,3.131,73,2.327,74,3.181,75,1.616,76,2.327,77,3.896,78,2.327,79,2.327,80,2.011,81,2.327,82,2.327,83,2.011,84,2.327,85,2.011,86,1.771,87,1.884,88,2.327,89,2.011,90,2.327,91,2.327]],["title/interfaces/ActionPawnPiece.html",[0,0.322,43,2.18]],["body/interfaces/ActionPawnPiece.html",[0,0.465,2,1.761,3,0.356,4,0.321,5,0.321,7,0.191,8,0.6,11,0.222,12,0.019,13,0.356,14,0.016,15,0.016,40,3.413,43,3.755,55,0.467,92,4.565,93,4.565,94,1.806,95,2.774,96,5.374,97,3.393,98,4.065]],["title/components/AnimalCardComponent.html",[16,1.507,80,2.032]],["body/components/AnimalCardComponent.html",[1,1.948,3,0.132,4,0.119,5,0.119,7,0.177,8,0.298,11,0.263,12,0.02,13,0.132,14,0.008,15,0.008,16,1.613,17,2.486,18,1.867,19,1.26,20,1.26,21,1.26,23,1.371,25,1.26,28,3.264,29,3.522,31,2.015,32,1.867,33,2.015,35,2.015,37,2.413,41,0.783,43,2.666,44,4.078,45,1.42,46,1.283,47,1.143,55,0.497,57,2.413,58,0.459,59,1.509,60,1.509,63,0.958,64,1.371,65,2.015,66,0.145,67,1.376,73,1.26,74,2.015,75,1.403,76,1.26,77,2.876,78,1.26,79,1.26,80,2.486,81,3.522,82,1.26,83,1.089,84,1.26,85,1.089,86,0.958,87,1.02,88,1.26,89,2.486,90,1.26,91,1.26,97,1.26,99,5.571,100,4.961,101,1.695,102,2.71,103,3.949,104,3.161,105,3.949,106,3.949,107,3.949,108,3.949,109,3.161,110,3.161,111,3.949,112,3.949,113,3.386,114,2.393,115,4.934,116,3.949,117,0.734,118,1.587,119,3.161,120,3.161,121,3.161,122,4.512,123,3.161,124,2.418,125,1.046,126,1.977,127,3.109,128,3.264,129,3.161,130,1.088,131,1.088,132,1.977,133,3.161,134,1.977,135,1.033,136,1.114,137,3.161,138,1.977,139,3.161,140,1.977,141,1.977,142,3.161,143,1.977,144,1.81,145,1.977,146,1.528,147,1.977,148,2.486,149,1.977,150,1.977,151,1.977,152,1.977,153,1.631,154,1.371,155,1.695,156,1.695,157,1.977,158,1.977,159,2.192,160,1.168,161,1.533,162,1.509,163,1.695,164,1.509,165,1.168,166,1.26,167,2.876,168,0.591,169,1.509,170,1.977,171,1.371,172,1.695,173,1.371,174,1.695,175,1.695,176,0.765,177,0.352,178,1.977,179,0.654,180,1.977,181,1.977,182,1.977,183,1.977,184,1.376,185,1.977,186,1.977,187,2.192,188,1.977,189,2.739,190,3.949,191,1.977,192,2.739,193,1.695,194,1.977,195,1.977,196,2.71,197,3.161,198,3.386,199,1.977,200,1.977,201,0.725,202,3.161,203,3.161,204,1.977,205,3.161,206,3.161,207,1.977,208,3.161,209,1.977,210,1.977,211,1.977,212,1.977,213,3.161,214,3.445,215,3.161,216,3.161,217,2.192,218,3.161,219,3.161]],["title/injectables/AnimalService.html",[220,0.461,221,2.817]],["body/injectables/AnimalService.html",[3,0.146,4,0.132,5,0.132,7,0.078,8,0.323,9,1.139,10,0.368,11,0.248,12,0.02,13,0.146,14,0.009,15,0.009,39,1.074,41,0.597,44,4.163,45,1.411,46,1.333,47,1.208,55,0.476,58,0.506,63,1.058,64,1.512,66,0.16,68,1.034,75,1.355,113,3.612,114,2.043,117,0.793,118,1.762,124,1.913,125,1.131,127,2.817,130,0.929,131,0.929,135,1.084,136,1.177,146,1.63,148,3.365,159,2.369,160,1.289,161,1.657,162,1.665,163,1.87,166,1.39,167,2.685,168,0.652,173,1.512,175,2.93,176,2.003,177,1.024,179,0.722,184,1.661,189,2.369,192,1.512,193,2.93,196,1.87,198,3.612,201,0.8,214,1.665,220,0.427,221,2.609,222,0.686,223,1.87,224,3.894,225,5.942,226,4.213,227,3.417,228,4.768,229,2.312,230,4.768,231,3.417,232,4.213,233,4.213,234,1.87,235,3.162,236,3.391,237,3.417,238,2.93,239,3.417,240,2.181,241,2.181,242,2.181,243,2.181,244,3.417,245,2.181,246,2.181,247,2.181,248,2.51,249,2.181,250,3.417,251,1.63,252,3.417,253,2.181,254,2.181,255,1.87,256,2.181,257,1.87,258,2.181,259,2.181,260,2.181,261,2.181,262,2.181,263,1.87,264,3.039,265,1.202,266,1.665,267,1.665,268,2.181,269,2.181,270,1.39,271,2.181,272,1.87,273,0.686,274,0.652,275,1.289,276,2.181,277,2.181,278,2.181,279,2.181,280,2.181,281,1.87,282,2.181,283,2.181,284,2.181,285,2.181,286,2.181,287,1.665,288,1.87,289,2.181,290,3.417,291,1.87,292,1.665,293,4.213,294,2.181,295,2.181,296,1.87,297,2.181,298,2.181,299,1.87,300,2.181,301,2.181,302,3.417,303,4.213,304,2.181,305,2.181,306,3.417,307,2.181,308,2.181,309,2.181,310,3.417,311,2.181,312,4.213,313,4.213,314,3.417,315,2.181,316,2.181,317,1.39,318,2.181,319,1.512,320,3.417,321,2.181,322,2.181,323,2.181,324,2.181,325,2.181,326,1.87,327,2.181]],["title/components/AppComponent.html",[16,1.507,83,2.032]],["body/components/AppComponent.html",[1,1.842,3,0.285,4,0.258,5,0.258,7,0.153,8,0.523,10,0.72,11,0.178,12,0.02,13,0.285,14,0.014,15,0.014,16,2.511,17,2.352,18,3.272,19,2.721,20,2.721,21,2.721,25,2.721,28,4.155,29,4.483,31,3.531,32,3.272,33,3.531,35,3.531,41,0.785,45,1.097,46,0.991,47,0.761,55,0.452,58,0.991,65,3.531,66,0.314,73,2.721,74,3.531,75,1.748,76,2.721,77,4.147,78,2.721,79,2.721,80,2.352,81,2.721,82,2.721,83,3.584,84,2.721,85,3.584,86,2.07,87,3.172,88,2.721,89,2.352,90,2.721,91,2.721,217,3.841,274,1.656,328,3.66,329,6.148,330,5.539,331,5.539,332,6.148,333,4.749,334,4.269,335,3.66,336,4.269,337,3.26,338,4.269]],["title/classes/Area.html",[66,0.271,146,1.427]],["body/classes/Area.html",[0,0.276,3,0.212,4,0.191,5,0.191,7,0.189,8,0.427,9,1.642,10,0.889,11,0.271,12,0.02,13,0.302,14,0.012,15,0.012,41,0.64,47,1.224,55,0.387,66,0.233,67,1.835,68,0.851,94,1.498,117,1.049,118,1.543,125,1.048,130,0.997,131,0.997,135,1.203,136,0.992,146,2.223,176,1.749,177,0.94,184,1.574,229,2.786,248,3.328,251,1.226,275,1.872,319,4.609,339,1.746,340,2.419,341,2.439,342,3.48,343,4.103,344,2.887,345,2.671,346,1.553,347,2.332,348,4.927,349,2.671,350,3.113,351,3.876,352,4.52,353,3.169,354,1.635,355,2.776,356,2.197,357,0.901,358,2.197,359,2.197,360,3.169,361,3.169,362,2.192,363,2.946,364,3.169,365,1.448,366,2.197,367,2.717,368,1.749,369,0.814,370,1.368,371,2.197,372,2.717,373,2.717,374,2.419,375,1.872,376,3.876,377,2.717,378,2.717,379,2.717,380,2.717,381,2.717,382,2.717,383,2.717,384,2.717,385,1.872,386,2.197,387,2.197,388,2.197,389,2.197,390,2.671,391,2.717,392,2.717,393,2.717,394,2.02,395,2.717,396,2.717,397,2.717,398,2.717,399,2.717,400,2.717,401,1.746,402,2.717]],["title/injectables/AreaRegistryService.html",[127,2.18,220,0.461]],["body/injectables/AreaRegistryService.html",[3,0.264,4,0.238,5,0.238,7,0.141,8,0.497,9,1.068,10,0.888,11,0.282,12,0.02,13,0.264,14,0.014,15,0.014,41,0.839,45,1.623,46,1.466,47,1.231,55,0.464,58,0.918,66,0.29,75,1.123,94,1.497,114,1.916,117,1.222,118,1.652,125,1.308,127,3.111,130,1.306,131,1.306,135,1.102,136,0.744,146,2.037,160,3.111,161,1.916,177,1.056,179,1.959,201,1.932,220,0.658,222,1.243,273,1.243,274,1.181,355,3.09,357,1.123,363,1.916,369,1.016,403,1.834,404,2.335,405,3.911,406,2.716,407,3.651,408,3.258,409,2.553,410,3.952,411,4.378,412,3.389,413,5.265,414,2.741,415,3.018,416,3.055,417,2.519,418,3.389,419,3.018,420,2.741,421,3.018,422,3.018,423,2.741,424,3.018,425,2.519,426,1.806,427,2.335,428,3.952]],["title/interfaces/AreaState.html",[0,0.322,363,1.789]],["body/interfaces/AreaState.html",[0,0.333,2,1.263,3,0.255,4,0.23,5,0.23,7,0.208,8,0.486,9,1.757,10,0.644,11,0.159,12,0.02,13,0.344,14,0.013,15,0.013,55,0.428,66,0.281,67,1.792,68,0.969,94,1.654,118,1.257,146,2.409,176,1.99,177,1.038,184,1.792,229,1.852,248,3.419,275,2.256,319,4.318,340,2.916,341,1.888,342,2.834,343,4.21,346,1.391,348,3.274,351,3.274,362,1.852,363,3.152,367,3.274,368,2.251,369,0.981,370,1.648,371,2.648,372,3.274,373,4.412,374,3.928,375,3.04,376,5.339,377,3.274,378,3.274,379,3.274,380,3.274,381,3.274,382,3.274,383,3.274,384,3.274,385,2.256,386,2.648,387,2.648,388,2.648,389,2.648,390,3.04,391,3.274,392,3.274,393,3.274,394,2.434,395,3.274,396,3.274,397,3.274,398,3.274,399,3.274,400,3.274,401,2.103,402,3.274,429,1.97]],["title/injectables/AreaStateService.html",[220,0.461,411,2.558]],["body/injectables/AreaStateService.html",[3,0.249,4,0.225,5,0.225,7,0.133,8,0.477,9,1.006,10,0.853,11,0.277,12,0.02,13,0.249,14,0.013,15,0.013,39,1.59,41,0.873,45,1.3,46,1.174,47,1.234,55,0.422,58,0.864,66,0.273,68,0.701,75,1.058,94,1.437,117,1.174,118,1.69,130,1.359,131,1.359,135,1.349,136,1.16,146,2.492,160,2.988,177,0.902,179,1.673,201,1.855,220,0.632,222,1.17,229,2.785,273,1.17,274,1.113,344,3.107,346,1.006,355,3.107,363,2.988,369,0.957,403,1.761,406,2.609,408,2.609,409,2.452,411,3.507,416,2.963,425,2.373,426,1.701,430,2.199,431,3.906,432,3.507,433,3.507,434,3.507,435,3.983,436,5.057,437,2.842,438,3.507,439,2.842,440,2.581,441,2.842,442,2.842,443,2.581,444,2.842,445,2.581,446,2.842,447,2.842,448,2.581,449,2.842,450,3.722,451,3.722,452,3.722]],["title/components/DrawPoolGameComponent.html",[16,1.507,85,2.032]],["body/components/DrawPoolGameComponent.html",[1,1.302,3,0.125,4,0.113,5,0.113,7,0.136,8,0.285,10,0.91,11,0.225,12,0.02,13,0.125,14,0.008,15,0.008,16,1.551,17,2.404,18,1.782,19,1.189,20,1.189,21,1.189,23,1.293,25,1.189,28,3.188,29,3.44,31,1.923,32,1.782,33,1.923,35,1.923,39,0.949,41,0.618,43,2.578,44,3.319,45,1.231,46,1.112,47,1.143,55,0.499,58,0.433,59,1.424,60,1.424,65,1.923,66,0.137,67,0.65,68,0.715,73,1.189,74,1.923,75,1.362,76,1.189,77,2.781,78,1.189,79,1.189,80,2.404,81,2.781,82,1.189,83,1.027,84,1.189,85,2.404,86,3.181,87,3.757,88,1.189,89,2.404,90,1.189,91,1.189,97,1.189,98,1.424,100,1.424,114,2.323,117,0.7,118,1.489,124,1.957,125,0.998,130,0.665,131,0.665,135,1.073,136,1.122,144,1.394,148,2.404,153,0.962,154,1.293,155,1.599,156,1.599,159,2.634,161,0.904,162,1.424,164,1.424,166,1.189,167,1.923,168,0.558,173,1.293,174,1.599,184,1.879,187,2.092,189,1.293,214,3.332,229,2.486,235,2.404,236,3.188,257,1.599,263,1.599,265,1.027,275,1.102,281,1.599,292,1.424,337,4.954,369,0.976,401,1.662,426,0.852,453,5.563,454,1.599,455,3.798,456,3.798,457,3.017,458,3.017,459,3.798,460,4.108,461,4.791,462,4.108,463,4.791,464,3.741,465,4.363,466,3.017,467,4.363,468,4.791,469,1.865,470,3.026,471,3.257,472,2.781,473,3.798,474,3.026,475,3.257,476,3.017,477,3.017,478,1.865,479,1.865,480,1.865,481,3.017,482,1.865,483,0.722,484,1.865,485,1.865,486,1.865,487,1.865,488,1.027,489,1.865,490,1.865,491,1.865,492,1.865,493,1.865,494,1.865,495,1.865,496,1.865,497,1.027,498,1.865,499,1.865,500,2.092,501,1.599,502,1.923,503,1.865,504,1.865,505,1.865,506,1.865,507,3.017,508,1.865,509,1.865,510,1.424,511,1.865,512,1.865,513,1.865,514,1.865,515,1.865,516,1.865,517,1.865,518,1.865,519,1.865,520,1.424,521,1.865,522,4.396,523,1.865,524,1.865,525,1.865,526,1.865,527,1.865,528,1.865,529,1.865,530,1.865,531,1.865,532,1.865,533,1.865,534,1.865,535,1.293,536,1.865,537,1.865,538,1.293,539,1.865,540,1.865,541,1.865,542,1.865,543,2.587,544,2.587,545,4.363]],["title/components/ElementComponent.html",[16,1.507,89,2.032]],["body/components/ElementComponent.html",[1,1.635,3,0.253,4,0.229,5,0.229,7,0.136,10,0.978,11,0.158,12,0.02,13,0.253,14,0.013,15,0.013,16,2.366,17,2.087,18,3.023,19,2.415,20,2.415,21,2.415,25,2.415,26,4.388,27,4.388,28,4.035,29,4.353,31,3.262,32,3.023,33,3.262,35,3.262,37,3.908,39,1.609,41,0.918,42,4.969,44,4.103,45,0.974,46,0.88,47,1.107,51,2.627,53,3.248,55,0.456,56,3.248,57,3.908,58,0.88,61,2.627,62,3.248,63,1.837,64,2.627,65,2.415,66,0.278,68,1.169,72,3.248,73,2.415,74,3.262,75,1.974,76,2.415,77,3.956,78,2.415,79,2.415,80,2.087,81,2.415,82,2.415,83,2.087,84,2.415,85,2.087,86,1.837,87,1.955,88,2.415,89,3.419,90,2.415,91,2.415,148,3.193,173,2.627,483,2.242,546,3.248,547,5.117,548,5.117,549,3.788,550,3.788,551,3.788,552,3.788,553,3.788,554,3.788,555,3.788,556,3.908]],["title/interfaces/ElementConfig.html",[0,0.322,224,2.352]],["body/interfaces/ElementConfig.html",[0,0.368,2,1.397,3,0.282,4,0.255,5,0.255,7,0.151,8,0.519,11,0.255,12,0.02,13,0.367,14,0.014,15,0.014,55,0.449,177,0.753,184,1.915,201,1.549,224,3.505,270,2.691,483,2.806,488,3.369,500,2.928,502,2.691,538,4.493,557,3.224,558,3.224,559,5.669,560,6.22,561,4.222,562,3.224,563,4.222,564,4.222,565,3.62,566,3.62,567,3.62,568,3.62,569,3.62,570,3.62,571,3.62,572,5.13,573,3.62,574,3.62,575,3.62,576,3.62,577,3.62,578,3.62,579,3.62,580,3.62,581,3.62,582,3.62,583,3.62,584,3.62,585,3.62]],["title/injectables/ElementDrawPoolService.html",[220,0.461,474,2.558]],["body/injectables/ElementDrawPoolService.html",[3,0.251,4,0.227,5,0.227,7,0.135,8,0.481,11,0.258,12,0.02,13,0.251,14,0.013,15,0.013,39,1.601,41,0.533,45,1.483,46,1.34,47,1.189,55,0.475,58,0.873,66,0.276,67,2.252,68,0.708,86,3.305,117,1.182,118,1.717,125,1.244,128,3.655,130,0.829,131,0.829,135,0.787,136,0.959,144,2.27,159,2.606,161,1.823,164,2.87,165,2.221,166,2.396,167,3.245,168,1.124,172,3.223,177,0.908,189,2.606,192,2.606,220,0.636,222,1.182,229,3,251,2.501,273,1.182,274,1.124,275,2.221,299,3.223,357,1.641,460,5.715,474,3.53,586,5.844,587,3.223,588,5.772,589,5.772,590,3.759,591,5.09,592,4.365,593,3.759,594,3.759,595,5.09,596,6.186,597,3.759,598,3.759,599,3.759,600,3.223,601,3.759,602,3.759,603,3.759,604,3.759,605,3.759]],["title/interfaces/ElementPiece.html",[0,0.322,148,2.032]],["body/interfaces/ElementPiece.html",[0,0.459,2,1.742,3,0.352,4,0.318,5,0.318,7,0.188,8,0.596,11,0.22,12,0.019,13,0.352,14,0.016,15,0.016,40,3.4,55,0.464,67,1.834,94,1.795,95,2.761,97,3.356,148,3.478,483,2.713,501,4.515,538,4.862,606,4.515]],["title/classes/Faction.html",[66,0.271,124,1.285]],["body/classes/Faction.html",[0,0.307,3,0.235,4,0.213,5,0.213,7,0.126,8,0.46,10,1.016,11,0.28,12,0.02,13,0.325,14,0.013,15,0.013,39,1.531,41,0.967,47,1.264,51,2.443,55,0.259,66,0.259,68,1.051,94,1.587,117,1.131,124,1.696,130,1.328,131,1.328,135,1.323,136,1.286,179,1.166,251,1.363,339,1.941,341,2.505,344,2.987,345,2.878,346,1.627,347,2.513,349,2.878,350,3.298,354,2.88,355,2.888,356,2.443,357,1.002,358,2.443,359,2.443,362,1.709,365,1.61,366,2.443,368,1.884,369,0.906,370,1.521,488,3.904,607,2.691,608,4.871,609,4.871,610,4.871,611,3.838,612,4.598,613,4.176,614,3.524,615,5.604,616,4.176,617,3.524,618,4.176,619,3.524,620,2.691,621,2.246,622,1.709,623,2.082,624,2.082,625,2.246,626,2.246,627,1.61,628,1.439,629,3.524,630,3.524,631,3.524,632,3.524,633,3.524,634,1.61,635,2.443,636,3.021,637,5.163,638,3.87]],["title/interfaces/FactionAssignment.html",[0,0.322,264,2.352]],["body/interfaces/FactionAssignment.html",[0,0.383,2,1.451,3,0.293,4,0.265,5,0.265,7,0.157,8,0.532,9,1.838,10,1.174,11,0.235,12,0.02,13,0.377,14,0.015,15,0.015,55,0.5,58,1.018,66,0.322,75,1.247,94,1.247,118,1.377,124,2.169,136,0.826,161,2.127,168,1.311,177,0.782,187,3.041,220,0.705,235,2.416,251,2.18,264,4.334,265,2.416,273,1.379,274,1.311,357,1.602,369,1.127,386,3.041,403,1.528,404,2.591,405,3.105,417,2.796,426,2.004,427,2.591,520,3.349,611,4.334,634,2.004,639,2.591,640,3.593,641,3.761,642,3.761,643,3.761,644,3.761,645,3.761,646,3.761,647,3.761,648,3.761,649,3.761]],["title/injectables/FactionRegistryService.html",[220,0.461,235,2.032]],["body/injectables/FactionRegistryService.html",[0,0.29,3,0.222,4,0.2,5,0.2,7,0.119,8,0.441,9,1.462,10,0.99,11,0.281,12,0.02,13,0.312,14,0.012,15,0.012,41,0.766,45,1.694,46,1.53,47,1.236,55,0.454,58,0.771,66,0.244,75,0.944,94,1.329,114,1.611,117,1.085,118,1.728,124,2.154,125,1.099,130,1.193,131,1.193,135,0.979,136,0.88,161,1.611,168,0.993,177,1.103,179,1.789,187,2.304,201,1.715,220,0.584,222,1.045,235,2.575,251,2.092,264,4.36,265,3.407,273,1.045,274,0.993,355,2.932,357,1.668,369,0.854,386,2.304,403,2.154,404,1.963,405,3.768,406,2.412,407,3.242,408,3.028,409,2.267,414,2.304,415,2.537,416,1.714,417,2.98,419,2.537,420,2.304,421,2.537,422,2.537,423,2.304,424,2.537,426,1.518,427,1.963,520,2.537,611,2.98,634,1.518,639,1.963,640,3.741,641,4.638,642,4.008,643,4.008,644,4.008,645,2.849,646,2.849,647,2.849,648,2.849,649,2.849,650,3.322,651,3.322,652,3.322,653,3.322,654,3.322,655,3.322]],["title/interfaces/FactionState.html",[0,0.322,634,1.686]],["body/interfaces/FactionState.html",[0,0.393,2,1.489,3,0.301,4,0.271,5,0.271,7,0.161,8,0.541,10,1.216,11,0.263,12,0.02,13,0.383,14,0.015,15,0.015,41,0.971,55,0.331,66,0.331,68,1.187,94,1.792,124,1.567,136,1.187,341,2.102,368,2.438,369,1.156,370,1.942,488,3.922,607,3.435,611,4.368,612,5.232,613,3.858,615,5.405,616,3.858,618,3.858,634,2.618,635,3.12,636,3.858,637,5.69,638,4.371]],["title/injectables/FactionStateService.html",[220,0.461,640,2.352]],["body/injectables/FactionStateService.html",[3,0.249,4,0.225,5,0.225,7,0.133,8,0.477,9,1.006,10,0.853,11,0.277,12,0.02,13,0.249,14,0.013,15,0.013,39,1.59,41,0.873,45,1.3,46,1.174,47,1.234,55,0.422,58,0.864,66,0.273,68,0.701,75,1.058,94,1.437,117,1.174,118,1.69,124,2.244,130,1.359,131,1.359,135,1.349,136,1.16,177,0.902,179,1.673,201,1.855,220,0.632,222,1.17,229,2.785,265,2.786,273,1.17,274,1.113,344,3.107,346,1.006,355,3.107,369,0.957,403,1.761,406,2.609,408,2.609,409,2.452,416,2.963,426,1.701,430,2.199,431,3.906,432,3.507,433,3.507,434,3.507,435,3.983,437,2.842,438,3.507,439,2.842,440,2.581,441,2.842,442,2.842,443,2.581,444,2.842,445,2.581,446,2.842,447,2.842,448,2.581,449,2.842,634,2.816,639,2.199,640,3.223,656,5.057,657,3.722,658,3.722,659,3.722]],["title/classes/GameElement.html",[66,0.271,341,1.354]],["body/classes/GameElement.html",[0,0.314,3,0.241,4,0.217,5,0.217,7,0.129,8,0.467,9,1.722,10,0.834,11,0.266,12,0.02,13,0.331,14,0.013,15,0.013,39,1.555,41,0.701,47,1.224,55,0.363,66,0.265,68,0.931,117,1.148,125,1.192,130,1.091,131,1.091,135,1.036,136,1.063,168,1.077,176,1.394,177,0.882,179,1.636,251,2.185,255,3.09,339,1.985,341,1.815,344,3.183,345,3.337,346,1.939,347,2.914,349,2.922,350,3.591,354,3.636,357,1.605,362,2.398,365,2.581,368,1.394,385,2.129,387,2.499,388,2.499,390,2.129,621,3.153,622,2.398,623,2.922,624,2.922,625,3.153,626,3.153,627,2.26,628,2.02,660,4.115,661,2.751,662,3.43,663,4.946,664,3.603,665,3.603,666,3.603,667,3.603,668,3.603,669,3.09,670,3.603,671,2.297,672,1.859,673,1.859,674,1.859,675,4.241,676,2.499,677,3.09,678,2.499,679,2.499,680,3.09,681,3.09,682,2.297,683,3.09,684,3.09,685,2.751]],["title/injectables/GameElementRegistryService.html",[220,0.461,405,2.032]],["body/injectables/GameElementRegistryService.html",[3,0.231,4,0.209,5,0.209,7,0.124,8,0.454,9,1.494,10,0.933,11,0.271,12,0.02,13,0.231,14,0.012,15,0.012,41,0.783,45,1.535,46,1.387,47,1.189,55,0.461,58,0.803,63,1.678,66,0.254,68,0.652,75,1.987,94,0.984,114,1.678,117,1.117,118,1.686,125,1.145,130,1.219,131,1.219,135,1.007,136,0.906,168,1.034,176,1.339,177,1.189,179,2.15,201,2.192,220,0.601,222,1.088,251,1.339,273,1.088,274,1.034,341,1.27,357,1.571,368,1.339,369,0.889,370,1.493,403,2.368,404,2.044,405,2.649,406,2.852,407,3.833,408,3.353,409,2.332,414,3.335,416,3.239,417,3.066,420,3.335,423,3.335,426,1.581,427,2.044,431,2.649,627,1.581,686,5.19,687,3.46,688,5.974,689,4.809,690,4.809,691,3.46,692,3.46,693,3.46,694,3.46,695,3.46,696,2.044,697,2.642,698,2.967,699,2.967,700,3.46,701,2.967,702,2.967,703,2.967,704,3.46,705,2.967,706,2.642,707,3.46,708,3.46]],["title/interfaces/GameElementState.html",[0,0.322,368,1.427]],["body/interfaces/GameElementState.html",[0,0.378,2,1.432,3,0.289,4,0.261,5,0.261,7,0.155,8,0.527,9,1.874,10,1.103,11,0.181,12,0.02,13,0.373,14,0.015,15,0.015,55,0.411,66,0.318,68,1.052,136,0.815,168,1.293,176,1.674,177,0.996,179,1.432,251,2.161,341,1.588,344,2.828,345,2.556,346,1.83,347,2.232,350,2.556,354,3.493,357,1.588,362,2.098,365,2.553,368,2.161,385,2.556,387,3,388,3,390,2.556,621,2.758,622,2.098,623,2.556,624,2.556,625,2.758,626,2.758,627,1.977,628,1.767,660,2.556,661,3.304,662,3,671,2.758,672,2.232,673,2.232,674,2.232,675,4.791,676,3,677,3.71,678,3,679,3,680,3.71,681,3.71,682,2.758,683,3.71,684,3.71,685,3.304]],["title/injectables/GameElementStateService.html",[220,0.461,431,2.032]],["body/injectables/GameElementStateService.html",[3,0.204,4,0.184,5,0.184,7,0.109,8,0.416,9,1.395,10,0.871,11,0.268,12,0.02,13,0.204,14,0.011,15,0.011,39,1.384,41,0.848,45,1.131,46,1.022,47,1.196,55,0.44,58,0.709,63,1.48,66,0.224,68,0.575,75,1.998,117,1.022,118,1.702,125,1.01,130,1.321,131,1.321,135,1.254,136,1.239,168,0.913,176,1.181,177,1.068,179,1.869,184,1.063,201,2.073,220,0.55,222,0.96,229,2.739,273,0.96,274,0.913,275,1.804,341,1.12,344,2.938,346,0.825,357,1.251,368,2.185,369,0.784,370,1.317,403,2.371,406,2.663,408,2.663,409,2.134,416,3.459,426,1.395,427,1.804,430,1.804,431,2.424,432,3.052,433,3.052,434,3.052,435,3.579,438,3.052,440,3.052,443,3.052,445,2.117,448,2.117,471,3.774,472,3.601,497,1.682,627,1.395,686,5.197,696,1.804,697,2.331,698,5.643,699,2.617,701,2.617,702,2.617,703,2.617,705,2.617,706,2.331,709,3.053,710,4.401,711,3.053,712,3.053,713,3.053,714,4.401,715,3.053,716,3.053,717,3.053,718,3.053,719,3.053,720,3.053,721,3.053,722,3.053,723,3.053,724,3.053,725,3.053,726,3.053,727,3.053,728,3.053,729,3.053]],["title/injectables/GameManagementService.html",[220,0.461,470,2.558]],["body/injectables/GameManagementService.html",[3,0.205,4,0.185,5,0.185,7,0.158,9,0.83,11,0.128,12,0.02,13,0.205,14,0.011,15,0.011,41,0.626,47,1.071,55,0.533,58,0.713,63,1.49,66,0.226,75,0.873,117,1.027,118,1.704,124,1.804,125,1.463,127,3.347,128,3.347,130,0.678,131,0.678,135,1.186,136,1.177,144,1.622,146,2.004,153,1.585,154,2.13,160,1.815,161,2.512,165,1.815,171,2.13,177,0.548,184,2.339,220,0.553,222,0.966,224,1.958,234,2.634,235,3.121,236,3.806,238,3.791,248,2.512,265,1.692,270,1.958,272,2.634,273,0.966,274,0.918,296,2.634,319,3.929,369,1.331,401,2.436,403,2.178,425,1.958,462,2.634,464,4.858,470,3.066,475,4.441,502,1.958,592,4.441,611,1.958,612,2.346,639,1.815,697,2.346,730,2.634,731,5.665,732,5.18,733,5.665,734,3.072,735,3.072,736,3.072,737,3.072,738,3.072,739,1.404,740,1.958,741,3.072,742,3.072,743,2.634,744,2.346,745,3.072,746,2.346,747,3.072,748,3.072,749,3.072,750,2.634,751,3.072,752,3.072,753,3.072,754,3.072,755,3.072,756,3.072,757,3.072,758,3.072,759,4.421,760,3.072,761,3.072,762,3.072,763,3.072,764,3.072,765,3.072,766,3.072,767,3.072,768,3.072,769,3.072,770,3.072,771,5.18,772,3.072,773,3.072,774,3.072,775,3.072,776,3.072,777,3.072,778,3.072,779,3.072]],["title/interfaces/GameState.html",[0,0.322,628,1.507]],["body/interfaces/GameState.html",[0,0.412,2,1.562,3,0.315,4,0.285,5,0.285,7,0.169,8,0.558,11,0.269,12,0.02,13,0.395,14,0.015,15,0.015,55,0.473,124,2.421,144,2.551,146,2.689,184,1.644,287,4.509,363,3.274,429,2.436,628,2.839,634,3.086,660,2.789,739,3.086,780,3.605,781,4.095,782,5.905,783,3.764,784,4.721,785,4.721,786,4.721,787,3.274]],["title/injectables/GameStateClientService.html",[220,0.461,788,2.558]],["body/injectables/GameStateClientService.html",[3,0.319,4,0.288,5,0.288,7,0.171,11,0.199,12,0.02,13,0.319,14,0.015,15,0.015,39,1.871,41,0.677,47,1.061,55,0.476,58,1.11,66,0.351,68,0.9,117,1.382,130,1.054,131,1.054,135,1.001,136,1.121,168,1.429,220,0.744,222,1.503,273,1.503,274,1.429,346,1.833,357,1.692,403,2.257,497,3.57,622,3.289,696,2.824,788,4.127,789,4.098,790,5.951,791,5.951,792,4.007,793,4.78,794,4.78,795,4.78,796,3.65,797,4.78,798,4.78]],["title/interfaces/GameStatePatch.html",[0,0.322,792,2.18]],["body/interfaces/GameStatePatch.html",[0,0.461,2,1.747,3,0.353,4,0.319,5,0.319,7,0.189,8,0.597,11,0.264,12,0.019,13,0.353,14,0.016,15,0.016,55,0.388,346,1.427,488,3.73,660,3.119,672,2.724,673,2.724,674,3.702,792,3.736,799,4.527,800,6.018,801,7.018]],["title/injectables/GameStatePatchService.html",[220,0.461,802,2.558]],["body/injectables/GameStatePatchService.html",[3,0.283,4,0.256,5,0.256,7,0.152,11,0.23,12,0.02,13,0.283,14,0.014,15,0.014,41,0.781,44,2.505,47,0.984,55,0.477,58,0.985,66,0.312,68,1.038,117,1.28,130,1.216,131,1.216,135,1.155,220,0.689,222,1.333,273,1.333,274,1.268,346,1.754,365,2.966,403,2.135,429,2.188,497,3.376,622,2.972,628,3.02,672,2.188,673,2.188,674,2.845,696,3.258,792,4.074,796,3.238,800,3.636,802,3.824,803,3.636,804,4.729,805,5.515,806,5.515,807,5.515,808,5.515,809,5.515,810,4.241,811,5.515,812,4.241,813,4.241,814,3.636,815,4.241,816,4.241,817,4.241,818,4.241,819,4.241,820,4.241,821,4.241]],["title/injectables/GameStateService.html",[220,0.461,472,2.352]],["body/injectables/GameStateService.html",[0,0.323,3,0.161,4,0.146,5,0.146,7,0.086,11,0.256,12,0.02,13,0.161,14,0.01,15,0.01,39,1.162,41,0.871,47,1.222,55,0.463,58,0.561,66,0.177,68,0.846,117,0.858,118,1.398,124,1.565,125,1.223,130,1.355,131,1.355,135,1.369,136,1.346,144,1.648,146,1.738,166,1.539,168,0.722,176,1.947,177,0.659,184,1.288,220,0.462,222,0.759,273,0.759,274,0.722,317,1.539,346,1.661,357,1.431,363,2.888,365,2.615,369,1.154,403,2.405,425,1.539,429,1.246,430,1.427,472,3.208,497,3.804,622,2.441,628,1.51,634,2.722,639,1.427,696,1.427,739,2.722,740,1.539,783,3.208,788,3.49,792,2.974,796,1.844,802,3.49,822,3.17,823,3.697,824,3.697,825,3.697,826,3.697,827,3.17,828,3.697,829,3.697,830,3.697,831,4.316,832,3.17,833,3.17,834,3.17,835,5.033,836,4.316,837,3.17,838,3.17,839,3.17,840,4.316,841,2.415,842,4.492,843,4.492,844,2.415,845,3.697,846,3.697,847,2.415,848,2.415,849,3.17,850,2.415,851,3.17,852,2.415,853,3.17,854,2.415,855,2.415,856,3.17,857,4.652,858,3.852,859,3.697,860,3.17,861,3.697,862,3.697,863,2.415,864,3.17,865,2.415,866,3.17,867,2.415,868,3.17,869,2.415,870,2.415,871,2.07,872,2.415,873,2.07,874,2.415,875,2.07,876,2.415,877,2.415,878,2.415,879,2.415,880,2.415,881,2.415,882,2.415,883,2.415,884,2.415,885,2.415,886,2.415,887,4.492,888,2.07,889,2.415,890,2.415,891,2.415,892,2.415,893,2.415,894,2.415,895,1.674,896,2.415,897,2.415,898,2.415,899,2.415,900,2.415,901,2.415,902,2.415,903,2.415,904,2.415]],["title/injectables/GameStateStoreService.html",[220,0.461,783,2.352]],["body/injectables/GameStateStoreService.html",[3,0.088,4,0.079,5,0.079,7,0.141,8,0.213,11,0.247,12,0.02,13,0.088,14,0.006,15,0.006,28,0.777,39,0.709,41,0.768,45,0.579,46,0.814,47,1.155,55,0.357,58,0.305,66,0.097,67,1.69,68,0.914,75,0.997,114,0.638,117,0.814,118,1.582,124,1.03,125,0.979,130,1.228,131,1.196,135,1.217,136,1.237,144,1.688,146,1.144,168,0.393,176,1.878,177,1.087,179,0.979,184,1.221,192,1.563,201,0.483,220,0.282,222,0.414,251,1.144,273,0.414,274,0.393,288,1.933,292,1.721,317,1.437,326,1.933,346,1.851,354,1.163,357,1.494,363,2.231,365,2.703,368,1.78,370,0.568,374,4.767,375,2.071,394,1.437,403,2.273,409,2.459,425,0.838,429,1.526,483,1.356,497,3.595,522,1.933,535,1.563,543,1.933,572,1.721,622,1.093,623,1.332,624,1.332,627,1.602,628,2.947,634,2.103,639,0.777,671,0.838,672,0.679,673,0.679,674,0.679,682,2.235,685,1.721,696,1.332,706,2.677,739,2.103,740,0.838,781,3.949,783,3.094,787,0.912,804,1.933,814,1.128,822,1.933,827,1.933,831,3.689,832,1.933,833,1.933,834,1.933,836,3.689,837,1.933,838,1.933,839,3.006,840,3.689,849,1.933,851,1.933,853,1.933,857,4.773,858,3.006,860,1.128,864,1.933,866,1.933,868,1.933,871,1.128,873,1.128,875,1.128,888,1.128,895,2.431,905,1.128,906,2.254,907,2.254,908,2.254,909,2.254,910,1.933,911,2.254,912,2.254,913,1.933,914,4.853,915,2.254,916,2.254,917,3.506,918,2.254,919,2.254,920,2.254,921,2.254,922,2.254,923,3.506,924,4.302,925,2.254,926,2.254,927,2.254,928,4.029,929,2.254,930,5.695,931,2.254,932,1.933,933,3.011,934,1.933,935,2.254,936,2.677,937,4.162,938,3.506,939,2.254,940,2.254,941,2.254,942,2.254,943,3.506,944,2.677,945,3.506,946,2.983,947,2.254,948,2.254,949,2.254,950,2.254,951,2.958,952,3.506,953,2.254,954,3.506,955,2.431,956,2.254,957,1.933,958,2.958,959,2.958,960,2.958,961,2.254,962,2.254,963,2.958,964,2.958,965,2.958,966,2.254,967,2.254,968,1.315,969,1.315,970,2.254,971,1.315,972,0.777,973,1.315,974,1.315,975,1.315,976,1.315,977,5.422,978,1.315,979,2.254,980,2.254,981,3.506,982,1.315,983,1.315,984,1.315,985,2.254,986,1.315,987,1.315,988,1.315,989,1.315,990,3.944,991,2.254,992,2.254,993,1.315,994,2.254,995,1.315,996,1.315,997,1.315,998,1.315,999,1.315,1000,1.315,1001,1.315,1002,1.315,1003,1.315,1004,1.315,1005,1.315,1006,1.315,1007,1.315,1008,1.315,1009,2.254,1010,5.07,1011,1.315,1012,1.315,1013,2.254,1014,1.315,1015,2.254,1016,2.254,1017,2.254,1018,2.254,1019,1.315,1020,2.254,1021,2.254,1022,1.315,1023,1.315,1024,1.315,1025,1.315,1026,2.254,1027,1.315,1028,1.315,1029,1.315,1030,1.315,1031,1.315,1032,1.315,1033,1.315,1034,1.315,1035,1.315,1036,1.315,1037,1.315,1038,1.315,1039,2.958,1040,1.315,1041,1.315,1042,1.315,1043,1.315,1044,1.315,1045,1.315,1046,1.315,1047,1.315,1048,1.315]],["title/interfaces/Piece.html",[0,0.322,95,1.507]],["body/interfaces/Piece.html",[0,0.394,2,1.496,3,0.302,4,0.273,5,0.273,7,0.162,8,0.543,10,1.267,11,0.277,12,0.02,13,0.422,14,0.015,15,0.015,40,3.498,41,1.032,55,0.332,67,2.536,68,0.851,95,2.714,153,2.332,483,2.79,743,3.876,744,3.452,972,2.671,1049,3.135,1050,3.135,1051,4.521]],["title/classes/Pile.html",[66,0.271,144,1.354]],["body/classes/Pile.html",[0,0.184,3,0.141,4,0.127,5,0.127,7,0.075,8,0.314,10,0.695,11,0.263,12,0.02,13,0.222,14,0.009,15,0.009,39,1.046,40,2.27,41,0.663,45,0.542,46,0.773,47,1.201,55,0.303,66,0.155,67,1.974,68,0.881,71,2.541,86,1.614,87,2.415,94,1.172,95,2.659,117,0.773,118,1.568,125,0.698,130,1.032,131,1.032,135,1.266,136,1.019,144,2.607,153,1.717,168,0.63,177,0.376,179,0.698,184,1.886,251,1.811,339,1.162,341,2.155,342,2.982,344,2.474,345,1.966,346,1.463,347,1.717,349,1.966,350,2.435,354,2.127,355,2.328,356,1.463,357,1.33,358,1.463,359,1.463,362,1.023,365,0.964,366,1.463,368,1.287,369,0.542,370,0.91,375,2.435,394,1.344,401,3.236,429,2.415,483,2.442,488,3.41,510,4.134,535,2.308,620,1.61,621,1.344,622,1.023,623,1.246,624,1.246,625,1.344,626,1.344,627,0.964,628,0.861,638,1.463,662,2.308,682,2.983,739,2.328,781,2.308,928,3.245,933,2.541,936,4.134,944,3.89,946,2.308,955,2.308,972,1.966,1050,4.573,1052,1.61,1053,4.013,1054,6.138,1055,3.534,1056,4.013,1057,4.013,1058,4.013,1059,3.328,1060,3.147,1061,4.642,1062,2.854,1063,2.854,1064,2.854,1065,2.854,1066,2.308,1067,2.541,1068,2.854,1069,2.109,1070,2.109,1071,2.109,1072,2.109,1073,2.854,1074,2.109,1075,2.854,1076,3.574,1077,4.013,1078,2.854,1079,2.854,1080,2.854,1081,2.854,1082,2.109,1083,2.854,1084,2.109,1085,2.109,1086,2.854,1087,1.463,1088,1.61,1089,1.809,1090,1.809,1091,1.809,1092,1.809,1093,1.809,1094,1.809,1095,2.541,1096,1.809,1097,1.809,1098,1.809,1099,1.809,1100,1.809,1101,1.809,1102,1.809,1103,1.809,1104,1.809,1105,2.854,1106,2.854,1107,1.809,1108,1.809,1109,1.809,1110,1.809,1111,1.809,1112,1.809,1113,2.854,1114,2.854,1115,1.809,1116,2.854,1117,2.854,1118,1.809,1119,1.809,1120,2.854,1121,1.809,1122,2.854,1123,2.854]],["title/injectables/PileRegistryService.html",[128,2.18,220,0.461]],["body/injectables/PileRegistryService.html",[3,0.264,4,0.238,5,0.238,7,0.141,8,0.497,9,1.068,10,0.888,11,0.282,12,0.02,13,0.264,14,0.014,15,0.014,41,0.839,45,1.623,46,1.466,47,1.231,55,0.464,58,0.918,66,0.29,75,1.123,94,1.497,114,1.916,117,1.222,118,1.652,125,1.308,128,3.111,130,1.306,131,1.306,135,1.102,136,0.744,144,1.932,161,1.916,165,3.111,177,1.056,179,1.959,201,1.932,220,0.658,222,1.243,273,1.243,274,1.181,355,3.09,357,1.123,369,1.016,403,1.834,404,2.335,405,3.911,406,2.716,407,3.651,408,3.258,409,2.553,412,3.389,414,2.741,415,3.018,416,3.055,417,2.519,418,3.389,419,3.018,420,2.741,421,3.018,422,3.018,423,2.741,424,3.018,426,1.806,427,2.335,739,1.806,740,2.519,1124,3.952,1125,4.378,1126,5.265,1127,3.952]],["title/interfaces/PileState.html",[0,0.322,739,1.686]],["body/interfaces/PileState.html",[0,0.25,2,0.95,3,0.192,4,0.173,5,0.173,7,0.103,8,0.397,10,0.926,11,0.176,12,0.02,13,0.281,14,0.011,15,0.011,40,2.833,46,0.666,47,0.512,55,0.366,66,0.211,67,2.197,68,1.033,71,3.213,86,1.392,87,2.171,94,1.416,95,2.642,118,1.341,135,0.881,136,0.792,144,2.55,153,2.171,168,0.858,177,0.512,184,2.127,251,1.628,341,1.544,342,2.318,346,0.776,357,1.196,368,1.927,369,0.738,370,1.239,375,1.696,394,1.829,401,3.565,429,1.481,483,2.26,488,3.023,510,3.213,535,1.99,638,1.99,662,1.99,682,3.498,739,2.67,781,1.99,928,2.918,933,2.191,936,4.19,944,3.213,946,1.99,955,1.99,972,1.696,1050,4.375,1052,2.191,1053,3.608,1054,6.094,1055,2.461,1056,2.461,1057,2.461,1058,2.461,1060,2.191,1061,4.272,1062,2.461,1063,2.461,1064,2.461,1065,2.461,1066,1.99,1067,2.191,1068,2.461,1073,2.461,1075,2.461,1076,3.213,1077,3.608,1078,2.461,1079,2.461,1080,2.461,1081,2.461,1083,2.461,1086,2.461,1087,1.99,1088,2.191,1089,3.608,1090,3.608,1091,3.608,1092,3.608,1093,3.608,1094,3.608,1095,4.461,1096,4.272,1097,2.461,1098,2.461,1099,2.461,1100,2.461,1101,2.461,1102,2.461,1103,2.461,1104,2.461,1105,3.608,1106,3.608,1107,2.461,1108,2.461,1109,2.461,1110,2.461,1111,2.461,1112,2.461,1113,3.608,1114,3.608,1115,2.461,1116,3.608,1117,3.608,1118,2.461,1119,2.461,1120,3.608,1121,2.461,1122,3.608,1123,3.608]],["title/injectables/PileStateService.html",[220,0.461,1125,2.558]],["body/injectables/PileStateService.html",[3,0.249,4,0.225,5,0.225,7,0.133,8,0.477,9,1.006,10,0.853,11,0.277,12,0.02,13,0.249,14,0.013,15,0.013,39,1.59,41,0.873,45,1.3,46,1.174,47,1.234,55,0.422,58,0.864,66,0.273,68,0.701,75,1.058,94,1.437,117,1.174,118,1.69,130,1.359,131,1.359,135,1.349,136,1.16,144,2.364,165,2.988,177,0.902,179,1.673,201,1.855,220,0.632,222,1.17,229,2.785,273,1.17,274,1.113,344,3.107,346,1.006,355,3.107,369,0.957,403,1.761,406,2.609,408,2.609,409,2.452,416,2.963,426,1.701,430,2.199,431,3.906,432,3.507,433,3.507,434,3.507,435,3.983,437,2.842,438,3.507,439,2.842,440,2.581,441,2.842,442,2.842,443,2.581,444,2.842,445,2.581,446,2.842,447,2.842,448,2.581,449,2.842,739,2.816,740,2.373,1125,3.507,1128,5.057,1129,3.722,1130,3.722,1131,3.722]],["title/classes/Player.html",[66,0.271,1132,2.352]],["body/classes/Player.html",[0,0.378,3,0.29,4,0.262,5,0.262,7,0.155,8,0.528,9,1.172,10,1.045,11,0.273,12,0.019,13,0.374,14,0.015,15,0.015,39,1.759,41,0.96,47,1.237,51,3.007,55,0.319,66,0.319,68,0.817,94,1.59,117,1.299,130,0.956,131,0.956,135,1.172,136,1.054,179,1.435,251,1.678,339,2.389,341,2.624,344,3.171,345,3.306,346,1.769,347,2.887,349,3.306,350,3.66,354,3.196,355,3.096,356,3.007,357,1.233,358,3.007,359,3.007,362,2.103,365,1.982,366,3.007,369,1.114,370,1.872,620,3.311,621,2.764,622,2.103,623,2.562,624,2.562,625,2.764,626,2.764,627,1.982,628,1.771,635,3.007,1132,3.567,1133,3.311,1134,4.337,1135,3.007]],["title/injectables/PlayerService.html",[220,0.461,236,2.18]],["body/injectables/PlayerService.html",[3,0.264,4,0.238,5,0.238,7,0.141,8,0.496,9,1.967,11,0.219,12,0.02,13,0.264,14,0.014,15,0.014,41,1.031,45,1.351,46,1.221,47,0.938,55,0.386,58,0.916,66,0.29,177,1.298,184,1.831,220,0.657,222,1.24,236,3.106,273,1.24,274,1.179,342,3.723,1132,4.746,1136,3.382,1137,5.914,1138,5.914,1139,5.258,1140,3.944,1141,5.258,1142,6.24,1143,5.258,1144,5.258,1145,5.258,1146,5.258,1147,5.258,1148,5.258,1149,5.258,1150,5.258,1151,5.258,1152,5.258,1153,5.258,1154,3.944,1155,3.944]],["title/interfaces/PlayerState.html",[0,0.322,1135,2.558]],["body/interfaces/PlayerState.html",[0,0.448,2,1.7,3,0.343,4,0.31,5,0.31,7,0.184,8,0.587,9,1.88,10,1.236,11,0.26,12,0.02,13,0.416,14,0.016,15,0.016,41,1.009,55,0.378,66,0.378,68,0.968,94,1.46,341,2.283,369,1.32,370,2.218,635,3.563,1132,3.275,1133,3.923,1135,4.314]],["title/classes/Space.html",[66,0.271,248,1.789]],["body/classes/Space.html",[0,0.273,1,2.797,3,0.209,4,0.189,5,0.189,7,0.112,8,0.423,10,1.062,11,0.277,12,0.02,13,0.3,14,0.012,15,0.012,39,1.41,41,0.742,45,1.152,46,1.041,47,1.248,55,0.42,66,0.23,67,2.257,68,0.986,95,2.955,117,1.041,118,1.648,125,1.036,130,1.155,131,1.155,135,1.096,136,1.139,168,0.936,176,2.026,177,1.019,248,2.772,317,1.997,339,1.726,342,2.885,343,3.718,346,1.701,347,2.702,349,2.649,357,1.488,362,2.174,365,1.431,385,2.649,389,2.172,390,1.851,483,2.564,556,3.998,627,1.431,669,2.686,671,2.858,672,1.616,673,1.616,674,1.616,676,2.172,678,2.172,679,2.172,1087,2.172,1156,2.392,1157,4.49,1158,4.49,1159,4.483,1160,4.901,1161,3.844,1162,4.483,1163,3.132,1164,3.132,1165,3.132,1166,4.365,1167,3.132,1168,3.844,1169,3.132,1170,3.132,1171,3.132,1172,3.132,1173,3.132,1174,3.132,1175,3.132,1176,3.132,1177,2.686,1178,5.556,1179,2.686,1180,2.686,1181,2.686,1182,2.686,1183,2.686]],["title/interfaces/SpaceState.html",[0,0.322,343,2.18]],["body/interfaces/SpaceState.html",[0,0.331,1,2.679,2,1.253,3,0.253,4,0.229,5,0.229,7,0.136,8,0.483,10,1.094,11,0.214,12,0.02,13,0.342,14,0.013,15,0.013,55,0.456,66,0.278,67,2.379,68,1.091,95,3.015,118,1.416,136,0.964,168,1.132,176,2.242,177,1.107,248,2.81,317,2.415,342,2.087,343,3.83,346,1.383,347,1.955,357,1.455,362,1.837,385,3.023,389,2.627,390,2.238,483,2.687,556,4.425,627,1.731,671,3.262,672,1.955,673,1.955,674,1.955,676,2.627,678,2.627,679,2.627,1087,2.627,1156,2.893,1157,3.248,1158,3.248,1160,3.248,1161,3.248,1166,4.425,1168,3.248,1177,3.248,1178,5.856,1179,3.248,1180,3.248,1181,3.248,1182,3.248,1183,3.248]],["title/interfaces/SpeciesPiece.html",[0,0.322,1184,2.817]],["body/interfaces/SpeciesPiece.html",[0,0.466,2,1.766,3,0.357,4,0.322,5,0.322,7,0.191,8,0.601,11,0.223,12,0.019,13,0.357,14,0.017,15,0.017,40,3.416,55,0.468,94,1.809,95,2.778,96,5.379,97,3.403,98,4.076,1184,4.861,1185,4.577]],["title/coverage.html",[1186,4.31]],["body/coverage.html",[0,0.609,1,1.16,5,0.162,6,2.306,11,0.112,12,0.02,14,0.01,15,0.01,16,2.322,17,1.481,22,2.306,23,1.864,24,2.306,43,1.589,61,1.864,63,1.304,66,0.438,75,1.14,80,1.481,83,1.481,85,1.481,86,1.304,87,2.069,89,1.481,92,2.306,93,2.306,95,1.098,99,2.306,100,2.053,101,2.306,124,0.937,127,1.589,128,1.589,144,0.987,146,1.04,148,1.481,153,1.387,160,2.369,165,2.369,169,2.053,171,1.864,177,0.48,220,0.879,221,2.053,223,2.306,224,1.714,235,1.481,236,1.589,248,1.304,264,1.714,265,2.642,266,2.053,267,2.053,270,1.714,328,2.306,337,2.053,340,3.062,341,0.987,343,1.589,346,1.437,363,1.304,368,1.04,371,1.864,401,4.152,403,2.413,404,3.36,405,1.481,411,1.864,430,3.36,431,1.481,453,2.306,454,2.306,470,1.864,472,1.714,474,1.864,497,2.928,546,2.306,557,3.062,558,3.062,586,2.306,587,2.306,606,2.306,607,3.062,628,1.098,634,1.229,640,1.714,660,3.36,661,3.062,686,3.062,730,2.306,739,1.229,746,2.053,780,3.062,783,1.714,787,1.864,788,1.864,789,2.306,792,1.589,799,2.306,802,1.864,803,2.306,905,2.306,972,3.523,1049,2.781,1052,3.062,1125,1.864,1132,1.714,1133,3.062,1135,1.864,1136,2.306,1156,3.062,1184,2.053,1185,2.306,1186,2.306,1187,2.306,1188,2.689,1189,2.689,1190,6.35,1191,2.306,1192,6.178,1193,2.306,1194,6.607,1195,4.01,1196,2.689,1197,2.689,1198,2.689,1199,2.689,1200,4.795,1201,2.689,1202,2.689,1203,5.963,1204,2.689,1205,2.689,1206,2.689,1207,2.689,1208,4.01,1209,4.01,1210,2.306,1211,2.689,1212,2.689,1213,4.112,1214,5.963,1215,2.689,1216,4.01,1217,3.438,1218,2.689,1219,2.689,1220,3.438,1221,2.306,1222,4.795,1223,4.795,1224,2.689,1225,4.01,1226,1.864,1227,2.306,1228,2.306,1229,2.306,1230,2.053,1231,2.689,1232,2.689]],["title/dependencies.html",[1233,2.356,1234,3.803]],["body/dependencies.html",[12,0.02,14,0.016,15,0.016,58,1.193,168,1.536,335,4.406,672,2.651,673,2.651,674,2.651,744,3.923,1234,4.406,1235,5.138,1236,7.39,1237,5.138,1238,6.222,1239,5.138,1240,5.138,1241,5.138,1242,5.138,1243,6.222,1244,6.222,1245,5.138,1246,5.138,1247,5.138,1248,5.138,1249,5.138,1250,5.138,1251,5.138,1252,5.138]],["title/miscellaneous/enumerations.html",[1253,1.592,1254,3.803]],["body/miscellaneous/enumerations.html",[7,0.138,12,0.02,14,0.013,15,0.013,38,3.96,46,1.78,75,1.778,154,3.597,217,3.597,500,3.597,502,3.306,562,3.96,600,4.447,750,4.447,1226,2.68,1230,2.951,1253,1.994,1254,3.314,1255,3.314,1256,3.96,1257,3.314,1258,3.865,1259,3.314,1260,3.314,1261,4.447,1262,4.447,1263,4.447,1264,4.447,1265,4.447,1266,4.447,1267,3.865,1268,3.865,1269,3.865,1270,3.865,1271,3.865,1272,3.865,1273,3.865,1274,3.865,1275,3.865,1276,3.865,1277,3.865,1278,3.865,1279,3.865,1280,3.865,1281,3.865,1282,3.865,1283,5.187,1284,3.314,1285,4.447,1286,4.447,1287,4.447,1288,4.447,1289,4.447,1290,4.447,1291,3.865,1292,3.865,1293,3.865,1294,3.865,1295,3.865,1296,3.865,1297,3.865,1298,3.865,1299,3.865,1300,3.865,1301,3.865,1302,3.865,1303,3.865,1304,3.865,1305,3.865,1306,3.865,1307,3.865,1308,3.865,1309,3.865,1310,3.865,1311,3.865,1312,3.865,1313,3.865,1314,3.865,1315,3.865]],["title/miscellaneous/functions.html",[1253,1.592,1316,3.803]],["body/miscellaneous/functions.html",[7,0.148,10,1.085,11,0.227,12,0.019,14,0.014,15,0.014,40,2.633,41,1.004,45,1.395,46,1.644,63,2.633,67,1.891,95,1.69,130,1.511,131,1.54,135,1.434,153,2.801,176,1.602,201,2.359,266,4.145,267,4.145,354,3.125,371,3.765,429,2.136,483,1.602,856,4.655,928,4.841,934,3.55,946,4.201,957,3.55,1049,2.871,1076,3.161,1088,3.161,1213,3.55,1220,3.55,1221,4.655,1253,2.136,1316,3.55,1317,5.429,1318,3.55,1319,6.058,1320,4.14,1321,5.429,1322,4.14,1323,4.14,1324,4.14,1325,4.14,1326,4.14,1327,4.655,1328,5.429,1329,4.14,1330,4.14,1331,4.14,1332,4.14,1333,4.14,1334,4.14,1335,4.14,1336,4.14,1337,4.14,1338,5.429,1339,4.14,1340,3.55,1341,4.14,1342,3.55,1343,4.14,1344,4.14,1345,4.14,1346,4.14]],["title/index.html",[7,0.11,895,2.139,1347,2.645]],["body/index.html",[4,0.273,12,0.015,14,0.015,15,0.015,16,2.579,41,0.641,102,3.876,167,2.882,177,0.806,544,6.014,913,3.876,937,4.927,955,3.135,1066,4.38,1067,5.076,1142,3.876,1233,3.452,1348,4.521,1349,5.746,1350,4.521,1351,6.317,1352,6.317,1353,3.876,1354,4.521,1355,4.521,1356,5.746,1357,6.863,1358,7.126,1359,4.521,1360,4.521,1361,4.521,1362,4.521,1363,4.521,1364,4.521,1365,4.521,1366,4.521,1367,3.876,1368,4.521,1369,4.521,1370,6.317,1371,4.521,1372,4.521,1373,4.521,1374,4.521,1375,4.521,1376,5.746,1377,5.746,1378,6.647,1379,5.746,1380,4.521,1381,4.521,1382,4.521,1383,4.521,1384,5.746,1385,4.521,1386,4.521,1387,4.521,1388,4.521,1389,6.317,1390,4.521,1391,4.521,1392,3.876,1393,3.452,1394,4.521,1395,4.521]],["title/license.html",[895,2.139,1347,2.645,1396,2.645]],["body/license.html",[1,1.993,12,0.015,14,0.015,15,0.015,483,1.787,932,3.96,1060,3.526,1066,4.039,1166,3.526,1187,3.96,1327,3.96,1340,3.96,1342,3.96,1367,3.96,1392,3.96,1396,3.96,1397,4.619,1398,6.38,1399,4.619,1400,4.619,1401,4.619,1402,5.825,1403,4.619,1404,4.619,1405,4.619,1406,4.619,1407,4.619,1408,4.619,1409,5.825,1410,7.31,1411,4.619,1412,6.38,1413,4.619,1414,5.825,1415,4.619,1416,4.619,1417,4.619,1418,4.619,1419,4.619,1420,4.619,1421,4.619,1422,4.619,1423,4.619,1424,5.825,1425,4.619,1426,4.619,1427,4.619,1428,4.619,1429,4.619,1430,4.619,1431,5.825,1432,5.825,1433,4.619,1434,4.619,1435,4.619,1436,4.619,1437,4.619,1438,4.619,1439,4.619,1440,4.619,1441,4.619,1442,4.619,1443,4.619,1444,4.619,1445,4.619,1446,4.619,1447,4.619,1448,4.619,1449,4.619,1450,4.619,1451,4.619,1452,4.619,1453,4.619,1454,4.619,1455,4.619,1456,4.619,1457,4.619]],["title/modules.html",[1458,4.31]],["body/modules.html",[12,0.018,14,0.018,15,0.018,1458,5.087]],["title/overview.html",[1393,3.838]],["body/overview.html",[2,1.916,12,0.017,14,0.017,15,0.017,18,3.421,222,1.821,339,3.189,1210,4.964,1217,4.964,1393,4.421,1459,5.79,1460,5.79]],["title/properties.html",[8,0.419,1233,2.356]],["body/properties.html",[8,0.555,12,0.018,14,0.017,15,0.017,1353,5.041,1461,5.879]],["title/miscellaneous/typealiases.html",[1253,1.592,1462,4.435]],["body/miscellaneous/typealiases.html",[7,0.198,11,0.231,12,0.017,14,0.017,15,0.017,96,4.968,500,3.841,502,3.531,538,4.512,559,4.968,562,4.229,972,3.272,1049,3.841,1050,4.512,1226,3.841,1253,2.858,1255,4.749,1256,4.229,1257,4.749,1260,4.749,1284,4.749,1318,4.749,1463,5.539]],["title/miscellaneous/variables.html",[1253,1.592,1464,3.803]],["body/miscellaneous/variables.html",[7,0.097,9,1.086,11,0.258,12,0.02,14,0.01,15,0.01,32,1.593,38,4.558,40,1.307,45,1.589,46,1.436,61,2.786,67,1.854,95,1.961,114,2.329,124,1.4,144,1.474,146,1.555,169,3.068,171,2.786,177,0.949,184,0.939,201,1.953,217,4.14,248,1.307,270,2.561,287,2.059,291,2.312,333,5.888,369,0.693,375,1.593,483,2.513,557,2.059,558,3.068,559,4.558,560,5.119,565,4.565,566,4.119,567,2.312,568,2.312,569,3.446,570,4.119,571,2.312,572,4.558,573,3.446,574,4.119,575,2.312,576,3.446,577,4.119,578,2.312,579,3.446,580,4.119,581,2.312,582,3.446,583,4.119,584,2.312,585,3.446,628,1.961,660,1.593,746,3.068,780,3.068,787,2.786,910,2.312,1095,2.059,1191,2.312,1193,3.446,1226,1.87,1227,2.312,1228,3.446,1229,2.312,1230,2.059,1253,1.391,1256,2.059,1259,2.312,1261,2.312,1262,2.312,1263,2.312,1264,2.312,1265,2.312,1266,2.312,1285,3.446,1286,3.446,1287,2.312,1288,3.446,1289,3.446,1290,4.119,1464,2.312,1465,2.696,1466,4.018,1467,2.696,1468,2.696,1469,2.696,1470,2.696,1471,2.696,1472,2.696,1473,2.696,1474,2.696,1475,2.696,1476,4.803,1477,2.696,1478,2.696,1479,2.696,1480,2.696,1481,2.696,1482,6.184,1483,2.696,1484,2.696,1485,2.696,1486,2.696,1487,2.696,1488,2.696,1489,2.696,1490,2.696,1491,2.696,1492,5.97,1493,2.696,1494,2.696,1495,2.696,1496,2.696,1497,2.696,1498,2.696,1499,2.696,1500,2.696,1501,2.696,1502,5.97,1503,2.696,1504,2.696,1505,2.696,1506,2.696,1507,2.696,1508,2.696,1509,2.696,1510,2.696,1511,2.696,1512,2.696,1513,2.696,1514,2.696,1515,2.696,1516,2.696,1517,2.696,1518,2.696,1519,2.696,1520,2.696,1521,2.696,1522,2.696,1523,2.696,1524,2.696,1525,2.696,1526,2.696,1527,2.696,1528,2.696,1529,2.696,1530,2.696]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":401,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1461,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1224,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":936,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["1/1",{"_index":1223,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1222,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["1235535.svg",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1217,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["151117.svg",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1210,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["18",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["18.2.5",{"_index":1354,"title":{},"body":{"index.html":{}}}],["18.2.7",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":572,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1400,"title":{},"body":{"license.html":{}}}],["2037742.svg",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["2997582.svg",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":568,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["3/19",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["3386143.svg",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["367390.svg",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.17.21",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["4412103.svg",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1459,"title":{},"body":{"overview.html":{}}}],["5/14",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1460,"title":{},"body":{"overview.html":{}}}],["6606521.svg",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6850047.svg",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["7049525.svg",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7144060.svg",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7195612.svg",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7300296.svg",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_action",{"_index":1157,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_drawpool",{"_index":588,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":958,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":1158,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_setgamestate",{"_index":961,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":967,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":345,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["_transactionstate",{"_index":959,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["above",{"_index":1430,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":698,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":909,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":39,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"license.html":{}}}],["action.model",{"_index":1177,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["action_display_abundance",{"_index":1267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":1269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn",{"_index":1283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":1292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":1294,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":1296,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":1298,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":1300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":1302,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayabundance",{"_index":1268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":1270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawn",{"_index":38,"title":{},"body":{"components/ActionPawnComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actionpawnamphibian",{"_index":1293,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":1295,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":1297,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawncomponent",{"_index":17,"title":{"components/ActionPawnComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"coverage.html":{}}}],["actionpawnforheader",{"_index":111,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawninsect",{"_index":1299,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnmammal",{"_index":1301,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnpiece",{"_index":43,"title":{"interfaces/ActionPawnPiece.html":{}},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["actionpawnpile",{"_index":112,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnpile?.length",{"_index":218,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnpileid",{"_index":202,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnreptile",{"_index":1303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawns",{"_index":468,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["actionpawns.push(defaultpiecefactory(piecekindenum.action_pawn",{"_index":542,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["actions",{"_index":949,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["acts",{"_index":1062,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["actual_component",{"_index":91,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["add",{"_index":1385,"title":{},"body":{"index.html":{}}}],["added",{"_index":326,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameStateStoreService.html":{}}}],["addedelements",{"_index":233,"title":{},"body":{"injectables/AnimalService.html":{}}}],["addedelementspaces",{"_index":232,"title":{},"body":{"injectables/AnimalService.html":{}}}],["addelement",{"_index":227,"title":{},"body":{"injectables/AnimalService.html":{}}}],["addelement(element",{"_index":239,"title":{},"body":{"injectables/AnimalService.html":{}}}],["addpiece",{"_index":1159,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":1168,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["aliases",{"_index":1463,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":627,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["always",{"_index":1109,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["amount",{"_index":615,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["amphibian",{"_index":1261,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["amphibian_element",{"_index":1271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":1272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["and/or",{"_index":1422,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1351,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":495,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["angular/material/card",{"_index":152,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/grid",{"_index":157,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/tooltip",{"_index":496,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["angular/platform",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["animal",{"_index":81,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["animal.constant",{"_index":564,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["animalcardcomponent",{"_index":80,"title":{"components/AnimalCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"coverage.html":{}}}],["animalenum",{"_index":502,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":566,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":570,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":574,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":577,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":580,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":583,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalkind",{"_index":96,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/typealiases.html":{}}}],["animals",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animalservice",{"_index":221,"title":{"injectables/AnimalService.html":{}},"body":{"injectables/AnimalService.html":{},"coverage.html":{}}}],["app",{"_index":29,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["app.component.html",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":83,"title":{"components/AppComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1193,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1363,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":805,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":807,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(gamestate",{"_index":809,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":830,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":846,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":815,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applypatch(gamestate",{"_index":819,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":1262,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arachnid_element",{"_index":1273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":1274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":146,"title":{"classes/Area.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area(areastate.id",{"_index":765,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["area.constant",{"_index":563,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["area.model",{"_index":786,"title":{},"body":{"interfaces/GameState.html":{}}}],["areaid",{"_index":559,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":562,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":569,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":573,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":576,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":579,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":582,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":585,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["arearegistryservice",{"_index":127,"title":{"injectables/AreaRegistryService.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":238,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameManagementService.html":{}}}],["areas",{"_index":759,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areas.push(new",{"_index":764,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areaservice",{"_index":919,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["areastate",{"_index":363,"title":{"interfaces/AreaState.html":{}},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["areastate.space.foreach((spacestate",{"_index":761,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areastateservice",{"_index":411,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":413,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["arising",{"_index":1455,"title":{},"body":{"license.html":{}}}],["array",{"_index":1079,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["artifacts",{"_index":1372,"title":{},"body":{"index.html":{}}}],["assignedanimal",{"_index":771,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["associated",{"_index":1342,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["assume",{"_index":1121,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["authors",{"_index":1445,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1364,"title":{},"body":{"index.html":{}}}],["available",{"_index":318,"title":{},"body":{"injectables/AnimalService.html":{}}}],["availablespace",{"_index":314,"title":{},"body":{"injectables/AnimalService.html":{}}}],["availablespace.addpiece(element",{"_index":316,"title":{},"body":{"injectables/AnimalService.html":{}}}],["availablespaces",{"_index":397,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces.length",{"_index":400,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces[0",{"_index":402,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["back",{"_index":625,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["bag",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":947,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["basegamestate",{"_index":746,"title":{},"body":{"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basegamestate.area.foreach((areastate",{"_index":760,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["before",{"_index":860,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":251,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Player.html":{}}}],["behaviorsubject(this._gamestate",{"_index":1005,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.elementspaces",{"_index":252,"title":{},"body":{"injectables/AnimalService.html":{}}}],["behaviorsubject(this.length",{"_index":1101,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["behaviorsubject(this.state",{"_index":677,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["behaviorsubject>(new",{"_index":420,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":291,"title":{},"body":{"injectables/AnimalService.html":{},"miscellaneous/variables.html":{}}}],["bird",{"_index":1263,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bird_element",{"_index":1275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":1276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":1325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browser",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1067,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"index.html":{}}}],["c",{"_index":1399,"title":{},"body":{"license.html":{}}}],["call",{"_index":859,"title":{},"body":{"injectables/GameStateService.html":{}}}],["called",{"_index":953,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":954,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["capabilities",{"_index":1387,"title":{},"body":{"index.html":{}}}],["card",{"_index":104,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card'},{'name",{"_index":82,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["card.component",{"_index":503,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["card.component.html",{"_index":109,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.scss",{"_index":110,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts",{"_index":101,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:28",{"_index":132,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:29",{"_index":147,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:30",{"_index":149,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:31",{"_index":150,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:32",{"_index":145,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:33",{"_index":151,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:34",{"_index":129,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:41",{"_index":141,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:51",{"_index":138,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:69",{"_index":134,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:81",{"_index":140,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:93",{"_index":143,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card/animal",{"_index":100,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["case",{"_index":952,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["change",{"_index":1366,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":26,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{}}}],["changedetectionstrategy",{"_index":56,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":27,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{}}}],["charge",{"_index":1406,"title":{},"body":{"license.html":{}}}],["check",{"_index":1391,"title":{},"body":{"index.html":{}}}],["choice",{"_index":1383,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1448,"title":{},"body":{"license.html":{}}}],["class",{"_index":66,"title":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["classes",{"_index":339,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"overview.html":{}}}],["cli",{"_index":1352,"title":{},"body":{"index.html":{}}}],["client.service",{"_index":879,"title":{},"body":{"injectables/GameStateService.html":{}}}],["client.service.ts",{"_index":789,"title":{},"body":{"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:13",{"_index":795,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:9",{"_index":793,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["code",{"_index":1368,"title":{},"body":{"index.html":{}}}],["command",{"_index":1384,"title":{},"body":{"index.html":{}}}],["commit",{"_index":888,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":831,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":816,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate",{"_index":818,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":1111,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["component",{"_index":16,"title":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["components",{"_index":18,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1429,"title":{},"body":{"license.html":{}}}],["config.constant",{"_index":272,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameManagementService.html":{}}}],["config.constant.ts",{"_index":558,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":1456,"title":{},"body":{"license.html":{}}}],["console.log('create",{"_index":512,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log('end",{"_index":536,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log('start",{"_index":521,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log(json.stringify(gsp",{"_index":797,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":184,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["constant/animal.constant",{"_index":98,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/SpeciesPiece.html":{}}}],["constant/area.constant",{"_index":170,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constant/element",{"_index":271,"title":{},"body":{"injectables/AnimalService.html":{}}}],["constant/element.constant",{"_index":501,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementPiece.html":{}}}],["constant/image.constant",{"_index":62,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{}}}],["constant/piece.constant",{"_index":155,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["constant/pile.constant",{"_index":172,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["constructor",{"_index":125,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"classes/Space.html":{}}}],["constructor(arearegistryservice",{"_index":126,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constructor(arearegistrysvc",{"_index":234,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameManagementService.html":{}}}],["constructor(areastatesvc",{"_index":410,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(factionstatesvc",{"_index":650,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(gameelementstatesvc",{"_index":687,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gamemanagementsvc",{"_index":469,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["constructor(gamestatestore",{"_index":841,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":709,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["constructor(id",{"_index":351,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["constructor(kind",{"_index":1161,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["constructor(pileregistrysvc",{"_index":590,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":1124,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":601,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(protected",{"_index":427,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(state",{"_index":662,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["contract",{"_index":1452,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1424,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1409,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1398,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":1061,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["coverage",{"_index":1186,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":808,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["create(oldstate",{"_index":811,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["createarea",{"_index":731,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["createdrawpoolpile",{"_index":732,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["createfactions",{"_index":733,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["creategame",{"_index":464,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["creates",{"_index":804,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["current",{"_index":394,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["currentcount",{"_index":1116,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["currentitemcount",{"_index":1122,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["currentplayer",{"_index":1137,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentplayerfaction",{"_index":459,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["custom",{"_index":1337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["damages",{"_index":1449,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":817,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["deal",{"_index":1411,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1457,"title":{},"body":{"license.html":{}}}],["decreasescore",{"_index":608,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":613,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["deepclone",{"_index":671,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["deepclone(emptygamestate",{"_index":994,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._gamestate",{"_index":1026,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":681,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["deepclone(this._transactionstate",{"_index":1027,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":1221,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":1320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":45,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":153,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":1343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":1078,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["defined",{"_index":47,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{}}}],["defining",{"_index":287,"title":{},"body":{"injectables/AnimalService.html":{},"interfaces/GameState.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":1063,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["dependencies",{"_index":1234,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":429,"title":{},"body":{"interfaces/AreaState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":1036,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":1322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dev",{"_index":1360,"title":{},"body":{"index.html":{}}}],["development",{"_index":1355,"title":{},"body":{"index.html":{}}}],["directive",{"_index":76,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["directives",{"_index":90,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1371,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1375,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1374,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1088,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["distribute",{"_index":1420,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1187,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":684,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["dom",{"_index":20,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["dominant",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["dominantspecies",{"_index":1348,"title":{},"body":{"index.html":{}}}],["done",{"_index":948,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":86,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["drawpool",{"_index":460,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["drawpool.length$.subscribe((length",{"_index":508,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["drawpoolgamecomponent",{"_index":85,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"coverage.html":{}}}],["drawpoollength",{"_index":461,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["drawpoolsubject",{"_index":589,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["drew",{"_index":533,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["ds",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":951,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["dynamic",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1381,"title":{},"body":{"index.html":{}}}],["each",{"_index":375,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["eagle",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element.component.html",{"_index":547,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.component.scss",{"_index":548,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.constant",{"_index":561,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["element.id",{"_index":705,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":323,"title":{},"body":{"injectables/AnimalService.html":{}}}],["element.model",{"_index":370,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{}}}],["element.model.ts",{"_index":661,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"coverage.html":{}}}],["element.model.ts:10",{"_index":665,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:11",{"_index":663,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:19",{"_index":668,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:23",{"_index":670,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:31",{"_index":667,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:39",{"_index":666,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:9",{"_index":664,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":724,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":727,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":160,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["element/element.component",{"_index":174,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["element/faction",{"_index":265,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["element/game",{"_index":686,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":165,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["elementarea",{"_index":113,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{}}}],["elementareaid",{"_index":185,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["elementareaidsbyanimal",{"_index":169,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbyid",{"_index":406,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementcomponent",{"_index":89,"title":{"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"coverage.html":{}}}],["elementconfig",{"_index":224,"title":{"interfaces/ElementConfig.html":{}},"body":{"injectables/AnimalService.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["elementconfigbyanimal",{"_index":270,"title":{},"body":{"injectables/AnimalService.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpoolservice",{"_index":474,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["elementdrawpoolsvc",{"_index":473,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementenum",{"_index":500,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":578,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":571,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":581,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":575,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":584,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":567,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":538,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"miscellaneous/typealiases.html":{}}}],["elementname",{"_index":524,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementname.charat(0).touppercase",{"_index":526,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementname.slice(1",{"_index":527,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementpiece",{"_index":148,"title":{"interfaces/ElementPiece.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["elementpiece).filter(isnotnull",{"_index":306,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elements",{"_index":114,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.foreach((element",{"_index":700,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elements.foreach((faction",{"_index":647,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elements.push(defaultpiecefactory(elementkind",{"_index":540,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementspace",{"_index":320,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementspace.removepiece",{"_index":324,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementspaces",{"_index":225,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementspaces.length",{"_index":307,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementspaces.slice(this.elementconfig.inherentcount",{"_index":309,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementsspacessubject",{"_index":226,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementstate",{"_index":435,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["emit",{"_index":943,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitpilestate",{"_index":1056,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["emitstate",{"_index":350,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["emitted",{"_index":624,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["empty",{"_index":535,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["emptyelementspace",{"_index":215,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptyelementspaces",{"_index":115,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptygamestate",{"_index":787,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":544,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"index.html":{}}}],["endturn",{"_index":465,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["engine/model/area.model",{"_index":163,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{}}}],["engine/model/faction.model",{"_index":162,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/piece.model",{"_index":97,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementPiece.html":{},"interfaces/SpeciesPiece.html":{}}}],["engine/model/pile.model",{"_index":164,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/model/space.model",{"_index":269,"title":{},"body":{"injectables/AnimalService.html":{}}}],["engine/predicate",{"_index":268,"title":{},"body":{"injectables/AnimalService.html":{}}}],["engine/service/game",{"_index":159,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/service/player.service",{"_index":263,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/util",{"_index":64,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/ElementComponent.html":{}}}],["ensure",{"_index":956,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ensures",{"_index":1034,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entire",{"_index":940,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":445,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":725,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":721,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enumerations",{"_index":1254,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":1323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":856,"title":{},"body":{"injectables/GameStateService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":1032,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":683,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["error('animal",{"_index":312,"title":{},"body":{"injectables/AnimalService.html":{}}}],["error('can",{"_index":1023,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('faction",{"_index":178,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["error('gamestate",{"_index":1030,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":1011,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":317,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('number",{"_index":393,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["error('space",{"_index":1180,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('state",{"_index":389,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('transaction",{"_index":894,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":325,"title":{},"body":{"injectables/AnimalService.html":{}}}],["error(`element",{"_index":704,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":729,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":1020,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["errormessage",{"_index":1328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["event",{"_index":1444,"title":{},"body":{"license.html":{}}}],["eventcoalescing",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1379,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":685,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["express",{"_index":1436,"title":{},"body":{"license.html":{}}}],["extend",{"_index":373,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["extends",{"_index":94,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"interfaces/SpeciesPiece.html":{}}}],["eye",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeball",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faction",{"_index":124,"title":{"classes/Faction.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction.id",{"_index":187,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.id)['actionpawn",{"_index":204,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["faction.id)['species",{"_index":209,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["faction.model",{"_index":784,"title":{},"body":{"interfaces/GameState.html":{}}}],["faction.ownerid",{"_index":520,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction?.name",{"_index":213,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["factionassignment",{"_index":264,"title":{"interfaces/FactionAssignment.html":{}},"body":{"injectables/AnimalService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.ownerid",{"_index":280,"title":{},"body":{"injectables/AnimalService.html":{}}}],["factionassignments",{"_index":513,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionassignments.find",{"_index":279,"title":{},"body":{"injectables/AnimalService.html":{}}}],["factionassignments.map((factionassignment",{"_index":516,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionassignmentsubject",{"_index":641,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionassignmentsubscription",{"_index":228,"title":{},"body":{"injectables/AnimalService.html":{}}}],["factionregistryservice",{"_index":235,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":475,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["factions",{"_index":462,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["factions.push",{"_index":773,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["factionstate",{"_index":634,"title":{"interfaces/FactionState.html":{}},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["factionstateservice",{"_index":640,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":644,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":1065,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["false).newdocument",{"_index":821,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["fast",{"_index":672,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["files",{"_index":1367,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":166,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateService.html":{}}}],["filter((drawpool",{"_index":505,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((factionassignment",{"_index":282,"title":{},"body":{"injectables/AnimalService.html":{}}}],["filter((ids",{"_index":190,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["filter((registeredids",{"_index":299,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["filter((space",{"_index":197,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["first",{"_index":167,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"index.html":{}}}],["fitness",{"_index":1441,"title":{},"body":{"license.html":{}}}],["following",{"_index":1428,"title":{},"body":{"license.html":{}}}],["formatelementname",{"_index":466,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["formatelementname(kind",{"_index":481,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["found",{"_index":1339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["free",{"_index":1405,"title":{},"body":{"license.html":{}}}],["function",{"_index":972,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1316,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1427,"title":{},"body":{"license.html":{}}}],["further",{"_index":1388,"title":{},"body":{"index.html":{}}}],["game",{"_index":369,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"miscellaneous/variables.html":{}}}],["game'},{'name",{"_index":88,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["game.component",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["game.component.html",{"_index":457,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":458,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":454,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:101",{"_index":491,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:109",{"_index":493,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:31",{"_index":486,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:32",{"_index":490,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:33",{"_index":487,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:34",{"_index":489,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:35",{"_index":476,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:46",{"_index":484,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:60",{"_index":478,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:74",{"_index":485,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:79",{"_index":482,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:84",{"_index":479,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:96",{"_index":480,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game/component/draw",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["game/constant/animal.constant",{"_index":749,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/area.constant",{"_index":751,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/element",{"_index":752,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/game",{"_index":747,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/piece.constant",{"_index":754,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/pile.constant",{"_index":753,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/draw",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["gameelement",{"_index":341,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["gameelement:10",{"_index":359,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:11",{"_index":358,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:31",{"_index":620,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:33",{"_index":364,"title":{},"body":{"classes/Area.html":{}}}],["gameelement:39",{"_index":366,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:9",{"_index":356,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelementregistryservice",{"_index":405,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:15",{"_index":422,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:16",{"_index":419,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:17",{"_index":421,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:18",{"_index":424,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:22",{"_index":415,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:26",{"_index":418,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:30",{"_index":652,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelementstate",{"_index":368,"title":{"interfaces/GameElementState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["gameelementstateservice",{"_index":431,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:13",{"_index":437,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:14",{"_index":447,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:15",{"_index":446,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:17",{"_index":439,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:25",{"_index":442,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:36",{"_index":441,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:40",{"_index":444,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesvc",{"_index":690,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gamemanagementservice",{"_index":470,"title":{"injectables/GameManagementService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["gamemanagementsvc",{"_index":477,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamestate",{"_index":628,"title":{"interfaces/GameState.html":{}},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gamestate.area",{"_index":1040,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.faction",{"_index":1043,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.pile",{"_index":1046,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateclient",{"_index":843,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":788,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":374,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{}}}],["gamestateelements",{"_index":912,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatepatch",{"_index":792,"title":{"interfaces/GameStatePatch.html":{}},"body":{"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatepatches",{"_index":806,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":802,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":472,"title":{"injectables/GameStateService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatestore",{"_index":845,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":783,"title":{"injectables/GameStateStoreService.html":{}},"body":{"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":960,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":471,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["gecko",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1370,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1350,"title":{},"body":{"index.html":{}}}],["get(id",{"_index":414,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getaction",{"_index":1173,"title":{},"body":{"classes/Space.html":{}}}],["getactionpawnpile",{"_index":119,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getactionpawnpile(faction",{"_index":133,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getactionpawns",{"_index":492,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["getaddedelements",{"_index":261,"title":{},"body":{"injectables/AnimalService.html":{}}}],["getaddedelementspaces",{"_index":259,"title":{},"body":{"injectables/AnimalService.html":{}}}],["getarea",{"_index":871,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":598,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelementarea",{"_index":120,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getelementarea(faction",{"_index":137,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getelements",{"_index":257,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{}}}],["getelementstate",{"_index":448,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity",{"_index":434,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":440,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":873,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamestate",{"_index":997,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getgsp",{"_index":794,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["getid",{"_index":255,"title":{},"body":{"injectables/AnimalService.html":{},"classes/GameElement.html":{}}}],["getimgpath",{"_index":53,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{}}}],["getkind",{"_index":550,"title":{},"body":{"components/ElementComponent.html":{}}}],["getlength",{"_index":1084,"title":{},"body":{"classes/Pile.html":{}}}],["getname",{"_index":51,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{},"classes/Player.html":{}}}],["getobservableforkey",{"_index":962,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":970,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":63,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/ElementComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementareaidsbyanimal",{"_index":186,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":296,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameManagementService.html":{}}}],["getorthrow(imgpathbykind",{"_index":72,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{}}}],["getorthrow(map",{"_index":1326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorthrow(pileidsbyanimal",{"_index":203,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getorthrow(this.elementbyid",{"_index":699,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["getowner",{"_index":49,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["getownerid",{"_index":630,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":1175,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":875,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getscore",{"_index":632,"title":{},"body":{"classes/Faction.html":{}}}],["getspeciespile",{"_index":121,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getspeciespile(faction",{"_index":139,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getstate",{"_index":669,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["getting",{"_index":1347,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettransactionstate",{"_index":999,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":1077,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["go",{"_index":1390,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1404,"title":{},"body":{"license.html":{}}}],["grass",{"_index":1285,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grasselement",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grasshopper",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grub",{"_index":1286,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grubelement",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gsp",{"_index":622,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gsp.patch",{"_index":820,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":842,"title":{},"body":{"injectables/GameStateService.html":{}}}],["happens",{"_index":621,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["help",{"_index":1389,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1403,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1446,"title":{},"body":{"license.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["http://localhost:4200",{"_index":1362,"title":{},"body":{"index.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["ids.has(actionpawnpileid",{"_index":206,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ids.has(elementareaid",{"_index":191,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["imgpath",{"_index":42,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{}}}],["imgpathbykind",{"_index":61,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":102,"title":{},"body":{"components/AnimalCardComponent.html":{},"index.html":{}}}],["implied",{"_index":1437,"title":{},"body":{"license.html":{}}}],["import",{"_index":55,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["imports",{"_index":65,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["included",{"_index":1060,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"license.html":{}}}],["including",{"_index":1414,"title":{},"body":{"license.html":{}}}],["increasescore",{"_index":609,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":616,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["inherent",{"_index":776,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["inherentcount",{"_index":560,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":355,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["initialize",{"_index":229,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["initialized",{"_index":313,"title":{},"body":{"injectables/AnimalService.html":{}}}],["injectable",{"_index":220,"title":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{}},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["injectables",{"_index":222,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"overview.html":{}}}],["input",{"_index":57,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{}}}],["inputs",{"_index":37,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{}}}],["insect",{"_index":1264,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["insect_element",{"_index":1277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":1278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instantiated",{"_index":911,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interact",{"_index":825,"title":{},"body":{"injectables/GameStateService.html":{}}}],["interested",{"_index":927,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/Piece.html":{},"interfaces/PileState.html":{},"interfaces/PlayerState.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/Piece.html":{},"interfaces/PileState.html":{},"interfaces/PlayerState.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"overview.html":{}}}],["inventory",{"_index":1095,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["isnotnull",{"_index":266,"title":{},"body":{"injectables/AnimalService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":1344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":267,"title":{},"body":{"injectables/AnimalService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(factionassignment",{"_index":283,"title":{},"body":{"injectables/AnimalService.html":{}}}],["isnotundefined(value",{"_index":1345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":371,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(space.piece",{"_index":399,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["isnull(value",{"_index":1346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":626,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["item",{"_index":528,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["item.id",{"_index":1017,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["item[0",{"_index":530,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["joe",{"_index":1401,"title":{},"body":{"license.html":{}}}],["json",{"_index":673,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["json.stringify(element",{"_index":327,"title":{},"body":{"injectables/AnimalService.html":{}}}],["json.stringify(newgamestateelement",{"_index":1021,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["k",{"_index":1327,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["karma",{"_index":1380,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":1091,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["key",{"_index":928,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":1009,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":923,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":483,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["kind.replace('element",{"_index":525,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["kinds",{"_index":1093,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["leaving",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["length",{"_index":510,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["lengthsubject",{"_index":1055,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["level",{"_index":922,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["liability",{"_index":1450,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1447,"title":{},"body":{"license.html":{}}}],["license",{"_index":1396,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1415,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1438,"title":{},"body":{"license.html":{}}}],["line",{"_index":545,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["list",{"_index":158,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["local",{"_index":288,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameStateStoreService.html":{}}}],["lodash",{"_index":744,"title":{},"body":{"injectables/GameManagementService.html":{},"interfaces/Piece.html":{},"dependencies.html":{}}}],["log",{"_index":463,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["maintain",{"_index":907,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["making",{"_index":908,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":1265,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mammal_element",{"_index":1279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":1280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["managed",{"_index":782,"title":{},"body":{"interfaces/GameState.html":{}}}],["management",{"_index":915,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["management.service",{"_index":494,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["management.service.ts",{"_index":730,"title":{},"body":{"injectables/GameManagementService.html":{},"coverage.html":{}}}],["management.service.ts:106",{"_index":736,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:23",{"_index":734,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:31",{"_index":738,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:37",{"_index":735,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:49",{"_index":737,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["many",{"_index":1094,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["map",{"_index":201,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((factionassignments",{"_index":278,"title":{},"body":{"injectables/AnimalService.html":{}}}],["map((gamestate",{"_index":1007,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["map((space",{"_index":199,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matbutton",{"_index":455,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["matcard",{"_index":105,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matcardtitle",{"_index":106,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["match",{"_index":390,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["matches",{"_index":991,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matgridlist",{"_index":107,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matgridtile",{"_index":108,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["mattooltip",{"_index":456,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["means",{"_index":294,"title":{},"body":{"injectables/AnimalService.html":{}}}],["meat",{"_index":1287,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["meatelement",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1440,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1418,"title":{},"body":{"license.html":{}}}],["message",{"_index":1338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["method",{"_index":914,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["methods",{"_index":117,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["miscellaneous",{"_index":1253,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1397,"title":{},"body":{"license.html":{}}}],["model/action",{"_index":59,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["model/area.model",{"_index":425,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/element.model",{"_index":173,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["model/faction.model",{"_index":639,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/game",{"_index":696,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/piece.model",{"_index":755,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["model/pile.model",{"_index":740,"title":{},"body":{"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":1155,"title":{},"body":{"injectables/PlayerService.html":{}}}],["model/space.model",{"_index":741,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["modify",{"_index":1417,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1458,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monkey",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":955,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"index.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1361,"title":{},"body":{"index.html":{}}}],["need",{"_index":913,"title":{},"body":{"injectables/GameStateStoreService.html":{},"index.html":{}}}],["new",{"_index":177,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newgamestateelement",{"_index":977,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":1018,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":365,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["newstate.id",{"_index":387,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["newstate.kind",{"_index":1182,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.piece",{"_index":1183,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.space.foreach((spacestate",{"_index":395,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["newstate.space.length",{"_index":392,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["nextavailablespace",{"_index":348,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["ng",{"_index":1358,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":122,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["noninfringement",{"_index":1443,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1431,"title":{},"body":{"license.html":{}}}],["null",{"_index":67,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":488,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"interfaces/GameStatePatch.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["object",{"_index":781,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":1104,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["object.values(animalenum",{"_index":541,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["object.values(elementenum",{"_index":539,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["object1",{"_index":1324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":1321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":957,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":357,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["observables",{"_index":924,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["obtaining",{"_index":1408,"title":{},"body":{"license.html":{}}}],["of(undefined",{"_index":798,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["oldstate",{"_index":813,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":980,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["one",{"_index":933,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["oninit",{"_index":103,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["operation",{"_index":801,"title":{},"body":{"interfaces/GameStatePatch.html":{}}}],["optional",{"_index":131,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":826,"title":{},"body":{"injectables/GameStateService.html":{}}}],["others",{"_index":910,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":1454,"title":{},"body":{"license.html":{}}}],["out",{"_index":1392,"title":{},"body":{"index.html":{},"license.html":{}}}],["override",{"_index":386,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["overview",{"_index":1393,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrites",{"_index":941,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":40,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ownerid",{"_index":611,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/GameManagementService.html":{}}}],["package",{"_index":1233,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":1395,"title":{},"body":{"index.html":{}}}],["param",{"_index":682,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["parameters",{"_index":130,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":932,"title":{},"body":{"injectables/GameStateStoreService.html":{},"license.html":{}}}],["passed",{"_index":992,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["patch",{"_index":674,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["patch.model",{"_index":796,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["patch.model.ts",{"_index":799,"title":{},"body":{"interfaces/GameStatePatch.html":{},"coverage.html":{}}}],["patch.service",{"_index":878,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":803,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:13",{"_index":812,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":810,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["pawn",{"_index":30,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn'},{'name",{"_index":79,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["pawn.component",{"_index":156,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.component.html",{"_index":34,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.scss",{"_index":36,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts",{"_index":24,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["pawn.component.ts:15",{"_index":48,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:17",{"_index":50,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:21",{"_index":52,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:25",{"_index":54,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.model",{"_index":60,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.model.ts",{"_index":93,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["pawn/action",{"_index":23,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["pawns",{"_index":216,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["permission",{"_index":1402,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1425,"title":{},"body":{"license.html":{}}}],["person",{"_index":1407,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1426,"title":{},"body":{"license.html":{}}}],["piece",{"_index":95,"title":{"interfaces/Piece.html":{}},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":1087,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["piececount",{"_index":1113,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["piecefactory",{"_index":1050,"title":{},"body":{"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":154,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["piecekindenum.action_pawn",{"_index":212,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["pieces",{"_index":1054,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pieces.push(null",{"_index":1119,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":1118,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount.length",{"_index":1114,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":1115,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pile",{"_index":144,"title":{"classes/Pile.html":{}},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile(pilestate",{"_index":778,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["pile.model",{"_index":785,"title":{},"body":{"interfaces/GameState.html":{}}}],["pileidenum",{"_index":600,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"miscellaneous/enumerations.html":{}}}],["pileidenum.action_pawn_amphibian",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_arachnid",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_bird",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_insect",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_mammal",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_reptile",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.element",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_amphibian",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_arachnid",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_bird",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_insect",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_mammal",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_reptile",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidsbyanimal",{"_index":171,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pileregistryservice",{"_index":128,"title":{"injectables/PileRegistryService.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":592,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{}}}],["piles",{"_index":767,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["piles.push(new",{"_index":777,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["pileservice",{"_index":918,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["pilestate",{"_index":739,"title":{"interfaces/PileState.html":{}},"body":{"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestateservice",{"_index":1125,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":1126,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":189,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["places",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":1382,"title":{},"body":{"index.html":{}}}],["player",{"_index":1132,"title":{"classes/Player.html":{}},"body":{"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["player.id",{"_index":775,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["player.service",{"_index":745,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["player1",{"_index":1143,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player2",{"_index":1145,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player3",{"_index":1147,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player4",{"_index":1149,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player5",{"_index":1151,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player6",{"_index":1153,"title":{},"body":{"injectables/PlayerService.html":{}}}],["players",{"_index":1138,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playerservice",{"_index":236,"title":{"injectables/PlayerService.html":{}},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["playerstate",{"_index":1135,"title":{"interfaces/PlayerState.html":{}},"body":{"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["pool",{"_index":87,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["pool.service",{"_index":499,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["pool.service.ts",{"_index":587,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:12",{"_index":594,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:13",{"_index":597,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":591,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:22",{"_index":593,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:34",{"_index":599,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["portions",{"_index":1434,"title":{},"body":{"license.html":{}}}],["predicate",{"_index":372,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["pretty",{"_index":1089,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["previous",{"_index":942,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":118,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["progress",{"_index":858,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["project",{"_index":1349,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"properties.html":{}}}],["protected",{"_index":344,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["provideanimationsasync('noop",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1340,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["providedin",{"_index":273,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{}}}],["providerouter(routes",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":822,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":1419,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1057,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pull(count",{"_index":1073,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pulled",{"_index":1080,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pulls",{"_index":1075,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["purpose",{"_index":1442,"title":{},"body":{"license.html":{}}}],["put",{"_index":1058,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["put(pieces",{"_index":1081,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["puts",{"_index":1083,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["random",{"_index":1053,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["readonly",{"_index":342,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["readonlymap",{"_index":565,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["received",{"_index":623,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["record",{"_index":1096,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["reference",{"_index":1394,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":931,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["register",{"_index":409,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(elements",{"_index":417,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":443,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":832,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":849,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":706,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registeredareasubscription",{"_index":230,"title":{},"body":{"injectables/AnimalService.html":{}}}],["registeredelementsubject",{"_index":407,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":408,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(elementconfig.areaid",{"_index":300,"title":{},"body":{"injectables/AnimalService.html":{}}}],["registeredids.has(pileidenum.element",{"_index":603,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":432,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":436,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":714,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":656,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":1128,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":833,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":851,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":834,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":853,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement",{"_index":963,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":976,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registry.service",{"_index":161,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":404,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:13",{"_index":412,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:15",{"_index":695,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:16",{"_index":693,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:17",{"_index":694,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:18",{"_index":689,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:20",{"_index":653,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:21",{"_index":655,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:22",{"_index":691,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:24",{"_index":654,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:25",{"_index":651,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:26",{"_index":692,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":828,"title":{},"body":{"injectables/GameStateService.html":{}}}],["reload",{"_index":1365,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1181,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeelement",{"_index":231,"title":{},"body":{"injectables/AnimalService.html":{}}}],["removeelement(element",{"_index":244,"title":{},"body":{"injectables/AnimalService.html":{}}}],["removepiece",{"_index":1160,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["represents",{"_index":1064,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["reptile",{"_index":1266,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reptile_element",{"_index":1281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":1282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["require",{"_index":862,"title":{},"body":{"injectables/GameStateService.html":{}}}],["requiretransaction",{"_index":835,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":906,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":823,"title":{},"body":{"injectables/GameStateService.html":{}}}],["restriction",{"_index":1413,"title":{},"body":{"license.html":{}}}],["results",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":1329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":68,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["returned",{"_index":1335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":135,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1416,"title":{},"body":{"license.html":{}}}],["rollback",{"_index":1038,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":836,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":274,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{}}}],["root'},{'name",{"_index":84,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["routeroutlet",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1357,"title":{},"body":{"index.html":{}}}],["running",{"_index":1376,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":168,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["same",{"_index":979,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["scaffolding",{"_index":1369,"title":{},"body":{"index.html":{}}}],["scope",{"_index":289,"title":{},"body":{"injectables/AnimalService.html":{}}}],["score",{"_index":612,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/GameManagementService.html":{}}}],["seed",{"_index":1288,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["seedelement",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selected",{"_index":1068,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["selector",{"_index":28,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["selector(gamestate",{"_index":1008,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sell",{"_index":1423,"title":{},"body":{"license.html":{}}}],["sendgsptobackend",{"_index":790,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":791,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["serve",{"_index":1359,"title":{},"body":{"index.html":{}}}],["server",{"_index":1356,"title":{},"body":{"index.html":{}}}],["service",{"_index":916,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["service/element",{"_index":498,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["services",{"_index":829,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":179,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["setactionpawnforheader",{"_index":123,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["setactionpawnforheader(faction",{"_index":142,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["setarea",{"_index":837,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":864,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setentitystate",{"_index":433,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":438,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":838,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":866,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setgamestate",{"_index":938,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":985,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setpile",{"_index":839,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":868,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":610,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":618,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["setstate",{"_index":349,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":362,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["settransactionstateelement",{"_index":964,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":988,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["several",{"_index":920,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["shall",{"_index":1432,"title":{},"body":{"license.html":{}}}],["shuffle",{"_index":742,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffle(object.values(animalenum",{"_index":769,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffledanimals",{"_index":768,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffledanimals[index",{"_index":772,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["simple",{"_index":1090,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["skip",{"_index":719,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["skull",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snake",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1410,"title":{},"body":{"license.html":{}}}],["someone",{"_index":926,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"index.html":{}}}],["space",{"_index":248,"title":{"classes/Space.html":{}},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameManagementService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space(spacestate.kind",{"_index":763,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["space.model",{"_index":367,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.piece",{"_index":198,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{}}}],["space.piece.kind",{"_index":322,"title":{},"body":{"injectables/AnimalService.html":{}}}],["space.state",{"_index":378,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.state$.subscribe((spacestate",{"_index":383,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spacekindenum",{"_index":750,"title":{},"body":{"injectables/GameManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spaces",{"_index":319,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameManagementService.html":{}}}],["spaces.map((space",{"_index":377,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spaces.push(new",{"_index":762,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["spacestate",{"_index":343,"title":{"interfaces/SpaceState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["species",{"_index":217,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["species/animal/noun",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/element/noun",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/other/noun",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":1304,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":1306,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":1308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":1310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":1312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":1314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":1305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":1307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":1309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":1311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":1313,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciespiece",{"_index":1184,"title":{"interfaces/SpeciesPiece.html":{}},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["speciespile",{"_index":116,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciespile?.length",{"_index":219,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciesreptile",{"_index":1315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specified",{"_index":1076,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["spider",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animal.constant.ts",{"_index":1255,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../app.config.ts",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area.constant.ts",{"_index":1256,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../element",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../element.constant.ts",{"_index":1257,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../game",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../image.constant.ts",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../piece.constant.ts",{"_index":1258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../piece.model.ts",{"_index":1318,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pile.constant.ts",{"_index":1259,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../predicate.ts",{"_index":1319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../util.ts",{"_index":1317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":340,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:13",{"_index":353,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:14",{"_index":352,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:24",{"_index":360,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:47",{"_index":361,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":607,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:10",{"_index":629,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:14",{"_index":631,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:18",{"_index":633,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":617,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":614,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:32",{"_index":619,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":660,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":1049,"title":{},"body":{"interfaces/Piece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":1052,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:17",{"_index":1070,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:18",{"_index":1071,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:19",{"_index":1069,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:20",{"_index":1059,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:39",{"_index":1085,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:46",{"_index":1072,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:56",{"_index":1074,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:82",{"_index":1082,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":1133,"title":{},"body":{"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["src/app/engine/model/player.model.ts:9",{"_index":1134,"title":{},"body":{"classes/Player.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":1156,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:12",{"_index":1165,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:13",{"_index":1163,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:14",{"_index":1164,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:15",{"_index":1167,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:16",{"_index":1162,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:24",{"_index":1172,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:31",{"_index":1174,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:35",{"_index":1176,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:39",{"_index":1169,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:48",{"_index":1170,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:57",{"_index":1171,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/predicate.ts",{"_index":1213,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/service/game",{"_index":403,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["src/app/engine/service/player.service.ts",{"_index":1136,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/app/engine/service/player.service.ts:16",{"_index":1140,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/engine/service/player.service.ts:8",{"_index":1154,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/engine/util.ts",{"_index":1220,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/action",{"_index":22,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["src/app/game/component/animal",{"_index":99,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["src/app/game/component/draw",{"_index":453,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts",{"_index":546,"title":{},"body":{"components/ElementComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts:16",{"_index":549,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:18",{"_index":551,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:22",{"_index":552,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:26",{"_index":553,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/constant/animal.constant.ts",{"_index":1260,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/area.constant.ts",{"_index":1226,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element",{"_index":557,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element.constant.ts",{"_index":1284,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/game",{"_index":1227,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/image.constant.ts",{"_index":1229,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/piece.constant.ts",{"_index":1291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/pile.constant.ts",{"_index":1230,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/model/action",{"_index":92,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["src/app/game/model/element.model.ts",{"_index":606,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["src/app/game/model/species.model.ts",{"_index":1185,"title":{},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["src/app/game/service/animal.service.ts",{"_index":223,"title":{},"body":{"injectables/AnimalService.html":{},"coverage.html":{}}}],["src/app/game/service/animal.service.ts:102",{"_index":262,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:110",{"_index":240,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:124",{"_index":245,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:21",{"_index":254,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:22",{"_index":247,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:23",{"_index":246,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:24",{"_index":249,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:25",{"_index":253,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:28",{"_index":237,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:38",{"_index":242,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:42",{"_index":241,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:62",{"_index":243,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:81",{"_index":256,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:85",{"_index":258,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:89",{"_index":260,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/element",{"_index":586,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["standalone",{"_index":31,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["start",{"_index":543,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["startcase",{"_index":743,"title":{},"body":{"injectables/GameManagementService.html":{},"interfaces/Piece.html":{}}}],["startcase(assignedanimal",{"_index":774,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["startcase(kind",{"_index":1051,"title":{},"body":{"interfaces/Piece.html":{}}}],["started",{"_index":895,"title":{"index.html":{},"license.html":{}},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["starttransaction",{"_index":840,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["startturn",{"_index":467,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["state",{"_index":346,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["state.constant",{"_index":748,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["state.constant.ts",{"_index":1228,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.model",{"_index":814,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":780,"title":{},"body":{"interfaces/GameState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.owner",{"_index":1098,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["state.service",{"_index":426,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":430,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:14",{"_index":717,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:15",{"_index":710,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:18",{"_index":844,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:21",{"_index":718,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:22",{"_index":715,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:23",{"_index":716,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:25",{"_index":712,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:29",{"_index":847,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:34",{"_index":870,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:36",{"_index":711,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:38",{"_index":848,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:40",{"_index":713,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:51",{"_index":863,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:58",{"_index":855,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:64",{"_index":872,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:68",{"_index":865,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:72",{"_index":850,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:76",{"_index":874,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:80",{"_index":867,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:83",{"_index":852,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:87",{"_index":876,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:9",{"_index":449,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:91",{"_index":869,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:95",{"_index":854,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state/game",{"_index":497,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["statements",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["statesubject",{"_index":347,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["static",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.service",{"_index":877,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":905,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:103",{"_index":1000,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:111",{"_index":968,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:116",{"_index":986,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:124",{"_index":993,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:132",{"_index":969,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:141",{"_index":982,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:151",{"_index":1001,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:155",{"_index":983,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:159",{"_index":973,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:163",{"_index":1002,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:167",{"_index":984,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:171",{"_index":974,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:175",{"_index":1003,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:179",{"_index":987,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:183",{"_index":975,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:34",{"_index":995,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:35",{"_index":996,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:36",{"_index":966,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:42",{"_index":971,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:58",{"_index":989,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:82",{"_index":978,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:99",{"_index":998,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stored",{"_index":1373,"title":{},"body":{"index.html":{}}}],["stores",{"_index":981,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":35,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["subject",{"_index":1166,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{},"license.html":{}}}],["sublicense",{"_index":1421,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":192,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((drawpool",{"_index":506,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["subscribe((factionassignment",{"_index":284,"title":{},"body":{"injectables/AnimalService.html":{}}}],["subscribers",{"_index":1035,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substantial",{"_index":1433,"title":{},"body":{"license.html":{}}}],["substatearray",{"_index":1013,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":1016,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":1025,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":1019,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["such",{"_index":917,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sum",{"_index":1105,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["sun",{"_index":1289,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["sunelement",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":379,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["super(areastatesvc",{"_index":428,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":645,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":1127,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":1097,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["super.register(elements",{"_index":646,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["system",{"_index":824,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":354,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":950,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":939,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["template",{"_index":19,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["test",{"_index":1142,"title":{},"body":{"injectables/PlayerService.html":{},"index.html":{}}}],["test1",{"_index":1141,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test2",{"_index":1144,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test3",{"_index":1146,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test4",{"_index":1148,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test5",{"_index":1150,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test6",{"_index":1152,"title":{},"body":{"injectables/PlayerService.html":{}}}],["testing",{"_index":1386,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1378,"title":{},"body":{"index.html":{}}}],["tgameelement",{"_index":416,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstatesvc",{"_index":688,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["thinks",{"_index":295,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this._action",{"_index":1179,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._drawpool",{"_index":596,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":1028,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate[key",{"_index":1024,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":1178,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":1037,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":1031,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":1033,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":675,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.id",{"_index":680,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.inventory[key",{"_index":1106,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[kind",{"_index":1117,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[piece.kind",{"_index":1123,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this._state.name",{"_index":635,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{}}}],["this._state.ownerid",{"_index":636,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._state.score",{"_index":637,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._transactionstate",{"_index":1010,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate[key",{"_index":1014,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.actionpawn?.name",{"_index":70,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawn?.owner",{"_index":69,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawnforheader",{"_index":211,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawnpile",{"_index":207,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.addedelementspaces",{"_index":310,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.addedelementspaces.find",{"_index":321,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.addedelementspaces.map((space",{"_index":311,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.applygsp(gsp",{"_index":882,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.arearegistryservice.get(elementareaid",{"_index":194,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.arearegistryservice.registeredids",{"_index":188,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.arearegistrysvc.get(elementconfig.areaid",{"_index":301,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.arearegistrysvc.register(areas",{"_index":766,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":298,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.createarea",{"_index":756,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.createdrawpoolpile",{"_index":758,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.createfactions",{"_index":757,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.currentplayerfaction",{"_index":518,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpool",{"_index":507,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpool.pull",{"_index":529,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpoollength",{"_index":509,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpoolsubject.asobservable",{"_index":595,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpoolsubject.next(this._drawpool",{"_index":605,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.element?.kind",{"_index":554,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.element?.name",{"_index":555,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.elementarea",{"_index":193,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{}}}],["this.elementarea.nextavailablespace",{"_index":315,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementarea.spaces",{"_index":196,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{}}}],["this.elementbyid.set(element.id",{"_index":702,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementconfig",{"_index":293,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementconfig.inherentcount",{"_index":308,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementdrawpoolsvc.drawpool",{"_index":504,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.elements",{"_index":195,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.elementspaces",{"_index":302,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementspaces?.map((space",{"_index":305,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementsspacessubject.asobservable",{"_index":250,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementsspacessubject.next(this.elementspaces",{"_index":303,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":720,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitpilestate",{"_index":1120,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.emitstate",{"_index":638,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.emptyelementspaces",{"_index":200,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction",{"_index":175,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{}}}],["this.faction.id",{"_index":304,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.faction?.id",{"_index":297,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.factionassignment",{"_index":642,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":648,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":643,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":649,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubscription",{"_index":276,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.factionregistryservice.factionassignment",{"_index":277,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.factionregistryservice.get(factionassignment.id",{"_index":285,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.factionregistrysvc.factionassignment$.subscribe((factionassignments",{"_index":514,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factionregistrysvc.get(factionassignment.id",{"_index":517,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions",{"_index":515,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions.find",{"_index":519,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.formatelementname(item[0].kind",{"_index":531,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gameelementstatesvc.register(elements",{"_index":708,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementsvc.creategame",{"_index":511,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestateclient.gsp$.pipe(filter((gsp",{"_index":880,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":892,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.area",{"_index":896,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":891,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":899,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.gamestate",{"_index":890,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":902,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":898,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":901,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":904,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":893,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":897,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":900,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate(updatedstate",{"_index":885,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":903,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":886,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":887,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":1004,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":1006,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":1029,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":450,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":537,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":657,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":1129,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":451,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":658,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":1130,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":452,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":659,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":1131,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":523,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getactionpawnpile(this.faction",{"_index":182,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getelementarea(this.faction",{"_index":181,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":723,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":1039,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.getspeciespile(this.faction",{"_index":183,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.gspservice.apply(this.gamestatestore.gamestate",{"_index":884,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gspservice.create",{"_index":889,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.id",{"_index":388,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this.initialize",{"_index":275,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.kind",{"_index":556,"title":{},"body":{"components/ElementComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.length",{"_index":1102,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject",{"_index":1100,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":1103,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.next(this.length",{"_index":1107,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.log.push('pile",{"_index":534,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.log.push(`you",{"_index":532,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.owner",{"_index":71,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.piececounts.get(key",{"_index":1108,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.piecefactory",{"_index":1099,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.pileregistryservice.get(actionpawnpileid",{"_index":208,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.pileregistryservice.registeredids",{"_index":205,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.pileregistrysvc.get(pileidenum.element",{"_index":604,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.register(piles",{"_index":779,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":602,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.players[0",{"_index":1139,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playerservice.currentplayer.id",{"_index":281,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{}}}],["this.playerservice.players.foreach((player",{"_index":770,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.registeredareasubscription",{"_index":286,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":423,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":707,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":703,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":701,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":722,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":726,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":1042,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":1045,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":1048,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.setactionpawnforheader(this.faction",{"_index":180,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.setentitystate(state",{"_index":728,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":1041,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":1044,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":1047,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.spaces",{"_index":380,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.filter((space",{"_index":398,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.foreach((space",{"_index":382,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.length",{"_index":391,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":396,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate",{"_index":381,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate[index",{"_index":384,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.speciespile",{"_index":210,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.state",{"_index":678,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject",{"_index":676,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.asobservable",{"_index":679,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.next(this.state",{"_index":385,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.transactionstate",{"_index":1022,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["those",{"_index":925,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":176,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":1330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timestamp",{"_index":800,"title":{},"body":{"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{}}}],["title",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":921,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tort",{"_index":1453,"title":{},"body":{"license.html":{}}}],["total",{"_index":1086,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["track",{"_index":214,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{}}}],["tracks",{"_index":1092,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["transaction",{"_index":857,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":965,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":21,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["true",{"_index":32,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":290,"title":{},"body":{"injectables/AnimalService.html":{}}}],["tsc",{"_index":1110,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["tslib",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":522,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["two",{"_index":934,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1462,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1015,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["typically",{"_index":945,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["undefined",{"_index":44,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/GameStatePatchService.html":{}}}],["undefined)).subscribe((gsp",{"_index":881,"title":{},"body":{"injectables/GameStateService.html":{}}}],["unique",{"_index":376,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["unit",{"_index":1377,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1112,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["update",{"_index":990,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updated",{"_index":930,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updatedstate",{"_index":883,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updates",{"_index":861,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updating",{"_index":1012,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["use",{"_index":1066,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":946,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["using",{"_index":292,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["util",{"_index":697,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{}}}],["v",{"_index":1341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":46,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":944,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{}}}],["variable",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1464,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":827,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["version",{"_index":1353,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":937,"title":{},"body":{"injectables/GameStateStoreService.html":{},"index.html":{}}}],["void",{"_index":136,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["warranties",{"_index":1439,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1435,"title":{},"body":{"license.html":{}}}],["water",{"_index":1290,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["waterelement",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ways",{"_index":935,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whenever",{"_index":929,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whether",{"_index":1451,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["without",{"_index":1412,"title":{},"body":{"license.html":{}}}],["yes",{"_index":1336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Action {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnComponent.html":{"url":"components/ActionPawnComponent.html","title":"component - ActionPawnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-pawn/action-pawn.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./action-pawn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    owner\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        owner\n                    \n                \n\n                \n                    \n                        getowner()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util';\n\n@Component({\n  selector: 'app-action-pawn',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './action-pawn.component.html',\n  styleUrl: './action-pawn.component.scss',\n})\nexport class ActionPawnComponent {\n  @Input() actionPawn: ActionPawnPiece | undefined = undefined;\n\n  get owner(): string | null | undefined {\n    return this.actionPawn?.owner;\n  }\n\n  get name(): string | undefined {\n    return this.actionPawn?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.owner) {\n      return getOrThrow(imgPathByKind, this.owner);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionPawnPiece.html":{"url":"interfaces/ActionPawnPiece.html","title":"interface - ActionPawnPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionPawnPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-pawn.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\nimport { AnimalKind } from '../constant/animal.constant';\n\nexport interface ActionPawnPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimalCardComponent.html":{"url":"components/AnimalCardComponent.html","title":"component - AnimalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/animal-card/animal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animal-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardTitle\n                                ActionPawnComponent\n                            MatGridList\n                            MatGridTile\n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnForHeader\n                            \n                            \n                                actionPawnPile\n                            \n                            \n                                elementArea\n                            \n                            \n                                elements\n                            \n                            \n                                emptyElementSpaces\n                            \n                            \n                                speciesPile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActionPawnPile\n                            \n                            \n                                    Private\n                                getElementArea\n                            \n                            \n                                    Private\n                                getSpeciesPile\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setActionPawnForHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                faction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistryService: AreaRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        faction\n                    \n                \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/animal-card/animal-card.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getActionPawnPile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActionPawnPile(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getElementArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    getElementArea(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSpeciesPile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSpeciesPile(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setActionPawnForHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    setActionPawnForHeader(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnForHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementPiece[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyElementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :     undefined[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speciesPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { MatCard, MatCardTitle } from '@angular/material/card';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { MatGridList, MatGridTile } from '@angular/material/grid-list';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { Area } from '../../../engine/model/area.model';\nimport { Pile } from '../../../engine/model/pile.model';\nimport { PileRegistryService } from '../../../engine/service/game-element/pile-registry.service';\nimport { filter, first } from 'rxjs';\nimport { getOrThrow } from '../../../engine/util';\nimport { elementAreaIdsByAnimal } from '../../constant/area.constant';\nimport { pileIdsByAnimal } from '../../constant/pile.constant';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementComponent } from '../element/element.component';\n\n@Component({\n  selector: 'app-animal-card',\n  standalone: true,\n  imports: [MatCard, MatCardTitle, ActionPawnComponent, MatGridList, MatGridTile, ElementComponent],\n  templateUrl: './animal-card.component.html',\n  styleUrl: './animal-card.component.scss',\n})\nexport class AnimalCardComponent implements OnInit {\n  @Input() faction: Faction | undefined = undefined;\n  elementArea: Area | undefined = undefined;\n  elements: ElementPiece[] = [];\n  emptyElementSpaces: null[] = [];\n  actionPawnPile: Pile | undefined = undefined;\n  speciesPile: Pile | undefined = undefined;\n  actionPawnForHeader: ActionPawnPiece | undefined = undefined;\n\n  constructor(\n    private areaRegistryService: AreaRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {}\n\n  ngOnInit() {\n    if (!this.faction) {\n      throw new Error('faction not set');\n    }\n    this.setActionPawnForHeader(this.faction);\n    this.getElementArea(this.faction);\n    this.getActionPawnPile(this.faction);\n    this.getSpeciesPile(this.faction);\n  }\n\n  private getElementArea(faction: Faction): void {\n    const elementAreaId = getOrThrow(elementAreaIdsByAnimal, faction.id);\n    this.areaRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(elementAreaId)),\n        first(),\n      )\n      .subscribe(() => {\n        this.elementArea = this.areaRegistryService.get(elementAreaId);\n        this.elements = this.elementArea.spaces\n          .filter((space) => space.piece)\n          .map((space) => space.piece) as ElementPiece[];\n        this.emptyElementSpaces = this.elementArea.spaces\n          .filter((space) => space.piece === null)\n          .map(() => null);\n      });\n  }\n\n  private getActionPawnPile(faction: Faction): void {\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id)['actionPawn'];\n    this.pileRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(actionPawnPileId)),\n        first(),\n      )\n      .subscribe(() => {\n        this.actionPawnPile = this.pileRegistryService.get(actionPawnPileId);\n      });\n  }\n\n  private getSpeciesPile(faction: Faction): void {\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id)['species'];\n    this.pileRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(actionPawnPileId)),\n        first(),\n      )\n      .subscribe(() => {\n        this.speciesPile = this.pileRegistryService.get(actionPawnPileId);\n      });\n  }\n\n  private setActionPawnForHeader(faction: Faction): void {\n    this.actionPawnForHeader = defaultPieceFactory(\n      PieceKindEnum.ACTION_PAWN,\n      faction.id,\n    ) as ActionPawnPiece;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{ faction?.name }}\n      \n    \n    \n      \n        @for (element of elements; track $index) {\n          \n        }\n        @for (emptyElementSpace of emptyElementSpaces; track $index) {\n          \n        }\n      \n    \n    \n      \n        Action Pawns\n      \n      Species\n      \n        {{ actionPawnPile?.length }}\n      \n      {{ speciesPile?.length }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ faction?.name }}                            @for (element of elements; track $index) {                  }        @for (emptyElementSpace of emptyElementSpaces; track $index) {                  }                            Action Pawns            Species              {{ actionPawnPile?.length }}            {{ speciesPile?.length }}            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalService.html":{"url":"injectables/AnimalService.html","title":"injectable - AnimalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementArea\n                            \n                            \n                                    Private\n                                elementConfig\n                            \n                            \n                                    Private\n                                elementSpaces\n                            \n                            \n                                elementSpaces$\n                            \n                            \n                                    Private\n                                elementsSpacesSubject\n                            \n                            \n                                    Private\n                                faction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                    Private\n                                factionAssignmentSubscription\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                    Private\n                                registeredAreaSubscription\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    elements\n                                \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubscription\n                        \n                    \n                \n            \n            \n                \n                        \n                    factionAssignmentSubscription()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredAreaSubscription\n                        \n                    \n                \n            \n            \n                \n                        \n                    registeredAreaSubscription()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementConfig | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[] | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSpacesSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSpacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.elementSpaces)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/animal.service.ts:81\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/animal.service.ts:85\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/animal.service.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/animal.service.ts:102\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { PlayerService } from '../../engine/service/player.service';\nimport { Faction } from '../../engine/model/faction.model';\nimport { Area } from '../../engine/model/area.model';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport {\n  FactionAssignment,\n  FactionRegistryService,\n} from '../../engine/service/game-element/faction-registry.service';\nimport { BehaviorSubject, filter, first, map } from 'rxjs';\nimport { getOrThrow } from '../../engine/util';\nimport { isNotNull, isNotUndefined } from '../../engine/predicate';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from '../model/element.model';\nimport { ElementConfig, elementConfigByAnimal } from '../constant/element-config.constant';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalService {\n  private faction: Faction | undefined = undefined;\n  private elementConfig: ElementConfig | undefined = undefined;\n  private elementArea: Area | undefined = undefined;\n  private elementSpaces: Space[] | undefined = undefined;\n  private elementsSpacesSubject: BehaviorSubject = new BehaviorSubject(this.elementSpaces);\n  elementSpaces$ = this.elementsSpacesSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private playerService: PlayerService,\n  ) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.factionAssignmentSubscription();\n  }\n\n  private factionAssignmentSubscription(): void {\n    this.factionRegistryService.factionAssignment$\n      .pipe(\n        map((factionAssignments) =>\n          factionAssignments.find(\n            (factionAssignment) =>\n              factionAssignment.ownerId === this.playerService.currentPlayer.id,\n          ),\n        ),\n        filter((factionAssignment): factionAssignment is FactionAssignment =>\n          isNotUndefined(factionAssignment),\n        ),\n        first(),\n      )\n      .subscribe((factionAssignment) => {\n        this.faction = this.factionRegistryService.get(factionAssignment.id);\n        this.registeredAreaSubscription();\n      });\n  }\n\n  private registeredAreaSubscription(): void {\n    /*\n    Defining elementConfig in local scope so that TS can track value is being set.\n    Using this.elementConfig means TS thinks it could be undefined\n    */\n    const elementConfig = getOrThrow(elementConfigByAnimal, this.faction?.id);\n    this.elementConfig = elementConfig;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(elementConfig.areaId)),\n        first(),\n      )\n      .subscribe(() => {\n        this.elementArea = this.areaRegistrySvc.get(elementConfig.areaId);\n        this.elementSpaces = this.elementArea.spaces;\n        this.elementsSpacesSubject.next(this.elementSpaces);\n      });\n  }\n\n  get id(): string | undefined {\n    return this.faction ? this.faction.id : undefined;\n  }\n\n  get elements(): ElementPiece[] | undefined {\n    return this.elementSpaces?.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n\n  private get addedElementSpaces(): Space[] | undefined {\n    const elementSpaces = this.elementSpaces;\n    if (elementSpaces && this.elementConfig) {\n      if (elementSpaces.length > this.elementConfig.inherentCount) {\n        return elementSpaces.slice(this.elementConfig.inherentCount);\n      } else {\n        return [];\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  get addedElements(): ElementPiece[] {\n    if (this.addedElementSpaces) {\n      return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n    } else {\n      throw new Error('Animal not initialized yet');\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    if (this.elementArea) {\n      const availableSpace = this.elementArea.nextAvailableSpace();\n      if (availableSpace) {\n        availableSpace.addPiece(element);\n        this.elementsSpacesSubject.next(this.elementSpaces);\n      } else {\n        throw new Error('No available element spaces');\n      }\n    } else {\n      throw new Error('Animal not initialized yet');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    if (this.addedElementSpaces) {\n      const elementSpace = this.addedElementSpaces.find(\n        (space) => space.piece && space.piece.kind === element.kind,\n      );\n      if (elementSpace) {\n        elementSpace.removePiece();\n        this.elementsSpacesSubject.next(this.elementSpaces);\n      } else {\n        throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n      }\n    } else {\n      throw new Error('Animal not initialized yet');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, spaces: Space[])\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spaces\n                                                  \n                                                        \n                                                                        Space[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Space | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { isNull } from '../predicate';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n  }\n\n  nextAvailableSpace(): Space | null {\n    const availableSpaces = this.spaces.filter((space) => isNull(space.piece));\n    if (availableSpaces.length > 0) {\n      return availableSpaces[0];\n    } else {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AreaState.html":{"url":"interfaces/AreaState.html","title":"interface - AreaState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AreaState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n            \n                Description\n            \n            \n                AreaState does not extend GameStateElement as each Area is unique with a unique ID\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            space\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        space\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        space:         SpaceState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpaceState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { isNull } from '../predicate';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n  }\n\n  nextAvailableSpace(): Space | null {\n    const availableSpaces = this.spaces.filter((space) => isNull(space.piece));\n    if (availableSpaces.length > 0) {\n      return availableSpaces[0];\n    } else {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                                ElementComponent\n                                ActionPawnComponent\n                                AnimalCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlayerFaction\n                            \n                            \n                                drawPool\n                            \n                            \n                                drawPoolLength\n                            \n                            \n                                factions\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGame\n                            \n                            \n                                draw\n                            \n                            \n                                endTurn\n                            \n                            \n                                    Private\n                                formatElementName\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                startTurn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elements\n                                \n                                \n                                    actionPawns\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameManagementSvc: GameManagementService, gameStateSvc: GameStateService, elementDrawPoolSvc: ElementDrawPoolService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameManagementSvc\n                                                  \n                                                        \n                                                                        GameManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolSvc\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGame\n                        \n                    \n                \n            \n            \n                \ncreateGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endTurn\n                        \n                    \n                \n            \n            \n                \nendTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatElementName\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatElementName(kind: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTurn\n                        \n                    \n                \n            \n            \n                \nstartTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerFaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawPoolLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:101\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawns\n                    \n                \n\n                \n                    \n                        getactionPawns()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:109\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameManagementService } from '../../../engine/service/game-management.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter, first } from 'rxjs';\nimport { Pile } from '../../../engine/model/pile.model';\nimport { ElementDrawPoolService } from '../../service/element-draw-pool.service';\n\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\nimport { ElementComponent } from '../element/element.component';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementEnum } from '../../constant/element.constant';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { AnimalEnum } from '../../constant/animal.constant';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { AnimalCardComponent } from '../animal-card/animal-card.component';\nimport { PlayerService } from '../../../engine/service/player.service';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [MatButton, MatTooltip, ElementComponent, ActionPawnComponent, AnimalCardComponent],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent {\n  currentPlayerFaction: Faction | undefined = undefined;\n  factions: Faction[] = [];\n  drawPool: Pile | undefined = undefined;\n  drawPoolLength = 0;\n  log: string[] = [];\n  constructor(\n    private gameManagementSvc: GameManagementService,\n    private gameStateSvc: GameStateService,\n    private elementDrawPoolSvc: ElementDrawPoolService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n  ) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.elementDrawPoolSvc.drawPool$\n      .pipe(\n        filter((drawPool) => drawPool != null),\n        first(),\n      )\n      .subscribe((drawPool) => {\n        this.drawPool = drawPool;\n        drawPool.length$.subscribe((length) => {\n          this.drawPoolLength = length;\n        });\n      });\n  }\n\n  createGame(): void {\n    this.gameManagementSvc.createGame();\n    console.log('Create Game');\n    // should be using factionAssignments$\n    this.factionRegistrySvc.factionAssignment$.subscribe((factionAssignments) => {\n      this.factions = factionAssignments.map((factionAssignment) =>\n        this.factionRegistrySvc.get(factionAssignment.id),\n      );\n      this.currentPlayerFaction = this.factions.find(\n        (faction) => faction.ownerId === this.playerService.currentPlayer.id,\n      );\n    });\n  }\n\n  startTurn(): void {\n    console.log('Start Turn');\n    this.gameStateSvc.startTransaction();\n  }\n\n  private formatElementName(kind: string): string {\n    const elementName = kind.replace('Element', '');\n    return elementName.charAt(0).toUpperCase() + elementName.slice(1);\n  }\n\n  draw(): void {\n    if (this.drawPool) {\n      const item = this.drawPool.pull();\n      if (item[0]) {\n        const element = this.formatElementName(item[0].kind);\n        this.log.push(`You drew a ${element}`);\n      } else {\n        this.log.push('Pile is empty!');\n      }\n    }\n  }\n\n  endTurn(): void {\n    console.log('End Turn');\n    this.gameStateSvc.commitTransaction();\n  }\n\n  get elements(): ElementPiece[] {\n    const elements: ElementPiece[] = [];\n    for (const elementKind of Object.values(ElementEnum) as ElementEnum[]) {\n      elements.push(defaultPieceFactory(elementKind) as ElementPiece);\n    }\n    return elements;\n  }\n\n  get actionPawns(): ActionPawnPiece[] {\n    const actionPawns: ActionPawnPiece[] = [];\n    for (const animal of Object.values(AnimalEnum) as AnimalEnum[]) {\n      actionPawns.push(defaultPieceFactory(PieceKindEnum.ACTION_PAWN, animal) as ActionPawnPiece);\n    }\n    return actionPawns;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Initialize\n      Start Turn\n      Draw!\n      End Turn\n    \n    \n      Draw Pool: {{ drawPoolLength }}\n      \n        \n          @for (line of log; track $index) {\n            {{ line }}\n          }\n        \n      \n    \n  \n  -->\n  -->\n  \n  -->\n  \n  -->\n  -->\n  \n  -->\n  \n  -->\n  -->\n  \n    @for (faction of factions; track faction.id) {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Initialize      Start Turn      Draw!      End Turn              Draw Pool: {{ drawPoolLength }}                        @for (line of log; track $index) {            {{ line }}          }                      -->  -->    -->    -->  -->    -->    -->  -->      @for (faction of factions; track faction.id) {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementComponent.html":{"url":"components/ElementComponent.html","title":"component - ElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/element/element.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    kind\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :     ElementPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/element/element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        kind\n                    \n                \n\n                \n                    \n                        getkind()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../model/element.model';\n\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util';\n\n@Component({\n  selector: 'app-element',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './element.component.html',\n  styleUrl: './element.component.scss',\n})\nexport class ElementComponent {\n  @Input() element: ElementPiece | undefined = undefined;\n\n  get kind(): string | undefined {\n    return this.element?.kind;\n  }\n\n  get name(): string | undefined {\n    return this.element?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.kind) {\n      return getOrThrow(imgPathByKind, this.kind);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/element-config.constant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementEnum, ElementKind } from './element.constant';\nimport { AreaId, AreaIdEnum } from './area.constant';\nimport { AnimalEnum } from './animal.constant';\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                drawPool$\n                            \n                            \n                                    Private\n                                drawPoolSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawPool$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.drawPoolSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawPoolSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    this._drawPool,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, first, Observable } from 'rxjs';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { PileIdEnum } from '../constant/pile.constant';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | null = null;\n  private drawPoolSubject: BehaviorSubject = new BehaviorSubject(\n    this._drawPool,\n  );\n  drawPool$: Observable = this.drawPoolSubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.pileRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(PileIdEnum.ELEMENT)),\n        first(),\n      )\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PileIdEnum.ELEMENT);\n        this.drawPoolSubject.next(this._drawPool);\n      });\n  }\n\n  get drawPool(): Pile | null {\n    return this._drawPool;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/element.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\n\nimport { ElementKind } from '../constant/element.constant';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  name: string;\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionState.html":{"url":"interfaces/FactionState.html","title":"interface - FactionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  name: string;\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:31\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  get(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(elements: TgameElement[]): void {\n    elements.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elements);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameElementState.html":{"url":"interfaces/GameElementState.html","title":"interface - GameElementState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameElementState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  protected abstract get elementState$(): Observable;\n  protected abstract registerEntityState(element: TgameElement): void;\n  protected abstract setEntityState(state: GameElementState): void;\n\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  private getEntity(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementService.html":{"url":"injectables/GameManagementService.html","title":"injectable - GameManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createArea\n                            \n                            \n                                    Private\n                                createDrawPoolPile\n                            \n                            \n                                    Private\n                                createFactions\n                            \n                            \n                                createGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDrawPoolPile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDrawPoolPile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createFactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFactions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGame\n                        \n                    \n                \n            \n            \n                \ncreateGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../model/pile.model';\nimport { Space } from '../model/space.model';\nimport { Area } from '../model/area.model';\nimport { shuffle, startCase } from 'lodash';\nimport { Faction } from '../model/faction.model';\nimport { PlayerService } from './player.service';\nimport { getOrThrow } from '../util';\nimport { AreaRegistryService } from './game-element/area-registry.service';\nimport { FactionRegistryService } from './game-element/faction-registry.service';\nimport { PileRegistryService } from './game-element/pile-registry.service';\nimport { baseGameState } from '../../game/constant/game-state.constant';\nimport { AnimalEnum } from '../../game/constant/animal.constant';\nimport { SpaceKindEnum } from '../../game/constant/area.constant';\nimport { elementConfigByAnimal } from '../../game/constant/element-config.constant';\nimport { pileIdsByAnimal } from '../../game/constant/pile.constant';\nimport { PieceKindEnum } from '../../game/constant/piece.constant';\nimport { defaultPieceFactory } from '../model/piece.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementService {\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private pileRegistrySvc: PileRegistryService,\n  ) {}\n\n  createGame(): void {\n    this.createArea();\n    this.createFactions();\n    this.createDrawPoolPile();\n  }\n\n  private createArea(): void {\n    const areas: Area[] = [];\n    baseGameState.area.forEach((areaState) => {\n      const spaces: Space[] = [];\n      areaState.space.forEach((spaceState) => {\n        spaces.push(new Space(spaceState.kind));\n      });\n      areas.push(new Area(areaState.id, spaces));\n    });\n    this.areaRegistrySvc.register(areas);\n  }\n\n  private createFactions() {\n    const factions: Faction[] = [];\n    const areas: Area[] = [];\n    const piles: Pile[] = [];\n    const shuffledAnimals = shuffle(Object.values(AnimalEnum));\n    this.playerService.players.forEach((player, index) => {\n      const assignedAnimal = shuffledAnimals[index];\n      const elementConfig = getOrThrow(elementConfigByAnimal, assignedAnimal);\n\n      factions.push(\n        new Faction({\n          id: assignedAnimal,\n          name: startCase(assignedAnimal),\n          ownerId: player.id,\n          score: 0,\n        }),\n      );\n\n      const spaces: Space[] = [];\n      // inherent element spaces\n      for (let i = 0; i  {\n      piles.push(new Pile(pileState));\n    });\n    this.pileRegistrySvc.register(piles);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Defining the GameState object managed by GameStateStoreService\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            area\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            pile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        area\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        area:         AreaState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         FactionState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FactionState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pile:         PileState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PileState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FactionState } from './faction.model';\nimport { PileState } from './pile.model';\nimport { AreaState } from './area.model';\n\n/**\n * Defining the GameState object managed by GameStateStoreService\n */\nexport interface GameState {\n  area: AreaState[];\n  faction: FactionState[];\n  pile: PileState[];\n}\n\nexport const emptyGameState: GameState = {\n  area: [],\n  faction: [],\n  pile: [],\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gsp$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gsp$\n                    \n                \n\n                \n                    \n                        getgsp$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-client.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { of, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n  }\n\n  get gsp$(): Observable {\n    return of(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameStatePatch.html":{"url":"interfaces/GameStatePatch.html","title":"interface - GameStatePatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameStatePatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state-patch.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            patch\n                                        \n                                \n                                \n                                        \n                                            timeStamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        patch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        patch:     Operation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Operation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeStamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Operation } from 'fast-json-patch';\n\nexport interface GameStatePatch {\n  timeStamp: number;\n  patch: Operation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(gameState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameState } from '../../model/game-state.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { applyPatch, compare } from 'fast-json-patch';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      timeStamp: Date.now(),\n      patch: compare(oldState, newState),\n    };\n  }\n\n  apply(gameState: GameState, gsp: GameStatePatch): GameState {\n    return applyPatch(gameState, gsp.patch, undefined, false).newDocument;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:87\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { filter, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { PileState } from '../../model/pile.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { AreaState } from '../../model/area.model';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.pipe(filter((gsp) => gsp != undefined)).subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    const updatedState = this.gspService.apply(this.gameStateStore.gameState, gsp);\n    this.gameStateStore.setGameState(updatedState);\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        this.gameStateStore.gameState,\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\nusing the register method of the state element management service such as PileService or AreaService.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : deepClone(emptyGameState) as GameState\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:151\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:163\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:175\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PileState } from '../../model/pile.model';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { emptyGameState, GameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\nimport { AreaState } from '../../model/area.model';\nimport { GameElementState } from '../../model/game-element.model';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\n * using the register method of the state element management service such as PileService or AreaService.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState = deepClone(emptyGameState) as GameState;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      map((gameState) => {\n        return selector(gameState);\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = this._gameState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState {\n    return deepClone(this._gameState) as GameState;\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Piece.html":{"url":"interfaces/Piece.html","title":"interface - Piece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Piece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/piece.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { startCase } from 'lodash';\n\nexport interface Piece {\n  kind: string;\n  owner: string | null;\n  name: string;\n}\n\nexport type PieceFactory = (kind: string, owner?: string | null, name?: string | null) => Piece;\n\nexport function defaultPieceFactory(\n  kind: string,\n  owner: string | null = null,\n  name: string | null = null,\n): Piece {\n  return { kind: kind, owner: owner, name: name ? name : startCase(kind) };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                owner\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:20\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:56\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:82\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:39\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pull(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileState.html":{"url":"interfaces/PileState.html","title":"interface - PileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inventory\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inventory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inventory:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pull(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Player.html":{"url":"classes/Player.html","title":"class - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/player.model.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement } from './game-element.model';\n\nexport interface PlayerState {\n  id: string;\n  name: string;\n}\n\nexport class Player extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                    Readonly\n                                players\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player\n\n                    \n                \n                \n                    \n                        Default value : this.players[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Player({ id: 'test1', name: 'Test Player1' }),\n    new Player({ id: 'test2', name: 'Test Player2' }),\n    new Player({ id: 'test3', name: 'Test Player3' }),\n    new Player({ id: 'test4', name: 'Test Player4' }),\n    new Player({ id: 'test5', name: 'Test Player5' }),\n    new Player({ id: 'test6', name: 'Test Player6' }),\n  ] as const\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/player.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from '../model/player.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  readonly players: Player[] = [\n    new Player({ id: 'test1', name: 'Test Player1' }),\n    new Player({ id: 'test2', name: 'Test Player2' }),\n    new Player({ id: 'test3', name: 'Test Player3' }),\n    new Player({ id: 'test4', name: 'Test Player4' }),\n    new Player({ id: 'test5', name: 'Test Player5' }),\n    new Player({ id: 'test6', name: 'Test Player6' }),\n  ] as const;\n  readonly currentPlayer: Player = this.players[0];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerState.html":{"url":"interfaces/PlayerState.html","title":"interface - PlayerState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameElement } from './game-element.model';\n\nexport interface PlayerState {\n  id: string;\n  name: string;\n}\n\nexport class Player extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _action\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                removePiece\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    action\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kind: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kind\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                            Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n\n                \n                    \n                        getaction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): void {\n    if (this._piece) {\n      this._piece = null;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpaceState.html":{"url":"interfaces/SpaceState.html","title":"interface - SpaceState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpaceState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            piece\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        piece\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        piece:         Piece | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Piece | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): void {\n    if (this._piece) {\n      this._piece = null;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeciesPiece.html":{"url":"interfaces/SpeciesPiece.html","title":"interface - SpeciesPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeciesPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/species.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\nimport { AnimalKind } from '../constant/animal.constant';\n\nexport interface SpeciesPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            interface\n            AreaState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            interface\n            FactionState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            interface\n            GameElementState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state-patch.model.ts\n            \n            interface\n            GameStatePatch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            interface\n            GameState\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/piece.model.ts\n            \n            interface\n            Piece\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            interface\n            PileState\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            class\n            Player\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            interface\n            SpaceState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management.service.ts\n            \n            injectable\n            GameManagementService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/engine/service/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/util.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-pawn/action-pawn.component.ts\n            \n            component\n            ActionPawnComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/animal-card/animal-card.component.ts\n            \n            component\n            AnimalCardComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/game/component/element/element.component.ts\n            \n            component\n            ElementComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/constant/area.constant.ts\n            \n            variable\n            elementAreaIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/game-state.constant.ts\n            \n            variable\n            baseGameState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/image.constant.ts\n            \n            variable\n            imgPathByKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile.constant.ts\n            \n            variable\n            pileIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/action-pawn.model.ts\n            \n            interface\n            ActionPawnPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/element.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/species.model.ts\n            \n            interface\n            SpeciesPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/service/animal.service.ts\n            \n            injectable\n            AnimalService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            fast-json-patch : ^3.1.1\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalEnum   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../area.constant.ts)\n                        \n                        \n                            ElementEnum   (src/.../element.constant.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../piece.constant.ts)\n                        \n                        \n                            PileIdEnum   (src/.../pile.constant.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../area.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n\n    src/app/game/constant/area.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n    src/app/game/constant/element.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grass\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grub\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meat\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seed\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sun\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : water\n                            \n                        \n            \n        \n\n    src/app/game/constant/piece.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 SPECIES\n                            \n                        \n                        \n                            \n                                Value : species\n                            \n                        \n            \n        \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PileIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deepCompare   (src/.../util.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            getOrThrow   (src/.../util.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner, name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDominantSpecies\nThis project was generated with Angular CLI version 18.2.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Joe K.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalKind   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaId   (src/.../area.constant.ts)\n                        \n                        \n                            ElementKind   (src/.../element.constant.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/area.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/element.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            baseGameState   (src/.../game-state.constant.ts)\n                        \n                        \n                            elementAreaIdsByAnimal   (src/.../area.constant.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../element-config.constant.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            imgPathByKind   (src/.../image.constant.ts)\n                        \n                        \n                            pileIdsByAnimal   (src/.../pile.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideAnimationsAsync('noop'),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/game-state.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [\n    {\n      id: AreaIdEnum.ACTION_DISPLAY_ADAPTION,\n      space: [\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n      ],\n    },\n  ],\n  faction: [],\n  pile: [\n    {\n      id: PileIdEnum.ELEMENT,\n      owner: null,\n      inventory: {\n        // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n        grassElement: 18,\n        grubElement: 18,\n        meatElement: 18,\n        seedElement: 18,\n        sunElement: 18,\n        waterElement: 18,\n      },\n    },\n  ],\n}\n                    \n                \n\n            \n                \n                    GameState defining the static elements of the DS game\n\n                \n            \n\n        \n    \n\n    src/app/game/constant/area.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementAreaIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [AnimalEnum.AMPHIBIAN, AreaIdEnum.AMPHIBIAN_ELEMENT],\n  [AnimalEnum.ARACHNID, AreaIdEnum.ARACHNID_ELEMENT],\n  [AnimalEnum.BIRD, AreaIdEnum.BIRD_ELEMENT],\n  [AnimalEnum.INSECT, AreaIdEnum.INSECT_ELEMENT],\n  [AnimalEnum.MAMMAL, AreaIdEnum.MAMMAL_ELEMENT],\n  [AnimalEnum.REPTILE, AreaIdEnum.REPTILE_ELEMENT],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/element-config.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [],\n  faction: [],\n  pile: [],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/image.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imgPathByKind\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  // elements /\n  ['grass', 'dominant-species/element/noun-grass-7195612.svg'],\n  ['grub', 'dominant-species/element/noun-grub-3386143.svg'],\n  ['meat', 'dominant-species/element/noun-cow-skull-151117.svg'],\n  ['seed', 'dominant-species/element/noun-seed-6850047.svg'],\n  ['sun', 'dominant-species/element/noun-sun-7300296.svg'],\n  ['water', 'dominant-species/element/noun-water-water-1235535.svg'],\n  // animals /\n  ['amphibian', 'dominant-species/animal/noun-gecko-367390.svg'],\n  ['arachnid', 'dominant-species/animal/noun-spider-7144060.svg'],\n  ['bird', 'dominant-species/animal/noun-eagle-6606521.svg'],\n  ['insect', 'dominant-species/animal/noun-grasshopper-7049525.svg'],\n  ['mammal', 'dominant-species/animal/noun-monkey-2997582.svg'],\n  ['reptile', 'dominant-species/animal/noun-snake-4412103.svg'],\n  // others /\n  ['eyeball', 'dominant-species/other/noun-eye-2037742.svg'],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pileIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap>\n\n                    \n                \n                \n                    \n                        Default value : new Map\n>([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
