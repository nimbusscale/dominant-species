var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Action.html",[0,0.088,1,0.987]],["body/classes/Action.html",[0,0.115,1,1.602,2,2.522,3,0.171,4,0.171,5,0.152,6,3.758,7,0.078,8,0.591,9,6.187,10,3.014,11,4.366,12,0.716,13,6.483,14,2.202,15,2.317,16,0.817,17,5.205,18,5.325,19,4.451,20,0.608,21,5.205,22,0.573,23,0.014,24,0.402,25,0.217,26,0.573,27,5.205,28,5.205,29,0.547,30,0.747,31,4.089,32,5.205,33,0.245,34,0.965,35,3.758,36,0.645,37,3.758,38,2.124,39,5.115,40,0.888,41,0.8,42,4.532,43,4.532,44,0.8,45,4.532,46,0.011,47,0.011]],["title/interfaces/ActionContext.html",[11,2.138,34,0.744]],["body/interfaces/ActionContext.html",[0,0.122,1,1.362,3,0.182,4,0.182,5,0.162,6,3.997,7,0.083,8,0.614,9,4.82,10,2.872,11,4.23,13,4.82,15,1.806,16,0.695,18,4.903,19,4.098,23,0.014,25,0.222,30,0.711,33,0.25,34,1.026,35,5.493,36,0.729,37,5.493,38,2.206,39,5.314,40,0.923,41,0.851,42,4.82,43,4.82,44,0.851,45,4.82,46,0.011,47,0.011,48,2.264]],["title/injectables/ActionDisplayManagerService.html",[49,0.275,50,2.693]],["body/injectables/ActionDisplayManagerService.html",[0,0.096,1,1.075,3,0.144,4,0.144,5,0.128,7,0.066,8,0.528,11,3.866,12,0.64,16,0.548,19,3.909,20,0.622,22,0.64,23,0.014,24,0.449,25,0.212,26,0.64,29,0.687,30,0.784,33,0.144,40,0.892,41,0.671,46,0.009,47,0.009,49,0.398,50,3.902,51,1.075,52,5.585,53,5.585,54,2.616,55,3.803,56,6.536,57,4.677,58,4.718,59,4.198,60,4.382,61,6.067,62,3.803,63,4.692,64,5.814,65,4.567,66,5.474,67,4.368,68,4.368,69,4.368,70,4.718,71,4.368,72,1.984,73,1.117,74,1.001,75,4.198,76,2.21,77,1.001,78,4.567,79,4.368,80,0.321,81,0.503,82,1.652,83,3.431,84,3.803,85,2.217,86,2.951,87,1.652,88,1.038,89,2.932,90,4.368,91,2.932,92,1.075,93,1.038,94,2.116,95,4.368,96,4.368,97,3.803,98,3.803,99,4.368,100,4.368,101,3.803,102,2.45,103,3.803,104,2.747,105,3.803,106,3.803,107,3.803,108,3.803,109,3.803,110,5.814,111,4.368,112,4.368]],["title/interfaces/ActionDisplayService.html",[34,0.744,70,2.897]],["body/interfaces/ActionDisplayService.html",[3,0.191,4,0.191,5,0.17,7,0.088,8,0.633,11,3.977,19,3.911,23,0.014,25,0.218,30,0.732,33,0.191,34,1.079,46,0.011,47,0.011,48,2.38,57,5.193,59,5.586,60,4.866,66,4.571,70,5.033,72,2.349,80,0.308,88,1.383,91,3.906,113,4.571,114,5.067,115,3.749]],["title/injectables/ActionFunctionFactoryService.html",[49,0.275,116,2.897]],["body/injectables/ActionFunctionFactoryService.html",[0,0.104,3,0.155,4,0.155,5,0.138,7,0.071,11,4.273,12,0.673,16,0.593,18,4.995,20,0.554,22,0.747,23,0.014,24,0.524,25,0.198,26,0.747,29,0.643,33,0.155,35,3.41,37,3.41,38,1.996,41,1.104,44,1.104,46,0.01,47,0.01,49,0.419,51,1.162,52,5.186,77,0.813,80,0.337,81,0.544,91,3.17,92,1.162,93,1.122,94,2.288,115,3.48,116,4.419,117,3.711,118,6.121,119,6.121,120,4.113,121,4.519,122,4.723,123,6.121,124,3.477,125,4.723,126,6.121,127,4.723,128,1.99,129,3.41,130,2.517,131,3.41,132,3.711,133,2.836,134,2.971,135,6.121,136,2.966,137,4.113,138,4.723,139,1.54,140,4.723,141,4.723,142,4.723,143,4.723,144,4.113,145,0.908,146,4.113,147,4.113]],["title/components/ActionPawnComponent.html",[148,0.771,149,1.461]],["body/components/ActionPawnComponent.html",[0,0.091,1,1.907,3,0.136,4,0.136,5,0.121,7,0.062,14,1.899,20,0.557,23,0.014,24,0.55,25,0.121,33,0.136,36,0.578,38,1.353,44,1.049,46,0.009,47,0.009,54,1.403,73,0.797,74,0.714,80,0.302,81,0.477,82,1.569,89,2.784,128,1.216,136,3.085,145,1.224,148,1.224,149,2.485,150,2.124,151,1.631,152,1.631,153,1.631,154,4.484,155,4.785,156,3.611,157,1.631,158,2.493,159,2.493,160,2.771,161,2.875,162,2.408,163,1.97,164,1.646,165,1.97,166,5.616,167,1.97,168,5.616,169,3.769,170,3.572,171,4.597,172,3.231,173,3.394,174,4.148,175,4.148,176,4.148,177,2.994,178,4.148,179,2.994,180,4.148,181,1.841,182,3.328,183,2.458,184,2.608,185,2.994,186,2.105,187,1.922,188,1.455,189,4.148,190,4.148,191,4.412,192,2.994,193,1.631,194,2.208,195,1.631,196,2.682,197,1.631,198,1.631,199,1.51,200,2.208,201,1.51,202,2.208,203,1.51,204,1.51,205,1.631,206,1.51,207,1.455,208,0.769,209,2.803,210,1.51,211,1.51,212,1.259,213,2.208,214,1.51,215,1.305,216,1.455,217,1.51,218,1.631,219,1.51,220,1.51,221,1.631,222,1.51,223,1.631,224,1.455,225,1.455,226,1.51,227,1.569,228,1.455,229,1.97,230,1.832,231,1.455,232,1.455,233,1.455,234,1.631,235,1.631]],["title/interfaces/ActionPawnPiece.html",[34,0.744,172,2.037]],["body/interfaces/ActionPawnPiece.html",[3,0.199,4,0.199,5,0.177,7,0.091,8,0.648,23,0.013,25,0.177,33,0.199,34,1.123,46,0.012,47,0.012,48,2.477,80,0.316,113,4.758,170,4.398,172,3.623,236,5.274,237,2.92,238,3.678,239,5.66,240,4.758,241,1.296,242,1.439,243,1.39]],["title/components/ActionPawnSpaceComponent.html",[148,0.771,199,1.461]],["body/components/ActionPawnSpaceComponent.html",[0,0.082,1,1.909,3,0.123,4,0.123,5,0.109,7,0.056,8,0.474,12,0.575,20,0.581,23,0.014,24,0.404,29,0.549,30,0.634,33,0.123,46,0.009,47,0.009,54,1.264,73,1.005,74,0.9,77,0.644,80,0.304,81,0.43,82,1.414,89,2.509,124,3.176,128,1.096,130,1.992,136,3.329,139,1.219,145,1.159,148,1.159,149,2.378,150,1.978,151,1.47,152,1.47,153,1.47,154,4.597,155,2.509,157,1.47,158,2.321,159,2.321,160,2.738,161,2.841,162,3.093,163,1.835,164,1.767,165,1.835,167,1.835,169,3.509,172,2.654,181,1.66,182,2.216,183,2.216,188,1.835,193,1.47,194,2.056,195,1.47,196,2.567,197,1.47,198,1.47,199,2.378,200,2.056,201,1.362,202,2.056,203,1.362,204,1.362,205,1.47,206,1.362,207,1.312,208,0.693,209,2.702,210,1.362,211,1.362,212,1.135,213,2.056,214,1.362,215,1.176,216,1.312,217,1.362,218,1.47,219,1.362,220,2.378,221,1.47,222,1.362,223,1.47,224,1.312,225,1.312,226,1.362,227,1.414,228,1.312,229,1.835,230,1.705,231,1.312,232,1.312,233,1.312,234,1.47,235,1.47,244,6.364,245,5.742,246,2.937,247,2.786,248,3.383,249,4.553,250,4.553,251,5.25,252,3.663,253,5.686,254,2.937,255,5.229,256,3.739,257,3.739,258,4.108,259,3.256,260,4.108,261,3.256,262,1.733,263,2.937,264,3.739,265,2.937,266,3.256,267,2.216,268,3.739,269,3.739,270,3.256,271,2.533,272,3.256,273,3.256,274,1.812,275,3.256]],["title/injectables/ActionService.html",[49,0.275,276,2.897]],["body/injectables/ActionService.html",[0,0.113,1,1.261,3,0.168,4,0.168,5,0.15,7,0.077,11,4.299,12,0.709,16,0.643,19,3.617,20,0.604,22,0.776,23,0.014,24,0.544,25,0.206,26,0.776,29,0.741,30,0.818,33,0.168,38,2.301,39,5.065,40,0.962,46,0.01,47,0.01,49,0.442,50,5.228,51,1.261,53,3.699,54,1.733,59,4.655,60,4.656,65,5.065,80,0.312,81,0.59,91,3.439,92,1.261,93,1.218,94,2.483,276,4.655,277,4.462,278,5.124,279,5.124,280,6.448,281,5.124,282,5.124,283,5.124,284,4.462,285,5.124,286,5.124,287,5.124,288,4.462,289,5.124,290,5.124,291,5.124]],["title/components/AdaptionActionDisplayCardComponent.html",[148,0.771,201,1.461]],["body/components/AdaptionActionDisplayCardComponent.html",[0,0.08,1,1.999,3,0.119,4,0.119,5,0.106,7,0.102,8,0.463,12,0.562,16,0.454,20,0.525,22,0.398,23,0.014,24,0.457,25,0.106,26,0.398,29,0.38,30,0.38,33,0.119,46,0.008,47,0.008,54,2.716,62,3.148,63,4.43,73,0.982,74,0.879,80,0.332,81,0.416,82,2.844,83,2.84,85,1.835,86,1.835,88,0.859,94,1.752,124,1.54,128,1.06,130,1.927,145,1.138,148,1.138,149,1.317,150,1.932,151,1.421,152,1.421,153,1.421,154,4.268,157,1.421,158,2.267,159,2.267,160,2.727,161,2.829,162,2.24,163,1.792,164,1.497,165,1.792,167,1.792,181,1.605,188,1.792,193,1.421,194,2.008,195,1.421,196,2.529,197,1.421,198,1.421,199,2.343,200,2.008,201,2.343,202,2.008,203,1.317,204,1.317,205,1.421,206,1.317,207,1.269,208,0.67,209,2.668,210,1.317,211,1.317,212,1.098,213,2.008,214,1.317,215,1.138,216,1.269,217,1.317,218,1.421,219,2.343,220,2.343,221,1.421,222,1.317,223,1.421,224,1.269,225,1.269,226,1.317,227,1.368,228,1.269,229,1.792,230,1.666,231,1.269,232,1.269,233,1.269,234,1.421,235,1.421,245,4.012,247,2.721,248,3.322,252,3.61,262,3.145,292,5.086,293,5.331,294,2.84,295,4.447,296,3.155,297,4.447,298,4.447,299,5.909,300,4.555,301,5.107,302,3.616,303,3.616,304,1.927,305,3.687,306,4.447,307,3.616,308,3.148,309,2.84,310,2.274,311,3.616,312,3.616,313,3.616,314,3.616,315,3.616,316,3.616,317,3.212,318,4.046,319,5.107]],["title/injectables/AdaptionActionDisplayService.html",[49,0.275,63,2.524]],["body/injectables/AdaptionActionDisplayService.html",[0,0.06,1,1.968,3,0.09,4,0.09,5,0.08,7,0.085,8,0.378,11,3.533,12,0.458,16,0.523,19,3.158,20,0.633,22,0.666,23,0.014,24,0.467,25,0.2,26,0.666,29,0.718,30,0.735,33,0.09,36,0.378,38,0.892,40,1.004,41,0.774,44,0.774,46,0.007,47,0.007,49,0.285,51,0.673,52,5.631,57,3.381,58,3.637,59,3.005,60,3.54,63,2.618,65,3.27,66,4.758,73,1.345,74,1.205,75,3.005,76,0.925,77,1.229,78,3.27,80,0.336,81,0.315,85,2.113,86,2.113,88,0.65,89,1.837,91,1.837,92,0.673,93,0.65,102,1.535,115,1.326,116,4.787,124,2.981,130,1.458,131,1.976,132,2.15,133,3.073,134,1.721,136,2.441,139,1.358,144,2.383,145,0.968,146,2.383,172,3.365,173,2.499,183,1.622,187,1.268,215,0.861,238,2.017,241,0.585,242,0.65,243,0.628,267,2.986,271,1.326,274,1.326,292,5.631,299,5.554,300,4.281,310,1.721,320,2.383,321,5.038,322,2.413,323,5.038,324,4.163,325,3,326,4.163,327,3.624,328,5.63,329,6.056,330,2.737,331,3.781,332,4.45,333,4.163,334,4.163,335,3.553,336,2.737,337,2.737,338,2.737,339,2.737,340,4.163,341,2.737,342,4.163,343,2.737,344,2.737,345,2.737,346,2.737,347,4.163,348,2.737,349,4.163,350,2.737,351,2.737,352,2.737,353,4.163,354,2.737,355,4.163,356,2.737,357,2.737,358,1.622,359,1.622,360,1.458,361,2.383,362,1.721,363,2.383,364,1.837,365,3.168,366,1.721,367,1.165,368,1.721,369,2.383,370,1.721,371,3.168,372,2.737,373,1.976,374,1.976,375,2.383,376,2.737,377,3.624,378,2.737,379,2.737,380,1.721,381,2.737,382,2.383,383,2.737,384,4.163,385,4.163,386,3.624,387,2.383,388,2.737,389,4.163,390,1.837,391,2.737,392,2.737,393,2.737,394,2.737,395,2.737,396,2.737,397,2.15,398,2.737,399,3.624,400,2.737,401,2.383,402,1.837,403,2.737,404,2.737,405,4.386,406,1.976,407,2.737,408,2.737,409,4.163,410,2.383,411,4.163,412,2.737,413,4.163,414,2.737,415,2.737]],["title/classes/Animal.html",[0,0.088,128,1.176]],["body/classes/Animal.html",[0,0.113,1,0.893,2,1.758,3,0.119,4,0.119,5,0.106,7,0.055,8,0.465,10,3.061,14,1.732,15,1.935,16,0.643,20,0.623,22,0.399,23,0.014,24,0.497,25,0.198,26,0.399,30,0.538,31,2.851,33,0.195,34,0.673,36,0.465,40,1.091,41,0.99,44,1.157,46,0.008,47,0.008,76,1.732,77,1.214,80,0.344,88,0.862,124,2.526,128,1.501,130,1.934,133,3.268,136,2.875,139,1.67,145,0.984,172,1.842,177,2.62,183,2.151,187,1.682,212,1.801,267,3.82,274,1.758,300,2.436,310,2.282,317,3.22,322,2.244,362,2.282,365,2.282,366,2.282,367,1.545,368,2.282,371,2.282,390,2.436,402,2.436,406,2.62,416,2.62,417,4.653,418,4.865,419,2.8,420,4.653,421,2.986,422,4.022,423,4.053,424,5.12,425,2.851,426,4.296,427,3.629,428,3.629,429,3.629,430,3.629,431,3.629,432,3.629,433,3.629,434,3.629,435,3.629,436,3.629,437,3.629,438,2.282,439,2.332,440,2.436,441,3.956,442,2.436,443,2.436,444,2.282,445,2.851,446,1.934,447,3.697,448,2.851,449,2.851,450,2.851,451,2.851,452,2.851,453,2.851,454,2.851,455,2.851,456,2.851,457,2.851,458,2.851,459,4.022,460,2.851,461,2.851,462,2.851,463,2.851,464,2.851,465,2.851,466,2.851,467,2.851,468,2.851,469,2.851,470,2.851,471,2.851,472,2.851,473,2.851,474,2.851,475,2.851,476,2.851,477,2.851,478,4.022,479,2.851,480,4.022,481,2.851,482,4.022,483,2.851,484,2.851,485,2.851,486,2.851]],["title/components/AnimalCardComponent.html",[148,0.771,203,1.461]],["body/components/AnimalCardComponent.html",[0,0.065,1,1.613,3,0.097,4,0.097,5,0.086,7,0.094,8,0.398,12,0.483,16,0.551,20,0.61,22,0.323,23,0.014,24,0.406,25,0.086,26,0.323,29,0.552,30,0.552,33,0.097,38,0.958,40,0.953,44,0.451,46,0.007,47,0.007,54,0.993,73,1.259,74,1.128,80,0.342,81,0.338,82,1.111,85,1.491,86,2.229,87,1.111,88,0.698,89,1.972,102,1.648,120,2.558,121,3.884,128,1.991,129,2.121,133,1.361,134,1.847,145,1.2,148,1.011,149,2.125,150,1.661,151,1.155,152,1.155,153,1.155,155,1.972,157,1.155,158,1.949,159,1.949,160,2.651,161,2.75,162,1.111,163,1.541,164,1.541,165,1.541,167,1.541,169,2.947,172,2.961,181,1.304,182,1.741,183,1.741,187,1.361,188,1.541,193,1.155,194,1.726,195,1.155,196,2.294,197,1.155,198,1.155,199,1.07,200,1.726,201,1.07,202,1.726,203,2.125,204,1.07,205,1.155,206,1.07,207,1.031,208,0.544,209,2.455,210,1.07,211,1.07,212,1.597,213,1.726,214,1.07,215,0.924,216,1.031,217,2.125,218,1.155,219,1.07,220,1.07,221,1.155,222,1.07,223,1.155,224,1.031,225,1.031,226,1.07,227,1.111,228,1.031,229,1.541,230,1.432,231,1.031,232,1.031,233,1.031,234,1.155,235,1.155,247,2.34,248,2.95,252,3.273,254,2.308,262,2.894,263,2.308,265,2.308,294,2.308,295,3.823,296,2.802,297,3.823,298,3.823,304,1.565,310,1.847,318,3.669,358,1.741,367,1.251,419,2.479,421,2.894,438,1.847,487,6.578,488,5.934,489,5.259,490,5.259,491,5.259,492,5.259,493,5.259,494,6.245,495,5.259,496,6.245,497,6.245,498,5.835,499,5.835,500,3.81,501,2.937,502,4.391,503,2.937,504,2.937,505,2.937,506,6.245,507,4.391,508,2.937,509,5.835,510,2.937,511,4.391,512,4.391,513,2.937,514,2.937,515,2.937,516,2.937,517,1.847,518,2.558,519,2.308,520,2.558,521,2.937,522,2.937,523,2.308,524,2.558,525,2.121,526,1.972,527,2.308,528,2.937,529,2.558,530,2.937,531,2.937,532,2.937,533,2.937,534,2.937,535,2.937,536,4.391,537,2.937,538,2.937,539,2.937,540,2.937,541,2.937,542,2.937,543,2.937,544,2.937,545,2.937,546,2.937,547,2.937,548,4.391,549,4.391,550,4.391]],["title/interfaces/AnimalConfig.html",[34,0.744,423,2.524]],["body/interfaces/AnimalConfig.html",[0,0.118,1,0.949,3,0.127,4,0.127,5,0.113,7,0.058,8,0.485,10,2.602,15,1.258,16,0.484,23,0.014,24,0.298,25,0.203,30,0.561,33,0.201,34,0.715,36,0.485,40,1.025,41,1.017,44,1.172,46,0.009,47,0.009,48,1.577,76,1.807,77,1.238,80,0.348,88,0.916,124,2.61,128,1.13,130,2.055,133,3.332,136,1.868,139,1.742,145,1.027,172,1.957,183,2.285,187,1.787,212,1.171,267,3.922,274,1.868,300,2.588,310,2.425,317,3.36,322,2.628,362,2.425,365,2.425,366,2.425,367,1.642,368,2.425,371,2.425,390,2.588,402,2.588,406,2.784,416,2.784,417,5.017,418,4.441,419,2.921,420,5.017,421,2.475,422,3.029,423,3.855,426,4.119,438,2.425,439,2.898,440,2.588,441,4.377,442,2.588,443,2.588,444,2.425,445,3.029,446,2.055,447,5.017,448,3.029,449,3.029,450,3.029,451,3.029,452,3.029,453,3.029,454,3.029,455,3.029,456,3.029,457,3.029,458,3.029,459,4.197,460,3.029,461,3.029,462,3.029,463,3.029,464,3.029,465,3.029,466,3.029,467,3.029,468,3.029,469,3.029,470,3.029,471,3.029,472,3.029,473,3.029,474,3.029,475,3.029,476,3.029,477,3.029,478,4.197,479,3.029,480,4.197,481,3.029,482,4.197,483,3.029,484,3.029,485,3.029,486,3.029]],["title/classes/AnimalElements.html",[0,0.088,418,2.693]],["body/classes/AnimalElements.html",[0,0.112,1,0.89,2,1.752,3,0.119,4,0.119,5,0.106,7,0.054,8,0.463,10,2.529,12,0.562,14,1.727,15,1.179,16,0.641,20,0.604,22,0.651,23,0.014,24,0.497,25,0.173,26,0.651,29,0.537,30,0.676,33,0.195,34,0.67,36,0.463,40,1.04,41,0.989,44,1.156,46,0.008,47,0.008,73,0.982,74,0.879,76,2.003,77,1.247,80,0.344,88,0.859,124,2.521,128,1.06,130,1.927,133,3.532,136,1.752,139,1.666,145,1.237,172,1.835,183,2.143,187,1.675,212,1.098,267,3.813,274,1.752,300,2.427,310,2.274,317,3.212,322,2.567,327,4.447,362,2.274,365,2.274,366,2.274,367,1.54,368,2.274,371,2.274,390,2.427,402,2.427,406,2.61,416,2.61,417,3.687,418,4.555,419,2.567,420,3.687,421,2.982,422,2.84,423,3.212,426,4.022,438,2.274,439,2.328,440,2.427,441,4.276,442,2.427,443,2.427,444,2.274,445,2.84,446,1.927,447,4.275,448,4.651,449,4.012,450,2.84,451,2.84,452,4.651,453,2.84,454,2.84,455,2.84,456,2.84,457,2.84,458,4.012,459,4.012,460,2.84,461,2.84,462,4.012,463,2.84,464,2.84,465,2.84,466,2.84,467,2.84,468,2.84,469,2.84,470,4.651,471,2.84,472,2.84,473,4.651,474,2.84,475,2.84,476,2.84,477,2.84,478,4.012,479,2.84,480,4.012,481,2.84,482,4.012,483,2.84,484,2.84,485,2.84,486,2.84,551,5.107,552,3.616,553,5.107,554,3.616,555,3.616,556,3.616,557,3.616,558,3.616,559,3.616,560,3.616,561,3.616,562,3.616]],["title/injectables/AnimalProviderService.html",[49,0.275,121,2.378]],["body/injectables/AnimalProviderService.html",[0,0.078,3,0.117,4,0.117,5,0.104,7,0.054,8,0.459,10,2.309,12,0.556,15,1.916,16,0.634,20,0.612,22,0.703,23,0.014,24,0.493,25,0.197,26,0.703,29,0.672,30,0.672,33,0.117,36,0.533,40,1.11,41,1.108,44,0.777,46,0.008,47,0.008,49,0.346,51,0.877,73,1.229,74,1.101,76,1.987,77,1.29,80,0.336,81,0.41,85,2.565,86,2.565,87,1.912,88,0.847,92,0.877,93,0.847,102,1.999,121,2.996,128,2.113,186,1.809,187,1.651,331,3.789,358,3.482,359,2.112,360,3.13,363,3.103,380,2.241,417,2.573,419,2.787,420,2.573,423,4.534,425,2.799,438,2.241,441,1.999,442,2.392,443,2.392,447,2.573,563,6.617,564,3.103,565,5.874,566,5.115,567,5.874,568,6.392,569,5.055,570,5.055,571,6.392,572,3.563,573,4.273,574,4.534,575,5.055,576,5.055,577,5.055,578,3.563,579,5.055,580,3.563,581,3.563,582,3.393,583,3.563,584,3.563,585,5.055,586,3.563,587,2.867,588,3.563,589,2.392,590,3.103,591,2.392,592,2.112,593,2.241,594,2.799,595,3.563,596,3.563,597,3.563,598,3.563,599,3.563,600,3.103,601,3.563,602,2.573,603,3.563,604,3.563,605,3.563,606,3.103,607,3.563,608,5.055,609,3.563,610,5.874,611,3.563,612,3.563,613,3.563,614,3.563,615,3.563,616,4.401,617,3.563,618,3.563,619,5.055,620,3.563,621,3.563,622,3.563,623,3.563,624,3.563,625,3.563,626,3.563,627,3.563,628,3.563,629,3.563,630,3.563,631,3.563,632,2.573,633,3.563,634,3.563,635,3.563,636,3.563,637,3.563]],["title/components/AppComponent.html",[148,0.771,204,1.461]],["body/components/AppComponent.html",[0,0.102,1,1.657,3,0.153,4,0.153,5,0.136,7,0.07,8,0.549,20,0.379,23,0.014,24,0.467,25,0.136,33,0.153,36,0.421,46,0.01,47,0.01,54,1.57,73,0.892,74,0.799,80,0.298,81,0.534,82,1.756,93,1.438,128,1.36,145,1.294,148,1.294,149,1.69,150,2.289,151,1.825,152,1.825,153,1.825,157,1.825,160,2.804,161,2.909,162,1.756,163,2.123,164,1.774,165,2.123,167,2.123,188,2.123,193,1.825,194,2.379,195,1.825,196,2.805,197,1.825,198,1.825,199,1.69,200,2.379,201,1.69,202,2.379,203,1.69,204,2.599,205,1.825,206,1.69,207,1.629,208,0.86,209,2.91,210,1.69,211,2.452,212,2.045,213,2.379,214,2.599,215,1.461,216,2.363,217,1.69,218,1.825,219,1.69,220,1.69,221,1.825,222,1.69,223,1.825,224,1.629,225,1.629,226,1.69,227,1.756,228,1.629,229,2.123,230,1.974,231,1.629,232,1.629,233,1.629,234,1.825,235,1.825,638,4.042,639,6.734,640,6.052,641,6.052,642,5.863,643,4.642,644,2.919,645,4.642,646,3.351,647,4.042]],["title/classes/Area.html",[0,0.088,322,1.518]],["body/classes/Area.html",[0,0.075,1,0.834,2,1.641,3,0.111,4,0.111,5,0.099,7,0.086,8,0.442,10,2.71,12,0.536,15,1.105,16,0.425,20,0.633,22,0.628,23,0.014,24,0.441,25,0.219,26,0.628,29,0.695,30,0.695,33,0.111,36,0.518,38,2.038,40,1.01,41,0.521,44,0.521,46,0.008,47,0.008,60,3.929,72,1.897,76,2.113,77,1.14,80,0.276,88,0.805,124,3.304,139,1.59,208,0.628,237,1.994,238,2.362,241,0.725,242,0.805,243,1.794,267,2.008,271,1.641,318,3.066,322,2.908,325,3.329,371,4.879,374,2.446,386,2.95,405,4.245,446,1.805,587,1.386,648,2.95,649,1.281,650,3.83,651,4.876,652,3.83,653,4.627,654,2.362,655,1.776,656,4.245,657,4.876,658,3.066,659,4.245,660,2.973,661,5.712,662,5.58,663,3.673,664,3.52,665,3.272,666,4.876,667,4.443,668,4.124,669,3.272,670,4.468,671,4.876,672,3.388,673,3.388,674,3.388,675,2.008,676,3.527,677,2.662,678,2.662,679,2.662,680,3.388,681,3.388,682,4.876,683,3.388,684,2.899,685,2.95,686,3.066,687,2.95,688,1.901,689,2.662,690,3.388,691,2.662,692,5.712,693,3.388,694,3.388,695,3.388,696,3.388,697,3.388,698,3.388,699,3.388,700,4.876,701,3.388,702,3.388,703,3.388,704,4.876,705,3.388,706,2.662,707,2.274,708,2.95,709,2.95,710,2.95,711,3.83,712,3.388,713,3.388,714,3.388,715,2.131,716,3.388,717,2.95,718,4.876,719,3.388,720,2.446,721,3.066,722,2.662,723,2.131,724,4.876,725,2.662,726,2.274,727,2.95,728,4.973,729,1.901,730,2.446,731,2.131,732,2.95,733,2.95,734,2.662,735,4.876,736,2.662,737,3.388,738,3.388,739,3.388,740,3.388,741,3.388]],["title/injectables/AreaRegistryService.html",[49,0.275,331,2.378]],["body/injectables/AreaRegistryService.html",[0,0.099,3,0.147,4,0.147,5,0.131,7,0.067,8,0.536,12,0.65,15,2.294,16,0.562,20,0.625,22,0.728,23,0.014,24,0.51,25,0.219,26,0.728,29,0.621,30,0.47,33,0.147,36,0.536,40,1.025,46,0.01,47,0.01,49,0.405,51,1.101,72,1.358,73,1.352,74,1.211,77,1.139,80,0.323,81,0.515,87,2.234,92,1.101,93,1.063,145,0.86,208,0.829,237,2.416,241,0.957,242,1.063,243,1.356,322,2.234,331,3.501,359,3.501,360,2.384,370,2.813,421,2.737,582,3.003,587,2.877,649,2.234,654,2.167,655,1.629,660,3.133,670,2.813,676,4.003,721,2.813,742,2.073,743,2.813,744,4.663,745,3.314,746,4.265,747,3.946,748,3.524,749,4.474,750,5.078,751,3.895,752,5.907,753,3.514,754,2.384,755,3.148,756,2.384,757,4.103,758,2.27,759,2.167,760,3.003,761,3.895,762,3.501,763,3.92,764,2.651,765,2.51,766,2.651,767,2.651,768,2.651,769,3.23,770,3.514,771,2.384,772,3.23,773,3.514,774,3.23,775,3.514,776,3.514,777,3.23,778,3.514,779,3.514,780,2.073,781,2.813,782,4.474]],["title/injectables/AreaStateService.html",[49,0.275,750,2.897]],["body/injectables/AreaStateService.html",[0,0.093,3,0.138,4,0.138,5,0.123,7,0.063,8,0.514,12,0.623,14,1.916,15,2.237,20,0.626,22,0.755,23,0.014,24,0.529,25,0.215,26,0.755,29,0.752,30,0.721,33,0.138,36,0.514,40,1.046,44,0.646,46,0.009,47,0.009,49,0.388,51,1.034,72,1.275,73,1.089,74,0.975,77,0.975,80,0.303,81,0.483,87,2.142,92,1.034,93,0.998,145,0.807,208,1.188,237,2.316,241,0.898,242,0.998,243,1.73,322,2.709,325,3.415,359,3.357,587,2.316,649,2.142,654,2.035,655,1.53,660,3.136,663,4.018,670,4.314,676,4.018,723,2.642,731,2.642,742,1.987,745,3.178,747,3.178,748,3.415,750,4.089,754,2.238,755,3.018,756,2.238,757,3.595,758,2.132,759,2.035,762,3.357,763,3.798,764,3.357,765,3.178,766,2.49,767,2.49,768,2.49,771,4.184,779,3.3,780,1.947,783,2.642,784,4.089,785,4.089,786,4.089,787,4.627,788,5.664,789,3.3,790,4.089,791,3.3,792,3.033,793,3.3,794,3.3,795,3.033,796,3.033,797,4.604,798,3.033,799,2.49,800,3.562,801,2.819,802,3.033,803,3.3,804,2.035,805,3.033,806,3.033,807,3.3,808,3.3,809,3.033,810,3.3,811,4.201,812,4.201,813,4.201]],["title/injectables/AuthService.html",[49,0.275,814,2.037]],["body/injectables/AuthService.html",[0,0.085,3,0.127,4,0.127,5,0.113,7,0.058,8,0.486,10,2.831,12,0.59,14,1.813,16,0.673,20,0.631,22,0.73,23,0.014,24,0.512,25,0.21,26,0.73,29,0.731,30,0.563,33,0.127,36,0.67,40,1.065,41,0.945,44,1.134,46,0.009,47,0.009,49,0.367,51,0.954,72,1.866,76,2.079,77,0.923,80,0.333,81,0.446,88,0.921,92,0.954,93,0.921,104,3.866,139,1.264,164,1.136,173,2.38,225,1.881,227,2.509,274,1.878,367,1.651,725,3.045,814,2.721,815,3.375,816,5.352,817,6.147,818,5.361,819,6.147,820,3.12,821,5.361,822,5.021,823,6.147,824,3.375,825,4.833,826,5.33,827,5.361,828,5.361,829,5.775,830,3.876,831,6.147,832,3.876,833,4.668,834,3.931,835,3.876,836,2.38,837,2.721,838,3.876,839,5.361,840,3.876,841,3.876,842,3.876,843,3.876,844,3.876,845,3.876,846,3.871,847,2.601,848,3.876,849,3.045,850,3.045,851,3.045,852,3.045,853,3.876,854,2.174,855,3.375,856,3.876,857,3.876,858,3.876,859,3.876,860,3.876,861,3.876,862,3.045,863,3.876,864,3.876,865,3.375,866,3.876,867,3.375,868,3.876,869,3.375,870,3.876,871,2.065,872,3.876,873,3.876,874,3.876,875,3.876,876,3.876,877,3.876,878,2.438,879,5.361,880,3.876,881,3.876,882,3.876,883,3.876,884,3.876,885,3.375,886,3.876,887,3.876]],["title/injectables/CognitoClientService.html",[49,0.275,825,2.693]],["body/injectables/CognitoClientService.html",[0,0.085,3,0.126,4,0.126,5,0.112,7,0.058,12,0.587,16,0.483,20,0.567,22,0.764,23,0.014,24,0.554,25,0.203,26,0.764,29,0.694,30,0.56,33,0.126,36,0.749,38,1.739,41,1.132,44,1.154,46,0.009,47,0.009,49,0.365,51,0.946,74,0.662,77,1.054,80,0.307,81,0.443,92,0.946,93,0.914,94,1.863,164,1.563,182,3.628,225,1.871,229,1.349,230,1.254,241,0.823,820,3.87,825,3.579,829,3.349,833,4.643,834,4.575,836,3.385,837,3.646,846,2.777,849,3.021,850,3.021,851,3.021,852,3.021,862,3.021,871,3.262,878,3.354,888,6.255,889,2.777,890,4.643,891,5.332,892,4.643,893,3.846,894,5.756,895,3.349,896,5.332,897,4.643,898,4.772,899,3.846,900,5.332,901,3.846,902,3.846,903,6.121,904,3.846,905,4.643,906,5.012,907,3.846,908,3.846,909,3.846,910,5.332,911,3.846,912,3.349,913,3.349,914,3.846,915,3.349,916,3.846,917,3.846,918,3.846,919,6.121,920,6.121,921,3.846,922,6.121,923,3.846,924,5.33,925,6.61,926,6.121,927,3.846,928,5.33,929,5.332,930,5.332,931,3.846,932,3.846,933,3.846,934,3.846,935,3.846,936,3.579,937,3.846,938,3.846]],["title/components/CreateGamePageComponent.html",[148,0.771,206,1.461]],["body/components/CreateGamePageComponent.html",[0,0.039,1,0.93,3,0.058,4,0.058,5,0.052,7,0.079,8,0.267,10,1.486,12,0.324,16,0.37,20,0.607,22,0.614,23,0.014,24,0.468,25,0.204,26,0.614,29,0.703,30,0.587,33,0.058,36,0.679,38,1.593,40,0.928,41,1.008,44,0.858,46,0.005,47,0.005,54,0.6,73,1.073,74,0.962,77,0.841,80,0.319,81,0.204,82,0.671,85,0.901,88,0.422,104,3.934,128,0.52,145,0.727,148,0.727,149,0.646,150,1.115,151,0.698,152,0.698,153,0.698,157,0.698,160,2.417,161,2.507,162,0.671,163,1.034,164,1.432,165,1.034,167,1.034,173,1.309,182,2.895,188,1.034,193,0.698,194,1.159,195,0.698,196,1.731,197,0.698,198,0.698,199,0.646,200,1.159,201,0.646,202,1.159,203,0.646,204,0.646,205,0.698,206,1.603,207,2.128,208,1.511,209,1.92,210,0.646,211,0.646,212,0.539,213,1.159,214,0.646,215,0.558,216,0.623,217,0.646,218,0.698,219,0.646,220,0.646,221,0.698,222,0.646,223,0.698,224,0.623,225,0.623,226,0.646,227,0.671,228,0.623,229,1.034,230,0.961,231,0.623,232,0.623,233,1.327,234,0.698,235,0.698,241,0.38,247,1.571,248,2.121,252,2.47,296,2.015,304,0.946,335,3.33,367,0.756,500,3.133,525,1.281,526,1.191,527,1.394,587,2.284,602,3.179,715,1.854,726,4.564,820,3.627,836,1.678,837,3.33,854,0.996,871,2.808,878,4.206,924,3.292,928,3.292,936,3.279,939,6.511,940,6.511,941,0.901,942,3.292,943,3.781,944,3.781,945,3.781,946,3.781,947,3.781,948,3.781,949,2.015,950,3.781,951,3.781,952,3.781,953,2.241,954,3.292,955,3.781,956,3.292,957,2.97,958,1.571,959,1.571,960,3.781,961,3.781,962,3.781,963,3.781,964,3.781,965,3.781,966,3.292,967,3.781,968,4.403,969,2.567,970,2.948,971,3.179,972,2.948,973,4.403,974,4.403,975,2.948,976,4.403,977,3.834,978,2.948,979,2.948,980,4.403,981,1.775,982,2.609,983,1.832,984,1.875,985,3.781,986,4.403,987,3.512,988,2.948,989,2.948,990,2.948,991,1.775,992,3.834,993,2.948,994,1.775,995,1.775,996,2.948,997,1.775,998,1.775,999,1.775,1000,2.948,1001,1.775,1002,1.775,1003,1.545,1004,1.775,1005,2.948,1006,1.775,1007,2.948,1008,1.775,1009,1.775,1010,1.775,1011,1.775,1012,1.775,1013,1.775,1014,2.316,1015,1.775,1016,4.403,1017,1.775,1018,2.73,1019,1.775,1020,3.781,1021,2.73,1022,2.948,1023,1.775,1024,2.316,1025,1.281,1026,1.394,1027,1.775,1028,1.775,1029,1.775,1030,0.996,1031,1.775,1032,0.946,1033,1.775,1034,1.775,1035,1.545,1036,1.545,1037,1.394,1038,1.775,1039,1.775,1040,0.946,1041,1.775,1042,1.775,1043,1.775,1044,1.116,1045,1.775,1046,1.775,1047,1.775,1048,1.775,1049,1.775,1050,1.775,1051,3.781,1052,1.775,1053,1.545,1054,1.545,1055,3.781,1056,2.948,1057,5.27,1058,2.948,1059,3.781,1060,4.588,1061,1.775,1062,3.781,1063,3.781,1064,2.948,1065,2.316,1066,2.948,1067,1.775,1068,1.775,1069,1.775,1070,1.775,1071,2.948,1072,4.403,1073,1.775,1074,3.781,1075,1.775,1076,2.948,1077,1.775,1078,1.545,1079,1.775,1080,2.948,1081,2.948,1082,4.403,1083,1.775,1084,1.052,1085,1.775,1086,1.775,1087,1.775,1088,1.775,1089,1.116,1090,1.116,1091,1.775,1092,1.775,1093,2.948,1094,1.775,1095,2.948,1096,1.775,1097,1.775,1098,1.775,1099,1.775,1100,1.775,1101,1.775,1102,4.885,1103,1.775,1104,2.948,1105,2.948,1106,2.948,1107,1.775,1108,1.775,1109,2.948,1110,2.948,1111,2.567,1112,1.775,1113,1.545,1114,1.775,1115,1.281,1116,1.775,1117,1.545,1118,2.948,1119,2.948,1120,2.567]],["title/components/DominantSpeciesGameComponent.html",[148,0.771,210,1.461]],["body/components/DominantSpeciesGameComponent.html",[0,0.078,1,1.442,3,0.117,4,0.117,5,0.104,7,0.053,8,0.457,12,0.554,16,0.632,20,0.55,22,0.554,23,0.014,24,0.492,25,0.147,26,0.554,29,0.616,30,0.708,33,0.117,36,0.532,40,0.982,41,0.545,46,0.008,47,0.008,54,1.199,73,0.682,74,0.611,80,0.325,81,0.408,82,1.341,85,1.8,86,2.557,88,0.843,102,1.989,128,1.039,145,1.126,148,1.126,149,1.291,150,1.905,151,1.394,152,1.394,153,1.394,157,1.394,160,2.72,161,2.822,162,1.341,163,1.767,164,1.476,165,1.767,167,1.767,188,1.767,193,1.394,194,1.98,195,1.394,196,2.508,197,1.394,198,1.394,199,1.291,200,1.98,201,1.291,202,1.98,203,1.291,204,1.291,205,1.394,206,1.291,207,1.244,208,1.086,209,2.649,210,2.323,211,2.622,212,2.452,213,1.98,214,2.323,215,1.585,216,2.056,217,1.291,218,1.394,219,1.291,220,1.291,221,1.394,222,1.291,223,1.394,224,1.244,225,1.244,226,1.291,227,1.341,228,1.244,229,1.767,230,1.643,231,1.244,232,1.244,233,1.244,234,1.394,235,1.394,247,2.684,248,3.287,252,3.578,260,3.957,262,1.643,358,2.102,377,3.088,380,2.23,644,2.23,646,2.56,647,3.088,820,2.973,837,2.557,871,1.89,942,5.101,977,5.554,983,2.839,984,2.716,987,4.528,1024,2.786,1026,2.786,1115,2.56,1121,6.095,1122,6.095,1123,2.786,1124,5.859,1125,4.386,1126,4.386,1127,6.737,1128,4.386,1129,3.546,1130,6.379,1131,5.198,1132,5.038,1133,5.038,1134,4.386,1135,3.546,1136,2.839,1137,3.088,1138,3.546,1139,3.546,1140,3.546,1141,3.546,1142,3.546,1143,3.546,1144,3.546,1145,3.546,1146,3.546,1147,3.546,1148,3.546,1149,3.546]],["title/components/DrawPoolGameComponent.html",[148,0.771,214,1.461]],["body/components/DrawPoolGameComponent.html",[0,0.059,1,1.805,3,0.089,4,0.089,5,0.079,7,0.041,8,0.374,12,0.454,16,0.517,20,0.569,22,0.297,23,0.014,24,0.386,25,0.176,26,0.297,29,0.588,30,0.694,33,0.089,35,1.95,36,0.374,37,1.95,38,1.344,40,0.901,41,0.925,46,0.007,47,0.007,54,1.69,63,4.152,73,1.075,74,1.093,80,0.349,81,0.311,82,1.022,83,2.122,85,1.371,86,2.092,88,0.642,102,1.516,121,3.912,128,1.465,129,1.95,131,1.95,132,2.122,136,2.422,137,2.352,145,1.075,147,2.352,148,0.961,149,2.037,150,1.559,151,1.062,152,1.062,153,1.062,155,1.813,157,1.062,160,2.617,161,2.715,162,1.022,163,1.446,164,1.208,165,1.446,167,1.446,173,3.021,187,1.252,188,1.446,193,1.062,194,1.621,195,1.062,196,2.198,197,1.062,198,1.062,199,0.984,200,1.621,201,2.037,202,1.621,203,2.037,204,0.984,205,1.062,206,0.984,207,0.948,208,0.926,209,2.367,210,0.984,211,0.984,212,0.82,213,1.621,214,2.037,215,2.077,216,2.818,217,2.037,218,1.062,219,2.037,220,2.037,221,1.062,222,0.984,223,1.062,224,0.948,225,0.948,226,0.984,227,1.022,228,0.948,229,1.446,230,1.344,231,0.948,232,0.948,233,0.948,234,1.062,235,1.062,247,2.196,248,2.804,252,3.137,263,2.122,276,4.766,292,2.976,293,2.122,305,1.95,306,2.352,308,2.352,318,2.592,322,1.89,331,3.912,358,3.314,359,1.601,360,2.196,362,1.699,364,1.813,366,1.699,367,1.15,380,1.699,382,2.352,410,2.352,419,2.574,438,1.699,488,2.122,500,3.703,523,2.122,524,2.352,526,1.813,573,3.314,592,1.601,606,2.352,632,2.976,646,5.137,780,1.252,804,2.709,949,2.663,957,3.926,1032,1.44,1037,2.122,1123,2.122,1125,3.589,1126,3.589,1137,2.352,1150,6.195,1151,4.998,1152,4.998,1153,6.022,1154,4.998,1155,5.592,1156,5.592,1157,5.592,1158,2.352,1159,4.998,1160,4.122,1161,3.589,1162,2.702,1163,2.702,1164,2.702,1165,2.702,1166,2.702,1167,2.702,1168,1.309,1169,4.122,1170,2.702,1171,2.122,1172,2.702,1173,2.702,1174,2.702,1175,2.702,1176,2.702,1177,2.702,1178,2.122,1179,2.702,1180,2.702,1181,2.702,1182,2.702,1183,2.702,1184,2.702,1185,2.702,1186,4.122,1187,4.122,1188,2.702,1189,2.702,1190,2.702,1191,4.122,1192,2.702,1193,2.702,1194,2.702,1195,2.702,1196,3.238,1197,4.869,1198,3.589,1199,4.122]],["title/components/ElementComponent.html",[148,0.771,217,1.461]],["body/components/ElementComponent.html",[0,0.094,1,1.588,3,0.14,4,0.14,5,0.124,7,0.064,14,1.934,20,0.563,23,0.014,24,0.555,25,0.124,33,0.14,36,0.586,44,1.06,46,0.009,47,0.009,54,1.441,73,0.819,74,0.734,80,0.305,81,0.49,82,1.612,128,1.249,133,2.991,134,2.68,145,1.478,148,1.241,149,1.552,150,2.163,151,1.675,152,1.675,153,1.675,157,1.675,158,2.539,159,2.539,160,2.779,161,2.883,162,1.612,163,2.006,164,1.676,165,2.006,167,2.006,169,3.838,171,4.66,173,3.415,177,3.076,179,3.076,181,1.892,182,3.389,184,2.68,185,3.076,186,2.163,187,1.975,188,1.495,192,3.076,193,1.675,194,2.248,195,1.675,196,2.712,197,1.675,198,1.675,199,1.552,200,2.248,201,1.552,202,2.248,203,1.552,204,1.552,205,1.675,206,1.552,207,1.495,208,0.79,209,2.829,210,1.552,211,1.552,212,1.294,213,2.248,214,1.552,215,1.341,216,1.495,217,2.512,218,1.675,219,1.552,220,1.552,221,1.675,222,1.552,223,1.675,224,1.495,225,1.495,226,1.552,227,1.612,228,1.495,229,2.006,230,1.865,231,1.495,232,1.495,233,1.495,234,1.675,235,1.675,684,3.276,1200,3.71,1201,5.719,1202,5.719,1203,4.261,1204,4.261,1205,4.261,1206,4.261,1207,4.261,1208,4.261,1209,4.261,1210,4.979]],["title/interfaces/ElementConfig.html",[34,0.744,441,2.251]],["body/interfaces/ElementConfig.html",[3,0.168,4,0.168,5,0.149,7,0.077,8,0.583,23,0.014,25,0.206,33,0.211,34,0.945,41,0.988,46,0.01,47,0.01,48,2.085,77,0.878,80,0.311,87,1.928,335,3.572,364,3.421,441,3.605,591,3.421,684,4.121,1211,4.004,1212,4.004,1213,5.975,1214,7.07,1215,5.335,1216,4.004,1217,5.098,1218,5.098,1219,3.421,1220,4.439,1221,4.004,1222,4.004,1223,4.439,1224,4.439,1225,4.439,1226,4.004,1227,4.439,1228,5.985,1229,4.439,1230,4.004,1231,4.439,1232,4.439,1233,4.004,1234,4.439,1235,4.439,1236,4.004,1237,4.439,1238,4.439,1239,4.004,1240,4.439,1241,4.439]],["title/injectables/ElementDrawPoolService.html",[49,0.275,332,2.693]],["body/injectables/ElementDrawPoolService.html",[0,0.087,3,0.13,4,0.13,5,0.115,7,0.059,8,0.493,12,0.598,14,1.838,16,0.496,20,0.633,22,0.683,23,0.014,24,0.479,25,0.212,26,0.683,29,0.653,30,0.703,33,0.13,38,1.289,40,1.086,44,1.028,46,0.009,47,0.009,49,0.372,51,0.973,57,4.981,58,4.484,72,2.031,73,1.348,74,1.207,75,3.924,76,2.101,77,1.07,80,0.328,81,0.455,85,2.007,86,2.759,88,0.94,92,0.973,93,0.94,94,1.916,102,2.218,133,3.357,134,2.486,139,1.289,164,1.159,173,2.969,215,2.466,238,2.633,241,0.846,242,0.94,243,0.907,325,3.564,332,3.648,335,2.759,358,2.343,360,2.107,373,2.854,374,2.854,380,2.486,439,2.629,440,2.654,574,4.206,593,2.486,878,3.418,1021,4.484,1044,3.418,1242,6.825,1243,3.443,1244,6.211,1245,4.27,1246,4.27,1247,5.408,1248,3.954,1249,5.435,1250,5.435,1251,3.954,1252,5.435,1253,3.954,1254,3.106,1255,4.27,1256,3.954,1257,3.954,1258,3.954,1259,5.435,1260,3.954,1261,3.954,1262,3.954,1263,3.106,1264,3.954,1265,3.106,1266,3.954,1267,3.954,1268,3.954,1269,3.954,1270,6.688,1271,3.954,1272,3.954,1273,3.954,1274,3.954,1275,3.954,1276,3.954,1277,3.954,1278,3.954]],["title/interfaces/ElementPiece.html",[34,0.744,133,1.86]],["body/interfaces/ElementPiece.html",[3,0.197,4,0.197,5,0.175,7,0.09,8,0.645,23,0.013,25,0.175,33,0.197,34,1.114,38,1.959,46,0.012,47,0.012,48,2.457,80,0.314,133,3.293,170,4.387,237,2.906,238,3.666,241,1.285,242,1.428,243,1.379,684,3.968,1215,5.645,1279,5.231,1280,6.008]],["title/components/ElementSpaceComponent.html",[148,0.771,219,1.461]],["body/components/ElementSpaceComponent.html",[0,0.083,1,1.61,3,0.123,4,0.123,5,0.11,7,0.056,8,0.476,12,0.577,14,1.773,20,0.597,23,0.014,24,0.405,29,0.551,30,0.635,33,0.123,36,0.341,44,0.577,46,0.009,47,0.009,54,1.269,73,1.008,74,0.903,77,0.646,80,0.315,81,0.432,82,1.42,124,3.179,128,1.1,130,2,133,2.429,134,2.36,139,1.224,145,1.527,148,1.161,149,1.367,150,1.983,151,1.475,152,1.475,153,1.475,154,4.694,157,1.475,158,2.327,159,2.327,160,2.74,161,2.842,162,1.42,163,1.839,164,1.771,165,1.839,167,1.839,169,3.519,171,4.362,179,2.71,181,1.666,182,2.224,184,2.36,185,2.71,186,1.905,187,1.739,188,1.839,192,2.71,193,1.475,194,2.061,195,1.475,196,2.571,197,1.475,198,1.475,199,1.367,200,2.061,201,1.367,202,2.061,203,1.367,204,1.367,205,1.475,206,1.367,207,1.317,208,0.696,209,2.705,210,1.367,211,1.367,212,1.14,213,2.061,214,1.367,215,1.181,216,1.317,217,2.382,218,1.475,219,2.382,220,1.367,221,1.475,222,1.367,223,1.475,224,1.317,225,1.317,226,1.367,227,1.42,228,1.317,229,1.839,230,1.71,231,1.317,232,1.317,233,1.317,234,1.475,235,1.475,246,2.948,247,2.794,248,3.39,249,4.565,250,4.565,251,5.261,252,3.669,253,5.695,254,2.948,258,4.119,259,4.565,260,4.119,261,3.268,262,1.739,265,2.948,266,3.268,267,2.224,270,3.268,271,2.54,272,3.268,273,3.268,274,1.818,275,3.268,305,5.389,317,2.36,523,2.948,1171,5.864,1281,3.753,1282,3.753,1283,3.753,1284,3.753,1285,3.753,1286,3.753]],["title/components/EyeballComponent.html",[148,0.771,220,1.461]],["body/components/EyeballComponent.html",[0,0.103,1,1.662,3,0.154,4,0.154,5,0.136,7,0.07,14,2.055,20,0.381,23,0.014,24,0.469,33,0.154,36,0.424,44,0.718,46,0.01,47,0.01,54,1.58,80,0.299,81,0.538,82,1.767,128,1.369,145,1.298,148,1.298,149,1.701,150,2.299,151,1.836,152,1.836,153,1.836,154,3.822,157,1.836,158,2.698,159,2.698,160,2.806,161,2.911,162,1.767,163,2.132,164,1.781,165,2.132,167,2.132,171,4.876,179,3.372,181,2.074,184,2.938,185,3.372,186,2.371,187,2.165,188,1.639,192,3.372,193,1.836,194,2.389,195,1.836,196,2.812,197,1.836,198,1.836,199,1.701,200,2.389,201,1.701,202,2.389,203,1.701,204,1.701,205,1.836,206,1.701,207,1.639,208,0.866,209,2.915,210,1.701,211,1.701,212,1.418,213,2.389,214,1.701,215,1.47,216,1.639,217,1.701,218,1.836,219,1.701,220,2.605,221,1.836,222,1.701,223,1.836,224,1.639,225,1.639,226,1.701,227,1.767,228,1.639,229,2.132,230,1.982,231,1.639,232,1.639,233,1.639,234,1.836,235,1.836,1287,4.067,1288,5.881,1289,6.077,1290,6.077,1291,4.671]],["title/classes/Faction.html",[0,0.088,419,1.518]],["body/classes/Faction.html",[0,0.098,2,2.161,3,0.147,4,0.147,5,0.13,7,0.067,8,0.535,12,0.649,14,1.994,20,0.653,22,0.773,23,0.014,24,0.591,25,0.224,26,0.773,29,0.768,30,0.816,33,0.147,36,0.535,44,1.015,46,0.01,47,0.01,72,1.354,76,1.508,80,0.261,177,3.22,208,0.827,237,2.411,241,0.954,242,1.06,243,1.677,335,4.029,419,2.23,446,2.377,587,1.824,660,3.178,663,3.999,664,4.256,665,3.957,667,3.957,668,4.768,675,3.914,676,3.893,677,3.504,678,3.504,679,3.504,686,2.805,688,2.502,689,3.504,720,3.22,729,2.502,730,3.22,1084,2.643,1292,3.883,1293,5.895,1294,5.895,1295,5.895,1296,4.768,1297,5.75,1298,5.895,1299,4.46,1300,7.506,1301,5.895,1302,4.46,1303,5.895,1304,4.46,1305,4.46,1306,3.883,1307,3.504,1308,3.883,1309,2.161,1310,4.46,1311,4.46,1312,4.46,1313,4.46,1314,4.46,1315,2.805,1316,4.46,1317,4.46,1318,7.026,1319,5.188]],["title/interfaces/FactionAssignment.html",[34,0.744,1320,2.897]],["body/interfaces/FactionAssignment.html",[0,0.112,3,0.168,4,0.168,5,0.149,7,0.077,8,0.584,23,0.014,25,0.188,30,0.536,33,0.211,34,0.946,36,0.706,40,0.878,41,0.785,46,0.01,47,0.01,48,2.088,49,0.441,72,1.953,76,2.176,77,0.879,80,0.344,81,0.588,88,1.213,92,1.257,93,1.213,145,0.981,208,0.946,237,2.088,241,1.092,242,1.213,243,1.172,360,2.721,419,2.797,421,2.981,573,3.026,592,3.026,632,3.687,707,3.427,742,1.792,743,3.211,744,3.813,760,3.427,780,2.366,781,3.211,1178,4.011,1296,5.503,1315,3.211,1320,5.503,1321,6.637,1322,3.687,1323,4.318,1324,4.446,1325,4.446,1326,4.446,1327,4.446,1328,4.446,1329,4.011,1330,4.011,1331,4.446,1332,4.446,1333,4.446,1334,4.446]],["title/injectables/FactionRegistryService.html",[49,0.275,573,2.378]],["body/injectables/FactionRegistryService.html",[0,0.089,3,0.132,4,0.132,5,0.117,7,0.061,8,0.499,12,0.605,15,2.198,16,0.505,20,0.636,22,0.69,23,0.014,24,0.484,25,0.222,26,0.69,29,0.578,30,0.578,33,0.181,34,0.746,36,0.611,40,1.081,41,0.618,46,0.009,47,0.009,49,0.377,51,0.99,72,2.046,73,1.433,74,1.284,76,2.12,77,1.215,80,0.322,81,0.463,87,2.081,88,0.956,92,0.99,93,0.956,145,0.773,208,0.746,237,2.25,241,0.861,242,0.956,243,0.923,360,2.144,419,2.871,421,2.905,573,3.26,582,2.701,587,2.563,592,4.181,632,2.905,649,1.522,660,2.563,676,3.881,707,2.701,742,2.475,743,2.53,744,4.564,745,3.086,746,3.971,747,3.78,748,2.931,753,3.161,754,2.144,755,2.144,756,2.144,757,2.257,758,2.042,759,1.949,760,3.692,773,3.161,774,2.905,775,3.161,776,3.161,777,2.905,778,3.161,780,1.864,781,2.53,1178,3.161,1296,3.971,1315,2.53,1320,5.559,1321,4.79,1322,2.905,1323,4.522,1324,5.458,1325,4.79,1326,4.79,1327,4.79,1328,3.503,1329,3.161,1330,3.161,1331,3.503,1332,3.503,1333,3.503,1334,3.503,1335,4.024,1336,4.024,1337,4.024,1338,4.024,1339,4.024,1340,4.024]],["title/injectables/FactionStateService.html",[49,0.275,1323,2.693]],["body/injectables/FactionStateService.html",[0,0.093,3,0.138,4,0.138,5,0.123,7,0.063,8,0.514,12,0.623,14,1.916,15,2.237,20,0.626,22,0.755,23,0.014,24,0.529,25,0.215,26,0.755,29,0.752,30,0.721,33,0.138,36,0.514,40,1.046,44,0.646,46,0.009,47,0.009,49,0.388,51,1.034,72,1.275,73,1.089,74,0.975,77,0.975,80,0.303,81,0.483,87,2.142,92,1.034,93,0.998,145,0.807,208,1.188,237,2.316,241,0.898,242,0.998,243,1.73,325,3.415,419,2.709,587,2.316,592,3.357,649,2.142,654,2.035,655,1.53,660,3.136,663,4.018,676,4.018,723,2.642,731,2.642,742,1.987,745,3.178,747,3.178,748,3.415,754,2.238,755,3.018,756,2.238,757,3.595,758,2.132,759,2.035,762,3.357,763,3.798,764,3.357,765,3.178,766,2.49,767,2.49,768,2.49,771,4.184,780,1.947,783,2.642,784,4.089,785,4.089,786,4.089,787,4.627,789,3.3,790,4.089,791,3.3,792,3.033,793,3.3,794,3.3,795,3.033,796,3.033,797,4.604,798,3.033,799,2.49,800,3.562,801,2.819,802,3.033,803,3.3,804,2.035,805,3.033,806,3.033,807,3.3,808,3.3,809,3.033,810,3.3,1315,4.314,1322,3.033,1323,3.802,1341,5.664,1342,4.201,1343,4.201,1344,4.201]],["title/classes/GameElement.html",[0,0.088,660,1.641]],["body/classes/GameElement.html",[0,0.099,2,2.177,3,0.148,4,0.148,5,0.131,7,0.068,8,0.538,12,0.652,14,2.004,15,2.298,16,0.564,20,0.635,22,0.652,23,0.014,24,0.457,25,0.214,26,0.652,29,0.622,30,0.696,31,3.53,33,0.148,36,0.408,44,0.91,46,0.01,47,0.01,72,2.013,76,2.242,77,1.02,80,0.293,88,1.068,139,1.466,241,0.961,242,1.068,243,1.861,587,2.423,660,2.423,663,4.196,664,4.785,665,4.449,667,3.977,668,5.087,669,3.977,675,4.712,686,3.726,688,3.719,706,3.53,708,3.913,709,3.913,711,3.53,720,4.278,729,3.324,730,4.278,799,2.663,1084,3.512,1306,5.159,1307,4.654,1308,5.159,1309,2.871,1345,4.953,1346,3.913,1347,5.925,1348,4.494,1349,4.494,1350,4.494,1351,4.494,1352,4.494,1353,3.913,1354,4.494,1355,2.826,1356,2.663,1357,2.663,1358,2.663,1359,5.925,1360,4.494,1361,4.494,1362,4.494,1363,3.913,1364,4.494,1365,4.494,1366,2.826,1367,4.494,1368,4.494,1369,3.913]],["title/injectables/GameElementRegistryService.html",[49,0.275,744,2.378]],["body/injectables/GameElementRegistryService.html",[0,0.121,3,0.104,4,0.104,5,0.093,7,0.048,8,0.422,12,0.666,15,2.521,16,0.398,20,0.568,22,0.605,23,0.014,24,0.424,25,0.208,26,0.605,29,0.578,30,0.488,33,0.104,36,0.499,40,0.994,41,0.487,44,0.487,46,0.008,47,0.008,49,0.318,51,0.78,72,1.67,73,1.164,74,1.043,76,1.072,77,1.199,80,0.298,81,0.365,87,2.29,88,0.753,92,0.78,93,0.753,139,1.034,145,1.423,186,1.609,208,0.588,237,1.297,241,0.678,242,0.753,243,1.39,318,2.922,370,2.922,421,3.122,446,1.689,582,3.118,587,3.028,649,2.08,654,2.251,655,1.692,659,4.045,660,3.332,663,2.476,721,2.922,742,2.505,743,1.994,744,2.754,745,3.085,746,3.97,747,3.779,748,3.227,754,2.476,755,3.999,756,3.227,757,4.086,758,2.358,759,2.664,760,3.118,762,3.589,763,4.388,764,3.589,765,2.606,766,2.754,767,2.754,768,2.754,769,3.354,770,4.757,771,3.709,772,4.654,774,3.354,777,3.354,780,1.469,781,1.994,797,3.118,799,2.754,800,2.922,804,2.251,854,1.779,1084,2.754,1089,2.922,1329,2.49,1330,2.49,1366,2.922,1370,5.608,1371,4.789,1372,4.045,1373,4.045,1374,4.045,1375,4.646,1376,3.65,1377,4.646,1378,4.646,1379,4.646,1380,4.646,1381,4.045,1382,3.65,1383,5.064,1384,4.646,1385,4.646,1386,4.045,1387,3.17,1388,6.447,1389,4.646,1390,4.646,1391,3.17,1392,3.17,1393,3.17,1394,3.17,1395,3.17,1396,2.289,1397,4.789,1398,2.76,1399,4.045,1400,4.045,1401,1.994,1402,3.65,1403,2.76,1404,2.49,1405,3.17,1406,2.76,1407,2.76,1408,2.76,1409,3.17,1410,2.76,1411,3.17,1412,3.17]],["title/injectables/GameElementStateService.html",[49,0.275,771,2.138]],["body/injectables/GameElementStateService.html",[0,0.106,3,0.084,4,0.084,5,0.074,7,0.038,8,0.357,12,0.596,14,1.332,15,2.36,16,0.32,20,0.559,22,0.645,23,0.014,24,0.452,25,0.208,26,0.645,29,0.679,30,0.702,33,0.084,36,0.437,40,0.987,41,0.391,44,0.391,46,0.006,47,0.006,49,0.27,51,0.626,72,2.081,73,0.757,74,0.678,77,1.113,80,0.274,81,0.293,87,2.05,88,0.605,92,0.626,93,0.605,139,0.83,145,1.425,186,1.292,208,1.359,241,0.545,242,0.605,243,1.866,325,2.888,374,1.838,446,1.357,587,2.217,602,2.843,649,2.217,654,1.908,655,1.434,660,3.362,663,3.444,723,3.409,731,3.409,742,2.457,745,2.702,747,2.702,748,3.303,754,2.099,755,3.444,756,2.099,757,3.928,758,1.999,759,2.334,762,3.674,763,4.476,764,3.674,765,3.746,766,2.334,767,2.334,768,2.334,769,3.914,771,2.099,772,2.843,780,1.18,781,1.601,783,1.601,784,2.843,785,2.843,786,2.843,787,3.477,790,2.843,792,2.843,795,2.843,796,3.914,797,5.301,798,1.838,799,4.225,800,4.404,801,4.16,802,2.843,804,3.592,805,2.843,806,2.843,809,1.838,854,1.428,1084,2.334,1089,2.477,1158,2.217,1161,3.429,1168,1.233,1366,3.409,1370,5.501,1371,6.097,1372,3.429,1373,3.429,1374,3.429,1381,5.814,1382,3.094,1383,4.869,1386,3.429,1396,1.838,1397,3.429,1398,2.217,1399,3.429,1400,3.429,1402,3.094,1403,2.217,1404,2,1406,2.217,1407,2.217,1408,2.217,1410,2.217,1413,3.938,1414,5.421,1415,3.938,1416,3.938,1417,4.72,1418,6.198,1419,3.429,1420,3.938,1421,2.546,1422,2.546,1423,2.546,1424,3.938,1425,2.546,1426,2.546,1427,2.546,1428,2.546,1429,2.546,1430,3.938,1431,3.938,1432,2.546,1433,2.546,1434,2.546,1435,2.546,1436,2.546,1437,2.546,1438,2.546,1439,2.546,1440,2.546,1441,2.546,1442,2.546,1443,2.546,1444,2.546]],["title/classes/GameElementStatesFactoryService.html",[0,0.088,1445,2.693]],["body/classes/GameElementStatesFactoryService.html",[0,0.08,2,1.765,3,0.12,4,0.12,5,0.106,7,0.077,8,0.466,10,2.337,12,0.565,15,1.188,16,0.746,20,0.605,22,0.565,23,0.014,24,0.459,25,0.188,26,0.565,29,0.715,30,0.678,33,0.12,36,0.658,40,1.063,41,1.085,44,0.914,46,0.008,47,0.008,49,0.25,77,1.112,80,0.352,117,2.861,124,1.551,130,1.941,139,1.674,145,1.484,186,1.849,187,1.688,240,2.861,241,0.779,242,0.866,243,1.178,247,2.735,271,2.487,274,1.765,322,2.442,325,1.941,362,2.291,365,2.291,366,2.291,371,3.739,399,4.47,401,3.171,402,2.445,425,2.861,439,2.675,440,2.445,441,2.043,442,2.445,443,2.445,517,2.291,518,3.171,519,2.861,520,3.171,589,2.445,590,3.171,591,2.445,602,2.63,616,3.171,662,4.033,670,3.229,720,2.63,722,2.861,992,3.171,1089,4.737,1090,2.291,1198,3.171,1219,2.445,1247,3.171,1296,2.63,1297,3.171,1355,2.291,1356,2.159,1357,2.159,1358,2.159,1445,3.446,1446,5.917,1447,4.292,1448,5.945,1449,5.124,1450,3.446,1451,6.455,1452,6.455,1453,6.455,1454,5.134,1455,5.134,1456,3.642,1457,4.47,1458,3.642,1459,2.735,1460,3.642,1461,3.642,1462,3.642,1463,5.134,1464,3.642,1465,3.043,1466,3.642,1467,3.642,1468,3.171,1469,2.63,1470,3.642,1471,2.861,1472,2.861,1473,2.861,1474,2.861,1475,3.642,1476,3.642,1477,3.642,1478,2.445,1479,5.134,1480,3.171,1481,3.642,1482,3.642,1483,3.642,1484,3.642,1485,3.642,1486,3.642,1487,5.134,1488,3.642,1489,3.642,1490,3.642,1491,3.642,1492,3.171,1493,3.642,1494,3.642,1495,3.642,1496,3.642,1497,5.945,1498,3.642,1499,3.642,1500,3.642,1501,3.642,1502,3.642,1503,3.642]],["title/injectables/GameManagementClientService.html",[49,0.275,1504,2.693]],["body/injectables/GameManagementClientService.html",[0,0.079,3,0.118,4,0.118,5,0.105,7,0.054,12,0.56,16,0.639,20,0.621,22,0.813,23,0.014,24,0.57,25,0.216,26,0.813,29,0.789,33,0.118,36,0.705,40,0.694,41,0.782,44,1.041,46,0.008,47,0.008,49,0.349,51,0.885,80,0.32,81,0.414,88,0.855,92,0.885,93,0.855,164,1.055,208,1.304,241,1.263,242,1.209,243,0.826,288,3.133,726,4.547,742,2.702,814,3.669,820,4.192,836,3.007,837,4.09,871,4.002,889,2.598,971,3.674,1025,2.598,1120,3.133,1136,2.466,1309,3.407,1504,3.416,1505,6.706,1506,5.56,1507,3.998,1508,4.432,1509,5.59,1510,5.09,1511,5.59,1512,5.09,1513,5.09,1514,5.09,1515,3.598,1516,6.42,1517,3.598,1518,5.09,1519,3.998,1520,3.598,1521,5.09,1522,3.598,1523,4.432,1524,3.598,1525,3.598,1526,5.09,1527,3.598,1528,3.598,1529,5.09,1530,3.598,1531,5.09,1532,3.598,1533,5.09,1534,3.598,1535,3.598,1536,2.598,1537,5.09,1538,5.905,1539,4.432,1540,3.598,1541,3.598,1542,5.09,1543,3.133,1544,3.598,1545,3.598,1546,3.598,1547,3.598,1548,3.598,1549,3.598,1550,3.598,1551,3.598,1552,3.598,1553,3.598]],["title/injectables/GameReadyService.html",[49,0.275,1131,2.897]],["body/injectables/GameReadyService.html",[0,0.087,1,0.97,3,0.13,4,0.13,5,0.115,7,0.059,8,0.492,12,0.597,16,0.681,20,0.605,22,0.434,23,0.014,24,0.304,25,0.195,26,0.434,29,0.652,30,0.57,33,0.13,40,1.118,41,1.077,44,0.834,46,0.009,47,0.009,49,0.372,50,4.978,51,0.97,53,2.847,54,1.334,57,4.484,58,4.478,61,5.817,72,2.252,73,1.192,74,1.068,75,3.917,76,2.098,77,1.15,78,5.248,80,0.328,81,0.454,84,3.433,85,2.001,86,2.753,87,1.491,88,0.937,92,0.97,93,0.937,97,3.433,98,3.433,101,3.433,102,2.212,103,3.433,104,2.48,105,3.433,106,3.433,107,3.433,108,3.433,109,3.433,121,4.396,128,1.156,129,2.847,145,0.758,215,1.241,284,3.433,332,4.978,358,3.215,361,3.433,375,3.433,500,4.161,526,2.647,780,1.827,804,3.507,966,5.401,1018,4.478,1053,3.433,1054,3.433,1131,3.917,1168,1.91,1446,5.935,1554,3.433,1555,6.681,1556,6.681,1557,3.943,1558,5.425,1559,3.943,1560,3.943,1561,3.943,1562,3.943,1563,3.943,1564,3.433,1565,3.943,1566,3.943,1567,4.262,1568,3.943,1569,3.943,1570,3.943,1571,3.943,1572,3.943,1573,3.943,1574,3.943,1575,3.943,1576,3.943,1577,3.943,1578,3.943,1579,3.943,1580,3.943,1581,3.943,1582,3.943]],["title/injectables/GameService.html",[49,0.275,987,2.524]],["body/injectables/GameService.html",[0,0.078,3,0.117,4,0.117,5,0.104,7,0.054,12,0.556,15,1.162,16,0.634,20,0.588,22,0.743,23,0.014,24,0.521,25,0.197,26,0.743,29,0.737,30,0.531,33,0.117,36,0.704,40,1.005,41,0.982,44,0.548,46,0.008,47,0.008,49,0.346,51,0.877,80,0.351,81,0.41,92,0.877,93,0.847,208,1.408,241,0.762,242,0.847,243,0.818,322,1.348,331,4.273,359,2.112,360,3.13,419,1.348,439,1.401,573,4.273,574,4.534,592,2.112,593,2.241,649,1.348,742,2.585,779,2.799,780,1.651,804,3.493,814,3.659,820,4.025,837,3.857,847,2.392,871,3.736,971,3.649,983,2.449,984,2.722,987,4.02,1113,4.401,1128,4.401,1134,4.401,1136,3.569,1168,2.449,1309,1.726,1322,2.573,1459,3.406,1474,2.799,1478,4.839,1504,4.839,1506,2.573,1507,3.971,1509,5.566,1519,3.971,1536,2.573,1543,4.401,1583,3.103,1584,3.971,1585,5.055,1586,6.392,1587,4.401,1588,3.563,1589,3.563,1590,3.563,1591,3.563,1592,5.055,1593,3.563,1594,3.563,1595,3.563,1596,4.401,1597,3.563,1598,5.055,1599,3.103,1600,3.563,1601,2.573,1602,3.103,1603,2.799,1604,3.563,1605,3.563,1606,3.103,1607,3.563,1608,3.563,1609,2.799,1610,3.563,1611,3.563,1612,3.563,1613,3.563,1614,3.563,1615,3.563,1616,3.563,1617,3.563,1618,3.563,1619,3.563,1620,3.563,1621,3.563,1622,3.563,1623,3.563,1624,3.563,1625,3.563,1626,3.563]],["title/injectables/GameStateClientService.html",[49,0.275,1627,2.897]],["body/injectables/GameStateClientService.html",[0,0.091,3,0.136,4,0.136,5,0.12,7,0.062,8,0.508,12,0.616,16,0.518,20,0.623,22,0.699,23,0.014,24,0.49,25,0.208,26,0.699,29,0.667,30,0.748,33,0.136,36,0.576,40,1.056,41,0.634,46,0.009,47,0.009,49,0.383,51,1.015,73,1.308,74,1.172,77,1.093,80,0.338,81,0.475,86,2.093,88,0.98,92,1.015,93,0.98,94,1.998,139,1.345,173,3.39,241,0.882,242,0.98,243,1.796,367,1.756,729,3.819,742,2.716,814,3.724,822,2.594,854,2.314,889,2.978,895,4.871,912,3.591,913,3.591,1018,4.584,1111,3.591,1136,1.998,1168,3.75,1536,2.978,1627,4.039,1628,6.349,1629,7.338,1630,6.349,1631,6.349,1632,6.808,1633,5.595,1634,3.24,1635,5.595,1636,4.124,1637,4.124,1638,5.595,1639,5.348,1640,4.124,1641,5.595,1642,5.528,1643,4.124,1644,4.124,1645,4.124,1646,4.124,1647,4.124,1648,5.595,1649,4.124,1650,4.124,1651,5.595,1652,4.124,1653,4.124,1654,4.124,1655,3.591,1656,4.124,1657,4.124,1658,4.124,1659,4.124,1660,4.124,1661,4.124,1662,4.124,1663,4.124,1664,4.124,1665,3.591]],["title/injectables/GameStateInitializationService.html",[49,0.275,1478,2.693]],["body/injectables/GameStateInitializationService.html",[0,0.096,3,0.143,4,0.143,5,0.127,7,0.065,8,0.525,10,2.562,12,0.637,16,0.727,20,0.532,22,0.637,23,0.014,24,0.447,25,0.19,26,0.765,29,0.456,33,0.143,36,0.71,38,2.125,40,0.889,41,1.068,44,0.667,46,0.009,47,0.009,49,0.397,51,1.069,77,1.122,80,0.32,81,0.5,87,2.817,92,1.069,93,1.032,115,2.806,139,1.416,145,0.835,207,2.032,208,1.381,241,0.929,242,1.032,243,1.709,271,2.104,369,3.781,421,2.684,642,5.043,649,1.642,658,3.642,722,4.55,742,2.439,1089,2.731,1090,3.642,1117,5.043,1136,3.157,1168,3.368,1309,3.684,1383,5.461,1396,3.135,1445,3.887,1449,3.887,1450,4.374,1459,3.704,1471,3.411,1474,3.411,1478,4.666,1584,4.55,1601,4.705,1602,3.781,1609,3.411,1666,3.411,1667,5.674,1668,5.792,1669,4.55,1670,6.517,1671,4.342,1672,5.792,1673,6.517,1674,5.792,1675,4.342,1676,4.342,1677,2.914,1678,3.135,1679,4.342,1680,4.55,1681,4.342,1682,4.342,1683,3.781,1684,6.517,1685,4.342,1686,4.342,1687,4.342,1688,4.342,1689,4.342]],["title/injectables/GameStatePatchService.html",[49,0.275,1690,2.897]],["body/injectables/GameStatePatchService.html",[0,0.11,3,0.164,4,0.164,5,0.146,7,0.075,12,0.699,20,0.518,22,0.699,23,0.014,24,0.49,25,0.185,26,0.699,29,0.667,33,0.164,41,0.769,44,0.976,46,0.01,47,0.01,49,0.435,51,1.231,80,0.308,81,0.576,92,1.231,93,1.189,173,2.221,207,2.228,241,1.07,242,1.189,243,1.684,649,1.892,688,4.25,729,3.914,742,2.448,878,3.146,1044,3.146,1136,2.424,1168,3.38,1309,3.985,1355,3.146,1356,2.965,1357,2.965,1358,3.764,1639,6.081,1690,4.585,1691,4.356,1692,6.351,1693,6.351,1694,6.351,1695,6.351,1696,6.351,1697,5.003,1698,6.351,1699,6.351,1700,5.003,1701,6.351,1702,5.003,1703,5.003,1704,3.612,1705,5.003,1706,5.003,1707,6.351,1708,5.003,1709,5.003,1710,5.003,1711,5.003,1712,5.003,1713,5.003]],["title/injectables/GameStateService.html",[49,0.275,804,1.944]],["body/injectables/GameStateService.html",[0,0.068,3,0.101,4,0.101,5,0.09,7,0.046,12,0.5,14,1.536,16,0.57,20,0.644,22,0.795,23,0.014,24,0.558,25,0.211,26,0.795,29,0.801,30,0.853,33,0.101,34,0.842,36,0.279,40,0.909,41,0.473,44,0.917,46,0.007,47,0.007,49,0.311,51,0.757,72,1.812,77,0.782,80,0.305,81,0.354,88,0.731,92,0.757,93,0.731,139,1.946,173,1.365,208,1.001,241,0.658,242,0.731,243,1.624,274,1.49,322,2.043,367,1.309,397,3.569,419,2.043,439,2.124,649,1.163,652,3.569,670,4.335,688,3.738,723,2.857,729,3.031,742,2.782,783,1.934,804,2.891,847,2.064,854,1.725,936,3.049,1168,3.842,1309,3.34,1315,4.335,1376,3.569,1419,3.955,1459,2.879,1465,4.086,1627,4.308,1639,4.688,1690,4.308,1714,4.543,1715,4.543,1716,4.543,1717,4.543,1718,4.543,1719,4.543,1720,5.196,1721,5.967,1722,3.955,1723,3.955,1724,3.955,1725,3.955,1726,5.967,1727,5.196,1728,3.955,1729,3.955,1730,3.955,1731,5.196,1732,3.075,1733,4.308,1734,5.402,1735,5.402,1736,3.075,1737,4.543,1738,4.543,1739,3.075,1740,3.075,1741,3.075,1742,3.955,1743,3.075,1744,3.955,1745,3.075,1746,3.955,1747,3.075,1748,3.955,1749,3.075,1750,3.075,1751,5.543,1752,4.704,1753,4.543,1754,4.543,1755,3.075,1756,3.955,1757,3.075,1758,3.955,1759,3.075,1760,3.955,1761,3.075,1762,3.075,1763,2.677,1764,3.075,1765,2.677,1766,3.075,1767,2.677,1768,3.075,1769,2.677,1770,3.075,1771,3.075,1772,3.075,1773,3.075,1774,3.075,1775,3.075,1776,3.075,1777,3.075,1778,3.075,1779,3.075,1780,3.075,1781,5.402,1782,2.677,1783,3.075,1784,3.075,1785,3.075,1786,3.075,1787,3.075,1788,3.075,1789,2.677,1790,3.075,1791,3.075,1792,3.075,1793,3.075,1794,3.075,1795,3.075,1796,3.075,1797,3.075,1798,3.075,1799,3.075]],["title/injectables/GameStateStoreService.html",[49,0.275,1733,2.897]],["body/injectables/GameStateStoreService.html",[0,0.04,3,0.06,4,0.06,5,0.053,7,0.074,8,0.273,12,0.492,14,1.017,16,0.483,20,0.616,22,0.741,23,0.014,24,0.51,25,0.205,26,0.727,29,0.729,30,0.801,33,0.06,36,0.165,38,1.925,40,1.018,41,0.687,44,1.016,46,0.005,47,0.005,49,0.206,51,0.447,72,1.915,73,0.349,74,0.662,76,1.3,77,1.224,80,0.236,81,0.209,88,0.432,92,0.447,93,0.432,115,0.881,139,1.925,145,0.578,160,0.615,173,2.505,241,0.389,242,0.432,243,1.795,274,1.457,322,1.454,367,0.774,380,1.891,397,3.02,419,1.454,421,0.842,439,2.218,587,1.572,600,2.618,649,1.454,653,2.999,654,2.398,655,1.627,658,4.235,670,3.549,675,2.279,684,2.267,688,3.894,715,1.891,721,4.235,725,2.362,727,2.618,728,2.618,729,1.687,730,2.17,731,3.112,734,2.362,736,2.362,742,2.662,748,3.007,755,2.381,765,2.991,799,3.345,854,1.02,1044,3.112,1078,2.618,1084,2.648,1168,3.677,1196,2.362,1197,2.618,1228,2.362,1307,2.362,1309,3.949,1315,3.549,1355,1.143,1356,1.077,1357,1.077,1358,1.077,1366,2.81,1369,2.618,1376,2.362,1396,1.312,1401,3.712,1404,2.362,1417,1.582,1449,2.58,1459,2.049,1465,3.345,1471,1.428,1584,2.362,1665,1.582,1677,2.018,1720,4.642,1722,2.618,1723,2.618,1724,2.618,1725,2.618,1727,4.642,1728,2.618,1729,2.618,1730,3.89,1731,4.642,1733,4.261,1742,2.618,1744,2.618,1746,2.618,1748,2.618,1751,5.755,1752,3.89,1756,2.618,1758,2.618,1760,2.618,1763,1.582,1765,1.582,1767,1.582,1769,1.582,1782,1.582,1789,3.89,1800,1.582,1801,3.006,1802,3.006,1803,3.006,1804,2.618,1805,3.006,1806,3.006,1807,3.006,1808,3.006,1809,4.468,1810,4.642,1811,3.006,1812,3.006,1813,4.719,1814,3.006,1815,3.006,1816,3.006,1817,2.362,1818,3.006,1819,5.902,1820,4.468,1821,3.006,1822,3.006,1823,3.006,1824,4.468,1825,3.225,1826,3.89,1827,3.006,1828,2.362,1829,3.006,1830,3.348,1831,4.468,1832,3.006,1833,4.468,1834,2.618,1835,3.845,1836,3.845,1837,3.845,1838,3.006,1839,3.006,1840,3.845,1841,3.845,1842,3.845,1843,3.006,1844,3.006,1845,1.817,1846,1.817,1847,3.006,1848,1.817,1849,1.817,1850,1.817,1851,1.817,1852,1.817,1853,1.817,1854,6.468,1855,1.817,1856,7.249,1857,3.006,1858,4.468,1859,1.817,1860,1.817,1861,1.817,1862,3.006,1863,1.817,1864,1.817,1865,1.817,1866,1.817,1867,3.006,1868,3.006,1869,1.817,1870,1.817,1871,1.817,1872,1.817,1873,1.817,1874,1.817,1875,1.817,1876,1.817,1877,1.817,1878,1.817,1879,1.817,1880,1.817,1881,1.817,1882,1.817,1883,4.468,1884,1.817,1885,1.817,1886,1.817,1887,1.817,1888,1.817,1889,1.817,1890,3.006,1891,6.12,1892,3.006,1893,1.817,1894,3.006,1895,3.006,1896,3.006,1897,3.006,1898,1.817,1899,3.006,1900,3.006,1901,1.817,1902,1.817,1903,1.817,1904,1.817,1905,3.006,1906,1.817,1907,1.817,1908,1.817,1909,1.817,1910,1.817,1911,1.817,1912,1.817,1913,1.582,1914,1.817,1915,1.817,1916,1.817,1917,1.817,1918,1.817,1919,3.845,1920,1.817,1921,1.817,1922,1.817,1923,1.817,1924,1.817,1925,1.817,1926,1.817,1927,1.817,1928,1.817]],["title/interfaces/InitialGameElementStatesFactory.html",[34,0.744,1447,2.897]],["body/interfaces/InitialGameElementStatesFactory.html",[3,0.17,4,0.17,5,0.151,7,0.078,12,0.714,20,0.423,22,0.57,23,0.014,24,0.4,25,0.19,26,0.57,29,0.544,33,0.252,34,0.96,36,0.694,41,0.997,44,0.796,46,0.011,47,0.011,48,2.117,77,0.892,80,0.287,115,2.509,208,1.203,241,1.108,242,1.23,243,1.489,271,2.509,322,1.958,325,2.759,335,2.628,419,1.958,439,2.036,715,3.256,885,4.508,1136,3.601,1309,3.434,1345,4.081,1355,3.256,1356,3.069,1357,3.069,1358,3.069,1401,3.256,1447,5.118,1449,5.137,1450,4.356,1457,5.651,1459,4.078,1469,4.685,1480,4.508,1667,4.508,1677,3.475,1678,3.738,1704,5.365,1929,3.475,1930,5.178,1931,5.178,1932,5.178,1933,5.178,1934,4.068,1935,4.508,1936,5.651]],["title/components/LobbyPageComponent.html",[148,0.771,222,1.461]],["body/components/LobbyPageComponent.html",[0,0.066,1,1.307,3,0.098,4,0.098,5,0.087,7,0.08,8,0.404,10,2.088,12,0.489,15,1.45,16,0.558,20,0.585,22,0.647,23,0.014,24,0.509,25,0.184,26,0.647,29,0.661,30,0.314,33,0.098,36,0.662,40,0.725,44,0.459,46,0.007,47,0.007,54,1.01,73,1.021,74,0.915,80,0.327,81,0.344,82,1.13,128,0.876,145,1.021,148,1.021,149,1.088,150,1.682,151,1.175,152,1.175,153,1.175,157,1.175,160,2.658,161,2.757,162,1.13,163,1.56,164,1.303,165,1.56,167,1.56,188,1.56,193,1.175,194,1.748,195,1.175,196,2.313,197,1.175,198,1.175,199,1.088,200,1.748,201,1.088,202,1.748,203,1.088,204,1.088,205,1.175,206,1.088,207,1.048,208,1.222,209,2.473,210,1.088,211,1.088,212,0.907,213,1.748,214,1.088,215,0.94,216,1.048,217,1.088,218,1.175,219,1.088,220,1.088,221,1.175,222,2.143,223,2.685,224,1.048,225,1.864,226,1.088,227,1.13,228,1.048,229,1.56,230,1.45,231,1.048,232,1.048,233,1.864,234,1.175,235,1.175,241,0.951,242,0.71,258,3.494,262,2.462,318,2.797,500,3.832,526,2.005,726,4.426,820,3.806,837,3.562,871,3.135,941,1.516,949,2.83,954,4.625,956,4.625,957,4.173,958,2.37,959,2.37,971,4.248,983,2.574,984,2.506,987,4.147,1003,2.602,1024,3.494,1025,2.157,1026,2.347,1032,1.592,1035,2.602,1036,2.602,1037,2.347,1040,1.592,1060,3.872,1136,2.851,1459,2.37,1507,3.494,1519,3.494,1567,4.173,1587,3.872,1596,3.872,1606,5.123,1828,3.494,1937,6.355,1938,6.355,1939,5.312,1940,5.312,1941,5.312,1942,5.312,1943,5.312,1944,5.312,1945,5.312,1946,5.312,1947,5.312,1948,5.312,1949,5.312,1950,5.312,1951,4.625,1952,5.312,1953,5.884,1954,4.447,1955,2.988,1956,4.447,1957,2.988,1958,2.988,1959,2.988,1960,5.884,1961,2.988,1962,2.988,1963,2.988,1964,2.988,1965,2.988,1966,2.988,1967,4.447,1968,2.988,1969,2.988,1970,6.291,1971,2.988,1972,2.988,1973,2.988,1974,2.988,1975,2.988,1976,2.988,1977,2.988,1978,4.447,1979,4.447,1980,4.447,1981,4.447,1982,4.447]],["title/injectables/LocalStorageService.html",[49,0.275,826,2.897]],["body/injectables/LocalStorageService.html",[0,0.118,3,0.176,4,0.176,5,0.156,7,0.08,12,0.728,20,0.587,22,0.791,23,0.014,24,0.555,25,0.21,26,0.791,29,0.756,30,0.79,33,0.176,36,0.755,38,2.159,44,0.822,46,0.011,47,0.011,49,0.454,51,1.316,74,1.294,80,0.236,81,0.615,92,1.316,93,1.27,826,4.78,1813,4.827,1983,6.545,1984,4.655,1985,6.621,1986,6.621,1987,6.621,1988,6.621,1989,5.346,1990,6.621,1991,5.346,1992,6.621,1993,5.346,1994,5.346,1995,5.346,1996,5.346]],["title/interfaces/LoginFormData.html",[34,0.744,1997,2.897]],["body/interfaces/LoginFormData.html",[0,0.107,3,0.159,4,0.159,5,0.141,7,0.073,8,0.564,16,0.607,23,0.014,25,0.182,30,0.722,33,0.159,34,0.897,36,0.696,40,0.937,41,0.744,46,0.01,47,0.01,48,1.979,80,0.345,81,0.557,148,1.195,158,2.148,159,2.148,160,1.637,161,1.698,163,1.698,164,1.418,165,1.698,167,1.698,181,2.148,188,1.698,224,1.698,225,2.41,233,1.698,262,2.881,296,3.313,304,2.579,644,3.043,655,1.762,814,3.486,834,4.548,836,3.407,941,2.456,949,3.313,953,3.685,958,2.579,959,2.579,982,4.071,983,2.345,984,2.648,1030,2.715,1032,2.579,1040,2.579,1115,3.494,1997,4.959,1998,3.802,1999,3.802,2000,3.91,2001,3.043,2002,5.414,2003,3.802,2004,3.91,2005,4.214,2006,2.868,2007,4.214,2008,3.043,2009,3.91,2010,3.043,2011,4.214,2012,4.214,2013,4.214,2014,3.494,2015,3.043,2016,4.214,2017,3.043,2018,3.043,2019,3.043,2020,3.043]],["title/components/LoginPageComponent.html",[148,0.771,224,1.408]],["body/components/LoginPageComponent.html",[0,0.08,1,1.462,3,0.12,4,0.12,5,0.106,7,0.055,8,0.465,12,0.564,16,0.644,20,0.527,22,0.4,23,0.014,24,0.458,25,0.15,26,0.4,29,0.382,30,0.678,33,0.12,34,0.674,36,0.465,40,0.81,41,0.559,46,0.008,47,0.008,54,1.23,73,0.699,74,0.626,80,0.321,81,0.419,82,1.376,128,1.066,145,1.142,148,1.142,149,1.325,150,1.94,151,1.43,152,1.43,153,1.43,157,1.43,158,2.277,159,2.277,160,2.729,161,2.831,162,1.376,163,1.8,164,1.503,165,1.8,167,1.8,181,1.615,188,1.8,193,1.43,194,2.016,195,1.43,196,2.536,197,1.43,198,1.43,199,1.325,200,2.016,201,1.325,202,2.016,203,1.325,204,1.325,205,1.43,206,1.325,207,1.276,208,0.674,209,2.674,210,1.325,211,1.325,212,1.105,213,2.016,214,1.325,215,1.145,216,1.276,217,1.325,218,1.43,219,1.325,220,1.325,221,1.43,222,1.325,223,1.43,224,2.264,225,2.642,226,1.325,227,1.376,228,1.276,229,2.264,230,2.104,231,2.084,232,1.276,233,2.084,234,1.43,235,1.43,262,2.753,296,3.166,304,1.938,644,2.288,655,1.325,814,3.681,834,4.032,836,3.02,941,1.846,949,3.166,953,3.521,958,2.733,959,2.733,982,4.183,983,2.878,984,2.747,1030,2.041,1032,1.938,1040,1.938,1115,2.626,1997,3.703,1998,5.344,1999,5.344,2000,3.736,2001,2.288,2002,5.173,2003,2.858,2004,3.736,2005,5.173,2006,4.299,2007,3.168,2008,2.288,2009,3.226,2010,4.057,2011,3.168,2012,3.168,2013,3.168,2014,2.626,2015,2.288,2016,3.168,2017,2.288,2018,2.288,2019,2.288,2020,2.288,2021,2.858,2022,4.466,2023,3.638,2024,2.858,2025,5.129]],["title/components/LogoutPageComponent.html",[148,0.771,226,1.461]],["body/components/LogoutPageComponent.html",[0,0.097,1,1.612,3,0.144,4,0.144,5,0.128,7,0.066,12,0.642,16,0.732,20,0.476,22,0.483,23,0.014,24,0.505,25,0.128,26,0.483,29,0.461,30,0.613,33,0.144,40,0.795,46,0.009,47,0.009,54,1.484,80,0.29,81,0.505,82,1.659,128,1.286,145,1.259,148,1.259,149,1.598,150,2.206,151,1.725,152,1.725,153,1.725,157,1.725,160,2.788,161,2.892,162,1.659,163,2.046,164,1.709,165,2.046,167,2.046,188,1.539,193,1.725,194,2.293,195,1.725,196,2.744,197,1.725,198,1.725,199,1.598,200,2.293,201,1.598,202,2.293,203,1.598,204,1.598,205,1.725,206,1.598,207,1.539,208,0.813,209,2.857,210,1.598,211,1.598,212,1.332,213,2.293,214,1.598,215,1.38,216,1.539,217,1.598,218,1.725,219,1.598,220,1.598,221,1.725,222,1.598,223,1.725,224,1.539,225,1.539,226,2.542,227,2.965,228,1.539,229,2.046,230,1.902,231,1.539,232,1.539,233,2.549,234,1.725,235,1.725,247,3.107,248,3.675,252,3.916,814,3.792,941,2.227,958,3.107,959,3.107,983,3.174,984,2.972,1040,2.338,1634,3.447,2003,3.447,2026,5.703,2027,5.703,2028,4.387,2029,4.387,2030,4.387,2031,3.447,2032,5.831]],["title/injectables/NavigateService.html",[49,0.275,984,1.709]],["body/injectables/NavigateService.html",[0,0.108,3,0.161,4,0.161,5,0.143,7,0.074,12,0.69,16,0.615,20,0.628,22,0.69,23,0.014,24,0.484,25,0.183,26,0.69,29,0.791,33,0.161,36,0.699,46,0.01,47,0.01,49,0.43,51,1.207,80,0.277,81,0.564,92,1.207,93,1.165,94,2.376,208,0.909,230,1.599,231,1.72,644,3.084,820,4.196,837,4.095,871,4.012,984,2.67,1136,3.648,1601,4.527,2033,4.269,2034,7.285,2035,6.27,2036,7.285,2037,7.285,2038,7.285,2039,4.903,2040,7.701,2041,4.903,2042,4.903,2043,6.27,2044,4.903,2045,4.903,2046,4.903,2047,4.903,2048,4.903,2049,4.903,2050,4.903,2051,4.903,2052,4.903,2053,4.903]],["title/classes/Pile.html",[0,0.088,439,1.578]],["body/classes/Pile.html",[0,0.091,2,1.31,3,0.089,4,0.089,5,0.079,7,0.041,8,0.374,10,2.496,12,0.454,14,1.395,16,0.339,20,0.632,22,0.616,23,0.014,24,0.432,25,0.211,26,0.616,29,0.76,30,0.733,33,0.136,36,0.374,38,2.321,40,1.033,41,0.976,44,1.072,46,0.007,47,0.007,72,1.829,73,0.52,74,0.71,76,1.892,77,0.466,80,0.247,88,0.643,94,1.31,115,1.999,170,2.805,191,3.24,208,0.501,215,1.298,216,1.963,237,1.687,238,3.7,241,0.578,242,0.643,243,1.382,271,3.298,335,3.672,370,2.594,373,5.783,426,1.603,439,3.149,446,1.441,517,2.594,649,2.116,650,3.24,653,3.356,654,1.999,655,1.502,658,2.594,660,2.784,663,3.383,664,2.978,665,2.769,667,2.769,668,3.61,669,2.769,675,3.763,676,3.21,677,2.124,678,2.124,679,2.124,684,3.672,686,2.594,687,2.354,688,1.517,689,2.124,691,2.124,707,1.815,715,1.701,759,2.711,1021,4.915,1044,4.153,1065,3.24,1090,2.594,1245,3.24,1246,4.395,1254,4.988,1255,3.929,1263,2.124,1319,2.124,1366,3.519,1401,2.594,1450,2.769,1465,3.914,1669,3.24,1813,3.755,1825,4.349,2054,2.124,2055,4.872,2056,4.354,2057,5.419,2058,4.872,2059,4.872,2060,3.592,2061,5.245,2062,4.125,2063,4.354,2064,3.592,2065,3.592,2066,3.592,2067,2.704,2068,2.704,2069,2.704,2070,2.704,2071,2.704,2072,4.354,2073,2.704,2074,3.592,2075,4.395,2076,3.592,2077,3.592,2078,2.704,2079,2.704,2080,3.592,2081,2.704,2082,3.592,2083,2.354,2084,2.124,2085,2.354,2086,2.354,2087,2.354,2088,2.354,2089,2.354,2090,2.354,2091,2.354,2092,3.592,2093,3.592,2094,2.354,2095,3.592,2096,2.354,2097,2.354,2098,2.354,2099,2.354,2100,2.354,2101,2.124,2102,3.592,2103,3.592,2104,2.354,2105,3.592,2106,3.592,2107,2.354,2108,2.354,2109,3.592,2110,2.354,2111,2.354,2112,2.124,2113,3.592,2114,3.592,2115,3.592,2116,2.354,2117,2.354,2118,2.354]],["title/classes/PileAdapter.html",[0,0.088,426,2.378]],["body/classes/PileAdapter.html",[0,0.106,2,1.623,3,0.11,4,0.11,5,0.098,7,0.05,10,1.901,12,0.532,14,1.635,16,0.42,20,0.578,22,0.624,23,0.014,24,0.438,25,0.166,26,0.624,29,0.692,30,0.692,33,0.159,36,0.304,38,2.364,40,0.899,41,1.055,44,1.135,46,0.008,47,0.008,72,1.723,73,0.644,74,0.833,76,1.635,77,0.577,80,0.275,88,0.796,94,1.623,115,1.623,170,1.879,191,3.799,208,0.621,215,1.054,216,1.697,237,1.37,238,3.632,241,0.716,242,0.796,243,1.11,271,3.511,335,3.593,370,2.107,373,5.673,426,2.866,439,3.108,446,1.785,517,3.041,650,2.631,653,2.248,654,1.623,655,1.22,658,2.107,660,1.978,669,2.248,675,4.296,684,3.345,686,2.107,691,2.631,707,2.248,715,2.107,759,2.343,1021,5.233,1044,4.319,1065,2.631,1090,2.107,1245,2.631,1246,4.458,1254,4.882,1255,4.458,1263,3.799,1319,2.631,1366,3.908,1401,2.107,1450,2.248,1465,3.364,1669,2.631,1813,3.246,1825,3.491,2054,2.631,2055,4.211,2056,2.917,2057,5.111,2058,2.917,2059,2.917,2060,4.211,2061,5.738,2063,2.917,2064,2.917,2065,2.917,2066,2.917,2072,4.942,2074,2.917,2075,3.799,2076,2.917,2077,2.917,2080,2.917,2082,2.917,2083,2.917,2084,2.631,2085,2.917,2086,2.917,2087,2.917,2088,2.917,2089,2.917,2090,2.917,2091,2.917,2092,4.211,2093,4.211,2094,2.917,2095,4.211,2096,2.917,2097,2.917,2098,2.917,2099,2.917,2100,2.917,2101,2.631,2102,4.211,2103,4.211,2104,2.917,2105,4.211,2106,4.211,2107,2.917,2108,2.917,2109,4.211,2110,2.917,2111,2.917,2112,2.631,2113,4.211,2114,4.211,2115,4.211,2116,2.917,2117,2.917,2118,2.917,2119,3.35,2120,3.35,2121,3.35,2122,3.35,2123,3.35,2124,3.35,2125,3.35]],["title/interfaces/PileConfig.html",[34,0.744,2126,3.152]],["body/interfaces/PileConfig.html",[3,0.176,4,0.176,5,0.157,7,0.081,8,0.602,23,0.014,25,0.194,33,0.218,34,0.995,36,0.715,41,0.825,46,0.011,47,0.011,48,2.194,77,0.924,80,0.293,87,2.029,136,3.966,212,2.485,589,3.601,1219,3.601,1220,4.672,1221,4.215,1222,4.215,1226,4.215,1230,4.215,1233,4.215,1236,4.215,1239,4.215,1265,4.215,2126,5.213,2127,4.215,2128,4.215,2129,5.366,2130,4.672,2131,4.672,2132,4.672,2133,4.672,2134,4.672,2135,4.672,2136,4.672,2137,4.672,2138,4.672,2139,4.672,2140,4.672,2141,4.672]],["title/injectables/PileRegistryService.html",[49,0.275,574,2.524]],["body/injectables/PileRegistryService.html",[0,0.099,3,0.147,4,0.147,5,0.131,7,0.067,8,0.536,12,0.65,15,2.294,16,0.562,20,0.625,22,0.728,23,0.014,24,0.51,25,0.219,26,0.728,29,0.621,30,0.47,33,0.147,36,0.536,40,1.025,46,0.01,47,0.01,49,0.405,51,1.101,72,1.358,73,1.352,74,1.211,77,1.139,80,0.323,81,0.515,87,2.234,92,1.101,93,1.063,145,0.86,208,0.829,237,2.416,241,0.957,242,1.063,243,1.356,360,2.384,370,2.813,421,2.737,439,2.322,574,3.715,582,3.003,587,2.877,593,3.715,649,2.234,654,2.167,655,1.629,660,3.133,676,4.003,721,2.813,742,2.073,743,2.813,744,4.663,745,3.314,746,4.265,747,3.946,748,3.524,751,3.895,753,3.514,754,2.384,755,3.148,756,2.384,757,4.103,758,2.27,759,2.167,760,3.003,761,3.895,762,3.501,763,3.92,764,2.651,765,2.51,766,2.651,767,2.651,768,2.651,769,3.23,770,3.514,771,2.384,772,3.23,773,3.514,774,3.23,775,3.514,776,3.514,777,3.23,778,3.514,780,2.073,781,2.813,1465,2.651,1603,3.514,2142,4.474,2143,5.078,2144,5.907,2145,4.474]],["title/injectables/PileStateService.html",[49,0.275,2143,2.897]],["body/injectables/PileStateService.html",[0,0.093,3,0.138,4,0.138,5,0.123,7,0.063,8,0.514,12,0.623,14,1.916,15,2.237,20,0.626,22,0.755,23,0.014,24,0.529,25,0.215,26,0.755,29,0.752,30,0.721,33,0.138,36,0.514,40,1.046,44,0.646,46,0.009,47,0.009,49,0.388,51,1.034,72,1.275,73,1.089,74,0.975,77,0.975,80,0.303,81,0.483,87,2.142,92,1.034,93,0.998,145,0.807,208,1.188,237,2.316,241,0.898,242,0.998,243,1.73,325,3.415,439,2.815,587,2.316,593,3.562,649,2.142,654,2.035,655,1.53,660,3.136,663,4.018,676,4.018,723,2.642,731,2.642,742,1.987,745,3.178,747,3.178,748,3.415,754,2.238,755,3.018,756,2.238,757,3.595,758,2.132,759,2.035,762,3.357,763,3.798,764,3.357,765,3.178,766,2.49,767,2.49,768,2.49,771,4.184,780,1.947,783,2.642,784,4.089,785,4.089,786,4.089,787,4.627,789,3.3,790,4.089,791,3.3,792,3.033,793,3.3,794,3.3,795,3.033,796,3.033,797,4.604,798,3.033,799,2.49,800,3.562,801,2.819,802,3.033,803,3.3,804,2.035,805,3.033,806,3.033,807,3.3,808,3.3,809,3.033,810,3.3,1465,4.065,1603,3.3,2143,4.089,2146,5.664,2147,4.201,2148,4.201,2149,4.201]],["title/interfaces/PlayerAuthData.html",[34,0.744,822,2.524]],["body/interfaces/PlayerAuthData.html",[3,0.195,4,0.195,5,0.173,7,0.089,8,0.64,23,0.013,25,0.227,33,0.195,34,1.1,36,0.75,46,0.011,47,0.011,48,2.427,335,3.82,822,4.437,836,3.457,865,6.781,867,6.781,869,6.781,2150,5.168]],["title/injectables/PlayerService.html",[49,0.275,500,2.251]],["body/injectables/PlayerService.html",[0,0.091,3,0.137,4,0.137,5,0.121,7,0.062,8,0.51,12,0.618,16,0.706,20,0.614,22,0.751,23,0.014,24,0.527,25,0.215,26,0.751,29,0.669,33,0.137,36,0.703,40,0.973,41,0.638,44,0.638,46,0.009,47,0.009,49,0.385,51,1.022,73,1.225,74,1.097,76,2.155,77,0.968,80,0.325,81,0.478,88,0.987,92,1.022,93,0.987,139,1.355,173,3.167,208,0.77,241,0.888,367,1.769,500,3.153,726,4.582,742,2.683,814,3.732,816,3.616,820,3.934,836,3.031,837,3.732,847,2.788,854,2.33,871,3.395,936,2.788,969,4.894,1025,2.999,1504,5.046,1506,2.999,1508,4.894,1511,3.616,1523,4.894,1536,2.999,1539,3.616,1564,5.548,1567,5.776,1634,3.263,2101,3.263,2151,3.616,2152,5.621,2153,5.621,2154,5.621,2155,4.153,2156,4.153,2157,5.621,2158,4.153,2159,4.153,2160,5.621,2161,5.621,2162,4.153,2163,4.153,2164,4.153,2165,4.153,2166,5.621,2167,6.827,2168,4.153,2169,4.153,2170,4.153,2171,4.153,2172,4.153,2173,5.621,2174,4.153,2175,4.153,2176,5.621]],["title/interfaces/SignUpConfirmFormData.html",[34,0.744,2177,2.897]],["body/interfaces/SignUpConfirmFormData.html",[0,0.105,3,0.157,4,0.157,5,0.14,7,0.072,8,0.56,16,0.601,23,0.014,25,0.18,30,0.718,33,0.157,34,0.887,36,0.694,40,0.932,41,0.735,46,0.01,47,0.01,48,1.957,80,0.338,81,0.551,148,1.186,158,2.124,159,2.124,160,1.618,161,1.679,163,1.679,164,1.402,165,1.679,167,1.679,181,2.124,188,1.679,228,1.679,229,2.397,230,2.495,231,2.622,233,1.679,262,2.86,296,3.289,304,2.549,655,1.742,836,3.396,898,5.524,941,2.428,949,3.289,953,3.658,958,2.549,959,2.549,982,4.049,983,2.318,984,2.628,1030,2.684,1032,2.549,1040,2.549,2000,3.881,2001,3.009,2004,3.881,2006,2.836,2008,3.009,2009,3.881,2010,3.009,2015,3.009,2017,3.009,2018,3.009,2019,3.009,2020,3.009,2031,3.759,2177,4.933,2178,3.211,2179,3.211,2180,4.049,2181,3.454,2182,3.454,2183,4.166,2184,4.166,2185,4.166,2186,4.166,2187,4.166,2188,4.166,2189,3.454,2190,4.166]],["title/components/SignUpConfirmPageComponent.html",[148,0.771,228,1.408]],["body/components/SignUpConfirmPageComponent.html",[0,0.078,1,1.437,3,0.116,4,0.116,5,0.103,7,0.053,8,0.455,12,0.552,16,0.63,20,0.519,22,0.388,23,0.014,24,0.451,25,0.146,26,0.388,29,0.37,30,0.668,33,0.116,34,0.653,36,0.455,40,0.797,41,0.542,46,0.008,47,0.008,54,1.192,73,0.678,74,0.607,80,0.309,81,0.406,82,1.333,128,1.033,145,1.122,148,1.122,149,1.284,150,1.897,151,1.386,152,1.386,153,1.386,157,1.386,158,2.227,159,2.227,160,2.718,161,2.82,162,1.333,163,1.76,164,1.47,165,1.76,167,1.76,181,1.565,188,1.76,193,1.386,194,1.972,195,1.386,196,2.501,197,1.386,198,1.386,199,1.284,200,1.972,201,1.284,202,1.972,203,1.284,204,1.284,205,1.386,206,1.284,207,1.237,208,0.653,209,2.643,210,1.284,211,1.284,212,1.07,213,1.972,214,1.284,215,1.109,216,1.237,217,1.284,218,1.386,219,1.284,220,1.284,221,1.386,222,1.284,223,1.386,224,1.237,225,1.237,226,1.284,227,1.333,228,2.232,229,2.66,230,2.65,231,2.851,232,1.237,233,2.049,234,1.386,235,1.386,262,2.706,296,3.112,304,1.878,655,1.284,836,2.984,898,4.853,941,1.789,949,3.112,953,3.461,958,2.673,959,2.673,982,4.14,983,2.829,984,2.709,1030,1.978,1032,1.878,1040,1.878,2000,3.672,2001,2.217,2004,3.672,2006,4.26,2008,2.217,2009,3.155,2010,4.001,2015,2.217,2017,2.217,2018,2.217,2019,2.217,2020,2.217,2021,2.769,2024,3.941,2031,2.769,2177,3.621,2178,4.512,2179,4.512,2180,4.26,2181,2.545,2182,2.545,2183,5.085,2184,3.069,2185,3.069,2186,3.069,2187,3.069,2188,3.069,2189,2.545,2190,3.069,2191,3.525,2192,3.525]],["title/interfaces/SignUpFormData.html",[34,0.744,2193,2.897]],["body/interfaces/SignUpFormData.html",[0,0.102,3,0.153,4,0.153,5,0.136,7,0.07,8,0.55,16,0.584,23,0.014,25,0.197,30,0.708,33,0.153,34,0.862,36,0.719,40,0.919,41,0.714,46,0.01,47,0.01,48,1.901,80,0.336,81,0.535,148,1.164,158,2.064,159,2.064,160,1.572,161,1.631,163,1.631,164,1.363,165,1.631,167,1.631,181,2.064,188,1.631,229,2.364,230,2.476,232,1.631,233,1.631,262,2.807,296,3.228,304,2.477,655,1.693,834,4.5,836,3.37,906,5.582,941,2.36,949,3.228,953,3.591,958,2.477,959,2.477,982,3.994,983,2.253,984,2.58,1030,2.608,1032,2.477,1040,2.477,2000,3.81,2001,2.924,2004,3.81,2006,2.755,2008,2.924,2009,4.238,2010,2.924,2014,3.357,2015,2.924,2017,2.924,2018,2.924,2019,2.924,2020,2.924,2178,3.12,2179,3.12,2180,3.994,2181,3.357,2182,3.357,2189,3.357,2193,4.865,2194,5.275,2195,4.048,2196,4.048,2197,4.048,2198,4.048,2199,4.048,2200,4.048,2201,4.048,2202,4.048,2203,4.048,2204,4.048]],["title/components/SignUpPageComponent.html",[148,0.771,232,1.408]],["body/components/SignUpPageComponent.html",[0,0.074,1,1.396,3,0.11,4,0.11,5,0.098,7,0.05,8,0.438,12,0.532,16,0.607,20,0.507,22,0.368,23,0.014,24,0.438,25,0.141,26,0.368,29,0.352,30,0.653,33,0.11,34,0.62,36,0.515,40,0.774,41,0.514,46,0.008,47,0.008,54,1.132,73,0.643,74,0.576,80,0.303,81,0.385,82,1.266,128,0.981,145,1.09,148,1.09,149,1.218,150,1.828,151,1.315,152,1.315,153,1.315,157,1.315,158,2.145,159,2.145,160,2.7,161,2.801,162,1.266,163,1.695,164,1.416,165,1.695,167,1.695,181,1.485,188,1.695,193,1.315,194,1.9,195,1.315,196,2.442,197,1.315,198,1.315,199,1.218,200,1.9,201,1.218,202,1.9,203,1.218,204,1.218,205,1.315,206,1.218,207,1.174,208,0.62,209,2.59,210,1.218,211,1.218,212,1.016,213,1.9,214,1.218,215,1.053,216,1.174,217,1.218,218,1.315,219,1.218,220,1.218,221,1.315,222,1.218,223,1.315,224,1.174,225,1.174,226,1.218,227,1.266,228,1.174,229,2.691,230,2.651,231,1.174,232,2.179,233,1.99,234,1.315,235,1.315,262,2.628,296,3.022,304,1.783,655,1.218,834,4.194,836,2.924,906,5.231,941,1.698,949,3.022,953,3.361,958,2.575,959,2.575,982,4.068,983,2.748,984,2.645,1014,3.796,1030,1.877,1032,1.783,1040,1.783,1951,4.207,2000,3.567,2001,2.104,2004,3.567,2006,4.194,2008,2.104,2009,3.567,2010,3.906,2014,2.416,2015,2.104,2017,2.104,2018,2.104,2019,2.104,2020,2.104,2021,2.628,2022,4.207,2024,2.628,2178,4.421,2179,4.421,2180,4.194,2181,2.416,2182,2.416,2189,2.416,2193,3.488,2194,4.938,2195,4.938,2196,2.913,2197,2.913,2198,2.913,2199,2.913,2200,2.913,2201,2.913,2202,2.913,2203,2.913,2204,2.913,2205,3.346,2206,4.832,2207,4.832,2208,4.832,2209,4.832,2210,4.832,2211,4.832,2212,4.832,2213,4.832,2214,4.832,2215,4.832]],["title/injectables/SignUpService.html",[49,0.275,2180,2.378]],["body/injectables/SignUpService.html",[0,0.114,3,0.17,4,0.17,5,0.151,7,0.078,12,0.715,16,0.651,20,0.579,22,0.781,23,0.014,24,0.547,25,0.207,26,0.781,29,0.683,33,0.17,36,0.755,44,0.998,46,0.011,47,0.011,49,0.445,51,1.276,80,0.287,81,0.597,92,1.276,93,1.233,94,2.513,820,3.965,824,4.516,825,5.244,834,4.407,836,2.884,837,3.774,846,3.745,847,3.481,890,5.657,892,5.657,897,5.657,898,5.369,905,5.657,906,5.369,2180,3.851,2216,6.475,2217,4.516,2218,5.187,2219,5.187,2220,5.187,2221,5.187,2222,5.187]],["title/classes/Space.html",[0,0.088,124,1.709]],["body/classes/Space.html",[0,0.069,1,1.839,2,1.509,3,0.102,4,0.102,5,0.091,7,0.047,8,0.416,10,2.139,12,0.504,14,1.551,16,0.391,20,0.642,22,0.704,23,0.014,24,0.494,25,0.215,26,0.704,29,0.703,30,0.762,33,0.102,36,0.416,38,2.183,40,1.059,41,0.478,44,0.923,46,0.007,47,0.007,60,3.776,72,1.652,73,1.154,74,1.034,76,1.841,77,1.153,80,0.265,88,0.74,104,3.423,124,3.307,139,1.775,238,3.88,241,0.666,242,0.74,243,1.814,274,1.509,322,1.734,529,3.992,649,1.178,652,3.602,655,1.67,656,3.992,662,5.695,665,3.653,667,3.077,669,3.077,684,3.248,686,2.883,688,1.747,706,2.446,710,2.711,711,2.446,717,5.227,721,2.883,729,2.572,732,3.992,733,5.227,734,3.602,758,2.327,800,2.883,1084,1.845,1090,2.883,1210,4.739,1353,2.711,1355,2.883,1356,1.845,1357,1.845,1358,1.845,1363,3.992,1642,4.739,1810,3.992,1817,3.602,1828,5.695,1834,5.227,2223,2.711,2224,6.003,2225,4.585,2226,6.003,2227,4.585,2228,4.585,2229,4.585,2230,4.585,2231,4.585,2232,4.585,2233,4.585,2234,4.585,2235,4.585,2236,4.585,2237,4.585,2238,5.442,2239,5.442,2240,5.442,2241,4.585,2242,4.585,2243,6.003,2244,4.585,2245,4.585,2246,3.114,2247,3.114,2248,3.114,2249,3.114,2250,3.114,2251,3.114,2252,4.585,2253,3.114,2254,3.114,2255,4.585,2256,3.114,2257,4.585,2258,3.114,2259,4.585,2260,3.114,2261,3.114,2262,3.114,2263,3.114,2264,3.114,2265,3.114,2266,3.114,2267,3.114,2268,3.114,2269,7.249,2270,3.114,2271,3.114,2272,3.114,2273,3.114,2274,3.114,2275,3.114,2276,5.442,2277,5.442,2278,4.585,2279,3.114,2280,4.585,2281,3.114,2282,3.114,2283,3.114]],["title/interfaces/SpeciesPiece.html",[34,0.744,444,2.524]],["body/interfaces/SpeciesPiece.html",[3,0.2,4,0.2,5,0.177,7,0.091,8,0.649,23,0.013,25,0.177,33,0.2,34,1.125,46,0.012,47,0.012,48,2.482,80,0.316,170,4.401,237,2.923,238,3.681,239,5.664,240,4.768,241,1.298,242,1.442,243,1.393,444,4.495,2284,5.285]],["title/coverage.html",[2285,4.781]],["body/coverage.html",[0,0.153,1,1.308,5,0.072,6,3.836,11,1.307,18,1.646,19,1.376,23,0.014,25,0.193,34,1.363,46,0.006,47,0.006,49,0.546,50,1.646,52,3.396,53,1.771,54,1.591,55,2.136,63,1.543,70,1.771,77,0.422,113,3.006,114,2.136,115,3.634,116,1.771,117,3.006,121,1.454,124,1.045,128,0.719,133,1.137,145,0.904,148,1.442,149,0.893,154,3.623,155,1.646,156,2.136,162,1.447,172,1.245,184,1.543,186,1.245,199,0.893,201,0.893,203,0.893,204,0.893,206,0.893,208,0.709,210,0.893,212,1.162,214,0.893,215,0.772,216,1.342,217,0.893,219,0.893,220,0.893,222,0.893,224,0.861,226,0.893,228,0.861,230,2.151,231,1.864,232,0.861,236,2.136,239,1.771,243,1.322,244,2.136,245,1.927,246,3.006,271,4.079,276,1.771,277,2.136,292,2.762,293,1.927,294,3.006,305,1.771,309,1.927,320,2.136,322,0.928,331,1.454,332,1.646,359,2.268,367,1.045,368,1.543,416,3.396,418,1.646,419,0.928,423,1.543,426,1.454,439,0.964,441,1.376,444,1.543,487,2.136,488,1.927,500,1.376,517,1.543,525,1.771,563,2.136,564,2.136,573,1.454,574,1.543,589,1.646,591,1.646,592,2.788,593,2.406,594,1.927,638,2.136,646,1.771,648,2.136,660,1.003,742,2.672,743,3.623,744,1.454,750,1.771,771,1.307,783,3.623,804,1.188,814,1.245,815,2.136,822,1.543,825,1.646,826,1.771,888,2.136,889,3.396,939,2.136,940,2.136,941,3.44,984,1.045,987,1.543,1014,1.927,1089,1.543,1121,2.136,1122,2.136,1123,3.006,1131,1.771,1150,2.136,1168,2.958,1171,1.927,1200,2.136,1211,3.006,1212,3.006,1213,1.771,1215,1.771,1242,2.136,1243,2.136,1279,2.136,1287,2.136,1292,2.136,1320,1.771,1323,1.646,1345,3.839,1346,2.136,1370,3.006,1445,1.646,1446,3.006,1447,1.771,1469,1.771,1472,1.927,1473,1.927,1478,1.646,1504,1.646,1505,2.136,1506,1.771,1554,2.136,1583,2.136,1627,1.771,1666,3.006,1677,1.646,1678,1.771,1680,1.927,1690,1.771,1691,2.136,1733,1.771,1800,2.136,1929,3.867,1934,1.927,1937,2.136,1938,2.136,1983,2.136,1984,2.136,1997,1.771,1998,3.006,1999,3.006,2026,2.136,2027,2.136,2033,2.136,2054,3.006,2057,1.771,2126,1.927,2127,3.006,2128,3.006,2143,1.771,2150,2.136,2151,2.136,2177,1.771,2178,3.566,2179,3.566,2180,1.454,2193,1.771,2216,2.136,2217,2.136,2223,2.136,2284,2.136,2285,2.136,2286,2.453,2287,2.453,2288,2.453,2289,6.105,2290,2.136,2291,7.06,2292,2.136,2293,7.992,2294,2.453,2295,4.704,2296,6.376,2297,6.376,2298,6.376,2299,2.136,2300,2.136,2301,2.136,2302,2.136,2303,2.136,2304,2.136,2305,1.927,2306,2.136,2307,2.136,2308,1.927,2309,6.376,2310,2.453,2311,2.453,2312,2.453,2313,2.453,2314,2.136,2315,2.453,2316,3.006,2317,5.314,2318,2.453,2319,2.453,2320,5.314,2321,5.762,2322,3.826,2323,5.314,2324,5.314,2325,2.453,2326,2.453,2327,2.453,2328,2.453,2329,2.453,2330,2.453,2331,2.453,2332,4.704,2333,2.453,2334,2.453,2335,2.453,2336,2.453,2337,2.453,2338,2.453,2339,2.453,2340,4.704,2341,5.017,2342,2.136,2343,5.762,2344,5.762,2345,1.927,2346,5.017,2347,2.136,2348,2.136,2349,2.453,2350,1.927,2351,2.762,2352,2.136,2353,1.927,2354,3.332,2355,3.332,2356,2.136,2357,2.453,2358,2.453,2359,2.453]],["title/dependencies.html",[2360,2.912,2361,4.206]],["body/dependencies.html",[15,1.876,23,0.014,46,0.011,47,0.011,81,0.662,88,1.367,527,4.518,644,3.617,846,4.152,849,4.518,850,4.518,851,4.518,852,4.518,862,4.518,915,5.008,1030,3.226,1356,3.409,1357,3.409,1358,3.409,1468,5.008,1599,5.008,2361,5.008,2362,5.751,2363,8.17,2364,5.751,2365,6.923,2366,5.751,2367,5.751,2368,6.923,2369,6.923,2370,5.751,2371,5.751,2372,5.751,2373,5.751,2374,5.751,2375,5.751,2376,5.751,2377,5.751,2378,5.751,2379,5.751,2380,5.751]],["title/miscellaneous/enumerations.html",[2381,1.876,2382,4.206]],["body/miscellaneous/enumerations.html",[7,0.068,23,0.014,46,0.01,47,0.01,74,1.464,131,4.29,136,2.879,145,1.357,211,1.644,212,2.017,364,3.989,365,3.737,519,4.668,822,2.839,855,5.174,1216,4.668,1219,3.989,1265,4.668,1601,4.29,2350,3.546,2351,3.259,2353,3.546,2381,2.533,2382,3.931,2383,4.514,2384,3.931,2385,4.668,2386,3.931,2387,3.259,2388,5.943,2389,4.514,2390,5.943,2391,4.514,2392,4.514,2393,4.514,2394,4.514,2395,4.514,2396,4.514,2397,4.514,2398,5.174,2399,5.174,2400,5.174,2401,5.174,2402,5.174,2403,5.174,2404,4.514,2405,4.514,2406,4.514,2407,4.514,2408,4.514,2409,4.514,2410,4.514,2411,4.514,2412,4.514,2413,4.514,2414,4.514,2415,4.514,2416,4.514,2417,4.514,2418,4.514,2419,4.514,2420,5.943,2421,5.174,2422,5.174,2423,5.174,2424,4.668,2425,5.174,2426,5.174,2427,4.514,2428,4.514,2429,4.514,2430,4.514,2431,4.514,2432,4.514,2433,4.514,2434,4.514,2435,4.514,2436,4.514,2437,4.514,2438,4.514,2439,4.514,2440,4.514,2441,4.514,2442,4.514,2443,4.514,2444,4.514,2445,4.514,2446,4.514,2447,4.514,2448,4.514,2449,4.514,2450,4.514,2451,4.514,2452,4.514,2453,4.514,2454,4.514,2455,4.514,2456,4.514]],["title/miscellaneous/functions.html",[2381,1.876,2457,4.206]],["body/miscellaneous/functions.html",[7,0.056,10,1.468,20,0.533,22,0.879,23,0.014,24,0.622,25,0.218,26,0.883,29,0.839,36,0.646,38,1.704,46,0.009,47,0.009,72,1.134,73,1.004,74,1.388,87,2.468,104,2.348,115,1.809,139,1.218,170,2.931,173,2.675,186,2.651,207,1.31,238,1.809,309,4.104,335,2.651,367,2.225,368,3.285,517,3.285,525,3.772,587,2.911,594,4.104,649,1.976,658,3.285,675,4.49,684,1.895,685,3.251,736,4.104,754,1.99,756,1.99,758,1.895,759,1.809,801,2.506,936,4.044,1018,2.696,1136,1.809,1196,2.933,1309,1.809,1345,2.348,1401,4.476,1402,2.933,1459,2.784,1492,3.251,1655,5.247,1677,3.506,1683,3.251,1704,3.772,1813,4.904,1817,2.933,1825,2.696,1826,3.251,1830,3.251,1913,3.251,1929,3.506,2006,3.096,2075,2.933,2084,2.933,2301,3.251,2302,4.549,2303,4.549,2304,3.251,2305,4.104,2306,3.251,2307,4.549,2308,4.104,2316,2.933,2341,3.251,2342,4.549,2345,4.104,2346,3.251,2347,4.549,2348,4.549,2381,2.095,2387,2.696,2424,2.933,2457,3.251,2458,3.734,2459,3.734,2460,6.869,2461,3.251,2462,3.734,2463,6.869,2464,3.734,2465,7.118,2466,7.118,2467,7.118,2468,6.026,2469,3.734,2470,3.734,2471,5.224,2472,3.734,2473,3.734,2474,3.734,2475,3.734,2476,3.251,2477,3.734,2478,3.734,2479,3.734,2480,3.734,2481,3.734,2482,3.734,2483,3.734,2484,5.224,2485,3.734,2486,3.734,2487,3.734,2488,3.734,2489,5.224,2490,3.734,2491,3.734,2492,3.734,2493,3.734,2494,3.734,2495,3.734,2496,3.734,2497,3.734,2498,6.026,2499,3.734,2500,5.224,2501,3.734,2502,3.734,2503,3.734,2504,3.734,2505,3.734,2506,3.734,2507,3.734]],["title/index.html",[7,0.06,2508,3.494]],["body/index.html",[2,3.134,23,0.012,46,0.012,47,0.012,48,2.645,51,1.592,150,2.446,2314,5.631,2508,5.631,2509,6.468,2510,6.468,2511,6.468]],["title/modules.html",[2512,4.781]],["body/modules.html",[23,0.012,46,0.012,47,0.012,2512,5.732]],["title/properties.html",[8,0.438,2360,2.912]],["body/properties.html",[8,0.593,23,0.013,46,0.012,47,0.012,2476,5.694,2513,6.539]],["title/miscellaneous/typealiases.html",[2381,1.876,2514,4.83]],["body/miscellaneous/typealiases.html",[6,4.382,7,0.091,18,4.798,19,4.01,23,0.012,25,0.177,46,0.012,47,0.012,115,3.681,239,5.161,364,4.074,1213,5.161,1215,5.161,1216,4.768,1219,4.074,1345,3.817,1678,5.161,1929,4.798,2057,5.161,2316,4.768,2350,4.768,2351,4.382,2353,4.768,2381,3.405,2384,5.285,2385,4.768,2386,5.285,2387,4.382,2461,5.285,2515,6.07,2516,7.148]],["title/miscellaneous/variables.html",[2381,1.876,2517,4.206]],["body/miscellaneous/variables.html",[7,0.048,15,1.513,23,0.014,25,0.208,30,0.332,38,2.327,41,0.486,44,0.713,46,0.008,47,0.008,73,1.442,74,1.292,77,1.159,87,2.436,124,1.347,136,3.262,164,0.927,170,1.775,184,2.917,211,2.814,212,2.044,238,3.37,243,1.065,271,1.533,317,1.99,322,1.197,387,4.783,390,4.06,419,1.197,421,2.15,439,1.244,566,2.755,589,3.113,591,3.113,653,2.123,684,3.889,742,1.11,878,1.99,894,4.039,1136,1.533,1168,1.533,1211,2.485,1212,3.644,1213,4.86,1214,5.861,1221,4.752,1222,4.315,1223,4.039,1224,2.755,1225,4.039,1226,4.315,1227,4.039,1228,5.288,1229,4.039,1230,4.315,1231,4.039,1232,4.039,1233,4.315,1234,4.039,1235,4.039,1236,4.315,1237,4.039,1238,4.039,1239,4.315,1240,4.039,1241,4.039,1288,2.755,1309,1.533,1345,1.99,1382,2.485,1445,2.123,1449,2.123,1459,1.686,1469,3.966,1472,3.644,1473,3.644,1609,2.485,1666,3.644,1680,3.644,1704,2.284,1804,2.755,1929,3.687,1934,3.644,1935,2.755,1936,2.755,2112,2.485,2127,2.485,2128,3.644,2130,2.755,2131,2.755,2132,2.755,2133,2.755,2134,2.755,2135,2.755,2136,2.755,2137,2.755,2138,2.755,2139,2.755,2140,2.755,2141,2.755,2290,2.755,2292,4.039,2299,2.755,2300,4.039,2305,2.485,2308,2.485,2345,3.644,2351,2.284,2352,4.039,2354,2.755,2355,4.783,2356,2.755,2381,1.775,2385,2.485,2387,4.65,2398,2.755,2399,2.755,2400,2.755,2401,2.755,2402,2.755,2403,2.755,2421,4.039,2422,4.039,2423,2.755,2424,3.644,2425,4.039,2426,4.783,2517,2.755,2518,3.164,2519,3.164,2520,3.164,2521,3.164,2522,3.164,2523,3.164,2524,3.164,2525,3.164,2526,3.164,2527,3.164,2528,3.164,2529,3.164,2530,6.956,2531,3.164,2532,3.164,2533,3.164,2534,3.164,2535,3.164,2536,3.164,2537,3.164,2538,3.164,2539,3.164,2540,3.164,2541,3.164,2542,3.164,2543,3.164,2544,3.164,2545,4.639,2546,3.164,2547,6.732,2548,3.164,2549,3.164,2550,3.164,2551,3.164,2552,3.164,2553,3.164,2554,3.164,2555,3.164,2556,6.732,2557,3.164,2558,3.164,2559,3.164,2560,3.164,2561,3.164,2562,3.164,2563,3.164,2564,3.164,2565,3.164,2566,3.164,2567,3.164,2568,3.164,2569,4.639,2570,3.164,2571,3.164,2572,3.164,2573,3.164]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":271,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"components/ElementSpaceComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2513,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":2380,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2293,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2295,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2349,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2289,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2294,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2297,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2298,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2296,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2321,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2340,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2320,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1044,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["1/1",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2326,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":2311,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":2319,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2315,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2313,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2511,"title":{},"body":{"index.html":{}}}],["100",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2312,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["1235535.svg",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":2338,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2314,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["15",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["151117.svg",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":2509,"title":{},"body":{"index.html":{}}}],["18",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":2363,"title":{},"body":{"dependencies.html":{}}}],["18.2.7",{"_index":2365,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1228,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":2378,"title":{},"body":{"dependencies.html":{}}}],["2/15",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":2322,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2037742.svg",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2317,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":2510,"title":{},"body":{"index.html":{}}}],["2997582.svg",{"_index":2566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1224,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":2372,"title":{},"body":{"dependencies.html":{}}}],["3.670.0",{"_index":2371,"title":{},"body":{"dependencies.html":{}}}],["3/20",{"_index":2337,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":2324,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":1111,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameStateClientService.html":{}}}],["33",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["3386143.svg",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["367390.svg",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":2323,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":2374,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2373,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2375,"title":{},"body":{"dependencies.html":{}}}],["4/16",{"_index":2318,"title":{},"body":{"coverage.html":{}}}],["4412103.svg",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1022,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["6",{"_index":1014,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["6/9",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2327,"title":{},"body":{"coverage.html":{}}}],["6606521.svg",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6850047.svg",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2310,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":2376,"title":{},"body":{"dependencies.html":{}}}],["7049525.svg",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7144060.svg",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7195612.svg",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7290921.svg",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7300296.svg",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["_actions",{"_index":2238,"title":{},"body":{"classes/Space.html":{}}}],["_drawpool",{"_index":1244,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":1835,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":2239,"title":{},"body":{"classes/Space.html":{}}}],["_setgamestate",{"_index":1838,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":1844,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":664,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["_transactionstate",{"_index":1836,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["abstract",{"_index":1371,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":1803,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":14,"title":{},"body":{"classes/Action.html":{},"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{}}}],["accesstoken",{"_index":865,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["accesstokenexpire",{"_index":867,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["action",{"_index":1,"title":{"classes/Action.html":{}},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"coverage.html":{}}}],["action.model",{"_index":2267,"title":{},"body":{"classes/Space.html":{}}}],["action_display_abundance",{"_index":2404,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":2406,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption_state",{"_index":1472,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["action_pawn",{"_index":2420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":2433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":2435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":2437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":2439,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":2441,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":2443,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actioncompletecallback",{"_index":19,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actioncompletecallback(nextactioncontext",{"_index":280,"title":{},"body":{"injectables/ActionService.html":{}}}],["actioncontext",{"_index":11,"title":{"interfaces/ActionContext.html":{}},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["actioncontext.actionid",{"_index":409,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actioncontext.currentplayerfactionid",{"_index":143,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["actiondisplayabundance",{"_index":2405,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":2407,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplaymanagerservice",{"_index":50,"title":{"injectables/ActionDisplayManagerService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["actiondisplayservice",{"_index":70,"title":{"interfaces/ActionDisplayService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"coverage.html":{}}}],["actiondisplayservices",{"_index":56,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["actionfunction",{"_index":18,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionFunctionFactoryService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actionfunctionfactoryservice",{"_index":116,"title":{"injectables/ActionFunctionFactoryService.html":{}},"body":{"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["actionid",{"_index":35,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/DrawPoolGameComponent.html":{}}}],["actionidenum",{"_index":131,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"miscellaneous/enumerations.html":{}}}],["actionidenum.place_action_pawn",{"_index":410,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["actionidenum.take_element",{"_index":144,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawn",{"_index":136,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actionpawnamphibian",{"_index":2434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":2436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":2438,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawncomponent",{"_index":149,"title":{"components/ActionPawnComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnforheader",{"_index":493,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawninsect",{"_index":2440,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnmammal",{"_index":2442,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnpiece",{"_index":172,"title":{"interfaces/ActionPawnPiece.html":{}},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["actionpawnpile",{"_index":417,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["actionpawnpileid",{"_index":618,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["actionpawnpilelength",{"_index":494,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnreptile",{"_index":2444,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawns",{"_index":141,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["actionpawnspace",{"_index":319,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["actionpawnspacecomponent",{"_index":199,"title":{"components/ActionPawnSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnspaces",{"_index":299,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnspacessubject",{"_index":321,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actions",{"_index":1828,"title":{},"body":{"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"classes/Space.html":{}}}],["actionservice",{"_index":276,"title":{"injectables/ActionService.html":{}},"body":{"injectables/ActionService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["activatedroute",{"_index":1130,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["acts",{"_index":2064,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["actual_component",{"_index":235,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaption",{"_index":82,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaptionactiondisplayarea",{"_index":1487,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["adaptionactiondisplayarea.nextavailablespace(spacekindenum.element",{"_index":1490,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["adaptionactiondisplaycardcomponent",{"_index":201,"title":{"components/AdaptionActionDisplayCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["adaptionactiondisplayservice",{"_index":63,"title":{"injectables/AdaptionActionDisplayService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["adaptionarea",{"_index":1151,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["add",{"_index":602,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["add_circle",{"_index":1979,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["addactionpawn",{"_index":324,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["addactionpawn(index",{"_index":334,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["added",{"_index":468,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["added/removed",{"_index":2227,"title":{},"body":{"classes/Space.html":{}}}],["addedelements",{"_index":473,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addedelementspaces",{"_index":452,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addelement",{"_index":551,"title":{},"body":{"classes/AnimalElements.html":{}}}],["addelement(element",{"_index":458,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addfriend",{"_index":969,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/PlayerService.html":{}}}],["addfriend(playerid",{"_index":990,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["addfriend(username",{"_index":2154,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfriendtogame",{"_index":970,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["addfriendtogame(playerid",{"_index":993,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["adding/removing",{"_index":2237,"title":{},"body":{"classes/Space.html":{}}}],["addpiece",{"_index":2241,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":2252,"title":{},"body":{"classes/Space.html":{}}}],["adds",{"_index":766,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["alias",{"_index":2309,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2515,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allelements",{"_index":470,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["already",{"_index":1084,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["always",{"_index":2098,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["amount",{"_index":1300,"title":{},"body":{"classes/Faction.html":{}}}],["amphibian",{"_index":2398,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["amphibian_element",{"_index":2408,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":2409,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular/animations",{"_index":2362,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2364,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":527,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1535,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["angular/compiler",{"_index":2366,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1030,"title":{},"body":{"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2367,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1031,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/button",{"_index":1032,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/card",{"_index":304,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/chips",{"_index":1036,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/material/form",{"_index":1027,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/grid",{"_index":521,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/icon",{"_index":1035,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/material/input",{"_index":1033,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/progress",{"_index":1140,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["angular/material/snack",{"_index":1038,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/table",{"_index":1964,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/tooltip",{"_index":1037,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/platform",{"_index":2368,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":644,"title":{},"body":{"components/AppComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/NavigateService.html":{},"dependencies.html":{}}}],["animal",{"_index":128,"title":{"classes/Animal.html":{}},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animal(animalconfig",{"_index":614,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animal.actionpawn.length$.subscribe((length",{"_index":543,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.actionpawn.pullone",{"_index":137,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/DrawPoolGameComponent.html":{}}}],["animal.constant",{"_index":1220,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{}}}],["animal.elements.addelement(element",{"_index":147,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/DrawPoolGameComponent.html":{}}}],["animal.elements.elements$.subscribe((elements",{"_index":539,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.id",{"_index":535,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.species.length$.subscribe((length",{"_index":545,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalbyid",{"_index":565,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalcard",{"_index":1501,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["animalcardcomponent",{"_index":203,"title":{"components/AnimalCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animalconfig",{"_index":423,"title":{"interfaces/AnimalConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["animalelements",{"_index":418,"title":{"classes/AnimalElements.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["animalelements(config.elementarea",{"_index":483,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["animalenum",{"_index":1219,"title":{},"body":{"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":1222,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":1226,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":1230,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":1233,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":1236,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":1239,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalfactory",{"_index":569,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalfactory(animalconfig",{"_index":577,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalkind",{"_index":239,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["animalproviderservice",{"_index":121,"title":{"injectables/AnimalProviderService.html":{}},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["animalreadysubject",{"_index":1571,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalreadysubject.asobservable",{"_index":1579,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalreadysubject.next(true",{"_index":1577,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animals",{"_index":566,"title":{},"body":{"injectables/AnimalProviderService.html":{},"miscellaneous/variables.html":{}}}],["animals.find((animal",{"_index":534,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animals.length",{"_index":1575,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalsready",{"_index":1555,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalssubject",{"_index":567,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalsubscription",{"_index":1572,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["anything",{"_index":733,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["api",{"_index":241,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["apiurlinterceptor",{"_index":2303,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiurlinterceptor(req",{"_index":2464,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":161,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["app.component.html",{"_index":640,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":641,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":204,"title":{"components/AppComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":1693,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":1695,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(oldstate",{"_index":1696,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":1719,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":1738,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":1701,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":2399,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arachnid_element",{"_index":2410,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":2411,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":322,"title":{"classes/Area.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area(areastate",{"_index":1619,"title":{},"body":{"injectables/GameService.html":{}}}],["area.constant",{"_index":1218,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["areaid",{"_index":1213,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":364,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":1225,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":1229,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":1232,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":1235,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":1238,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":1241,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaids",{"_index":625,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaids.has(elementareaid",{"_index":627,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["arearegistryservice",{"_index":331,"title":{"injectables/AreaRegistryService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":576,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areastate",{"_index":670,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["areastateservice",{"_index":750,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":752,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["array",{"_index":370,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{}}}],["array.from",{"_index":1020,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["array.isarray(elements",{"_index":1330,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{}}}],["arrays",{"_index":1430,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["assignedanimal",{"_index":1497,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["associated",{"_index":758,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["assume",{"_index":2111,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["async",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/NavigateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["auth/auth.service",{"_index":1536,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/PlayerService.html":{}}}],["authenticationresult",{"_index":925,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authenticationresulttype",{"_index":829,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["authflow",{"_index":917,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authguard",{"_index":2300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":2305,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor(req",{"_index":2469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authparameters",{"_index":921,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authresult",{"_index":831,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth(authresult",{"_index":828,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":814,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["available",{"_index":402,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["availablefriends",{"_index":960,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["availablespace",{"_index":459,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace.addpiece(element",{"_index":461,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespaces",{"_index":738,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces.length",{"_index":739,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces[0",{"_index":740,"title":{},"body":{"classes/Area.html":{}}}],["await",{"_index":871,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/NavigateService.html":{},"injectables/PlayerService.html":{}}}],["aws",{"_index":849,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["back",{"_index":1308,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{}}}],["bag",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":1039,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["base",{"_index":1372,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["based",{"_index":1827,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["before",{"_index":397,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":76,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{}}}],["behaviorsubject(false",{"_index":78,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/GameReadyService.html":{}}}],["behaviorsubject(this",{"_index":2272,"title":{},"body":{"classes/Space.html":{}}}],["behaviorsubject(this._gamestate",{"_index":1882,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.actionpawnspaces",{"_index":349,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.checkisloggedin",{"_index":859,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.currentplayer",{"_index":2161,"title":{},"body":{"injectables/PlayerService.html":{}}}],["behaviorsubject(this.elementspaces",{"_index":355,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.length",{"_index":2088,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["behaviorsubject(this.ready",{"_index":1259,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["behaviorsubject(this.spaces",{"_index":696,"title":{},"body":{"classes/Area.html":{}}}],["behaviorsubject(this.state",{"_index":1361,"title":{},"body":{"classes/GameElement.html":{}}}],["behaviorsubject>(new",{"_index":774,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":1413,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["bird",{"_index":2400,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bird_element",{"_index":2412,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":2413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blur",{"_index":2200,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["boolean",{"_index":104,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":718,"title":{},"body":{"classes/Area.html":{}}}],["browser",{"_index":2369,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1450,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["build(gametitle",{"_index":1674,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["build(playerids",{"_index":1457,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["buildactiondisplay",{"_index":1451,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildactions",{"_index":59,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["buildactions(actioncontext",{"_index":65,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["buildadaptionactiondisplay",{"_index":1452,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildanimal",{"_index":570,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimal(faction",{"_index":579,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimals",{"_index":571,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildelementdrawpool",{"_index":1453,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildfactions",{"_index":1454,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildfactions(playerids",{"_index":1463,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["building",{"_index":599,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildplaceactionpawninspace",{"_index":118,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["buildplaceactionpawninspace(actioncontext",{"_index":123,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["buildtakeelementfromspace",{"_index":119,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["buildtakeelementfromspace(actioncontext",{"_index":126,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["built",{"_index":1476,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["call",{"_index":1753,"title":{},"body":{"injectables/GameStateService.html":{}}}],["callback",{"_index":66,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["called",{"_index":1832,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":1833,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["canactivatefn",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":295,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card'},{'name",{"_index":202,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["card.component",{"_index":1169,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["card.component.html",{"_index":297,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.scss",{"_index":298,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts",{"_index":294,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:20",{"_index":303,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:21",{"_index":301,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:25",{"_index":302,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:36",{"_index":502,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:37",{"_index":514,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:38",{"_index":515,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:39",{"_index":510,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:40",{"_index":516,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:41",{"_index":508,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:42",{"_index":513,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:44",{"_index":501,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:51",{"_index":505,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:55",{"_index":504,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:76",{"_index":503,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card/adaption",{"_index":293,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["card/animal",{"_index":488,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["case",{"_index":1831,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["catch",{"_index":928,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{}}}],["catch((error",{"_index":2168,"title":{},"body":{"injectables/PlayerService.html":{}}}],["central",{"_index":797,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["change",{"_index":529,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/Space.html":{}}}],["changedetection",{"_index":158,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy",{"_index":181,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":159,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changes",{"_index":800,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{}}}],["characters",{"_index":2214,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["checked",{"_index":2486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkisloggedin",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":0,"title":{"classes/Action.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Action.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"index.html":{}}}],["cleanupgame",{"_index":1586,"title":{},"body":{"injectables/GameService.html":{}}}],["clear",{"_index":1087,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["clearactions",{"_index":60,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"classes/Space.html":{}}}],["cleared",{"_index":396,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["client.service",{"_index":847,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["client.service.ts",{"_index":889,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:12",{"_index":1517,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:14",{"_index":1644,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:15",{"_index":1645,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:16",{"_index":1643,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:17",{"_index":895,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateClientService.html":{}}}],["client.service.ts:18",{"_index":1522,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:20",{"_index":904,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:21",{"_index":1636,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:22",{"_index":1525,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:31",{"_index":1520,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:32",{"_index":1637,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:35",{"_index":1534,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:38",{"_index":1640,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:39",{"_index":1527,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:43",{"_index":1530,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:44",{"_index":901,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:47",{"_index":1528,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:48",{"_index":907,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:51",{"_index":1524,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:60",{"_index":1532,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:70",{"_index":899,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["clientid",{"_index":919,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["close",{"_index":1109,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["code",{"_index":898,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"injectables/SignUpService.html":{}}}],["code).then((success",{"_index":2188,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["cognito",{"_index":846,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["cognitoclient",{"_index":896,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoclientservice",{"_index":825,"title":{"injectables/CognitoClientService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["cognitoidentityproviderclient",{"_index":894,"title":{},"body":{"injectables/CognitoClientService.html":{},"miscellaneous/variables.html":{}}}],["cognitoidtokenjwt",{"_index":903,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["collections",{"_index":651,"title":{},"body":{"classes/Area.html":{}}}],["combinelatest",{"_index":84,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["combinelatest(readyobs",{"_index":101,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["combinelatestwith",{"_index":363,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{}}}],["combinelatestwith(this.arearegistryservice.registeredids",{"_index":376,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["combinelatestwith(this.pileregistryservice.registeredids",{"_index":624,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["command",{"_index":922,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["commit",{"_index":1782,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":1720,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":1702,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate.gameelements",{"_index":1706,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":2100,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["complete",{"_index":288,"title":{},"body":{"injectables/ActionService.html":{},"injectables/GameManagementClientService.html":{}}}],["completegame",{"_index":1507,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["completegame(gameid",{"_index":1519,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["component",{"_index":148,"title":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":197,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["components",{"_index":150,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"index.html":{}}}],["computed",{"_index":506,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["config",{"_index":425,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["config.constant",{"_index":443,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["config.constant.ts",{"_index":1212,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.elementconfig",{"_index":484,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.faction",{"_index":477,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.ts",{"_index":2128,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":231,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["confirmation",{"_index":2190,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["confirmationcode",{"_index":934,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirming",{"_index":938,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignup",{"_index":890,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignup(username",{"_index":897,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignupcommand",{"_index":908,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignupcommand(input",{"_index":935,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["connect",{"_index":1631,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["connect(gameid",{"_index":1635,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["console",{"_index":2019,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["console.error('error",{"_index":937,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error('failed",{"_index":1112,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["console.error('unexpected",{"_index":927,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(e",{"_index":930,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(error",{"_index":1071,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["console.log('actions",{"_index":287,"title":{},"body":{"injectables/ActionService.html":{}}}],["console.log(`created",{"_index":1611,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log(authresult",{"_index":873,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(json.stringify(gsp",{"_index":1663,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":41,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["constant/action.constant",{"_index":132,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["constant/animal.constant",{"_index":240,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/SpeciesPiece.html":{}}}],["constant/area.constant",{"_index":366,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/element",{"_index":442,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/element.constant",{"_index":1280,"title":{},"body":{"interfaces/ElementPiece.html":{}}}],["constant/game",{"_index":1474,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{}}}],["constant/image.constant",{"_index":185,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["constant/local",{"_index":856,"title":{},"body":{"injectables/AuthService.html":{}}}],["constant/piece.constant",{"_index":520,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/pile",{"_index":590,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/pile.constant",{"_index":1266,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor",{"_index":16,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["constructor(actioncontext",{"_index":17,"title":{},"body":{"classes/Action.html":{}}}],["constructor(actiondisplaymanagerservice",{"_index":278,"title":{},"body":{"injectables/ActionService.html":{}}}],["constructor(adaptionactiondisplayservice",{"_index":62,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{}}}],["constructor(animalproviderservice",{"_index":120,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/AnimalCardComponent.html":{}}}],["constructor(arearegistryservice",{"_index":330,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["constructor(arearegistrysvc",{"_index":572,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constructor(areastatesvc",{"_index":749,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(authservice",{"_index":1634,"title":{},"body":{"injectables/GameStateClientService.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(cognitoclient",{"_index":893,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["constructor(cognitoclientservice",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignUpService.html":{}}}],["constructor(config",{"_index":422,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["constructor(elementarea",{"_index":552,"title":{},"body":{"classes/AnimalElements.html":{}}}],["constructor(factionstatesvc",{"_index":1335,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(factorymap",{"_index":1671,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["constructor(fb",{"_index":981,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["constructor(formbuilder",{"_index":2021,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["constructor(gameelementstatesvc",{"_index":1387,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gameservice",{"_index":1955,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["constructor(gamestateservice",{"_index":1557,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["constructor(gamestatestore",{"_index":1732,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":1158,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["constructor(http",{"_index":1515,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["constructor(navigate",{"_index":1588,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(pile",{"_index":2119,"title":{},"body":{"classes/PileAdapter.html":{}}}],["constructor(pileregistrysvc",{"_index":1248,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":2142,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":94,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateClientService.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/SignUpService.html":{}}}],["constructor(protected",{"_index":781,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(route",{"_index":1129,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["constructor(router",{"_index":2039,"title":{},"body":{"injectables/NavigateService.html":{}}}],["constructor(state",{"_index":669,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}}}],["contain",{"_index":656,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["control",{"_index":1055,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.invalid",{"_index":1105,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.seterrors",{"_index":1074,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.seterrors(null",{"_index":1077,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.value",{"_index":1057,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["copied",{"_index":2478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["corresponding",{"_index":801,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["count",{"_index":1254,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["coverage",{"_index":2285,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":207,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["create(oldstate",{"_index":1699,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["created",{"_index":2231,"title":{},"body":{"classes/Space.html":{}}}],["creategame",{"_index":971,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["creategame(game",{"_index":1521,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["creategame(otherplayers",{"_index":1592,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamepagecomponent",{"_index":206,"title":{"components/CreateGamePageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["creates",{"_index":1692,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["creating",{"_index":1117,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameStateInitializationService.html":{}}}],["current",{"_index":715,"title":{},"body":{"classes/Area.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentcount",{"_index":2105,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentitemcount",{"_index":2113,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentplayer",{"_index":1567,"title":{},"body":{"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["currentplayer()?.username",{"_index":1981,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["currentplayeranimal",{"_index":495,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["currentplayerfaction",{"_index":1152,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["currentplayerfactionid",{"_index":37,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/DrawPoolGameComponent.html":{}}}],["currentplayerready",{"_index":1556,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentplayersubject",{"_index":1564,"title":{},"body":{"injectables/GameReadyService.html":{},"injectables/PlayerService.html":{}}}],["currentplayersubject.asobservable",{"_index":1570,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentplayersubject.next(true",{"_index":1568,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentplayersubscription",{"_index":1565,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentuser",{"_index":961,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["custom",{"_index":2493,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":887,"title":{},"body":{"injectables/AuthService.html":{}}}],["decode",{"_index":915,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["decodejwttoken",{"_index":891,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decodejwttoken(token",{"_index":900,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decreasescore",{"_index":1293,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":1298,"title":{},"body":{"classes/Faction.html":{}}}],["deepclone",{"_index":1355,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Space.html":{}}}],["deepclone(action_display_adaption_state",{"_index":1488,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["deepclone(emptygameelementstates",{"_index":1480,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["deepclone(oldstate",{"_index":1708,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["deepclone(this._gamestate",{"_index":1905,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":1365,"title":{},"body":{"classes/GameElement.html":{}}}],["deepclone(this._transactionstate",{"_index":1906,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":2342,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":2470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deepfreeze",{"_index":2345,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deepfreeze(obj",{"_index":2475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":73,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":517,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":2501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultpiecefactory(piecekindenum.action_pawn",{"_index":547,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["defaults",{"_index":2076,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["definition",{"_index":2065,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["delay",{"_index":1658,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["delete",{"_index":1982,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["deletedstoragekey",{"_index":1985,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deletedstoragekey(key",{"_index":1988,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["demand",{"_index":1477,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["dependencies",{"_index":2361,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depends",{"_index":1379,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["description",{"_index":649,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":1915,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":2472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["different",{"_index":1385,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["directive",{"_index":195,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["directives",{"_index":234,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["disconnect",{"_index":1632,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["disconnectfrombackend",{"_index":1721,"title":{},"body":{"injectables/GameStateService.html":{}}}],["display",{"_index":54,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["display.model",{"_index":90,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["display.model.ts",{"_index":114,"title":{},"body":{"interfaces/ActionDisplayService.html":{},"coverage.html":{}}}],["display.service",{"_index":83,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["display.service.ts",{"_index":320,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:103",{"_index":337,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:129",{"_index":338,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:21",{"_index":351,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:22",{"_index":346,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:23",{"_index":350,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:24",{"_index":348,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:26",{"_index":352,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:27",{"_index":356,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:28",{"_index":354,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:29",{"_index":357,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:30",{"_index":333,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:40",{"_index":339,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:68",{"_index":345,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:85",{"_index":343,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:89",{"_index":344,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:95",{"_index":336,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:99",{"_index":341,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display/action",{"_index":53,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["display/adaption",{"_index":292,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["display/space/action",{"_index":244,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"coverage.html":{}}}],["display/space/element",{"_index":1171,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component",{"_index":1170,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["display/space/eyeball/eyeball.component.ts",{"_index":1287,"title":{},"body":{"components/EyeballComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component.ts:14",{"_index":1291,"title":{},"body":{"components/EyeballComponent.html":{}}}],["distinctuntilchanged",{"_index":2084,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":2286,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1368,"title":{},"body":{"classes/GameElement.html":{}}}],["dom",{"_index":152,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["dominant",{"_index":211,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dominant_species",{"_index":2428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dominantspeciesgamecomponent",{"_index":210,"title":{"components/DominantSpeciesGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["done",{"_index":728,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":215,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["drawpool",{"_index":1247,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["drawpoolgamecomponent",{"_index":214,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["duplicate",{"_index":1085,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["duration",{"_index":1110,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["during",{"_index":1830,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":2370,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":929,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["each",{"_index":653,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["eagle",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":145,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element'},{'name",{"_index":218,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["element.component.html",{"_index":1201,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.component.scss",{"_index":1202,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.constant",{"_index":1217,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["element.id",{"_index":1410,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":465,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["element.model",{"_index":446,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["element.model.ts",{"_index":1346,"title":{},"body":{"classes/GameElement.html":{},"coverage.html":{}}}],["element.model.ts:16",{"_index":1352,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:20",{"_index":1354,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:28",{"_index":1351,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:36",{"_index":1350,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:6",{"_index":1348,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:7",{"_index":1349,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:8",{"_index":1347,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":1439,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":1442,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":359,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["element/element.component",{"_index":523,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["element/faction",{"_index":592,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["element/game",{"_index":1370,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":593,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["element_draw_pool_state",{"_index":1473,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementarea",{"_index":447,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["elementareaid",{"_index":615,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["elementareaidsbyanimal",{"_index":2352,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbyid",{"_index":745,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementcomponent",{"_index":217,"title":{"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementconfig",{"_index":441,"title":{"interfaces/ElementConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{}}}],["elementconfig.inherentcount",{"_index":456,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementconfigbyanimal",{"_index":591,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpool",{"_index":1448,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["elementdrawpoolservice",{"_index":332,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["elementenum",{"_index":1216,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":1234,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":1227,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":1237,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":1231,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":1240,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":1223,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":1215,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["elementpiece",{"_index":133,"title":{"interfaces/ElementPiece.html":{}},"body":{"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["elementpiece).filter(isnotnull",{"_index":475,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elements",{"_index":421,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.length).fill(null",{"_index":542,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["elementsarray",{"_index":1329,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{}}}],["elementsarray.foreach((element",{"_index":1405,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elementsarray.foreach((faction",{"_index":1332,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elementspace",{"_index":317,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementSpaceComponent.html":{},"miscellaneous/variables.html":{}}}],["elementspace.removepiece",{"_index":466,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacecomponent",{"_index":219,"title":{"components/ElementSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementspaces",{"_index":300,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.length",{"_index":455,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.slice(elementconfig.inherentcount",{"_index":457,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacesstate",{"_index":1502,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["elementspacessubject",{"_index":323,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["elementssubject",{"_index":448,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementstate",{"_index":787,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["email",{"_index":906,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["emit",{"_index":1824,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitlength",{"_index":2058,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emitpilestate",{"_index":2059,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emits",{"_index":769,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["emitstate",{"_index":668,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["emitted",{"_index":1307,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{}}}],["empty",{"_index":1090,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}}}],["emptycontrol",{"_index":1093,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["emptycontrol.setvalue(playerid",{"_index":1097,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["emptyelementspace",{"_index":549,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptyelementspaces",{"_index":496,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptygameelementstates",{"_index":1469,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptygamestate",{"_index":1934,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1198,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["endturn",{"_index":1155,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["engine/model/action.model",{"_index":91,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["engine/model/area.model",{"_index":362,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/faction.model",{"_index":438,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/game",{"_index":1470,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/piece.model",{"_index":518,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/pile.model",{"_index":440,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/space.model",{"_index":130,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementSpaceComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/service/game",{"_index":358,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["engine/service/navigate.service",{"_index":1142,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["engine/util/misc",{"_index":187,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/util/predicate",{"_index":310,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensure",{"_index":1078,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["ensuredefined",{"_index":367,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensuredefined(authresult.idtoken",{"_index":866,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(authresult.refreshtoken",{"_index":870,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt.exp",{"_index":868,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt['cognito:username",{"_index":864,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(this._gamestate).gameelements",{"_index":1903,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].addpiece(actionpawn",{"_index":407,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].removepiece",{"_index":408,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.area).clearactions",{"_index":415,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.area).nextavailablespace(spacekindenum.element",{"_index":400,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.authservice.playerauthdata",{"_index":1650,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["ensuredefined(this.currentplayer).friends",{"_index":2174,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.filter",{"_index":2175,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.push(username",{"_index":2172,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayerfaction).id",{"_index":1185,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["ensuredefined(this.currentuser).friends.filter",{"_index":1101,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ensuredefined(this.currentuser).friends.includes(playerid",{"_index":1106,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ensuredefined(this.elementarea",{"_index":471,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).nextavailablespace",{"_index":460,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).spaces",{"_index":453,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementconfig",{"_index":454,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementspaces",{"_index":404,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementspaces)[index].removepiece",{"_index":403,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.gamestatestore.gamestate",{"_index":1784,"title":{},"body":{"injectables/GameStateService.html":{}}}],["ensuredefined(this.playerservice.currentplayer).username",{"_index":512,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ensuredefined(value",{"_index":2481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensures",{"_index":1913,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["enter",{"_index":2211,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["entire",{"_index":1821,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":806,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":1440,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":1436,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enumerations",{"_index":2382,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":912,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateClientService.html":{}}}],["environment.cognito.clientid",{"_index":920,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.region",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.stateendpoint}/?token=${playerauthdata.accesstoken}&gameid=${gameid}&playerid=${playerauthdata.username",{"_index":1653,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["environments/environment",{"_index":913,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateClientService.html":{}}}],["equal",{"_index":2473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":936,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":1911,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":1367,"title":{},"body":{"classes/GameElement.html":{}}}],["error('animal",{"_index":140,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["error('can",{"_index":1902,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('drawpool",{"_index":1491,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["error('element",{"_index":395,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["error('gamestate",{"_index":1908,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":1665,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":274,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"components/ElementSpaceComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["error('number",{"_index":714,"title":{},"body":{"classes/Area.html":{}}}],["error('pile",{"_index":1274,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["error('space",{"_index":2279,"title":{},"body":{"classes/Space.html":{}}}],["error('state",{"_index":710,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["error('transaction",{"_index":1788,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":467,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["error(`element",{"_index":1409,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":1444,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":1899,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(`unable",{"_index":1689,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["errorhandlerinterceptor",{"_index":2308,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorhandlerinterceptor(req",{"_index":2502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errormessage",{"_index":2006,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["errormessages",{"_index":962,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["errormessages[i",{"_index":1118,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["etc",{"_index":2232,"title":{},"body":{"classes/Space.html":{}}}],["even",{"_index":2236,"title":{},"body":{"classes/Space.html":{}}}],["eventcoalescing",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":13,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{}}}],["exist",{"_index":2491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":1369,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":33,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["extends",{"_index":237,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SpeciesPiece.html":{}}}],["eye",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeball",{"_index":1288,"title":{},"body":{"components/EyeballComponent.html":{},"miscellaneous/variables.html":{}}}],["eyeball'},{'name",{"_index":221,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["eyeball.component.html",{"_index":1289,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball.component.scss",{"_index":1290,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball/eyeball.component",{"_index":264,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["eyeballcomponent",{"_index":220,"title":{"components/EyeballComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["faction",{"_index":419,"title":{"classes/Faction.html":{}},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction().name",{"_index":548,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["faction(state",{"_index":1622,"title":{},"body":{"injectables/GameService.html":{}}}],["faction.id",{"_index":632,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.id).actionpawn",{"_index":620,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).areaid",{"_index":617,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).species",{"_index":622,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.ownerid",{"_index":1178,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionassignment",{"_index":1320,"title":{"interfaces/FactionAssignment.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.factionid",{"_index":607,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionassignments.map((factionassignment",{"_index":606,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["factionassignmentsubject",{"_index":1324,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionid",{"_index":1321,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionids",{"_index":605,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess",{"_index":608,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess.foreach((factionid",{"_index":611,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionregistryservice",{"_index":573,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":1159,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factions",{"_index":1153,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionstate",{"_index":1315,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["factionstateservice",{"_index":1323,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":1327,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":1669,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["factory.service",{"_index":369,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateInitializationService.html":{}}}],["factory.service.ts",{"_index":117,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{}}}],["factory.service.ts:11",{"_index":122,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["factory.service.ts:14",{"_index":125,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["factory.service.ts:25",{"_index":1456,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:26",{"_index":1455,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:30",{"_index":127,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["factory.service.ts:33",{"_index":1458,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:42",{"_index":1462,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:46",{"_index":1461,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:65",{"_index":1460,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:69",{"_index":1464,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory_map",{"_index":1680,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["factorybygametitle",{"_index":1670,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["factorymap",{"_index":1673,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["failed",{"_index":2017,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["false",{"_index":878,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1356,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["fb",{"_index":989,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetcherror",{"_index":1075,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetchgames",{"_index":1953,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["fetching",{"_index":1073,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetchplayers",{"_index":972,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetchplayers(index",{"_index":996,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["field",{"_index":1028,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["filter",{"_index":85,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["filter((ids",{"_index":1181,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((isready",{"_index":1146,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["filter((player",{"_index":1969,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filter((registeredids",{"_index":1268,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["filter((serviceready",{"_index":106,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["filter((space",{"_index":405,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["filter(isnotundefined",{"_index":537,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["filteredplayers",{"_index":963,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["filterplayers",{"_index":1954,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filterplayers(game",{"_index":1960,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["findplayers",{"_index":1508,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["findplayers(username",{"_index":1523,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["first",{"_index":86,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{}}}],["first()).subscribe",{"_index":312,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["foreach((space",{"_index":411,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["formarray",{"_index":1016,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["formbuilder",{"_index":982,"title":{},"body":{"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formcontrol",{"_index":1029,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["formgroup",{"_index":2000,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formsmodule",{"_index":945,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["found",{"_index":2494,"title":{},"body":{"miscellaneous/functions.html":{}}}],["friend",{"_index":1102,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["friends",{"_index":1120,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{}}}],["friendusername",{"_index":2176,"title":{},"body":{"injectables/PlayerService.html":{}}}],["function",{"_index":115,"title":{},"body":{"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2457,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":208,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["game'},{'name",{"_index":213,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["game.component",{"_index":647,"title":{},"body":{"components/AppComponent.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["game.component.html",{"_index":1125,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":1126,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":1123,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:18",{"_index":1132,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["game.component.ts:26",{"_index":1138,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["game.component.ts:41",{"_index":1166,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:42",{"_index":1167,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:43",{"_index":1137,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:44",{"_index":1160,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:47",{"_index":1135,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["game.component.ts:56",{"_index":1163,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:76",{"_index":1164,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:84",{"_index":1162,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:88",{"_index":1165,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.gameid",{"_index":1980,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.host",{"_index":1970,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.playerids",{"_index":1968,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game/component/draw",{"_index":645,"title":{},"body":{"components/AppComponent.html":{}}}],["game/dominant",{"_index":1122,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"coverage.html":{}}}],["game/draw",{"_index":646,"title":{},"body":{"components/AppComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game/service/game",{"_index":1679,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gamecollection",{"_index":1537,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gamecollection.games",{"_index":1544,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gameelement",{"_index":660,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelement's",{"_index":1426,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["gameelement:28",{"_index":1305,"title":{},"body":{"classes/Faction.html":{}}}],["gameelement:36",{"_index":689,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:39",{"_index":687,"title":{},"body":{"classes/Area.html":{},"classes/Pile.html":{}}}],["gameelement:6",{"_index":677,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:7",{"_index":679,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:8",{"_index":678,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement`'s",{"_index":1433,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["gameelementregistryservice",{"_index":744,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:31",{"_index":1337,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelementregistryservice:35",{"_index":776,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:36",{"_index":773,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:37",{"_index":775,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:39",{"_index":778,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:50",{"_index":753,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:65",{"_index":761,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelements",{"_index":1936,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["gameelementsfactory",{"_index":1686,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementsfactory.build(playerids",{"_index":1688,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementsfactoryclass",{"_index":1684,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementstate",{"_index":799,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstates",{"_index":1449,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["gameelementstateservice",{"_index":771,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:103",{"_index":803,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:14",{"_index":789,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:18",{"_index":791,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:30",{"_index":808,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:31",{"_index":807,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:70",{"_index":794,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:88",{"_index":793,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesfactoryservice",{"_index":1445,"title":{"classes/GameElementStatesFactoryService.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gameelementstatesvc",{"_index":1390,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gameid",{"_index":1136,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/NavigateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamemanagementclientservice",{"_index":1504,"title":{"injectables/GameManagementClientService.html":{}},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["gameready",{"_index":1127,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["gamereadyservice",{"_index":1131,"title":{"injectables/GameReadyService.html":{}},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["games",{"_index":1951,"title":{},"body":{"components/LobbyPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["gameservice",{"_index":987,"title":{"injectables/GameService.html":{}},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["gamestate",{"_index":1309,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamestate.gameelements",{"_index":1687,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gamestate.gameelements.area",{"_index":1920,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.area.foreach((areastate",{"_index":1617,"title":{},"body":{"injectables/GameService.html":{}}}],["gamestate.gameelements.faction",{"_index":1923,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.faction.foreach((state",{"_index":1620,"title":{},"body":{"injectables/GameService.html":{}}}],["gamestate.gameelements.pile",{"_index":1926,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.pile.foreach((state",{"_index":1623,"title":{},"body":{"injectables/GameService.html":{}}}],["gamestate.gameid",{"_index":1884,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.patchid",{"_index":1886,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.playerids",{"_index":1885,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateclient",{"_index":1735,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":1627,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":1856,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateinitializationservice",{"_index":1478,"title":{"injectables/GameStateInitializationService.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["gamestatepatch",{"_index":1639,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["gamestatepatches",{"_index":1694,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":1690,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":804,"title":{"injectables/GameStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gamestateservice's",{"_index":798,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["gamestateservice`'s",{"_index":1434,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["gamestatestore",{"_index":1737,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":1733,"title":{"injectables/GameStateStoreService.html":{}},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":1837,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":1161,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["gamestoreservice",{"_index":1931,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["gametablecolumns",{"_index":1952,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["gametitle",{"_index":1601,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/NavigateService.html":{},"miscellaneous/enumerations.html":{}}}],["gametitle.dominant_species",{"_index":1609,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"miscellaneous/variables.html":{}}}],["gecko",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(id",{"_index":582,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getactionpawn",{"_index":432,"title":{},"body":{"classes/Animal.html":{}}}],["getactionpawnforheader",{"_index":498,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getactions",{"_index":2263,"title":{},"body":{"classes/Space.html":{}}}],["getaddedelements",{"_index":561,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getaddedelementspaces",{"_index":557,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getallelements",{"_index":559,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getanimal",{"_index":499,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getarea",{"_index":1765,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":1261,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelements",{"_index":434,"title":{},"body":{"classes/Animal.html":{}}}],["getelementstate",{"_index":809,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getemptyinitialgamestate",{"_index":1677,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getemptyinitialgamestate(gameid",{"_index":1683,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"miscellaneous/functions.html":{}}}],["getentity",{"_index":786,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":792,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":1767,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamesforloggedinplayer",{"_index":1509,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["getgamestate",{"_index":1872,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getid",{"_index":31,"title":{},"body":{"classes/Action.html":{},"classes/Animal.html":{},"classes/GameElement.html":{}}}],["getimgpath",{"_index":179,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getkind",{"_index":1204,"title":{},"body":{"components/ElementComponent.html":{}}}],["getlatestgamestate",{"_index":1510,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getlatestgamestate(gameid",{"_index":1526,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getlength",{"_index":1263,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["getloggedinplayer",{"_index":1511,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["getloggedinusername",{"_index":844,"title":{},"body":{"injectables/AuthService.html":{}}}],["getname",{"_index":177,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{}}}],["getobservableforkey",{"_index":1839,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":1847,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":186,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":616,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["getorthrow(imgpathbykind",{"_index":192,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getorthrow(map",{"_index":2488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorthrow(pileidsbyanimal",{"_index":619,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.animalbyid",{"_index":637,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.elementbyid",{"_index":1403,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["getowner",{"_index":175,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["getownerid",{"_index":1311,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":2265,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":1769,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getplayer",{"_index":1512,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayer(username",{"_index":1529,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayerauthdata",{"_index":842,"title":{},"body":{"injectables/AuthService.html":{}}}],["getplayerids",{"_index":1763,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getscore",{"_index":1313,"title":{},"body":{"classes/Faction.html":{}}}],["getspecies",{"_index":436,"title":{},"body":{"classes/Animal.html":{}}}],["getstate",{"_index":1353,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["getstoragekey",{"_index":1986,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getstoragekey(key",{"_index":1990,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getting",{"_index":1668,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gettransactionstate",{"_index":1874,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":759,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["grass",{"_index":2421,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grasshopper",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grub",{"_index":2422,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gsp",{"_index":729,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["gsp.patch",{"_index":1710,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gsp.patchid",{"_index":1713,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":1734,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gspsubject",{"_index":1628,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["handle",{"_index":1380,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["handler.interceptor.ts",{"_index":2307,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handles",{"_index":1415,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["happen",{"_index":2230,"title":{},"body":{"classes/Space.html":{}}}],["happens",{"_index":1306,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{}}}],["hasaction",{"_index":251,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["hasinvalidplayer",{"_index":973,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["hasvalidplayers",{"_index":974,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["having",{"_index":2234,"title":{},"body":{"classes/Space.html":{}}}],["here",{"_index":2025,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["hold",{"_index":372,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["host",{"_index":1606,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["html",{"_index":194,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["http",{"_index":1518,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httpclient",{"_index":1516,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httphandlerfn",{"_index":2467,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httprequest",{"_index":2465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["human",{"_index":1599,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["humanid",{"_index":1598,"title":{},"body":{"injectables/GameService.html":{}}}],["i.e",{"_index":2482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":15,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2287,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":851,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["ids",{"_index":770,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["ids.has(areaidenum.action_display_adaption",{"_index":1182,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["imgpath",{"_index":171,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["imgpathbykind",{"_index":184,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":1418,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["implementations",{"_index":1384,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["implements",{"_index":247,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"components/LogoutPageComponent.html":{}}}],["import",{"_index":80,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["imports",{"_index":188,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["included",{"_index":2063,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["increasescore",{"_index":1294,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":1301,"title":{},"body":{"classes/Faction.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":2483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["individual",{"_index":1414,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["information",{"_index":2020,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["inherent",{"_index":1503,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["inherentcount",{"_index":1214,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":676,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["initial",{"_index":1667,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["initialgameelementstatesfactory",{"_index":1447,"title":{"interfaces/InitialGameElementStatesFactory.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{}}}],["initialgameelementstatesfactoryconstructor",{"_index":1678,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["initialgamestate",{"_index":1607,"title":{},"body":{"injectables/GameService.html":{}}}],["initialization",{"_index":1492,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"miscellaneous/functions.html":{}}}],["initialization.service",{"_index":1600,"title":{},"body":{"injectables/GameService.html":{}}}],["initialization.service.ts",{"_index":1666,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization.service.ts:24",{"_index":1672,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["initialization.service.ts:34",{"_index":1675,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["initialize",{"_index":325,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"injectables/PileStateService.html":{}}}],["initialized",{"_index":1806,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["initializegame",{"_index":1128,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{}}}],["initializegame(gameid",{"_index":1134,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{}}}],["initializegamestate",{"_index":1722,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["initializegamestate(gamestate",{"_index":1742,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["initializes",{"_index":795,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["initiateauthcommand",{"_index":909,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommand(input",{"_index":923,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommandinput",{"_index":910,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["inject",{"_index":1676,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["inject('factory_map",{"_index":1681,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["inject(authservice).checkisloggedin",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(navigateservice).tologinpage",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":49,"title":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["injectables",{"_index":51,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"index.html":{}}}],["input",{"_index":182,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["input.required",{"_index":265,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["inputs",{"_index":169,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["insect",{"_index":2401,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["insect_element",{"_index":2414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":2415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instances",{"_index":763,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["instantiated",{"_index":1805,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["intended",{"_index":2477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interact",{"_index":1419,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{}}}],["interested",{"_index":734,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["interface",{"_index":34,"title":{"interfaces/ActionContext.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{}},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameStateService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["interfaces",{"_index":48,"title":{},"body":{"interfaces/ActionContext.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{},"index.html":{}}}],["internal",{"_index":767,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["invalid",{"_index":1081,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["inventory",{"_index":2112,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["isfalse",{"_index":2347,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfalse(value",{"_index":2503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfriend",{"_index":975,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isfriend(playerid",{"_index":1000,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isgamefullorinvalid",{"_index":976,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isloggedin",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlayerService.html":{}}}],["isloggedinsubject",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotnull",{"_index":368,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":2504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":525,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(value",{"_index":2505,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":2348,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(value",{"_index":2506,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isplayeralreadyadded",{"_index":1095,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isready",{"_index":377,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["istrue",{"_index":309,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istrue(value",{"_index":2507,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":720,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["item.id",{"_index":1896,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["items",{"_index":2499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["itself",{"_index":2487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["joingame",{"_index":1587,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["joingame(gameid",{"_index":1596,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["joins",{"_index":1933,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["json",{"_index":1357,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["json.parse(playerauthdata",{"_index":883,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(element",{"_index":469,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["json.stringify(message",{"_index":1656,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["json.stringify(newgamestateelement",{"_index":1900,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["json.stringify(this.authresulttoplayerauth(authresult",{"_index":876,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":862,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":914,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["jwtdecode(token",{"_index":931,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["k",{"_index":2489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keeps",{"_index":659,"title":{},"body":{"classes/Area.html":{},"injectables/GameElementRegistryService.html":{}}}],["key",{"_index":1813,"title":{},"body":{"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":1890,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":1809,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":684,"title":{},"body":{"classes/Area.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":1538,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/game/${gameid}/state",{"_index":1547,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/player/${username",{"_index":1548,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/game/${gameid",{"_index":1545,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/player/${player.username",{"_index":1552,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post('/game",{"_index":1540,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post(`/game/${gamestate.gameid}/state",{"_index":1546,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["leads",{"_index":2233,"title":{},"body":{"classes/Space.html":{}}}],["leaf",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaving",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":193,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["length",{"_index":1021,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["lengthsubject",{"_index":2056,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["level",{"_index":1808,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["lifecycle",{"_index":1585,"title":{},"body":{"injectables/GameService.html":{}}}],["list",{"_index":522,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["listening",{"_index":1416,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["lobby",{"_index":223,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["lobbypagecomponent",{"_index":222,"title":{"components/LobbyPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["local",{"_index":725,"title":{},"body":{"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/GameStateStoreService.html":{}}}],["localstorage.getitem(key",{"_index":1995,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1994,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":1996,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstoragekey",{"_index":855,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["localstoragekey.player_auth_data",{"_index":875,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorageservice",{"_index":826,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["lodash",{"_index":1468,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"dependencies.html":{}}}],["log",{"_index":1154,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["logged",{"_index":886,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedinusername",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":225,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["login(username",{"_index":833,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["loginform",{"_index":2005,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["loginformdata",{"_index":1997,"title":{"interfaces/LoginFormData.html":{}},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecomponent",{"_index":224,"title":{"components/LoginPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["logout",{"_index":227,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["logoutpagecomponent",{"_index":226,"title":{"components/LogoutPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["long",{"_index":2215,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["maintain",{"_index":1801,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["maintains",{"_index":657,"title":{},"body":{"classes/Area.html":{}}}],["making",{"_index":1802,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":2402,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mammal_element",{"_index":2416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":2417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["managed",{"_index":1399,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["management",{"_index":1506,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["management/game",{"_index":1505,"title":{},"body":{"injectables/GameManagementClientService.html":{},"coverage.html":{}}}],["management/game.service",{"_index":1026,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["management/game.service.ts",{"_index":1583,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["management/game.service.ts:23",{"_index":1589,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:35",{"_index":1593,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:52",{"_index":1594,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:56",{"_index":1591,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:60",{"_index":1597,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:64",{"_index":1595,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:78",{"_index":1590,"title":{},"body":{"injectables/GameService.html":{}}}],["management/player.service",{"_index":526,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{}}}],["management/player.service.ts",{"_index":2151,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["management/player.service.ts:12",{"_index":2159,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:13",{"_index":2162,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:16",{"_index":2153,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:40",{"_index":2156,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:45",{"_index":2155,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:51",{"_index":2158,"title":{},"body":{"injectables/PlayerService.html":{}}}],["manager.service",{"_index":284,"title":{},"body":{"injectables/ActionService.html":{},"injectables/GameReadyService.html":{}}}],["manager.service.ts",{"_index":55,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"coverage.html":{}}}],["manager.service.ts:11",{"_index":71,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:12",{"_index":79,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:13",{"_index":64,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:20",{"_index":69,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:33",{"_index":67,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:39",{"_index":68,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manages",{"_index":1373,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["map",{"_index":87,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateInitializationService.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((animals",{"_index":533,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["map((serviceready",{"_index":103,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["map((space",{"_index":406,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["matautocomplete",{"_index":947,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matautocompletetrigger",{"_index":946,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matbutton",{"_index":949,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcard",{"_index":296,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardcontent",{"_index":2004,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardheader",{"_index":2194,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardtitle",{"_index":489,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matcell",{"_index":1942,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcelldef",{"_index":1948,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["match",{"_index":711,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["matches",{"_index":1867,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":47,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchip",{"_index":956,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["matchipset",{"_index":1950,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcolumndef",{"_index":1940,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matformfield",{"_index":943,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matformfieldmodule",{"_index":944,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matgridlist",{"_index":490,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matgridtile",{"_index":491,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matheadercell",{"_index":1941,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheadercelldef",{"_index":1947,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrow",{"_index":1943,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrowdef",{"_index":1945,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["maticon",{"_index":954,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["maticonbutton",{"_index":955,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matinput",{"_index":950,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matminifabbutton",{"_index":1949,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matoption",{"_index":948,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matprogressspinner",{"_index":1124,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["matrow",{"_index":1944,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matrowdef",{"_index":1946,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matsnackbar",{"_index":986,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["mattable",{"_index":1939,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["mattooltip",{"_index":957,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["max_players",{"_index":964,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["meat",{"_index":2423,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":1655,"title":{},"body":{"injectables/GameStateClientService.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":157,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["method",{"_index":765,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["minimize",{"_index":598,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["miscellaneous",{"_index":2381,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model/action",{"_index":89,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{}}}],["model/animal.model",{"_index":595,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["model/area.model",{"_index":779,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameService.html":{}}}],["model/element.model",{"_index":134,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{}}}],["model/faction.model",{"_index":1322,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameService.html":{}}}],["model/game",{"_index":1396,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/pile.model",{"_index":1603,"title":{},"body":{"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":853,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules",{"_index":2512,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monkey",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":655,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{}}}],["name",{"_index":24,"title":{},"body":{"classes/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":983,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["navigate.service",{"_index":1604,"title":{},"body":{"injectables/GameService.html":{}}}],["navigateservice",{"_index":984,"title":{"injectables/NavigateService.html":{}},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["need",{"_index":717,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["needs",{"_index":735,"title":{},"body":{"classes/Area.html":{}}}],["new",{"_index":77,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newdocument",{"_index":1711,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newgamestateelement",{"_index":1854,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":1897,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":688,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["newstate.gameelements",{"_index":1707,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.id",{"_index":708,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["newstate.kind",{"_index":2282,"title":{},"body":{"classes/Space.html":{}}}],["newstate.patchid",{"_index":1712,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.piece",{"_index":2283,"title":{},"body":{"classes/Space.html":{}}}],["newstate.space.foreach((spacestate",{"_index":716,"title":{},"body":{"classes/Area.html":{}}}],["newstate.space.length",{"_index":713,"title":{},"body":{"classes/Area.html":{}}}],["next",{"_index":2466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextactioncontext",{"_index":39,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionService.html":{}}}],["nextactionpawnspaceindex",{"_index":1189,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextavailablespace",{"_index":666,"title":{},"body":{"classes/Area.html":{}}}],["nextavailablespace(kind",{"_index":682,"title":{},"body":{"classes/Area.html":{}}}],["nextelementspaceindex",{"_index":1192,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextspace",{"_index":399,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["nextspace.addpiece(element",{"_index":401,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["ngclass",{"_index":492,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ngforof",{"_index":951,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ngif",{"_index":952,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ngondestroy",{"_index":977,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["ngoninit",{"_index":252,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"components/LogoutPageComponent.html":{}}}],["notifications",{"_index":732,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["notified",{"_index":2229,"title":{},"body":{"classes/Space.html":{}}}],["notifies",{"_index":1377,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["notify",{"_index":719,"title":{},"body":{"classes/Area.html":{}}}],["notifychange",{"_index":2242,"title":{},"body":{"classes/Space.html":{}}}],["notifychange(statechange",{"_index":2255,"title":{},"body":{"classes/Space.html":{}}}],["null",{"_index":38,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":335,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/CreateGamePageComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PlayerAuthData.html":{},"miscellaneous/functions.html":{}}}],["obj",{"_index":2480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":658,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":2091,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["object1",{"_index":2474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":2471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":736,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":72,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":1810,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["observers",{"_index":1378,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["of(0",{"_index":1276,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["of(selector(gamestate",{"_index":1889,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["oldstate",{"_index":1698,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameelements",{"_index":1709,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameid",{"_index":1703,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.patchid",{"_index":1705,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":1857,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ondestroy",{"_index":942,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["one",{"_index":654,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["oninit",{"_index":248,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"components/LogoutPageComponent.html":{}}}],["onplayerblur",{"_index":978,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onplayerblur(index",{"_index":1005,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onplayerinput",{"_index":979,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onplayerinput(index",{"_index":1007,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onpush",{"_index":530,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["onsubmit",{"_index":2010,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["optional",{"_index":26,"title":{},"body":{"classes/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":1716,"title":{},"body":{"injectables/GameStateService.html":{}}}],["otherplayers",{"_index":1113,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameService.html":{}}}],["others",{"_index":1804,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":707,"title":{},"body":{"classes/Area.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["overview",{"_index":2508,"title":{"index.html":{}},"body":{"index.html":{}}}],["overwrites",{"_index":1822,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":170,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ownerid",{"_index":1296,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["package",{"_index":2360,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":233,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page'},{'name",{"_index":209,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.html",{"_index":958,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.scss",{"_index":959,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts",{"_index":941,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:118",{"_index":1008,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:12",{"_index":2028,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:122",{"_index":1006,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:164",{"_index":1002,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:170",{"_index":994,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:18",{"_index":2029,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:184",{"_index":1009,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:191",{"_index":999,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:195",{"_index":998,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:199",{"_index":991,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:211",{"_index":1001,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:215",{"_index":995,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:22",{"_index":2192,"title":{},"body":{"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:23",{"_index":2024,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts:24",{"_index":2022,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts:36",{"_index":2191,"title":{},"body":{"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:37",{"_index":2023,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:41",{"_index":2205,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:49",{"_index":1962,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:50",{"_index":1963,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:51",{"_index":1956,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:52",{"_index":1015,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:53",{"_index":1017,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:54",{"_index":1019,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:55",{"_index":1011,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:56",{"_index":1013,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:57",{"_index":1012,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:58",{"_index":1023,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:59",{"_index":1010,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:60",{"_index":988,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:64",{"_index":1961,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:71",{"_index":1959,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:74",{"_index":1004,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:75",{"_index":1958,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:79",{"_index":1957,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:84",{"_index":1003,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["page.component.ts:90",{"_index":997,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page/create",{"_index":940,"title":{},"body":{"components/CreateGamePageComponent.html":{},"coverage.html":{}}}],["page/lobby",{"_index":1938,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":1999,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/logout",{"_index":2027,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["page/sign",{"_index":2179,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":1366,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"classes/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1542,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["part",{"_index":2224,"title":{},"body":{"classes/Space.html":{}}}],["particular",{"_index":1816,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["parties",{"_index":2228,"title":{},"body":{"classes/Space.html":{}}}],["passed",{"_index":1868,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["password",{"_index":834,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["password).then((success",{"_index":2014,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["patch",{"_index":1358,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["patch.service",{"_index":1772,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":1691,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:12",{"_index":1700,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":1697,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patchid",{"_index":1704,"title":{},"body":{"injectables/GameStatePatchService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["pawn",{"_index":162,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pawn'},{'name",{"_index":198,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["pawn.component",{"_index":263,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.component.html",{"_index":166,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.scss",{"_index":168,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts",{"_index":156,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["pawn.component.ts:15",{"_index":174,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:17",{"_index":176,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:21",{"_index":178,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:25",{"_index":180,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.model",{"_index":183,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pawn.model.ts",{"_index":236,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["pawn/action",{"_index":155,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["pawns",{"_index":550,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["perform",{"_index":275,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["performaction",{"_index":253,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["person_add",{"_index":1119,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["piece",{"_index":238,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":2083,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piececount",{"_index":2102,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piecefactory",{"_index":2057,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":519,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"miscellaneous/enumerations.html":{}}}],["pieces",{"_index":373,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(null",{"_index":2108,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":2107,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount.length",{"_index":2103,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":2104,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pile",{"_index":439,"title":{"classes/Pile.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile(deepclone(element_draw_pool_state",{"_index":1486,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["pile(state",{"_index":1625,"title":{},"body":{"injectables/GameService.html":{}}}],["pile.constant",{"_index":2129,"title":{},"body":{"interfaces/PileConfig.html":{}}}],["pileadapter",{"_index":426,"title":{"classes/PileAdapter.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["pileadapter(config.actionpawnpile",{"_index":479,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileadapter(config.speciespile",{"_index":481,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileconfig",{"_index":2126,"title":{"interfaces/PileConfig.html":{}},"body":{"interfaces/PileConfig.html":{},"coverage.html":{}}}],["pileidenum",{"_index":1265,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{}}}],["pileidenum.action_pawn_amphibian",{"_index":2130,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_arachnid",{"_index":2132,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_bird",{"_index":2134,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_insect",{"_index":2136,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_mammal",{"_index":2138,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_reptile",{"_index":2140,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.element",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_amphibian",{"_index":2131,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_arachnid",{"_index":2133,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_bird",{"_index":2135,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_insect",{"_index":2137,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_mammal",{"_index":2139,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_reptile",{"_index":2141,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileids",{"_index":626,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(actionpawnpileid",{"_index":628,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(speciespileid",{"_index":629,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileidsbyanimal",{"_index":589,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pileregistryservice",{"_index":574,"title":{"injectables/PileRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":1250,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pilestate",{"_index":1465,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["pilestateservice",{"_index":2143,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":2144,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":102,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["pipe(filter(isnotundefined",{"_index":1048,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["place",{"_index":142,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["place_action_pawn",{"_index":2394,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["placeactionpawn",{"_index":2395,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["placeholder",{"_index":1935,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player",{"_index":726,"title":{},"body":{"classes/Area.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["player.friends",{"_index":1553,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["player.username",{"_index":2171,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player_auth_data",{"_index":2430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playerauthdata",{"_index":822,"title":{"interfaces/PlayerAuthData.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameStateClientService.html":{},"interfaces/PlayerAuthData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["playercollection",{"_index":1539,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["playercollection.map((player",{"_index":2170,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playercollection.players",{"_index":1551,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["playercontrols",{"_index":965,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["playerid",{"_index":992,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["playerids",{"_index":1459,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["playerids.foreach((playerid",{"_index":1496,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["players",{"_index":1060,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["players.filter((player",{"_index":1067,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["players.foreach((player",{"_index":1069,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["playerservice",{"_index":500,"title":{"injectables/PlayerService.html":{}},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["playersubscription",{"_index":1046,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["please",{"_index":2210,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["pool",{"_index":216,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pool.service",{"_index":361,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameReadyService.html":{}}}],["pool.service.ts",{"_index":1243,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:15",{"_index":1257,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":1258,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:17",{"_index":1260,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:18",{"_index":1249,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:24",{"_index":1251,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:37",{"_index":1262,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:45",{"_index":1264,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:53",{"_index":1253,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:57",{"_index":1256,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["populated",{"_index":1079,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["possible",{"_index":604,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["previous",{"_index":1823,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":40,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{}}}],["processedfactionids",{"_index":568,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["progress",{"_index":1752,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["promise",{"_index":837,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/NavigateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"properties.html":{}}}],["protected",{"_index":663,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{}}}],["provide",{"_index":1382,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync('animations",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":2495,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providedin",{"_index":92,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["providehttpclient",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":852,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["provider.service",{"_index":129,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{}}}],["provider.service.ts",{"_index":564,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["provider.service.ts:16",{"_index":588,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:17",{"_index":584,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:18",{"_index":586,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:19",{"_index":575,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:28",{"_index":581,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:46",{"_index":578,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:50",{"_index":580,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:78",{"_index":583,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["providerouter(routes",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":1376,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":9,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{}}}],["pull",{"_index":1245,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pull(count",{"_index":1252,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pulled",{"_index":2077,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany",{"_index":2060,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany(count",{"_index":2072,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullone",{"_index":2061,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pulls",{"_index":2074,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put",{"_index":1246,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put(pieces",{"_index":1255,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["puts",{"_index":2080,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["queryparams",{"_index":2050,"title":{},"body":{"injectables/NavigateService.html":{}}}],["quickly",{"_index":603,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["random",{"_index":2055,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reactiveformsmodule",{"_index":953,"title":{},"body":{"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["read/write",{"_index":2479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":10,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["readonlymap",{"_index":1221,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["ready",{"_index":57,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["ready.service",{"_index":1139,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["ready.service.ts",{"_index":1554,"title":{},"body":{"injectables/GameReadyService.html":{},"coverage.html":{}}}],["ready.service.ts:13",{"_index":1563,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:14",{"_index":1562,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:15",{"_index":1558,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:27",{"_index":1560,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:40",{"_index":1559,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:54",{"_index":1561,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["readyobs",{"_index":98,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["readysubject",{"_index":58,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["received",{"_index":730,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{}}}],["refactored",{"_index":1932,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["refresh",{"_index":1978,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["refreshtoken",{"_index":869,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["regardless",{"_index":1815,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["region",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":748,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(elements",{"_index":760,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":802,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":1723,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":1744,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":755,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredareaids",{"_index":378,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredareaids.has(areaidenum.action_display_adaption",{"_index":379,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredelementsubject",{"_index":746,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":747,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(pileidenum.element",{"_index":1269,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":784,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":788,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":1424,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":1341,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":2146,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":1724,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":1746,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":1725,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":1748,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registers",{"_index":762,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registertransactionstateelement",{"_index":1840,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":1853,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registration",{"_index":1374,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["registry",{"_index":768,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registry.service",{"_index":360,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":743,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:14",{"_index":751,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:21",{"_index":1338,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:22",{"_index":1340,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:25",{"_index":1339,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:26",{"_index":1336,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:35",{"_index":1395,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:36",{"_index":1393,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:37",{"_index":1394,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:39",{"_index":1389,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:50",{"_index":1391,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:65",{"_index":1392,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":652,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateService.html":{},"classes/Space.html":{}}}],["relates",{"_index":2235,"title":{},"body":{"classes/Space.html":{}}}],["relevant",{"_index":1431,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["remove",{"_index":2281,"title":{},"body":{"classes/Space.html":{}}}],["removeactionpawn",{"_index":326,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removeactionpawn(index",{"_index":340,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removedpiece",{"_index":2280,"title":{},"body":{"classes/Space.html":{}}}],["removeelement",{"_index":327,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/AnimalElements.html":{}}}],["removeelement(element",{"_index":462,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["removeelement(index",{"_index":342,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removefriend",{"_index":2152,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removefriend(username",{"_index":2157,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removepiece",{"_index":2243,"title":{},"body":{"classes/Space.html":{}}}],["removeremainingelements",{"_index":328,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["replenish",{"_index":329,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["represents",{"_index":650,"title":{},"body":{"classes/Area.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reptile",{"_index":2403,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reptile_element",{"_index":2418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":2419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["req",{"_index":2468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["require",{"_index":1754,"title":{},"body":{"injectables/GameStateService.html":{}}}],["required",{"_index":254,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["requiretransaction",{"_index":1726,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":1584,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":1714,"title":{},"body":{"injectables/GameStateService.html":{}}}],["results",{"_index":46,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":1375,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["retrieve",{"_index":756,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["retrieves",{"_index":754,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["retry",{"_index":1646,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["return",{"_index":44,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":2484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":29,"title":{},"body":{"classes/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rollback",{"_index":1917,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":1727,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":93,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/ActionService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["root'},{'name",{"_index":205,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["route",{"_index":1133,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["router",{"_index":2040,"title":{},"body":{"injectables/NavigateService.html":{}}}],["routerlink",{"_index":2002,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["routeroutlet",{"_index":639,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":88,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["rxjs/internal/observable/dom/websocketsubject",{"_index":1647,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["rxjs/websocket",{"_index":1649,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["same",{"_index":1404,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["score",{"_index":1297,"title":{},"body":{"classes/Faction.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["sdk/client",{"_index":850,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["see",{"_index":2018,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["seed",{"_index":2424,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1065,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["selectedplayers",{"_index":1062,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.add(ensuredefined(this.currentuser).username",{"_index":1066,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.has(friend",{"_index":1103,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.has(input",{"_index":1083,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.has(player",{"_index":1068,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selector",{"_index":160,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["sendgsptobackend",{"_index":1633,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":1638,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sent",{"_index":724,"title":{},"body":{"classes/Area.html":{}}}],["serializer",{"_index":1654,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["service",{"_index":764,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["service.buildactions(actioncontext",{"_index":111,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["service.clearactions",{"_index":112,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["service.ready",{"_index":100,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["service/action",{"_index":308,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/action.service",{"_index":1172,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["service/animal",{"_index":524,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/auth/auth.service",{"_index":2003,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{}}}],["service/auth/sign",{"_index":2181,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["service/game",{"_index":1024,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["service/navigate.service",{"_index":1040,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["serviceready",{"_index":107,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["serviceready.every((ready",{"_index":105,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["services",{"_index":1718,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":587,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["set(this.playercontrols.value.filter(boolean",{"_index":1099,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["seta",{"_index":2500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setactions",{"_index":2244,"title":{},"body":{"classes/Space.html":{}}}],["setactions(actions",{"_index":2259,"title":{},"body":{"classes/Space.html":{}}}],["setarea",{"_index":1728,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":1756,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setb",{"_index":2498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setdifference",{"_index":594,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdifference(factionids",{"_index":609,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["setdifference(seta",{"_index":2497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setentitystate",{"_index":785,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":790,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":1729,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":1758,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfriends",{"_index":1513,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setfriends(player",{"_index":1531,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setgamestate",{"_index":1820,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":1862,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setinitialgamestate",{"_index":1514,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setinitialgamestate(gamestate",{"_index":1533,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setpile",{"_index":1730,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":1760,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":1295,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":1303,"title":{},"body":{"classes/Faction.html":{}}}],["setstate",{"_index":667,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":686,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}}}],["setstoragekey",{"_index":1987,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setstoragekey(key",{"_index":1992,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settransactionstateelement",{"_index":1841,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":1865,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["several",{"_index":600,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameStateStoreService.html":{}}}],["shuffle",{"_index":1466,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffle(object.values(animalenum",{"_index":1495,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffledanimals",{"_index":1494,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffledanimals[index",{"_index":1498,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["sign",{"_index":229,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal",{"_index":262,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/ElementSpaceComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal(0",{"_index":509,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["signal(false",{"_index":260,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["signal(undefined",{"_index":258,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{},"components/LobbyPageComponent.html":{}}}],["signalready",{"_index":61,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["signup",{"_index":892,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signup(username",{"_index":905,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signupcommand",{"_index":911,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupcommand(input",{"_index":933,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupconfirmform",{"_index":2183,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["signupconfirmformdata",{"_index":2177,"title":{"interfaces/SignUpConfirmFormData.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"coverage.html":{}}}],["signupconfirmpagecomponent",{"_index":228,"title":{"components/SignUpConfirmPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupform",{"_index":2195,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signupform.dirty",{"_index":2208,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"email\")?.errors?.[\"email",{"_index":2209,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"password\")?.errors?.[\"minlength",{"_index":2213,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.invalid",{"_index":2207,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupformdata",{"_index":2193,"title":{"interfaces/SignUpFormData.html":{}},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signuppagecomponent",{"_index":232,"title":{"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupservice",{"_index":2180,"title":{"injectables/SignUpService.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["skip",{"_index":1432,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["skull",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":1971,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["snackbar",{"_index":985,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["snake",{"_index":2567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["someone",{"_index":1812,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sort",{"_index":1972,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["space",{"_index":124,"title":{"classes/Space.html":{}},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"components/ElementSpaceComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space's",{"_index":2226,"title":{},"body":{"classes/Space.html":{}}}],["space'},{'name",{"_index":200,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["space(spacestate",{"_index":694,"title":{},"body":{"classes/Area.html":{}}}],["space.addpiece(actionpawn",{"_index":138,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["space.clearactions",{"_index":741,"title":{},"body":{"classes/Area.html":{}}}],["space.component",{"_index":306,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["space.component.html",{"_index":249,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.scss",{"_index":250,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts",{"_index":246,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space.component.ts:16",{"_index":255,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["space.component.ts:17",{"_index":259,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts:18",{"_index":261,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts:19",{"_index":1283,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.component.ts:20",{"_index":256,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["space.component.ts:21",{"_index":1281,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.component.ts:31",{"_index":257,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["space.component.ts:32",{"_index":1282,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.component.ts:40",{"_index":1284,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.kind",{"_index":386,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["space.model",{"_index":690,"title":{},"body":{"classes/Area.html":{}}}],["space.piece",{"_index":267,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"components/ElementSpaceComponent.html":{}}}],["space.piece).filter(isnotnull).length",{"_index":394,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["space.piece.kind",{"_index":464,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["space.removepiece",{"_index":146,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["space.setactions([action",{"_index":413,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["space.space$.subscribe",{"_index":701,"title":{},"body":{"classes/Area.html":{}}}],["space.state",{"_index":705,"title":{},"body":{"classes/Area.html":{}}}],["space.state$.subscribe",{"_index":703,"title":{},"body":{"classes/Area.html":{}}}],["space/action",{"_index":245,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{}}}],["space/element",{"_index":305,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space/eyeball/eyeball.component",{"_index":307,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["spacekindenum",{"_index":365,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":387,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"miscellaneous/variables.html":{}}}],["spacekindenum.element",{"_index":390,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":371,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["spaces.filter",{"_index":385,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["spaces.filter((space",{"_index":472,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["spacessubject",{"_index":661,"title":{},"body":{"classes/Area.html":{}}}],["spacestate",{"_index":662,"title":{},"body":{"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Space.html":{}}}],["spacesubject",{"_index":2240,"title":{},"body":{"classes/Space.html":{}}}],["species",{"_index":212,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/PileConfig.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["species.model",{"_index":445,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["species/animal/noun",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/element/noun",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/other/noun",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":2445,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":2447,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":2449,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":2451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":2453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":2455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":2446,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":2448,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":2450,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":2452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":2454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciespiece",{"_index":444,"title":{"interfaces/SpeciesPiece.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["speciespile",{"_index":420,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["speciespileid",{"_index":621,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["speciespilelength",{"_index":497,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciesreptile",{"_index":2456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specific",{"_index":1383,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{}}}],["specified",{"_index":2075,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["spider",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":1141,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["src/.../action.constant.ts",{"_index":2383,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../action.model.ts",{"_index":2516,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../animal.constant.ts",{"_index":2384,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":2458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area.constant.ts",{"_index":2385,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":2459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../element",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../element.constant.ts",{"_index":2386,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../error",{"_index":2462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../game",{"_index":2387,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../image.constant.ts",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":2389,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../misc.ts",{"_index":2460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../piece.constant.ts",{"_index":2391,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../piece.model.ts",{"_index":2461,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pile",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pile.constant.ts",{"_index":2392,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../predicate.ts",{"_index":2463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":638,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":643,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/component/create",{"_index":939,"title":{},"body":{"components/CreateGamePageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/lobby",{"_index":1937,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/login",{"_index":1998,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/logout",{"_index":2026,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/sign",{"_index":2178,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/constant/game",{"_index":2427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/constant/local",{"_index":2429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/gaurd/auth.guard.ts",{"_index":2299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/interceptor/api",{"_index":2301,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/auth.interceptor.ts",{"_index":2304,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/error",{"_index":2306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/action.model.ts:11",{"_index":27,"title":{},"body":{"classes/Action.html":{}}}],["src/app/engine/model/action.model.ts:15",{"_index":28,"title":{},"body":{"classes/Action.html":{}}}],["src/app/engine/model/action.model.ts:20",{"_index":32,"title":{},"body":{"classes/Action.html":{}}}],["src/app/engine/model/action.model.ts:9",{"_index":21,"title":{},"body":{"classes/Action.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":648,"title":{},"body":{"classes/Area.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:13",{"_index":672,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:14",{"_index":674,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:15",{"_index":673,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:16",{"_index":671,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:27",{"_index":681,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:59",{"_index":683,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:67",{"_index":680,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":1292,"title":{},"body":{"classes/Faction.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:13",{"_index":1314,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:17",{"_index":1302,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":1299,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":1304,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:5",{"_index":1310,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:9",{"_index":1312,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":1345,"title":{},"body":{"classes/GameElement.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":2316,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":2054,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:10",{"_index":2068,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:101",{"_index":2124,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:105",{"_index":2125,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:109",{"_index":2121,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:11",{"_index":2069,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:113",{"_index":2122,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:117",{"_index":2123,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:12",{"_index":2067,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:13",{"_index":2062,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:32",{"_index":2081,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:44",{"_index":2070,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:48",{"_index":2071,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:58",{"_index":2073,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:80",{"_index":2078,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:88",{"_index":2079,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:98",{"_index":2120,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":2150,"title":{},"body":{"interfaces/PlayerAuthData.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":2223,"title":{},"body":{"classes/Space.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:16",{"_index":2248,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:17",{"_index":2246,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:18",{"_index":2247,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:19",{"_index":2250,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:20",{"_index":2249,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:21",{"_index":2251,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:22",{"_index":2245,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:31",{"_index":2262,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:38",{"_index":2256,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:45",{"_index":2260,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:50",{"_index":2254,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:55",{"_index":2264,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:59",{"_index":2266,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:63",{"_index":2253,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:72",{"_index":2258,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:83",{"_index":2261,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/service/auth/auth.service.ts",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/auth.service.ts:14",{"_index":841,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:15",{"_index":827,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:25",{"_index":830,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:35",{"_index":835,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:50",{"_index":838,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:57",{"_index":843,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:66",{"_index":845,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:74",{"_index":840,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:78",{"_index":832,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/cognito",{"_index":888,"title":{},"body":{"injectables/CognitoClientService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/sign",{"_index":2216,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["src/app/engine/service/game",{"_index":742,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/service/local",{"_index":1983,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/engine/service/navigate.service.ts",{"_index":2033,"title":{},"body":{"injectables/NavigateService.html":{},"coverage.html":{}}}],["src/app/engine/service/navigate.service.ts:10",{"_index":2042,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:14",{"_index":2044,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:22",{"_index":2045,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:26",{"_index":2046,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:30",{"_index":2047,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:7",{"_index":2041,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/util/misc.ts",{"_index":2341,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/util/predicate.ts",{"_index":2346,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/action",{"_index":154,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["src/app/game/component/animal",{"_index":487,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["src/app/game/component/dominant",{"_index":1121,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/draw",{"_index":1150,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts",{"_index":1200,"title":{},"body":{"components/ElementComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts:16",{"_index":1203,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:18",{"_index":1205,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:22",{"_index":1206,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:26",{"_index":1207,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/constant/action.constant.ts",{"_index":2393,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/animal.constant.ts",{"_index":2350,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/area.constant.ts",{"_index":2351,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element",{"_index":1211,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element.constant.ts",{"_index":2353,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/game",{"_index":2354,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/image.constant.ts",{"_index":2356,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/piece.constant.ts",{"_index":2431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/pile",{"_index":2127,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/pile.constant.ts",{"_index":2432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/model/action",{"_index":113,"title":{},"body":{"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts",{"_index":416,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts:103",{"_index":435,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:107",{"_index":437,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:23",{"_index":554,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:24",{"_index":553,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:35",{"_index":558,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:45",{"_index":555,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:56",{"_index":556,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:67",{"_index":560,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:73",{"_index":562,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:79",{"_index":428,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:80",{"_index":427,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:81",{"_index":429,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:82",{"_index":424,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:91",{"_index":430,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:95",{"_index":431,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:99",{"_index":433,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/element.model.ts",{"_index":1279,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["src/app/game/model/species.model.ts",{"_index":2284,"title":{},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["src/app/game/service/action",{"_index":52,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/ActionFunctionFactoryService.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["src/app/game/service/action.service.ts",{"_index":277,"title":{},"body":{"injectables/ActionService.html":{},"coverage.html":{}}}],["src/app/game/service/action.service.ts:11",{"_index":281,"title":{},"body":{"injectables/ActionService.html":{}}}],["src/app/game/service/action.service.ts:20",{"_index":282,"title":{},"body":{"injectables/ActionService.html":{}}}],["src/app/game/service/action.service.ts:27",{"_index":283,"title":{},"body":{"injectables/ActionService.html":{}}}],["src/app/game/service/action.service.ts:8",{"_index":279,"title":{},"body":{"injectables/ActionService.html":{}}}],["src/app/game/service/animal",{"_index":563,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["src/app/game/service/element",{"_index":1242,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["src/app/game/service/game",{"_index":1446,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["standalone",{"_index":163,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["start",{"_index":1196,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["startcase",{"_index":1467,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["startcase(assignedanimal",{"_index":1500,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["started",{"_index":1789,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["starttransaction",{"_index":1731,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["startturn",{"_index":1156,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["state",{"_index":243,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.constant",{"_index":1475,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["state.constant.ts",{"_index":2355,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.kind",{"_index":2268,"title":{},"body":{"classes/Space.html":{}}}],["state.model",{"_index":1471,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":1929,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.model.ts:32",{"_index":1930,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["state.owner",{"_index":2085,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["state.piece",{"_index":2270,"title":{},"body":{"classes/Space.html":{}}}],["state.service",{"_index":780,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":783,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":810,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:101",{"_index":1747,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:103",{"_index":1423,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:105",{"_index":1770,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:109",{"_index":1761,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:113",{"_index":1749,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:22",{"_index":1736,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:30",{"_index":1428,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:31",{"_index":1420,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:33",{"_index":1743,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:38",{"_index":1741,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:42",{"_index":1739,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:43",{"_index":1429,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:48",{"_index":1762,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:52",{"_index":1740,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:53",{"_index":1425,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:63",{"_index":1427,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:65",{"_index":1755,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:70",{"_index":1422,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:72",{"_index":1750,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:78",{"_index":1764,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:82",{"_index":1766,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:86",{"_index":1757,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:88",{"_index":1421,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:90",{"_index":1745,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:94",{"_index":1768,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:98",{"_index":1759,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.space",{"_index":699,"title":{},"body":{"classes/Area.html":{}}}],["state.space.map((spacestate",{"_index":693,"title":{},"body":{"classes/Area.html":{}}}],["state/game",{"_index":1168,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statechange",{"_index":2257,"title":{},"body":{"classes/Space.html":{}}}],["statements",{"_index":2288,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1089,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["statesubject",{"_index":665,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["storage.constant",{"_index":857,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.constant.ts",{"_index":2390,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["storage.service",{"_index":848,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service.ts",{"_index":1984,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1991,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:15",{"_index":1993,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:7",{"_index":1989,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store.service",{"_index":1771,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":1800,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:101",{"_index":1855,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:120",{"_index":1873,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:128",{"_index":1875,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:136",{"_index":1845,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:141",{"_index":1863,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:149",{"_index":1869,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:158",{"_index":1846,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:167",{"_index":1859,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:177",{"_index":1876,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:185",{"_index":1877,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:189",{"_index":1860,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:193",{"_index":1850,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:197",{"_index":1878,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:201",{"_index":1861,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:205",{"_index":1851,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:209",{"_index":1879,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:213",{"_index":1864,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:217",{"_index":1852,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:40",{"_index":1870,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:41",{"_index":1871,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:42",{"_index":1843,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:48",{"_index":1849,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:56",{"_index":1848,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:75",{"_index":1866,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stores",{"_index":1858,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":36,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":167,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["sub.unsubscribe",{"_index":1054,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{}}}],["subclass",{"_index":1400,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["subclasses",{"_index":1381,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["subject",{"_index":1642,"title":{},"body":{"injectables/GameStateClientService.html":{},"classes/Space.html":{}}}],["subscribe",{"_index":380,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((allready",{"_index":108,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["subscribe((animal",{"_index":538,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["subscribe((gsp",{"_index":1659,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["subscribe((player",{"_index":1049,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["subscribers",{"_index":1914,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["subscribes",{"_index":805,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["subscribing",{"_index":796,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["subscription",{"_index":1018,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":966,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{}}}],["substatearray",{"_index":1892,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":1895,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":1904,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":1898,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["success",{"_index":2015,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["such",{"_index":1834,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["sum",{"_index":2092,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["sun",{"_index":2425,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super(areastatesvc",{"_index":782,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":1328,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":2145,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":691,"title":{},"body":{"classes/Area.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["super.register(elementsarray",{"_index":1331,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super.setstate(newstate",{"_index":2094,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["switchmap",{"_index":1880,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["switchmap((gamestate",{"_index":1888,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["synchronization",{"_index":772,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["system",{"_index":1715,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":675,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1199,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["take_element",{"_index":2396,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["takeaction",{"_index":1157,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["takeelement",{"_index":2397,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["taken",{"_index":1829,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":727,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{}}}],["template",{"_index":151,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["templateurl",{"_index":165,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["tgameelement",{"_index":757,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstate",{"_index":1398,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["tgameelementstatesvc",{"_index":1388,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["then((player",{"_index":2165,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this._actions",{"_index":2276,"title":{},"body":{"classes/Space.html":{}}}],["this._drawpool",{"_index":1270,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":1883,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate.playerids",{"_index":1918,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":2269,"title":{},"body":{"classes/Space.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":1916,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":1909,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":1912,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":1359,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.id",{"_index":1364,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.inventory[key",{"_index":2093,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[kind",{"_index":2106,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[piece.kind",{"_index":2114,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.name",{"_index":1316,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.ownerid",{"_index":1317,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.score",{"_index":1318,"title":{},"body":{"classes/Faction.html":{}}}],["this._transactionstate",{"_index":1891,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate.gameelements",{"_index":1893,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate.patchid",{"_index":1910,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.actioncompletecallback(nextactioncontext",{"_index":43,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{}}}],["this.actioncompletecallback.bind(this",{"_index":290,"title":{},"body":{"injectables/ActionService.html":{}}}],["this.actioncontext.actionid",{"_index":45,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{}}}],["this.actiondisplaymanagerservice.buildactions",{"_index":289,"title":{},"body":{"injectables/ActionService.html":{}}}],["this.actiondisplaymanagerservice.clearactions",{"_index":291,"title":{},"body":{"injectables/ActionService.html":{}}}],["this.actiondisplaymanagerservice.ready",{"_index":1582,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.actiondisplayservices",{"_index":95,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["this.actiondisplayservices.foreach((service",{"_index":110,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["this.actiondisplayservices.map((service",{"_index":99,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["this.actionfunction",{"_index":42,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{}}}],["this.actionfunctionfactoryservice.buildplaceactionpawninspace(actioncontext",{"_index":412,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionfunctionfactoryservice.buildtakeelementfromspace(actioncontext",{"_index":414,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawn.set(space.piece",{"_index":268,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["this.actionpawn.set(undefined",{"_index":269,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["this.actionpawn?.name",{"_index":190,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawn?.owner",{"_index":189,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawnpile",{"_index":478,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.actionpawnpilelength.set(length",{"_index":544,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawnspaces",{"_index":384,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces.set(spaces",{"_index":314,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.actionpawnspacessubject.asobservable",{"_index":347,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspacessubject.next(this.actionpawnspaces",{"_index":388,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionservice.buildactions",{"_index":1184,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice",{"_index":96,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["this.adaptionactiondisplayservice.actionpawnspaces$.subscribe((spaces",{"_index":313,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.actionpawnspaces.findindex",{"_index":1190,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.addactionpawn(nextactionpawnspaceindex",{"_index":1194,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.elementspaces$.subscribe((spaces",{"_index":315,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.elementspaces.findindex",{"_index":1193,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.ready$.pipe(filter(istrue",{"_index":311,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.removeelement(nextelementspaceindex",{"_index":1195,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionarea",{"_index":1183,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.addedelementspaces.find",{"_index":463,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.addedelementspaces.map((space",{"_index":474,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalbyid.set(faction.id",{"_index":634,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalelements",{"_index":482,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalfactory(animalconfig",{"_index":635,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalproviderservice.animals",{"_index":532,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalproviderservice.animals$.subscribe((animals",{"_index":1573,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.animalproviderservice.get(actioncontext.currentplayerfactionid",{"_index":135,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{}}}],["this.animalproviderservice.get(ensuredefined(this.currentplayerfaction).id",{"_index":1188,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.animalsready",{"_index":1581,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.animalssubject.asobservable",{"_index":585,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalssubject.next(array.from(this.animalbyid.values",{"_index":636,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.applygsp(gsp",{"_index":1774,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.area",{"_index":381,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.area.spaces$.subscribe((spaces",{"_index":383,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.arearegistryservice.get(areaidenum.action_display_adaption",{"_index":382,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["this.arearegistryservice.register(new",{"_index":1618,"title":{},"body":{"injectables/GameService.html":{}}}],["this.arearegistryservice.registeredids",{"_index":1180,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.arearegistrysvc.get(elementareaid",{"_index":631,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":623,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.authservice.isloggedin$.pipe().subscribe((isloggedin",{"_index":2163,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.authservice.loggedinusername",{"_index":1543,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["this.authservice.login(username",{"_index":2013,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.authservice.logout",{"_index":2030,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["this.availablefriends",{"_index":1100,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.buildactiondisplay",{"_index":1484,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.buildactions(nextactioncontext",{"_index":286,"title":{},"body":{"injectables/ActionService.html":{}}}],["this.buildanimal(faction",{"_index":613,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimals",{"_index":596,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildelementdrawpool",{"_index":1482,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.buildfactions(playerids",{"_index":1483,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.clearactions",{"_index":285,"title":{},"body":{"injectables/ActionService.html":{}}}],["this.cognitoclient.send(command",{"_index":926,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclientservice.confirmsignup(username",{"_index":2222,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.cognitoclientservice.decodejwttoken(ensuredefined(authresult.idtoken",{"_index":863,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.login(username",{"_index":872,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.signup(username",{"_index":2221,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.currentplayer",{"_index":2166,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayer.set(player",{"_index":1966,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.currentplayerfaction",{"_index":1176,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.currentplayerready",{"_index":1580,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.currentplayersubject.asobservable",{"_index":2160,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayersubject.next(this.currentplayer",{"_index":2167,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentuser",{"_index":1050,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.drawpool.length",{"_index":1275,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.pullmany(count",{"_index":1277,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.put(pieces",{"_index":1278,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.element.set(space.piece",{"_index":1285,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["this.element.set(undefined",{"_index":1286,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["this.element?.kind",{"_index":1208,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.element?.name",{"_index":1209,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.elementarea.spaces$.subscribe",{"_index":450,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementbyid.set(element.id",{"_index":1407,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementdrawpool",{"_index":1481,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.elementdrawpool.pullmany(4).foreach((element",{"_index":1489,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.elementdrawpoolservice.pull(4).foreach((element",{"_index":398,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementdrawpoolservice.ready",{"_index":375,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameReadyService.html":{}}}],["this.elements.set(elements",{"_index":540,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.elementspaces",{"_index":389,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspaces.map((space",{"_index":393,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspaces.set(spaces",{"_index":316,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.elementspacessubject.asobservable",{"_index":353,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspacessubject.next(this.elementspaces",{"_index":391,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementssubject.asobservable",{"_index":449,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.allelements",{"_index":451,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":1435,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitlength",{"_index":2095,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emitpilestate",{"_index":2109,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emitstate",{"_index":1319,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emptyelementspaces.set(array(6",{"_index":541,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.errormessage.set('login",{"_index":2016,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.errormessage.set('sign",{"_index":2189,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.errormessages[index",{"_index":1072,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.faction",{"_index":476,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction().id",{"_index":536,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction().ownerid",{"_index":511,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction.id",{"_index":485,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.name",{"_index":486,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.factionassignment",{"_index":1325,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":1333,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":1326,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":1334,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionregistryservice.factionassignment$.subscribe((factionassignments",{"_index":597,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.get(factionid",{"_index":612,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.register(new",{"_index":1621,"title":{},"body":{"injectables/GameService.html":{}}}],["this.factionregistrysvc.factionassignment$.subscribe((factionassignments",{"_index":1173,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factionregistrysvc.get(factionassignment.factionid",{"_index":1175,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions",{"_index":1174,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions.find",{"_index":1177,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factorybygametitle",{"_index":1682,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["this.factorybygametitle.get(gametitle",{"_index":1685,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["this.fb.array",{"_index":1042,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.fb.control",{"_index":1045,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.fetchgames",{"_index":1967,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.fetchplayers(index",{"_index":1076,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.filteredplayers[index",{"_index":1059,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.formbuilder.group",{"_index":2008,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.gameelementstates",{"_index":1479,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstates.area.push(this.buildadaptionactiondisplay().state",{"_index":1493,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstates.faction.push",{"_index":1499,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstates.pile.push(this.elementdrawpool.state",{"_index":1485,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstatesvc.register(elementsarray",{"_index":1412,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementclientservice",{"_index":2164,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.completegame(gameid",{"_index":1613,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.creategame",{"_index":1605,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.findplayers(username",{"_index":2169,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.getgamesforloggedinplayer",{"_index":1612,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.getlatestgamestate(gameid",{"_index":1615,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.setfriends(ensuredefined(this.currentplayer",{"_index":2173,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.setinitialgamestate(initialgamestate",{"_index":1610,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gameready.set(true",{"_index":1147,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.gamereadyservice.ready",{"_index":1145,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.games.set(await",{"_index":1973,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.cleanupgame",{"_index":1148,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.gameservice.completegame(gameid",{"_index":1976,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.creategame(otherplayers",{"_index":1114,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.gameservice.getgamesforloggedinplayer",{"_index":1974,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.initializegame(gameid",{"_index":1149,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.gameservice.joingame(gameid",{"_index":1977,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gamestateclient.connect(gamestate.gameid",{"_index":1776,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.disconnect",{"_index":1777,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.gsp$.subscribe((gsp",{"_index":1773,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":1786,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateinitializationservice.build",{"_index":1608,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamestateservice.disconnectfrombackend",{"_index":1626,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamestateservice.initializegamestate(gamestate",{"_index":1616,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamestateservice.playerids",{"_index":1574,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.gamestateservice.playerids.length",{"_index":1576,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.gamestatestore.area",{"_index":1791,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":1785,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":1794,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.initializegamestate(gamestate",{"_index":1775,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":1797,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.playerids",{"_index":1790,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":1793,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":1796,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":1799,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":1787,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":1792,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":1795,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate",{"_index":1778,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":1798,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":1780,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":1781,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":1881,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":1887,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":1907,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":811,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":1187,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":1342,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":2147,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":812,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":1343,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":2148,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":813,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":1344,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":2149,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":1186,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getactionpawnforheader",{"_index":507,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getanimal",{"_index":531,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":1438,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":1919,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.getplayer(this.authservice.loggedinusername",{"_index":1549,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.gspservice.apply(ensuredefined(this.gamestatestore.gamestate",{"_index":1779,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gspservice.create",{"_index":1783,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gspsubject.asobservable",{"_index":1641,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.gspsubject.next(gsp",{"_index":1660,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.hasaction.set(space.actions.length",{"_index":270,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["this.hasinvalidplayer",{"_index":1091,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.http.get('/game",{"_index":1541,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.http.get('/player",{"_index":1550,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.id",{"_index":709,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["this.initialize",{"_index":374,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.initializegame(gameid",{"_index":1144,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.isfriend(input",{"_index":1086,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.isloggedin",{"_index":860,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject",{"_index":858,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.asobservable",{"_index":861,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(false",{"_index":881,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(true",{"_index":877,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.kind",{"_index":1210,"title":{},"body":{"components/ElementComponent.html":{},"classes/Space.html":{}}}],["this.length",{"_index":2089,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject",{"_index":2087,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":2090,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.next(this.length",{"_index":2096,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.localstorageservice.deletedstoragekey(localstoragekey.player_auth_data",{"_index":880,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.getstoragekey(localstoragekey.player_auth_data",{"_index":882,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.setstoragekey",{"_index":874,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":2007,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":2011,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":2012,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.max_players",{"_index":1043,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.navigate.tocreategamepage",{"_index":1975,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.navigate.togamepage(gametitle.dominant_species",{"_index":1614,"title":{},"body":{"injectables/GameService.html":{}}}],["this.navigate.tolobbypage",{"_index":1115,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.navigate.tologinpage",{"_index":2031,"title":{},"body":{"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.navigate.tosignupconfirmpage",{"_index":2204,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.notifychange(false",{"_index":2277,"title":{},"body":{"classes/Space.html":{}}}],["this.notifychange(true",{"_index":2278,"title":{},"body":{"classes/Space.html":{}}}],["this.onplayerinput(this.playercontrols.controls.indexof(emptycontrol",{"_index":1098,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.owner",{"_index":191,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piececounts.get(key",{"_index":2097,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piecefactory",{"_index":2086,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.length",{"_index":2115,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.pullmany(count",{"_index":2116,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.pullone",{"_index":2117,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.put(pieces",{"_index":2118,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pileregistryservice.get(actionpawnpileid",{"_index":630,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.get(speciespileid",{"_index":633,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.register(new",{"_index":1624,"title":{},"body":{"injectables/GameService.html":{}}}],["this.pileregistrysvc.get(pileidenum.element",{"_index":1271,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":1267,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.playerauthdata",{"_index":879,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playerauthdata.username",{"_index":884,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playercontrols",{"_index":1041,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.at(index",{"_index":1056,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.every((control",{"_index":1092,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.find((control",{"_index":1094,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.some",{"_index":1096,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.some((control",{"_index":1104,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.value.filter",{"_index":1063,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playerservice.addfriend(playerid",{"_index":1107,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playerservice.currentplayer",{"_index":1047,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playerservice.currentplayer$.subscribe",{"_index":1566,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.playerservice.currentplayer$.subscribe((player",{"_index":1965,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.playerservice.currentplayer?.username",{"_index":1179,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.playerservice.findplayers(input",{"_index":1061,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.processedfactionids",{"_index":610,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pullmany(1)[0",{"_index":2110,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.ready",{"_index":1272,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.asobservable",{"_index":75,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["this.readysubject.next(allready",{"_index":109,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["this.readysubject.next(this.ready",{"_index":1273,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(true",{"_index":392,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":777,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":1411,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":1408,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":1406,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":1437,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":1441,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":1922,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":1925,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":1928,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.route.snapshot.queryparammap.get('gameid",{"_index":1143,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.router.navigate(['/create",{"_index":2048,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.router.navigate(['/lobby",{"_index":2051,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.router.navigate(['/login",{"_index":2052,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.router.navigate(['/sign",{"_index":2053,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.router.navigate(['game",{"_index":2049,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.setentitystate(state",{"_index":1443,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":1921,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":1924,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":1927,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.signalready",{"_index":97,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["this.signupconfirmform",{"_index":2184,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.valid",{"_index":2185,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.value",{"_index":2186,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupform",{"_index":2196,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.valid",{"_index":2201,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.value",{"_index":2202,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupservice.confirmsignup(username",{"_index":2187,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupservice.signup(username",{"_index":2203,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.snackbar.open('error",{"_index":1116,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.snackbar.open('failed",{"_index":1108,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.space",{"_index":2273,"title":{},"body":{"classes/Space.html":{}}}],["this.space().actions.length",{"_index":272,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["this.space().actions[0].execute",{"_index":273,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["this.space().space$.subscribe((space",{"_index":266,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["this.spaces",{"_index":692,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.foreach((space",{"_index":700,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.length",{"_index":712,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":737,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject",{"_index":695,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.asobservable",{"_index":697,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.next(this.spaces",{"_index":702,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate",{"_index":698,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate[index",{"_index":704,"title":{},"body":{"classes/Area.html":{}}}],["this.spacesubject",{"_index":2271,"title":{},"body":{"classes/Space.html":{}}}],["this.spacesubject.asobservable",{"_index":2274,"title":{},"body":{"classes/Space.html":{}}}],["this.spacesubject.next(this",{"_index":2275,"title":{},"body":{"classes/Space.html":{}}}],["this.speciespile",{"_index":480,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.speciespilelength.set(length",{"_index":546,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.state",{"_index":1362,"title":{},"body":{"classes/GameElement.html":{}}}],["this.statesubject",{"_index":1360,"title":{},"body":{"classes/GameElement.html":{}}}],["this.statesubject.asobservable",{"_index":1363,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject.next(this.state",{"_index":706,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.subscriptions.foreach((sub",{"_index":1053,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{}}}],["this.subscriptions.push(animalsubscription",{"_index":1578,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.subscriptions.push(currentplayersubscription",{"_index":1569,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.subscriptions.push(playersubscription",{"_index":1052,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.transactionstate",{"_index":1901,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.updateavailablefriends",{"_index":1051,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validinputstates[index",{"_index":1082,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validplayers[index].add(player",{"_index":1070,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validplayers[index].clear",{"_index":1058,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validplayers[index].has(input",{"_index":1080,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.websocketsubject",{"_index":1651,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.websocketsubject.next(gsp",{"_index":1664,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.websocketsubject.pipe(retry",{"_index":1657,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.websocketsubscription",{"_index":1661,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.websocketsubscription.unsubscribe",{"_index":1662,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["those",{"_index":1811,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":139,"title":{},"body":{"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":2490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":1402,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"miscellaneous/functions.html":{}}}],["times",{"_index":601,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["title",{"_index":642,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameStateInitializationService.html":{}}}],["title.constant",{"_index":1602,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{}}}],["title.constant.ts",{"_index":2388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tocreategamepage",{"_index":2034,"title":{},"body":{"injectables/NavigateService.html":{}}}],["todo",{"_index":528,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["togamepage",{"_index":2035,"title":{},"body":{"injectables/NavigateService.html":{}}}],["togamepage(gametitle",{"_index":2043,"title":{},"body":{"injectables/NavigateService.html":{}}}],["token",{"_index":902,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["tolobbypage",{"_index":2036,"title":{},"body":{"injectables/NavigateService.html":{}}}],["tologinpage",{"_index":2037,"title":{},"body":{"injectables/NavigateService.html":{}}}],["top",{"_index":1807,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tosignupconfirmpage",{"_index":2038,"title":{},"body":{"injectables/NavigateService.html":{}}}],["total",{"_index":2082,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["track",{"_index":318,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameElementRegistryService.html":{},"components/LobbyPageComponent.html":{}}}],["transaction",{"_index":1751,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":1842,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":153,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["true",{"_index":164,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":924,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{}}}],["tsc",{"_index":2099,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["tslib",{"_index":2377,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1197,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["two",{"_index":1817,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":25,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/ActionFunctionFactoryService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2514,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1894,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["typeparam",{"_index":1397,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["types",{"_index":1386,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["types/src/auth",{"_index":916,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["types/src/game",{"_index":242,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["types/src/player",{"_index":1025,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["typically",{"_index":1826,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["unchanged",{"_index":2485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":173,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["unknown",{"_index":2101,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{}}}],["up",{"_index":230,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["up.service",{"_index":2182,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["up.service.ts",{"_index":2217,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["up.service.ts:10",{"_index":2220,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:14",{"_index":2219,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:7",{"_index":2218,"title":{},"body":{"injectables/SignUpService.html":{}}}],["update",{"_index":731,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileStateService.html":{}}}],["updateavailablefriends",{"_index":980,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["updated",{"_index":721,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"classes/Space.html":{}}}],["updateon",{"_index":2199,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["updates",{"_index":723,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{}}}],["updating",{"_index":1417,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["url",{"_index":1652,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["url.interceptor.ts",{"_index":2302,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":2066,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["used",{"_index":1401,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":885,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["user's",{"_index":1064,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["user_password_auth",{"_index":918,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["userattributes",{"_index":932,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["username",{"_index":836,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["using",{"_index":722,"title":{},"body":{"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{}}}],["util/misc",{"_index":854,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{}}}],["util/predicate",{"_index":1034,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["v",{"_index":2496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":2212,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["validateplayerauthdata",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateplayerauthdata(playerauthdata",{"_index":839,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":1088,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["validators",{"_index":2001,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.email",{"_index":2197,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.minlength(6",{"_index":2198,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.required",{"_index":2009,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validinputstates",{"_index":967,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["validplayers",{"_index":968,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["value",{"_index":74,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.piece",{"_index":1191,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["values",{"_index":1825,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":196,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["variable",{"_index":2291,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2517,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1717,"title":{},"body":{"injectables/GameStateService.html":{}}}],["version",{"_index":2476,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["via",{"_index":1819,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["void",{"_index":30,"title":{},"body":{"classes/Action.html":{},"interfaces/ActionContext.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/ActionService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["vpa",{"_index":2206,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["water",{"_index":2426,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":1818,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["websocket",{"_index":1648,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["websocketsubject",{"_index":1629,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["websocketsubscription",{"_index":1630,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["whenever",{"_index":1814,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whose",{"_index":2492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["withfetch",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([apiurlinterceptor",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":2032,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["yes",{"_index":685,"title":{},"body":{"classes/Area.html":{},"miscellaneous/functions.html":{}}}],["zero",{"_index":2225,"title":{},"body":{"classes/Space.html":{}}}],["zone.js",{"_index":2379,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                actionContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actionContext: ActionContext, actionFunction: ActionFunction, actionCompleteCallBack: ActionCompleteCallback)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/action.model.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actionContext\n                                                  \n                                                        \n                                                                        ActionContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionFunction\n                                                  \n                                                        \n                                                                        ActionFunction\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionCompleteCallBack\n                                                  \n                                                        \n                                                                        ActionCompleteCallback\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        actionContext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionContext\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/action.model.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/action.model.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/action.model.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export interface ActionContext {\n  actionId: string;\n  currentPlayerFactionId: string;\n}\n\nexport type ActionFunction = () => ActionContext | null;\nexport type ActionCompleteCallback = (nextActionContext: ActionContext | null) => void;\n\nexport class Action {\n  constructor(\n    public readonly actionContext: ActionContext,\n    private readonly actionFunction: ActionFunction,\n    private readonly actionCompleteCallBack: ActionCompleteCallback,\n  ) {}\n  execute(): void {\n    const nextActionContext = this.actionFunction();\n    this.actionCompleteCallBack(nextActionContext);\n  }\n\n  get id(): string {\n    return this.actionContext.actionId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionContext.html":{"url":"interfaces/ActionContext.html","title":"interface - ActionContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionId\n                                        \n                                \n                                \n                                        \n                                            currentPlayerFactionId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentPlayerFactionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPlayerFactionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ActionContext {\n  actionId: string;\n  currentPlayerFactionId: string;\n}\n\nexport type ActionFunction = () => ActionContext | null;\nexport type ActionCompleteCallback = (nextActionContext: ActionContext | null) => void;\n\nexport class Action {\n  constructor(\n    public readonly actionContext: ActionContext,\n    private readonly actionFunction: ActionFunction,\n    private readonly actionCompleteCallBack: ActionCompleteCallback,\n  ) {}\n  execute(): void {\n    const nextActionContext = this.actionFunction();\n    this.actionCompleteCallBack(nextActionContext);\n  }\n\n  get id(): string {\n    return this.actionContext.actionId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionDisplayManagerService.html":{"url":"injectables/ActionDisplayManagerService.html","title":"injectable - ActionDisplayManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionDisplayManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionDisplayServices\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildActions\n                            \n                            \n                                clearActions\n                            \n                            \n                                signalReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildActions\n                        \n                    \n                \n            \n            \n                \nbuildActions(actionContext: ActionContext, callback: ActionCompleteCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actionContext\n                                            \n                                                            ActionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                                            ActionCompleteCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearActions\n                        \n                    \n                \n            \n            \n                \nclearActions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signalReady\n                        \n                    \n                \n            \n            \n                \nsignalReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionDisplayServices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionDisplayService[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\nimport { ActionDisplayService } from '../../model/action-display.model';\nimport { ActionCompleteCallback, ActionContext } from '../../../engine/model/action.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  actionDisplayServices: ActionDisplayService[];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.actionDisplayServices = [this.adaptionActionDisplayService];\n    this.signalReady();\n  }\n\n  signalReady(): void {\n    const readyObs = this.actionDisplayServices.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n\n  buildActions(actionContext: ActionContext, callback: ActionCompleteCallback): void {\n    this.actionDisplayServices.forEach((service) => {\n      service.buildActions(actionContext, callback);\n    });\n  }\n\n  clearActions(): void {\n    this.actionDisplayServices.forEach((service) => {\n      service.clearActions();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionDisplayService.html":{"url":"interfaces/ActionDisplayService.html","title":"interface - ActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-display.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            buildActions\n                                        \n                                \n                                \n                                        \n                                            clearActions\n                                        \n                                \n                                \n                                        \n                                            ready$\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buildActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buildActions:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clearActions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clearActions:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ready$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ready$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { ActionCompleteCallback, ActionContext } from '../../engine/model/action.model';\n\nexport interface ActionDisplayService {\n  ready$: Observable;\n  buildActions: (actionContext: ActionContext, callback: ActionCompleteCallback) => void;\n  clearActions: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionFunctionFactoryService.html":{"url":"injectables/ActionFunctionFactoryService.html","title":"injectable - ActionFunctionFactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionFunctionFactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-function-factory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildPlaceActionPawnInSpace\n                            \n                            \n                                buildTakeElementFromSpace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animalProviderService: AnimalProviderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-function-factory.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildPlaceActionPawnInSpace\n                        \n                    \n                \n            \n            \n                \nbuildPlaceActionPawnInSpace(actionContext: ActionContext, space: Space)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-function-factory.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actionContext\n                                            \n                                                            ActionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                space\n                                            \n                                                            Space\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionFunction\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildTakeElementFromSpace\n                        \n                    \n                \n            \n            \n                \nbuildTakeElementFromSpace(actionContext: ActionContext, space: Space)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-function-factory.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actionContext\n                                            \n                                                            ActionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                space\n                                            \n                                                            Space\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionFunction\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AnimalProviderService } from './animal-provider.service';\nimport { Space } from '../../engine/model/space.model';\nimport { ActionContext, ActionFunction } from '../../engine/model/action.model';\nimport { ActionIdEnum } from '../constant/action.constant';\nimport { ElementPiece } from '../model/element.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionFunctionFactoryService {\n  constructor(private animalProviderService: AnimalProviderService) {}\n\n  buildPlaceActionPawnInSpace(actionContext: ActionContext, space: Space): ActionFunction {\n    return (): ActionContext => {\n      const animal = this.animalProviderService.get(actionContext.currentPlayerFactionId);\n      const actionPawn = animal.actionPawn.pullOne();\n      if (actionPawn) {\n        space.addPiece(actionPawn);\n      } else {\n        throw new Error('Animal has not ActionPawns to place.');\n      }\n      return {\n        currentPlayerFactionId: actionContext.currentPlayerFactionId,\n        actionId: ActionIdEnum.TAKE_ELEMENT,\n      };\n    };\n  }\n\n  buildTakeElementFromSpace(actionContext: ActionContext, space: Space): ActionFunction {\n    return (): null => {\n      const animal = this.animalProviderService.get(actionContext.currentPlayerFactionId);\n      const element = space.removePiece() as ElementPiece;\n      animal.elements.addElement(element);\n      return null;\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnComponent.html":{"url":"components/ActionPawnComponent.html","title":"component - ActionPawnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-pawn/action-pawn.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./action-pawn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    owner\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :         ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        owner\n                    \n                \n\n                \n                    \n                        getowner()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-action-pawn',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './action-pawn.component.html',\n  styleUrl: './action-pawn.component.scss',\n})\nexport class ActionPawnComponent {\n  @Input() actionPawn: ActionPawnPiece | undefined = undefined;\n\n  get owner(): string | null | undefined {\n    return this.actionPawn?.owner;\n  }\n\n  get name(): string | undefined {\n    return this.actionPawn?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.owner) {\n      return getOrThrow(imgPathByKind, this.owner);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionPawnPiece.html":{"url":"interfaces/ActionPawnPiece.html","title":"interface - ActionPawnPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionPawnPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-pawn.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ActionPawnPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnSpaceComponent.html":{"url":"components/ActionPawnSpaceComponent.html","title":"component - ActionPawnSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ActionPawnComponent\n                                EyeballComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./action-pawn-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                            \n                                hasAction\n                            \n                            \n                                space\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                space\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        space\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performAction\n                        \n                    \n                \n            \n            \n                \nperformAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        space\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, OnInit, signal } from '@angular/core';\nimport { ActionPawnComponent } from '../../../action-pawn/action-pawn.component';\nimport { EyeballComponent } from '../eyeball/eyeball.component';\nimport { Space } from '../../../../../engine/model/space.model';\nimport { ActionPawnPiece } from '../../../../model/action-pawn.model';\n\n@Component({\n  selector: 'app-action-pawn-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ActionPawnComponent, EyeballComponent],\n  templateUrl: './action-pawn-space.component.html',\n  styleUrl: './action-pawn-space.component.scss',\n})\nexport class ActionPawnSpaceComponent implements OnInit {\n  space = input.required();\n  actionPawn = signal(undefined);\n  hasAction = signal(false);\n\n  ngOnInit() {\n    this.space().space$.subscribe((space) => {\n      if (space.piece) {\n        this.actionPawn.set(space.piece as ActionPawnPiece);\n      } else {\n        this.actionPawn.set(undefined);\n      }\n      this.hasAction.set(space.actions.length > 0);\n    });\n  }\n\n  performAction(): void {\n    if (this.space().actions.length > 0) {\n      this.space().actions[0].execute();\n    } else {\n      throw new Error('No action to perform');\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    @if (actionPawn()) {\n      \n    } @else {\n      \n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (actionPawn()) {          } @else {                        }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionService.html":{"url":"injectables/ActionService.html","title":"injectable - ActionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionCompleteCallback\n                            \n                            \n                                buildActions\n                            \n                            \n                                clearActions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actionDisplayManagerService: ActionDisplayManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actionDisplayManagerService\n                                                  \n                                                        \n                                                                        ActionDisplayManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionCompleteCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    actionCompleteCallback(nextActionContext: ActionContext | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nextActionContext\n                                            \n                                                            ActionContext | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildActions\n                        \n                    \n                \n            \n            \n                \nbuildActions(actionContext: ActionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actionContext\n                                            \n                                                            ActionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearActions\n                        \n                    \n                \n            \n            \n                \nclearActions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActionDisplayManagerService } from './action-display/action-display-manager.service';\nimport { ActionContext } from '../../engine/model/action.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionService {\n  constructor(private actionDisplayManagerService: ActionDisplayManagerService) {}\n\n  private actionCompleteCallback(nextActionContext: ActionContext | null): void {\n    this.clearActions();\n    if (nextActionContext) {\n      this.buildActions(nextActionContext);\n    } else {\n      console.log('Actions Complete');\n    }\n  }\n\n  buildActions(actionContext: ActionContext): void {\n    this.actionDisplayManagerService.buildActions(\n      actionContext,\n      this.actionCompleteCallback.bind(this),\n    );\n  }\n\n  clearActions(): void {\n    this.actionDisplayManagerService.clearActions();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdaptionActionDisplayCardComponent.html":{"url":"components/AdaptionActionDisplayCardComponent.html","title":"component - AdaptionActionDisplayCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdaptionActionDisplayCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adaption-action-display-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                                ElementSpaceComponent\n                                EyeballComponent\n                                ActionPawnSpaceComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adaption-action-display-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adaption-action-display-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnSpaces\n                            \n                            \n                                elementSpaces\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, signal } from '@angular/core';\nimport { MatCard } from '@angular/material/card';\nimport { ElementSpaceComponent } from '../space/element-space/element-space.component';\nimport { EyeballComponent } from '../space/eyeball/eyeball.component';\nimport { ActionPawnSpaceComponent } from '../space/action-pawn-space/action-pawn-space.component';\nimport { AdaptionActionDisplayService } from '../../../service/action-display/adaption-action-display.service';\nimport { filter, first } from 'rxjs';\nimport { isTrue } from '../../../../engine/util/predicate';\nimport { Space } from '../../../../engine/model/space.model';\n\n@Component({\n  selector: 'app-adaption-action-display-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatCard, ElementSpaceComponent, EyeballComponent, ActionPawnSpaceComponent],\n  templateUrl: './adaption-action-display-card.component.html',\n  styleUrl: './adaption-action-display-card.component.scss',\n})\nexport class AdaptionActionDisplayCardComponent implements OnInit {\n  actionPawnSpaces = signal([]);\n  elementSpaces = signal([]);\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {}\n\n  ngOnInit() {\n    this.adaptionActionDisplayService.ready$.pipe(filter(isTrue), first()).subscribe(() => {\n      this.adaptionActionDisplayService.actionPawnSpaces$.subscribe((spaces) => {\n        this.actionPawnSpaces.set(spaces);\n      });\n      this.adaptionActionDisplayService.elementSpaces$.subscribe((spaces) => {\n        this.elementSpaces.set(spaces);\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Adaption\n    \n      \n        @for (elementSpace of elementSpaces(); track $index) {\n          \n        }\n      \n      \n        @for (actionPawnSpace of actionPawnSpaces(); track $index) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Adaption                  @for (elementSpace of elementSpaces(); track $index) {                  }                    @for (actionPawnSpace of actionPawnSpaces(); track $index) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdaptionActionDisplayCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdaptionActionDisplayService.html":{"url":"injectables/AdaptionActionDisplayService.html","title":"injectable - AdaptionActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdaptionActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/adaption-action-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnSpaces\n                            \n                            \n                                actionPawnSpaces$\n                            \n                            \n                                    Private\n                                actionPawnSpacesSubject\n                            \n                            \n                                area\n                            \n                            \n                                elementSpaces\n                            \n                            \n                                elementSpaces$\n                            \n                            \n                                    Private\n                                elementSpacesSubject\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActionPawn\n                            \n                            \n                                buildActions\n                            \n                            \n                                clearActions\n                            \n                            \n                                initialize\n                            \n                            \n                                removeActionPawn\n                            \n                            \n                                removeElement\n                            \n                            \n                                removeRemainingElements\n                            \n                            \n                                replenish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistryService: AreaRegistryService, actionFunctionFactoryService: ActionFunctionFactoryService, elementDrawPoolService: ElementDrawPoolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionFunctionFactoryService\n                                                  \n                                                        \n                                                                        ActionFunctionFactoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActionPawn\n                        \n                    \n                \n            \n            \n                \naddActionPawn(index: number, actionPawn: ActionPawnPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionPawn\n                                            \n                                                            ActionPawnPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildActions\n                        \n                    \n                \n            \n            \n                \nbuildActions(actionContext: ActionContext, callback: ActionCompleteCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actionContext\n                                            \n                                                            ActionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                                            ActionCompleteCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearActions\n                        \n                    \n                \n            \n            \n                \nclearActions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActionPawn\n                        \n                    \n                \n            \n            \n                \nremoveActionPawn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ElementPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRemainingElements\n                        \n                    \n                \n            \n            \n                \nremoveRemainingElements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ElementPiece[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replenish\n                        \n                    \n                \n            \n            \n                \nreplenish()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.actionPawnSpacesSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionPawnSpacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.actionPawnSpaces)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementSpacesSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementSpacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.elementSpaces)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { ElementDrawPoolService } from '../element-draw-pool.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { ElementPiece } from '../../model/element.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaIdEnum, SpaceKindEnum } from '../../constant/area.constant';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { Space } from '../../../engine/model/space.model';\nimport { isNotNull } from '../../../engine/util/predicate';\nimport { Piece } from 'api-types/src/game-state';\nimport { Action, ActionCompleteCallback, ActionContext } from '../../../engine/model/action.model';\nimport { ActionFunctionFactoryService } from '../action-function-factory.service';\nimport { ActionIdEnum } from '../../constant/action.constant';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdaptionActionDisplayService {\n  area: Area | undefined = undefined;\n  actionPawnSpaces: Space[] = [];\n  private actionPawnSpacesSubject = new BehaviorSubject(this.actionPawnSpaces);\n  actionPawnSpaces$ = this.actionPawnSpacesSubject.asObservable();\n  // An array of spaces that can hold Element pieces\n  elementSpaces: Space[] = [];\n  private elementSpacesSubject = new BehaviorSubject(this.elementSpaces);\n  elementSpaces$ = this.elementSpacesSubject.asObservable();\n  private readySubject = new BehaviorSubject(false);\n  ready$ = this.readySubject.asObservable();\n\n  constructor(\n    private areaRegistryService: AreaRegistryService,\n    private actionFunctionFactoryService: ActionFunctionFactoryService,\n    private elementDrawPoolService: ElementDrawPoolService,\n  ) {\n    this.initialize();\n  }\n\n  initialize() {\n    this.elementDrawPoolService.ready$\n      .pipe(\n        combineLatestWith(this.areaRegistryService.registeredIds$),\n        filter(\n          ([isReady, registeredAreaIds]) =>\n            isReady && registeredAreaIds.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        this.area = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n\n        this.area.spaces$.subscribe((spaces) => {\n          this.actionPawnSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ACTION_PAWN,\n          );\n          this.actionPawnSpacesSubject.next(this.actionPawnSpaces);\n\n          this.elementSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ELEMENT,\n          );\n          this.elementSpacesSubject.next(this.elementSpaces);\n          this.readySubject.next(true);\n        });\n      });\n  }\n\n  replenish(): void {\n    if (this.elementSpaces.map((space) => space.piece).filter(isNotNull).length > 0) {\n      throw new Error('Element spaces must be cleared before replenish');\n    }\n\n    this.elementDrawPoolService.pull(4).forEach((element) => {\n      if (element) {\n        const nextSpace = ensureDefined(this.area).nextAvailableSpace(SpaceKindEnum.ELEMENT);\n        if (nextSpace) {\n          nextSpace.addPiece(element as Piece);\n        } else {\n          throw new Error('No Spaces available');\n        }\n      }\n    });\n  }\n\n  removeElement(index: number): ElementPiece {\n    return ensureDefined(this.elementSpaces)[index].removePiece() as ElementPiece;\n  }\n\n  removeRemainingElements(): ElementPiece[] {\n    return ensureDefined(this.elementSpaces)\n      .filter((space) => space.piece)\n      .map((space) => space.removePiece() as ElementPiece);\n  }\n\n  addActionPawn(index: number, actionPawn: ActionPawnPiece): void {\n    ensureDefined(this.actionPawnSpaces)[index].addPiece(actionPawn);\n  }\n\n  removeActionPawn(index: number): ActionPawnPiece {\n    return ensureDefined(this.actionPawnSpaces)[index].removePiece() as ActionPawnPiece;\n  }\n\n  buildActions(actionContext: ActionContext, callback: ActionCompleteCallback): void {\n    if (actionContext.actionId === (ActionIdEnum.PLACE_ACTION_PAWN as string)) {\n      this.actionPawnSpaces\n        .filter((space) => space.piece === null)\n        .forEach((space) => {\n          const action = new Action(\n            actionContext,\n            this.actionFunctionFactoryService.buildPlaceActionPawnInSpace(actionContext, space),\n            callback,\n          );\n          space.setActions([action]);\n        });\n    } else if (actionContext.actionId === (ActionIdEnum.TAKE_ELEMENT as string)) {\n      this.elementSpaces\n        .filter((space) => space.piece)\n        .forEach((space) => {\n          const action = new Action(\n            actionContext,\n            this.actionFunctionFactoryService.buildTakeElementFromSpace(actionContext, space),\n            callback,\n          );\n          space.setActions([action]);\n        });\n    }\n  }\n\n  clearActions(): void {\n    ensureDefined(this.area).clearActions();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                actionPawnPile\n                            \n                            \n                                    Private\n                                    Readonly\n                                animalElements\n                            \n                            \n                                    Private\n                                    Readonly\n                                faction\n                            \n                            \n                                    Private\n                                    Readonly\n                                speciesPile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    actionPawn\n                                \n                                \n                                    elements\n                                \n                                \n                                    species\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AnimalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        actionPawnPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimalElements\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        speciesPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n\n                \n                    \n                        getactionPawn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        species\n                    \n                \n\n                \n                    \n                        getspecies()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:107\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementArea.spaces$.subscribe(() => {\n      this.elementsSubject.next(this.allElements);\n    });\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimalCardComponent.html":{"url":"components/AnimalCardComponent.html","title":"component - AnimalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/animal-card/animal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animal-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardTitle\n                                ActionPawnComponent\n                            MatGridList\n                            MatGridTile\n                                ElementComponent\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnForHeader\n                            \n                            \n                                actionPawnPileLength\n                            \n                            \n                                currentPlayerAnimal\n                            \n                            \n                                elements\n                            \n                            \n                                emptyElementSpaces\n                            \n                            \n                                faction\n                            \n                            \n                                speciesPileLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActionPawnForHeader\n                            \n                            \n                                    Private\n                                getAnimal\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                faction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(animalProviderService: AnimalProviderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        faction\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getActionPawnForHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActionPawnForHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnimal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnForHeader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getActionPawnForHeader())\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyElementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faction\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speciesPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, input, OnInit, signal } from '@angular/core';\nimport { MatCard, MatCardTitle } from '@angular/material/card';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { MatGridList, MatGridTile } from '@angular/material/grid-list';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { filter, first, map } from 'rxjs';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementComponent } from '../element/element.component';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { isNotUndefined } from '../../../engine/util/predicate';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { NgClass } from '@angular/common';\nimport { ensureDefined } from '../../../engine/util/misc';\n\n// Todo: change to OnPush\n@Component({\n  selector: 'app-animal-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatCard,\n    MatCardTitle,\n    ActionPawnComponent,\n    MatGridList,\n    MatGridTile,\n    ElementComponent,\n    NgClass,\n  ],\n  templateUrl: './animal-card.component.html',\n  styleUrl: './animal-card.component.scss',\n})\nexport class AnimalCardComponent implements OnInit {\n  faction = input.required();\n  elements = signal([]);\n  emptyElementSpaces = signal([]);\n  actionPawnPileLength = signal(0);\n  speciesPileLength = signal(0);\n  actionPawnForHeader = computed(() => this.getActionPawnForHeader());\n  currentPlayerAnimal = computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  );\n\n  constructor(\n    private animalProviderService: AnimalProviderService,\n    private playerService: PlayerService,\n  ) {}\n\n  ngOnInit() {\n    this.getAnimal();\n  }\n\n  private getAnimal(): void {\n    this.animalProviderService.animals$\n      .pipe(\n        map((animals) => animals.find((animal) => animal.id === this.faction().id)),\n        filter(isNotUndefined),\n        first(),\n      )\n      .subscribe((animal) => {\n        animal.elements.elements$.subscribe((elements) => {\n          this.elements.set(elements);\n          this.emptyElementSpaces.set(Array(6 - elements.length).fill(null) as null[]);\n        });\n        animal.actionPawn.length$.subscribe((length) => {\n          this.actionPawnPileLength.set(length);\n        });\n        animal.species.length$.subscribe((length) => {\n          this.speciesPileLength.set(length);\n        });\n      });\n  }\n\n  private getActionPawnForHeader(): ActionPawnPiece {\n    return defaultPieceFactory(PieceKindEnum.ACTION_PAWN, this.faction().id) as ActionPawnPiece;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{\n          faction().name\n        }}\n      \n    \n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n        @for (emptyElementSpace of emptyElementSpaces(); track $index) {\n          \n        }\n      \n    \n    \n      \n        Action Pawns\n      \n      Species\n      \n        {{ actionPawnPileLength() }}\n      \n      {{ speciesPileLength() }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{          faction().name        }}                            @for (element of elements(); track $index) {                  }        @for (emptyElementSpace of emptyElementSpaces(); track $index) {                  }                            Action Pawns            Species              {{ actionPawnPileLength() }}            {{ speciesPileLength() }}            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalConfig.html":{"url":"interfaces/AnimalConfig.html","title":"interface - AnimalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnimalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawnPile\n                                        \n                                \n                                \n                                        \n                                            elementArea\n                                        \n                                \n                                \n                                        \n                                            elementConfig\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            speciesPile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawnPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawnPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementArea\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementArea:         Area\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Area\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementConfig:         ElementConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         Faction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Faction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speciesPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speciesPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementArea.spaces$.subscribe(() => {\n      this.elementsSubject.next(this.allElements);\n    });\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalElements.html":{"url":"classes/AnimalElements.html","title":"class - AnimalElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elements$\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    allElements\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementArea: Area, elementConfig: ElementConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementArea\n                                                  \n                                                        \n                                                                        Area\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementConfig\n                                                  \n                                                        \n                                                                        ElementConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allElements\n                    \n                \n\n                \n                    \n                        getallElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:73\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementArea.spaces$.subscribe(() => {\n      this.elementsSubject.next(this.allElements);\n    });\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalProviderService.html":{"url":"injectables/AnimalProviderService.html","title":"injectable - AnimalProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal-provider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animalById\n                            \n                            \n                                animals$\n                            \n                            \n                                    Private\n                                animalsSubject\n                            \n                            \n                                    Private\n                                processedFactionIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalFactory\n                            \n                            \n                                    Private\n                                buildAnimal\n                            \n                            \n                                    Private\n                                buildAnimals\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalFactory(animalConfig: AnimalConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animalConfig\n                                            \n                                                            AnimalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimals\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animals$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.animalsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processedFactionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../engine/model/faction.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport { FactionRegistryService } from '../../engine/service/game-element/faction-registry.service';\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { getOrThrow, setDifference } from '../../engine/util/misc';\nimport { Animal, AnimalConfig } from '../model/animal.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalProviderService {\n  private processedFactionIds: Set = new Set();\n  private readonly animalById = new Map();\n  private animalsSubject = new BehaviorSubject([]);\n  animals$ = this.animalsSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {\n    this.buildAnimals();\n  }\n  private buildAnimals(): void {\n    this.factionRegistryService.factionAssignment$.subscribe((factionAssignments) => {\n      // To minimize any building an animal several times, we add the animal id to processedFactionIds as quickly as possible /\n      const factionIds = new Set(\n        factionAssignments.map((factionAssignment) => factionAssignment.factionId),\n      );\n      const factionIdsToProcess = setDifference(factionIds, this.processedFactionIds);\n      this.processedFactionIds = new Set([\n        ...factionIdsToProcess,\n        ...this.processedFactionIds,\n      ]);\n      factionIdsToProcess.forEach((factionId) => {\n        const faction = this.factionRegistryService.get(factionId);\n        this.buildAnimal(faction);\n      });\n    });\n  }\n\n  private animalFactory(animalConfig: AnimalConfig): Animal {\n    return new Animal(animalConfig);\n  }\n\n  private buildAnimal(faction: Faction): void {\n    const elementAreaId = getOrThrow(elementConfigByAnimal, faction.id).areaId;\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id).actionPawn;\n    const speciesPileId = getOrThrow(pileIdsByAnimal, faction.id).species;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        combineLatestWith(this.pileRegistryService.registeredIds$),\n        filter(\n          ([areaIds, pileIds]) =>\n            areaIds.has(elementAreaId) &&\n            pileIds.has(actionPawnPileId) &&\n            pileIds.has(speciesPileId),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        const animalConfig: AnimalConfig = {\n          faction: faction,\n          actionPawnPile: this.pileRegistryService.get(actionPawnPileId),\n          elementArea: this.areaRegistrySvc.get(elementAreaId),\n          elementConfig: getOrThrow(elementConfigByAnimal, faction.id),\n          speciesPile: this.pileRegistryService.get(speciesPileId),\n        };\n        this.animalById.set(faction.id, this.animalFactory(animalConfig));\n        this.animalsSubject.next(Array.from(this.animalById.values()));\n      });\n  }\n\n  get(id: string): Animal {\n    return getOrThrow(this.animalById, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n            \n                Description\n            \n            \n                An Area represents a collections of related Spaces.\nEach area has one or more Spaces. Each Space can contain a Piece. Each Space maintains its own state and the Area object keeps track\nof the state of all the Spaces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                spaces$\n                            \n                            \n                                    Private\n                                spacesSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearActions\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: AreaState)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        AreaState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearActions\n                        \n                    \n                \n            \n            \n                \nclearActions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace(kind?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Space | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space } from './space.model';\nimport { GameElement } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AreaState, SpaceState } from 'api-types/src/game-state';\n\n/**\n * An Area represents a collections of related Spaces.\n *\n * Each area has one or more Spaces. Each Space can contain a Piece. Each Space maintains its own state and the Area object keeps track\n * of the state of all the Spaces.\n */\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(state: AreaState) {\n    super(state);\n    this.spaces = state.space.map((spaceState) => new Space(spaceState));\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = state.space;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.space$.subscribe(() => {\n        this.spacesSubject.next(this.spaces);\n      });\n      space.state$.subscribe(() => {\n        this.spaceState[index] = space.state;\n        this.stateSubject.next(this.state);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      /* We need to set the state of the space in both the Area and the Space as the Space does not notify the Area when it's\n         updated using setState. State updates are only sent when the local player takes an action. However, since setState is done\n         when a GSP is received, there are no state update notifications sent, so anything interested in the state needs to be updated\n         when the setState is done. So it needs to be done both at the Space and Area objects.\n       */\n      this.spaceState[index] = spaceState;\n      this.spaces[index].setState(spaceState);\n    });\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n\n  clearActions(): void {\n    this.spaces.forEach((space) => {\n      space.clearActions();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:50\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement | TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:65\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nEmits the updated set of registered IDs.\nRegisters the elements with the GameElementStateService for state synchronization.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement | TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement or array of GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:39\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:88\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:70\n\n                        \n                    \n\n\n            \n                \n                        Initializes the service by subscribing to the central GameStateService's observable\nof GameElementState. When the state of a registered GameElement changes in the\ncentral game state, this method updates the corresponding GameElement.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:103\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nRegisters their state with the central GameStateService.\nSubscribes to their state changes to update the central game state.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:30\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoggedIn$\n                            \n                            \n                                    Private\n                                    Readonly\n                                isLoggedInSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authResultToPlayerAuth\n                            \n                            \n                                checkIsLoggedIn\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                validatePlayerAuthData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerAuthData\n                                \n                                \n                                    loggedInUsername\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authResultToPlayerAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    authResultToPlayerAuth(authResult: AuthenticationResultType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authResult\n                                            \n                                                        AuthenticationResultType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerAuthData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIsLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validatePlayerAuthData\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePlayerAuthData(playerAuthData: PlayerAuthData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerAuthData\n                                            \n                                                            PlayerAuthData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        isLoggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerAuthData\n                    \n                \n\n                \n                    \n                        getplayerAuthData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loggedInUsername\n                    \n                \n\n                \n                    \n                        getloggedInUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:66\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\nimport { LocalStorageService } from '../local-storage.service';\nimport { AuthenticationResultType } from '@aws-sdk/client-cognito-identity-provider';\nimport { PlayerAuthData } from '../../model/player.model';\nimport { ensureDefined } from '../../util/misc';\nimport { LocalStorageKey } from '../../constant/local-storage.constant';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private readonly isLoggedInSubject: BehaviorSubject;\n  readonly isLoggedIn$: Observable;\n\n  constructor(\n    private cognitoClientService: CognitoClientService,\n    private localStorageService: LocalStorageService,\n  ) {\n    this.isLoggedInSubject = new BehaviorSubject(this.checkIsLoggedIn());\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n  }\n\n  private authResultToPlayerAuth(authResult: AuthenticationResultType): PlayerAuthData {\n    const jwt = this.cognitoClientService.decodeJwtToken(ensureDefined(authResult.IdToken));\n    return {\n      username: ensureDefined(jwt['cognito:username']),\n      accessToken: ensureDefined(authResult.IdToken),\n      accessTokenExpire: ensureDefined(jwt.exp),\n      refreshToken: ensureDefined(authResult.RefreshToken),\n    };\n  }\n\n  async login(username: string, password: string): Promise {\n    const authResult = await this.cognitoClientService.login(username, password);\n    console.log(authResult);\n    if (authResult) {\n      this.localStorageService.setStorageKey(\n        LocalStorageKey.PLAYER_AUTH_DATA,\n        JSON.stringify(this.authResultToPlayerAuth(authResult)),\n      );\n      this.isLoggedInSubject.next(true);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout(): void {\n    if (this.playerAuthData) {\n      this.localStorageService.deletedStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    }\n    this.isLoggedInSubject.next(false);\n  }\n\n  get playerAuthData(): PlayerAuthData | undefined {\n    const playerAuthData = this.localStorageService.getStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    if (playerAuthData) {\n      return JSON.parse(playerAuthData) as PlayerAuthData;\n    } else {\n      return undefined;\n    }\n  }\n\n  get loggedInUsername(): string {\n    if (this.playerAuthData) {\n      return this.playerAuthData.username;\n    } else {\n      throw new Error('No user logged in');\n    }\n  }\n\n  private validatePlayerAuthData(playerAuthData: PlayerAuthData): boolean {\n    return Date.now() \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CognitoClientService.html":{"url":"injectables/CognitoClientService.html","title":"injectable - CognitoClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CognitoClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/cognito-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                decodeJwtToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClient: CognitoIdentityProviderClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClient\n                                                  \n                                                        \n                                                                    CognitoIdentityProviderClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeJwtToken\n                        \n                    \n                \n            \n            \n                \ndecodeJwtToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CognitoIdTokenJwt\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AuthenticationResultType,\n  CognitoIdentityProviderClient,\n  ConfirmSignUpCommand,\n  InitiateAuthCommand,\n  InitiateAuthCommandInput,\n  SignUpCommand,\n} from '@aws-sdk/client-cognito-identity-provider';\nimport { environment } from '../../../../environments/environment';\nimport { jwtDecode } from 'jwt-decode';\nimport { CognitoIdTokenJwt } from 'api-types/src/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CognitoClientService {\n  constructor(private cognitoClient: CognitoIdentityProviderClient) {}\n\n  async login(username: string, password: string): Promise {\n    const input = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: environment.cognito.clientId,\n      AuthParameters: {\n        USERNAME: username,\n        PASSWORD: password,\n      },\n    } as InitiateAuthCommandInput;\n    const command = new InitiateAuthCommand(input);\n    try {\n      const { AuthenticationResult } = await this.cognitoClient.send(command);\n      if (AuthenticationResult) {\n        return AuthenticationResult;\n      } else {\n        console.error('Unexpected AuthenticationResult');\n        return null;\n      }\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  decodeJwtToken(token: string): CognitoIdTokenJwt {\n    return jwtDecode(token);\n  }\n\n  async signUp(username: string, email: string, password: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: [\n        {\n          Name: 'email',\n          Value: email,\n        },\n      ],\n    };\n    try {\n      const command = new SignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      ConfirmationCode: code,\n    };\n    try {\n      const command = new ConfirmSignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (error) {\n      console.error('Error confirming sign up: ', error);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateGamePageComponent.html":{"url":"components/CreateGamePageComponent.html","title":"component - CreateGamePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateGamePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/create-game-page/create-game-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-game-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatFormField\n                            MatFormFieldModule\n                            FormsModule\n                            MatAutocompleteTrigger\n                            MatAutocomplete\n                            MatOption\n                            MatButton\n                            MatInput\n                            NgForOf\n                            NgIf\n                            ReactiveFormsModule\n                            MatIcon\n                            MatIconButton\n                            MatChip\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-game-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-game-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableFriends\n                            \n                            \n                                currentUser\n                            \n                            \n                                errorMessages\n                            \n                            \n                                filteredPlayers\n                            \n                            \n                                    Private\n                                    Readonly\n                                MAX_PLAYERS\n                            \n                            \n                                playerControls\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                validInputStates\n                            \n                            \n                                validPlayers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFriend\n                            \n                            \n                                    Async\n                                addFriendToGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Private\n                                    Async\n                                fetchPlayers\n                            \n                            \n                                hasInvalidPlayer\n                            \n                            \n                                hasValidPlayers\n                            \n                            \n                                isFriend\n                            \n                            \n                                isGameFullOrInvalid\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onPlayerBlur\n                            \n                            \n                                    Async\n                                onPlayerInput\n                            \n                            \n                                updateAvailableFriends\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, navigate: NavigateService, snackBar: MatSnackBar, playerService: PlayerService, gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFriend(playerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFriendToGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFriendToGame(playerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        fetchPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchPlayers(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasInvalidPlayer\n                        \n                    \n                \n            \n            \n                \nhasInvalidPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValidPlayers\n                        \n                    \n                \n            \n            \n                \nhasValidPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFriend\n                        \n                    \n                \n            \n            \n                \nisFriend(playerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGameFullOrInvalid\n                        \n                    \n                \n            \n            \n                \nisGameFullOrInvalid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onPlayerBlur\n                        \n                    \n                \n            \n            \n                \n                        \n                    onPlayerBlur(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onPlayerInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onPlayerInput(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAvailableFriends\n                        \n                    \n                \n            \n            \n                \nupdateAvailableFriends()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableFriends\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Player | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['', '', '', '', '']\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                \n                    \n                        Default value : [[], [], [], [], []]\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MAX_PLAYERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validInputStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean[]\n\n                    \n                \n                \n                    \n                        Default value : [false, false, false, false, false]\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set[]\n\n                    \n                \n                \n                    \n                        Default value : Array.from({ length: 5 }, () => new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PlayerService } from '../../service/game-management/player.service';\nimport { Player } from 'api-types/src/player';\nimport { GameService } from '../../service/game-management/game.service';\nimport { MatCard } from '@angular/material/card';\nimport { MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteTrigger, MatOption } from '@angular/material/autocomplete';\nimport { MatButton, MatIconButton } from '@angular/material/button';\nimport { MatInput } from '@angular/material/input';\nimport { NgForOf, NgIf } from '@angular/common';\nimport { filter, Subscription } from 'rxjs';\nimport { isNotUndefined } from '../../util/predicate';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatChip } from '@angular/material/chips';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { ensureDefined } from '../../util/misc';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NavigateService } from '../../service/navigate.service';\n\n@Component({\n  selector: 'app-create-game-page',\n  standalone: true,\n  imports: [\n    MatCard,\n    MatFormField,\n    MatFormFieldModule,\n    FormsModule,\n    MatAutocompleteTrigger,\n    MatAutocomplete,\n    MatOption,\n    MatButton,\n    MatInput,\n    NgForOf,\n    NgIf,\n    ReactiveFormsModule,\n    MatIcon,\n    MatIconButton,\n    MatChip,\n    MatTooltip,\n  ],\n  templateUrl: './create-game-page.component.html',\n  styleUrl: './create-game-page.component.scss',\n})\nexport class CreateGamePageComponent implements OnInit, OnDestroy {\n  private readonly MAX_PLAYERS = 6;\n  playerControls: FormArray;\n  private subscriptions: Subscription[] = [];\n  currentUser: Player | undefined;\n  filteredPlayers: string[][] = [[], [], [], [], []];\n  errorMessages: string[] = ['', '', '', '', ''];\n  validPlayers: Set[] = Array.from({ length: 5 }, () => new Set());\n  availableFriends: string[] = [];\n  validInputStates: boolean[] = [false, false, false, false, false];\n\n  constructor(\n    private fb: FormBuilder,\n    private navigate: NavigateService,\n    private snackBar: MatSnackBar,\n    private playerService: PlayerService,\n    private gameService: GameService,\n  ) {\n    this.playerControls = this.fb.array(\n      Array.from({ length: this.MAX_PLAYERS - 1 }, () => this.fb.control('')),\n    ) as FormArray;\n  }\n\n  ngOnInit(): void {\n    const playerSubscription = this.playerService.currentPlayer$\n      .pipe(filter(isNotUndefined))\n      .subscribe((player) => {\n        this.currentUser = player;\n        this.updateAvailableFriends();\n      });\n    this.subscriptions.push(playerSubscription);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  private async fetchPlayers(index: number): Promise {\n    const control = this.playerControls.at(index);\n    const input = control.value as string | null;\n    this.validPlayers[index].clear();\n    this.filteredPlayers[index] = [];\n\n    if (input) {\n      try {\n        const players = await this.playerService.findPlayers(input);\n        const selectedPlayers = new Set(\n          this.playerControls.value.filter(\n            (player: string | null, i: number) => player && i !== index,\n          ) as string[],\n        );\n\n        // Add the current user's username to the selected players\n        selectedPlayers.add(ensureDefined(this.currentUser).username);\n\n        this.filteredPlayers[index] = players.filter((player) => !selectedPlayers.has(player));\n        players.forEach((player) => this.validPlayers[index].add(player));\n      } catch (error) {\n        console.error(error);\n        this.errorMessages[index] = 'Error fetching players';\n        control.setErrors({ fetchError: true });\n      }\n    }\n  }\n\n  async onPlayerInput(index: number): Promise {\n    await this.fetchPlayers(index);\n  }\n\n  async onPlayerBlur(index: number): Promise {\n    const control = this.playerControls.at(index);\n    const input = control.value as string | null;\n    const selectedPlayers = new Set(\n      this.playerControls.value.filter(\n        (player: string | null, i: number) => player && i !== index,\n      ) as string[],\n    );\n\n    // Add the current user's username to the selected players\n    selectedPlayers.add(ensureDefined(this.currentUser).username);\n\n    this.errorMessages[index] = '';\n    control.setErrors(null);\n\n    if (input) {\n      // Ensure the validPlayers set is populated\n      if (!this.validPlayers[index].has(input)) {\n        await this.fetchPlayers(index);\n      }\n\n      if (!this.validPlayers[index].has(input)) {\n        this.errorMessages[index] = 'Invalid username';\n        control.setErrors({ invalid: true });\n        this.validInputStates[index] = false;\n      } else if (selectedPlayers.has(input)) {\n        this.errorMessages[index] = 'Player already in the game';\n        control.setErrors({ duplicate: true });\n        this.validInputStates[index] = false;\n      } else {\n        this.validInputStates[index] = !this.isFriend(input);\n      }\n\n      this.updateAvailableFriends();\n    } else {\n      // Clear validation states if input is empty\n      this.validPlayers[index].clear();\n      this.validInputStates[index] = false;\n      this.filteredPlayers[index] = [];\n    }\n  }\n\n  isGameFullOrInvalid(): boolean {\n    return (\n      this.hasInvalidPlayer() || this.playerControls.controls.every((control) => control.value)\n    );\n  }\n\n  async addFriendToGame(playerId: string): Promise {\n    const emptyControl = this.playerControls.controls.find((control) => !control.value);\n    if (!emptyControl) return;\n\n    const isPlayerAlreadyAdded = this.playerControls.controls.some(\n      (control) => control.value === playerId,\n    );\n    if (isPlayerAlreadyAdded) return;\n\n    emptyControl.setValue(playerId);\n    this.updateAvailableFriends();\n    await this.onPlayerInput(this.playerControls.controls.indexOf(emptyControl));\n  }\n\n  updateAvailableFriends(): void {\n    const selectedPlayers = new Set(this.playerControls.value.filter(Boolean) as string[]);\n    this.availableFriends = ensureDefined(this.currentUser).friends.filter(\n      (friend) => !selectedPlayers.has(friend),\n    );\n  }\n\n  hasValidPlayers(): boolean {\n    return this.playerControls.controls.some((control) => control.value && !control.invalid);\n  }\n\n  hasInvalidPlayer(): boolean {\n    return this.playerControls.controls.some((control) => control.invalid);\n  }\n\n  async addFriend(playerId: string): Promise {\n    if (ensureDefined(this.currentUser).friends.includes(playerId)) return;\n    try {\n      await this.playerService.addFriend(playerId);\n    } catch (error) {\n      this.snackBar.open('Failed to add friend', 'Close', {\n        duration: 3000,\n      });\n      console.error('Failed to add friend', error);\n    }\n  }\n\n  isFriend(playerId: string): boolean {\n    return ensureDefined(this.currentUser).friends.includes(playerId);\n  }\n\n  async createGame(): Promise {\n    const otherPlayers = this.playerControls.value.filter(\n      (player: string | null): player is string => !!player,\n    );\n    try {\n      await this.gameService.createGame(otherPlayers);\n      void this.navigate.toLobbyPage();\n    } catch (error) {\n      this.snackBar.open('Error creating game', 'Close', {\n        duration: 3000,\n      });\n      console.error(error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Players\n        \n          \n        \n\n        \n          \n            \n              \n              \n                \n                  {{ player }}\n                \n              \n\n              {{ errorMessages[i] }}\n            \n\n            \n              person_add\n            \n          \n        \n\n        \n          Create Game\n        \n      \n\n      \n        Friends\n        \n          \n            {{ friend }}\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Players                                                                                                                      {{ player }}                                            {{ errorMessages[i] }}                                      person_add                                                Create Game                            Friends                              {{ friend }}                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateGamePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DominantSpeciesGameComponent.html":{"url":"components/DominantSpeciesGameComponent.html","title":"component - DominantSpeciesGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DominantSpeciesGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/dominant-species-game/dominant-species-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dominant-species-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                DrawPoolGameComponent\n                            MatProgressSpinner\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dominant-species-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dominant-species-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gameReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                initializeGame\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, navigate: NavigateService, gameService: GameService, gameReadyService: GameReadyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameReadyService\n                                                  \n                                                        \n                                                                        GameReadyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        initializeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gameReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, signal } from '@angular/core';\nimport { DrawPoolGameComponent } from '../draw-pool-game/draw-pool-game.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { GameService } from '../../../engine/service/game-management/game.service';\nimport { GameReadyService } from '../../service/game-ready.service';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { filter, first } from 'rxjs';\nimport { NavigateService } from '../../../engine/service/navigate.service';\n\n@Component({\n  selector: 'app-dominant-species-game',\n  standalone: true,\n  imports: [DrawPoolGameComponent, MatProgressSpinner],\n  templateUrl: './dominant-species-game.component.html',\n  styleUrl: './dominant-species-game.component.scss',\n})\nexport class DominantSpeciesGameComponent implements OnInit, OnDestroy {\n  gameReady = signal(false);\n  constructor(\n    private route: ActivatedRoute,\n    private navigate: NavigateService,\n    private gameService: GameService,\n    private gameReadyService: GameReadyService,\n  ) {}\n\n  ngOnInit(): void {\n    const gameId = this.route.snapshot.queryParamMap.get('gameId');\n    if (!gameId) {\n      void this.navigate.toLobbyPage();\n    } else {\n      void this.initializeGame(gameId);\n    }\n    this.gameReadyService.ready$\n      .pipe(\n        filter((isReady) => isReady),\n        first(),\n      )\n      .subscribe(() => {\n        this.gameReady.set(true);\n      });\n  }\n\n  ngOnDestroy() {\n    this.gameService.cleanupGame();\n  }\n\n  private async initializeGame(gameId: string): Promise {\n    await this.gameService.initializeGame(gameId);\n  }\n}\n\n    \n\n    \n        @if (gameReady()) {\n  \n} @else {\n  \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (gameReady()) {  } @else {        }'\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DominantSpeciesGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                                ElementComponent\n                                ActionPawnComponent\n                                AnimalCardComponent\n                                EyeballComponent\n                                ElementSpaceComponent\n                                AdaptionActionDisplayCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adaptionArea\n                            \n                            \n                                currentPlayerFaction\n                            \n                            \n                                factions\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endTurn\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                startTurn\n                            \n                            \n                                takeAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService, areaRegistryService: AreaRegistryService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, animalProviderService: AnimalProviderService, adaptionActionDisplayService: AdaptionActionDisplayService, actionService: ActionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionService\n                                                  \n                                                        \n                                                                        ActionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        endTurn\n                        \n                    \n                \n            \n            \n                \nendTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTurn\n                        \n                    \n                \n            \n            \n                \nstartTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeAction\n                        \n                    \n                \n            \n            \n                \ntakeAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adaptionArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerFaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter, first } from 'rxjs';\nimport { ElementComponent } from '../element/element.component';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { AnimalCardComponent } from '../animal-card/animal-card.component';\nimport { EyeballComponent } from '../action-display/space/eyeball/eyeball.component';\nimport { ElementSpaceComponent } from '../action-display/space/element-space/element-space.component';\nimport { AdaptionActionDisplayCardComponent } from '../action-display/adaption-action-display-card/adaption-action-display-card.component';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { AreaIdEnum } from '../../constant/area.constant';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { AdaptionActionDisplayService } from '../../service/action-display/adaption-action-display.service';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { ActionService } from '../../service/action.service';\nimport { ActionIdEnum } from '../../constant/action.constant';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [\n    MatButton,\n    MatTooltip,\n    ElementComponent,\n    ActionPawnComponent,\n    AnimalCardComponent,\n    EyeballComponent,\n    ElementSpaceComponent,\n    AdaptionActionDisplayCardComponent,\n  ],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent implements OnInit {\n  currentPlayerFaction: Faction | undefined = undefined;\n  factions: Faction[] = [];\n  adaptionArea: Area | undefined = undefined;\n  log: string[] = [];\n\n  constructor(\n    private gameStateSvc: GameStateService,\n    private areaRegistryService: AreaRegistryService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private animalProviderService: AnimalProviderService,\n    private adaptionActionDisplayService: AdaptionActionDisplayService,\n    private actionService: ActionService,\n  ) {}\n\n  ngOnInit() {\n    this.factionRegistrySvc.factionAssignment$.subscribe((factionAssignments) => {\n      this.factions = factionAssignments.map((factionAssignment) =>\n        this.factionRegistrySvc.get(factionAssignment.factionId),\n      );\n      this.currentPlayerFaction = this.factions.find(\n        (faction) => faction.ownerId === this.playerService.currentPlayer?.username,\n      );\n    });\n\n    this.areaRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION)),\n        first(),\n      )\n      .subscribe(() => {\n        this.adaptionArea = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n      });\n  }\n\n  startTurn(): void {\n    this.actionService.buildActions({\n      actionId: ActionIdEnum.PLACE_ACTION_PAWN,\n      currentPlayerFactionId: ensureDefined(this.currentPlayerFaction).id,\n    });\n    this.gameStateSvc.startTransaction();\n  }\n\n  endTurn(): void {\n    this.gameStateSvc.commitTransaction();\n  }\n\n  takeAction(): void {\n    this.gameStateSvc.startTransaction();\n    const animal = this.animalProviderService.get(ensureDefined(this.currentPlayerFaction).id);\n    const actionPawn = animal.actionPawn.pullOne();\n    if (actionPawn) {\n      const nextActionPawnSpaceIndex = this.adaptionActionDisplayService.actionPawnSpaces.findIndex(\n        (value) => value.piece === null,\n      );\n      const nextElementSpaceIndex = this.adaptionActionDisplayService.elementSpaces.findIndex(\n        (value) => value.piece !== null,\n      );\n      this.adaptionActionDisplayService.addActionPawn(nextActionPawnSpaceIndex, actionPawn);\n      const element = this.adaptionActionDisplayService.removeElement(nextElementSpaceIndex);\n      animal.elements.addElement(element);\n    }\n    this.gameStateSvc.commitTransaction();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Start Turn\n      End Turn\n      Take Action-->\n    \n    \n      \n      \n        @for (faction of factions; track faction.id) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Start Turn      End Turn      Take Action-->                            @for (faction of factions; track faction.id) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementComponent.html":{"url":"components/ElementComponent.html","title":"component - ElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/element/element.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    kind\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         ElementPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/element/element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        kind\n                    \n                \n\n                \n                    \n                        getkind()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../model/element.model';\n\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-element',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './element.component.html',\n  styleUrl: './element.component.scss',\n})\nexport class ElementComponent {\n  @Input() element: ElementPiece | undefined = undefined;\n\n  get kind(): string | undefined {\n    return this.element?.kind;\n  }\n\n  get name(): string | undefined {\n    return this.element?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.kind) {\n      return getOrThrow(imgPathByKind, this.kind);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/element-config.constant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementEnum, ElementKind } from './element.constant';\nimport { AreaId, AreaIdEnum } from './area.constant';\nimport { AnimalEnum } from './animal.constant';\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                    Private\n                                ready\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: ElementPiece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            ElementPiece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ready\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.ready)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, first, Observable, of } from 'rxjs';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { PileIdEnum } from '../constant/pile.constant';\nimport { ElementPiece } from '../model/element.model';\n\nimport { Piece } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | undefined = undefined;\n  private ready = false;\n  private readySubject: BehaviorSubject = new BehaviorSubject(this.ready);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.pileRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(PileIdEnum.ELEMENT)),\n        first(),\n      )\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PileIdEnum.ELEMENT);\n        this.ready = true;\n        this.readySubject.next(this.ready);\n      });\n  }\n\n  private get drawPool(): Pile {\n    if (this._drawPool) {\n      return this._drawPool;\n    } else {\n      throw new Error('Pile not ready');\n    }\n  }\n\n  get length$(): Observable {\n    if (this._drawPool) {\n      return this.drawPool.length$;\n    } else {\n      return of(0);\n    }\n  }\n\n  pull(count = 1): (ElementPiece | null)[] {\n    return this.drawPool.pullMany(count) as ElementPiece[];\n  }\n\n  put(pieces: ElementPiece[]): void {\n    this.drawPool.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/element.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementKind } from '../constant/element.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementSpaceComponent.html":{"url":"components/ElementSpaceComponent.html","title":"component - ElementSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/element-space/element-space.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./element-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                            \n                                hasAction\n                            \n                            \n                                space\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                performAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                space\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        space\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        performAction\n                        \n                    \n                \n            \n            \n                \nperformAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        space\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:40\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, input, OnInit, signal } from '@angular/core';\nimport { ElementPiece } from '../../../../model/element.model';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\nimport { ElementComponent } from '../../../element/element.component';\nimport { Space } from '../../../../../engine/model/space.model';\n\n@Component({\n  selector: 'app-element-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent],\n  templateUrl: './element-space.component.html',\n  styleUrl: './element-space.component.scss',\n})\nexport class ElementSpaceComponent implements OnInit {\n  space = input.required();\n  element = signal(undefined);\n  hasAction = signal(false);\n\n  ngOnInit() {\n    this.space().space$.subscribe((space) => {\n      if (space.piece) {\n        this.element.set(space.piece as ElementPiece);\n      } else {\n        this.element.set(undefined);\n      }\n      this.hasAction.set(space.actions.length > 0);\n    });\n  }\n\n  performAction(): void {\n    if (this.space().actions.length > 0) {\n      this.space().actions[0].execute();\n    } else {\n      throw new Error('No action to perform');\n    }\n  }\n\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'elementSpace');\n  }\n}\n\n    \n\n    \n        \n  \n    @if (element()) {\n      \n        \n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (element()) {                        } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EyeballComponent.html":{"url":"components/EyeballComponent.html","title":"component - EyeballComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EyeballComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-eyeball\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./eyeball.component.html\n            \n\n\n\n            \n                styleUrl\n                ./eyeball.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/eyeball/eyeball.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\n\n@Component({\n  selector: 'app-eyeball',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  templateUrl: './eyeball.component.html',\n  styleUrl: './eyeball.component.scss',\n})\nexport class EyeballComponent {\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'eyeball');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EyeballComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:28\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:5\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement } from './game-element.model';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            factionId\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        factionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        factionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  factionId: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction | Faction[]): void {\n    const elementsArray = Array.isArray(elements) ? elements : [elements];\n    super.register(elementsArray);\n    elementsArray.forEach((faction) => {\n      this.factionAssignment.push({\n        factionId: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction | Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction | Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:50\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:39\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  factionId: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction | Faction[]): void {\n    const elementsArray = Array.isArray(elements) ? elements : [elements];\n    super.register(elementsArray);\n    elementsArray.forEach((faction) => {\n      this.factionAssignment.push({\n        factionId: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:88\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:70\n\n                        \n                    \n\n\n            \n                \n                        Initializes the service by subscribing to the central GameStateService's observable\nof GameElementState. When the state of a registered GameElement changes in the\ncentral game state, this method updates the corresponding GameElement.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:103\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nRegisters their state with the central GameStateService.\nSubscribes to their state changes to update the central game state.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:30\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { FactionState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:28\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\nimport { GameElementState } from 'api-types/src/game-state';\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class that manages the registration and retrieval\nof GameElement instances.\nThis service:\n\nKeeps track of registered GameElement instances.\nProvides methods to retrieve them by ID.\nNotifies observers when the set of registered IDs changes.\n\nIt depends on a GameElementStateService to handle synchronization\nof GameElement states with the central GameStateService.\nSubclasses should provide specific implementations for different\ntypes of GameElement.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement | TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nEmits the updated set of registered IDs.\nRegisters the elements with the GameElementStateService for state synchronization.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement | TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement or array of GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n/**\n * Abstract base class that manages the registration and retrieval\n * of `GameElement` instances.\n *\n * This service:\n * - Keeps track of registered `GameElement` instances.\n * - Provides methods to retrieve them by ID.\n * - Notifies observers when the set of registered IDs changes.\n *\n * It depends on a `GameElementStateService` to handle synchronization\n * of `GameElement` states with the central `GameStateService`.\n *\n * Subclasses should provide specific implementations for different\n * types of `GameElement`.\n *\n * @typeParam TgameElementState - The specific type of `GameElementState` managed by the subclass.\n * @typeParam TgameElement - The specific type of `GameElement` managed by the subclass.\n * @typeParam TgameElementStateSvc - The specific `GameElementStateService` used for state synchronization.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  protected constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  /**\n   * Retrieves a registered `GameElement` by its ID.\n   *\n   * @param id - The ID of the `GameElement` to retrieve.\n   * @returns The `GameElement` associated with the given ID.\n   * @throws If no `GameElement` with the given ID is registered.\n   */\n  get(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  /**\n   * Registers one or more `GameElement` instances with the service.\n   *\n   * This method:\n   * - Adds the `GameElement` instances to the internal registry.\n   * - Emits the updated set of registered IDs.\n   * - Registers the elements with the `GameElementStateService` for state synchronization.\n   *\n   * @param elements - The `GameElement` or array of `GameElement` instances to register.\n   * @throws If a `GameElement` with the same ID is already registered.\n   */\n  register(elements: TgameElement | TgameElement[]): void {\n    const elementsArray = Array.isArray(elements) ? elements : [elements];\n\n    elementsArray.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elementsArray);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class that manages the synchronization between individual\nGameElement instances and the central GameStateService.\nThis service handles:\n\nRegistration of GameElement instances.\nListening to state changes in individual GameElement instances and updating the central game state.\nSubscribing to changes in the central game state and updating the corresponding GameElement instances.\n\nSubclasses must implement methods to interact with specific types of GameElement\nand their corresponding states.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Initializes the service by subscribing to the central GameStateService's observable\nof GameElementState. When the state of a registered GameElement changes in the\ncentral game state, this method updates the corresponding GameElement.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nRegisters their state with the central GameStateService.\nSubscribes to their state changes to update the central game state.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Registers the state of a GameElement with the central GameStateService.\nSubclasses must implement this method to add the GameElement's state\nto the central game state.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Updates the state of a GameElement in the central GameStateService.\nSubclasses must implement this method to update the state of a GameElement\nin the central game state when its state changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new state of the GameElement.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:43\n                                \n                            \n                    \n                        \n                                Observable that emits arrays of GameElementState from the central GameStateService.\nSubclasses must provide an observable that emits the relevant GameElementState\ninstances for their specific type of GameElement.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n/**\n * Abstract base class that manages the synchronization between individual\n * `GameElement` instances and the central `GameStateService`.\n *\n * This service handles:\n * - Registration of `GameElement` instances.\n * - Listening to state changes in individual `GameElement` instances and updating the central game state.\n * - Subscribing to changes in the central game state and updating the corresponding `GameElement` instances.\n *\n * Subclasses must implement methods to interact with specific types of `GameElement`\n * and their corresponding states.\n *\n * @typeParam TgameElementState - The specific type of `GameElementState` managed by the subclass.\n * @typeParam TgameElement - The specific type of `GameElement` managed by the subclass.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  /**\n   * Observable that emits arrays of `GameElementState` from the central `GameStateService`.\n   *\n   * Subclasses must provide an observable that emits the relevant `GameElementState`\n   * instances for their specific type of `GameElement`.\n   */\n  protected abstract get elementState$(): Observable;\n\n  /**\n   * Registers the state of a `GameElement` with the central `GameStateService`.\n   *\n   * Subclasses must implement this method to add the `GameElement`'s state\n   * to the central game state.\n   *\n   * @param element - The `GameElement` to register.\n   */\n  protected abstract registerEntityState(element: TgameElement): void;\n\n  /**\n   * Updates the state of a `GameElement` in the central `GameStateService`.\n   *\n   * Subclasses must implement this method to update the state of a `GameElement`\n   * in the central game state when its state changes.\n   *\n   * @param state - The new state of the `GameElement`.\n   */\n  protected abstract setEntityState(state: GameElementState): void;\n\n  /**\n   * Initializes the service by subscribing to the central `GameStateService`'s observable\n   * of `GameElementState`. When the state of a registered `GameElement` changes in the\n   * central game state, this method updates the corresponding `GameElement`.\n   */\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  /**\n   * Retrieves a registered `GameElement` by its ID.\n   *\n   * @param id - The ID of the `GameElement` to retrieve.\n   * @returns The `GameElement` associated with the given ID.\n   * @throws If no `GameElement` with the given ID is registered.\n   */\n  private getEntity(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  /**\n   * Registers one or more `GameElement` instances with the service.\n   *\n   * This method:\n   * - Adds the `GameElement` instances to the internal registry.\n   * - Registers their state with the central `GameStateService`.\n   * - Subscribes to their state changes to update the central game state.\n   *\n   * @param entities - The `GameElement` instances to register.\n   * @throws If a `GameElement` with the same ID is already registered.\n   */\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElementStatesFactoryService.html":{"url":"classes/GameElementStatesFactoryService.html","title":"class - GameElementStatesFactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElementStatesFactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/game-element-states-factory.service.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            InitialGameElementStatesFactory\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementDrawPool\n                            \n                            \n                                    Private\n                                    Readonly\n                                gameElementStates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                            \n                                    Private\n                                buildActionDisplay\n                            \n                            \n                                buildAdaptionActionDisplay\n                            \n                            \n                                buildElementDrawPool\n                            \n                            \n                                    Private\n                                buildFactions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/game-element-states-factory.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementDrawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-element-states-factory.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gameElementStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameElementStates\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-element-states-factory.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameElementStates\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildActionDisplay\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildActionDisplay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAdaptionActionDisplay\n                        \n                    \n                \n            \n            \n                \nbuildAdaptionActionDisplay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Area\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildElementDrawPool\n                        \n                    \n                \n            \n            \n                \nbuildElementDrawPool()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Pile\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildFactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildFactions(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AreaState, GameElementStates, PileState, SpaceState } from 'api-types/src/game-state';\nimport { shuffle, startCase } from 'lodash';\nimport { AnimalEnum } from '../constant/animal.constant';\nimport { getOrThrow } from '../../engine/util/misc';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { deepClone } from 'fast-json-patch';\nimport { Space } from '../../engine/model/space.model';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { defaultPieceFactory } from '../../engine/model/piece.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { PieceKindEnum } from '../constant/piece.constant';\nimport {\n  emptyGameElementStates,\n  InitialGameElementStatesFactory,\n} from '../../engine/model/game-state.model';\nimport { Area } from '../../engine/model/area.model';\nimport { Pile } from '../../engine/model/pile.model';\nimport {\n  ACTION_DISPLAY_ADAPTION_STATE,\n  ELEMENT_DRAW_POOL_STATE,\n} from '../constant/game-state.constant';\n\n// Not injectable as it's built on-demand by GameStateInitializationService\nexport class GameElementStatesFactoryService implements InitialGameElementStatesFactory {\n  private readonly gameElementStates: GameElementStates;\n  private elementDrawPool: Pile;\n\n  constructor() {\n    this.gameElementStates = deepClone(emptyGameElementStates) as GameElementStates;\n    this.elementDrawPool = this.buildElementDrawPool();\n  }\n\n  build(playerIds: string[]): GameElementStates {\n    this.buildFactions(playerIds);\n    this.buildActionDisplay();\n\n    // add DrawPool state at the end after using it to initialize the other GameElementStates\n    this.gameElementStates.pile.push(this.elementDrawPool.state);\n    return this.gameElementStates;\n  }\n\n  buildElementDrawPool(): Pile {\n    return new Pile(deepClone(ELEMENT_DRAW_POOL_STATE) as PileState);\n  }\n\n  buildAdaptionActionDisplay(): Area {\n    const adaptionActionDisplayArea = new Area(\n      deepClone(ACTION_DISPLAY_ADAPTION_STATE) as AreaState,\n    );\n    this.elementDrawPool.pullMany(4).forEach((element) => {\n      if (element) {\n        const nextSpace = adaptionActionDisplayArea.nextAvailableSpace(SpaceKindEnum.ELEMENT);\n        if (nextSpace) {\n          nextSpace.addPiece(element);\n        } else {\n          throw new Error('No Spaces available');\n        }\n      } else {\n        throw new Error('Drawpool empty for initialization');\n      }\n    });\n    return adaptionActionDisplayArea;\n  }\n\n  private buildActionDisplay(): void {\n    this.gameElementStates.area.push(this.buildAdaptionActionDisplay().state);\n  }\n\n  private buildFactions(playerIds: string[]): void {\n    const shuffledAnimals = shuffle(Object.values(AnimalEnum));\n    playerIds.forEach((playerId: string, index) => {\n      const assignedAnimal = shuffledAnimals[index];\n      const elementConfig = getOrThrow(elementConfigByAnimal, assignedAnimal);\n\n      this.gameElementStates.faction.push({\n        id: assignedAnimal,\n        name: startCase(assignedAnimal),\n        ownerId: playerId,\n        score: 0,\n      });\n\n      // AnimalCard Spaces\n      const elementSpacesState: SpaceState[] = [];\n      // inherent element spaces\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementClientService.html":{"url":"injectables/GameManagementClientService.html","title":"injectable - GameManagementClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game-management-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                getLatestGameState\n                            \n                            \n                                    Async\n                                getLoggedInPlayer\n                            \n                            \n                                    Async\n                                getPlayer\n                            \n                            \n                                    Async\n                                setFriends\n                            \n                            \n                                    Async\n                                setInitialGameState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game-management-client.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLatestGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatestGameState(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayer(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setFriends\n                        \n                    \n                \n            \n            \n                \n                        \n                    setFriends(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                        Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setInitialGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setInitialGameState(gameState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { Game, GameCollection } from 'api-types/src/game';\nimport { lastValueFrom } from 'rxjs';\nimport { Player, PlayerCollection } from 'api-types/src/player';\nimport { GameState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementClientService {\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {}\n\n  async createGame(game: Game): Promise {\n    await lastValueFrom(this.http.post('/game', game));\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    const gameCollection = await lastValueFrom(\n      this.http.get('/game', {\n        params: { username: this.authService.loggedInUsername },\n      }),\n    );\n    return gameCollection.games;\n  }\n\n  async completeGame(gameId: string): Promise {\n    await lastValueFrom(this.http.patch(`/game/${gameId}`, { complete: true }));\n  }\n\n  async setInitialGameState(gameState: GameState): Promise {\n    await lastValueFrom(this.http.post(`/game/${gameState.gameId}/state`, gameState));\n  }\n\n  async getLatestGameState(gameId: string): Promise {\n    return await lastValueFrom(this.http.get(`/game/${gameId}/state`));\n  }\n\n  async getPlayer(username: string): Promise {\n    return await lastValueFrom(this.http.get(`/player/${username}`));\n  }\n\n  async getLoggedInPlayer(): Promise {\n    return await this.getPlayer(this.authService.loggedInUsername);\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await lastValueFrom(\n      this.http.get('/player', {\n        params: { username: username },\n      }),\n    );\n    return playerCollection.players;\n  }\n\n  async setFriends(player: Player): Promise {\n    await lastValueFrom(this.http.patch(`/player/${player.username}`, { friends: player.friends }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameReadyService.html":{"url":"injectables/GameReadyService.html","title":"injectable - GameReadyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameReadyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/game-ready.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalsReady\n                            \n                            \n                                    Private\n                                currentPlayerReady\n                            \n                            \n                                    Private\n                                signalReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateService: GameStateService, playerService: PlayerService, elementDrawPoolService: ElementDrawPoolService, animalProviderService: AnimalProviderService, actionDisplayManagerService: ActionDisplayManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/game-ready.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateService\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionDisplayManagerService\n                                                  \n                                                        \n                                                                        ActionDisplayManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalsReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-ready.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayerReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    currentPlayerReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-ready.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        signalReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    signalReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-ready.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-ready.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-ready.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-ready.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ElementDrawPoolService } from './element-draw-pool.service';\nimport { AnimalProviderService } from './animal-provider.service';\nimport { ActionDisplayManagerService } from './action-display/action-display-manager.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable, Subscription } from 'rxjs';\nimport { GameStateService } from '../../engine/service/game-state/game-state.service';\nimport { PlayerService } from '../../engine/service/game-management/player.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameReadyService {\n  private subscriptions: Subscription[] = [];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(\n    private gameStateService: GameStateService,\n    private playerService: PlayerService,\n    private elementDrawPoolService: ElementDrawPoolService,\n    private animalProviderService: AnimalProviderService,\n    private actionDisplayManagerService: ActionDisplayManagerService,\n  ) {\n    this.signalReady();\n  }\n\n  private currentPlayerReady(): Observable {\n    const currentPlayerSubject = new BehaviorSubject(false);\n    const currentPlayerSubscription = this.playerService.currentPlayer$.subscribe(\n      (currentPlayer) => {\n        if (currentPlayer) {\n          currentPlayerSubject.next(true);\n        }\n      },\n    );\n    this.subscriptions.push(currentPlayerSubscription);\n    return currentPlayerSubject.asObservable();\n  }\n\n  private animalsReady(): Observable {\n    const animalReadySubject = new BehaviorSubject(false);\n    const animalSubscription = this.animalProviderService.animals$.subscribe((animals) => {\n      if (\n        this.gameStateService.playerIds &&\n        animals.length === this.gameStateService.playerIds.length\n      ) {\n        animalReadySubject.next(true);\n      }\n    });\n    this.subscriptions.push(animalSubscription);\n    return animalReadySubject.asObservable();\n  }\n\n  private signalReady(): void {\n    const readyObs = [\n      this.currentPlayerReady(),\n      this.animalsReady(),\n      this.elementDrawPoolService.ready$,\n      this.actionDisplayManagerService.ready$,\n    ];\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n        this.subscriptions.forEach((sub) => {\n          sub.unsubscribe();\n        });\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameService is responsible for the lifecycle of a Game.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanupGame\n                            \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                initializeGame\n                            \n                            \n                                    Async\n                                joinGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(navigate: NavigateService, authService: AuthService, gameManagementClientService: GameManagementClientService, gameStateService: GameStateService, gameStateInitializationService: GameStateInitializationService, areaRegistryService: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateService\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateInitializationService\n                                                  \n                                                        \n                                                                        GameStateInitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanupGame\n                        \n                    \n                \n            \n            \n                \ncleanupGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(otherPlayers: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otherPlayers\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initializeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        joinGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { humanId } from 'human-id';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Game } from 'api-types/src/game';\nimport { GameStateInitializationService } from '../game-state/game-state-initialization.service';\nimport { GameTitle } from '../../constant/game-title.constant';\nimport { FactionRegistryService } from '../game-element/faction-registry.service';\nimport { AreaRegistryService } from '../game-element/area-registry.service';\nimport { PileRegistryService } from '../game-element/pile-registry.service';\nimport { Area } from '../../model/area.model';\nimport { Faction } from '../../model/faction.model';\nimport { Pile } from '../../model/pile.model';\nimport { NavigateService } from '../navigate.service';\nimport { GameStateService } from '../game-state/game-state.service';\n\n/**\n * GameService is responsible for the lifecycle of a Game.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameService {\n  constructor(\n    private navigate: NavigateService,\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n    private gameStateService: GameStateService,\n    private gameStateInitializationService: GameStateInitializationService,\n    private areaRegistryService: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {}\n\n  async createGame(otherPlayers: string[]): Promise {\n    const gameId = humanId();\n    const playerIds = [this.authService.loggedInUsername, ...otherPlayers];\n    await this.gameManagementClientService.createGame({\n      gameId,\n      host: this.authService.loggedInUsername,\n      playerIds: playerIds,\n    });\n    const initialGameState = this.gameStateInitializationService.build(\n      GameTitle.DOMINANT_SPECIES,\n      gameId,\n      playerIds,\n    );\n    await this.gameManagementClientService.setInitialGameState(initialGameState);\n    console.log(`created game: ${gameId}`);\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    return await this.gameManagementClientService.getGamesForLoggedInPlayer();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameManagementClientService.completeGame(gameId);\n  }\n\n  async joinGame(gameId: string): Promise {\n    await this.navigate.toGamePage(GameTitle.DOMINANT_SPECIES, gameId);\n  }\n\n  async initializeGame(gameId: string): Promise {\n    const gameState = await this.gameManagementClientService.getLatestGameState(gameId);\n    this.gameStateService.initializeGameState(gameState);\n    gameState.gameElements.area.forEach((areaState) => {\n      this.areaRegistryService.register(new Area(areaState));\n    });\n    gameState.gameElements.faction.forEach((state) => {\n      this.factionRegistryService.register(new Faction(state));\n    });\n    gameState.gameElements.pile.forEach((state) => {\n      this.pileRegistryService.register(new Pile(state));\n    });\n  }\n\n  cleanupGame(): void {\n    this.gameStateService.disconnectFromBackend();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gsp$\n                            \n                            \n                                    Private\n                                gspSubject\n                            \n                            \n                                    Private\n                                websocketSubject\n                            \n                            \n                                    Private\n                                websocketSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gsp$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.gspSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gspSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        websocketSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebSocketSubject | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        websocketSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { retry, Subject, Subscription } from 'rxjs';\nimport { GameStatePatch } from 'api-types/src/game-state';\nimport { AuthService } from '../auth/auth.service';\nimport { ensureDefined } from '../../util/misc';\nimport { WebSocketSubject } from 'rxjs/internal/observable/dom/WebSocketSubject';\nimport { webSocket } from 'rxjs/webSocket';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  private websocketSubject: WebSocketSubject | undefined = undefined;\n  private websocketSubscription: Subscription | undefined = undefined;\n  private gspSubject = new Subject();\n  gsp$ = this.gspSubject.asObservable();\n\n  constructor(private authService: AuthService) {}\n\n  connect(gameId: string) {\n    const playerAuthData = ensureDefined(this.authService.playerAuthData);\n    this.websocketSubject = webSocket({\n      url: `${environment.stateEndpoint}/?token=${playerAuthData.accessToken}&gameId=${gameId}&playerId=${playerAuthData.username}`,\n      serializer: (message) => JSON.stringify(message),\n    });\n    this.websocketSubject.pipe(retry({ delay: 3000 })).subscribe((gsp) => {\n      this.gspSubject.next(gsp);\n    });\n  }\n\n  disconnect(): void {\n    if (this.websocketSubscription) {\n      this.websocketSubscription.unsubscribe();\n    }\n  }\n\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n    if (this.websocketSubject) {\n      this.websocketSubject.next(gsp);\n    } else {\n      throw new Error('Must connect first');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateInitializationService.html":{"url":"injectables/GameStateInitializationService.html","title":"injectable - GameStateInitializationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateInitializationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-initialization.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateInitializationService is responsible for creating the initial GameElementStates for a game.\nIt does this by getting an \"empty GameState\" object and then using a game-specific Factory function to create the Game Elements for the\nspecific title.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                factoryByGameTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factoryMap: Map | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryMap\n                                                  \n                                                        \n                                                                        Map | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(gameTitle: string, gameId: string, playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameTitle\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        factoryByGameTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  getEmptyInitialGameState,\n  InitialGameElementStatesFactoryConstructor,\n} from '../../model/game-state.model';\nimport { GameTitle } from '../../constant/game-title.constant';\nimport { GameElementStatesFactoryService } from '../../../game/service/game-element-states-factory.service';\nimport { GameState } from 'api-types/src/game-state';\n\nconst FACTORY_MAP = new Map([\n  [GameTitle.DOMINANT_SPECIES, GameElementStatesFactoryService],\n]);\n\n/**\n * The GameStateInitializationService is responsible for creating the initial GameElementStates for a game.\n *\n * It does this by getting an \"empty GameState\" object and then using a game-specific Factory function to create the Game Elements for the\n * specific title.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateInitializationService {\n  private readonly factoryByGameTitle: Map;\n\n  constructor(\n    @Optional()\n    @Inject('FACTORY_MAP')\n    factoryMap: Map | null,\n  ) {\n    this.factoryByGameTitle = factoryMap ?? FACTORY_MAP;\n  }\n\n  build(gameTitle: string, gameId: string, playerIds: string[]): GameState {\n    const gameState = getEmptyInitialGameState(gameId, playerIds, 0);\n    const gameElementsFactoryClass = this.factoryByGameTitle.get(gameTitle);\n    if (gameElementsFactoryClass) {\n      const gameElementsFactory = new gameElementsFactoryClass();\n      gameState.gameElements = gameElementsFactory.build(playerIds);\n      return gameState;\n    } else {\n      throw new Error(`Unable to build initial state for ${gameTitle}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(oldState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { applyPatch, compare, deepClone } from 'fast-json-patch';\nimport { GameState, GameStatePatch } from 'api-types/src/game-state';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      gameId: oldState.gameId,\n      patchId: oldState.patchId + 1,\n      patch: compare(oldState.gameElements, newState.gameElements),\n    };\n  }\n\n  apply(oldState: GameState, gsp: GameStatePatch): GameState {\n    const newState = deepClone(oldState) as GameState;\n    newState.gameElements = applyPatch(\n      oldState.gameElements,\n      gsp.patch,\n      undefined,\n      false,\n    ).newDocument;\n    newState.patchId = gsp.patchId;\n    return newState;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                disconnectFromBackend\n                            \n                            \n                                initializeGameState\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerIds\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectFromBackend\n                        \n                    \n                \n            \n            \n                \ndisconnectFromBackend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeGameState\n                        \n                    \n                \n            \n            \n                \ninitializeGameState(gameState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerIds\n                    \n                \n\n                \n                    \n                        getplayerIds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:105\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { Observable } from 'rxjs';\nimport {\n  AreaState,\n  FactionState,\n  GameState,\n  GameStatePatch,\n  PileState,\n} from 'api-types/src/game-state';\nimport { ensureDefined } from '../../util/misc';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  initializeGameState(gameState: GameState): void {\n    this.gameStateStore.initializeGameState(gameState);\n    this.gameStateClient.connect(gameState.gameId);\n  }\n\n  disconnectFromBackend(): void {\n    this.gameStateClient.disconnect();\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    this.gameStateStore.setGameState(\n      this.gspService.apply(ensureDefined(this.gameStateStore.gameState), gsp),\n    );\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        ensureDefined(this.gameStateStore.gameState),\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get playerIds(): string[] | undefined {\n    return this.gameStateStore.playerIds;\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it does not have a GameState, and it must be initialized with a GameState before it\ncan be used.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                initializeGameState\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    playerIds\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:42\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeGameState\n                        \n                    \n                \n            \n            \n                \ninitializeGameState(gameState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:189\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:201\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:120\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:128\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        playerIds\n                    \n                \n\n                \n                    \n                        getplayerIds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:177\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:185\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:197\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:209\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable, of, switchMap } from 'rxjs';\nimport { getEmptyInitialGameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\n\nimport {\n  AreaState,\n  FactionState,\n  GameElementState,\n  GameElementStates,\n  GameState,\n  PileState,\n} from 'api-types/src/game-state';\nimport { ensureDefined } from '../../util/misc';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it does not have a GameState, and it must be initialized with a GameState before it\n * can be used.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState | undefined;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  initializeGameState(gameState: GameState): void {\n    this._gameState = getEmptyInitialGameState(\n      gameState.gameId,\n      gameState.playerIds,\n      gameState.patchId,\n    );\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T[]): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      switchMap((gameState) => {\n        if (gameState === undefined) {\n          return of([] as T[]);\n        }\n        return of(selector(gameState));\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState.gameElements[\n      key\n    ] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = ensureDefined(this._gameState).gameElements[\n      key\n    ] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState | undefined {\n    if (this._gameState) {\n      return deepClone(this._gameState) as GameState;\n    } else {\n      return undefined;\n    }\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n      this._transactionState.patchId += 1;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get playerIds(): string[] | undefined {\n    if (this._gameState) {\n      return this._gameState.playerIds;\n    } else {\n      return undefined;\n    }\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitialGameElementStatesFactory.html":{"url":"interfaces/InitialGameElementStatesFactory.html","title":"interface - InitialGameElementStatesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InitialGameElementStatesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        build\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-state.model.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameElementStates\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GameElementStates, GameState } from 'api-types/src/game-state';\nimport { deepClone } from 'fast-json-patch';\n\nexport const emptyGameElementStates: GameElementStates = {\n  area: [],\n  faction: [],\n  pile: [],\n};\n\n// current used to initialize GameStoreService, but should be refactored to get the Initial Game State when user joins the game.\nexport const emptyGameState: GameState = {\n  gameId: 'placeholder',\n  patchId: 0,\n  playerIds: [],\n  gameElements: emptyGameElementStates,\n};\n\nexport function getEmptyInitialGameState(\n  gameId: string,\n  playerIds: string[],\n  patchId: number,\n): GameState {\n  return {\n    gameId: gameId,\n    patchId: patchId,\n    playerIds: playerIds,\n    gameElements: deepClone(emptyGameElementStates) as GameElementStates,\n  };\n}\n\nexport interface InitialGameElementStatesFactory {\n  build(playerIds: string[]): GameElementStates;\n}\n\nexport type InitialGameElementStatesFactoryConstructor = new () => InitialGameElementStatesFactory;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LobbyPageComponent.html":{"url":"components/LobbyPageComponent.html","title":"component - LobbyPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LobbyPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/lobby-page/lobby-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lobby-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTable\n                            MatColumnDef\n                            MatHeaderCell\n                            MatCell\n                            MatHeaderRow\n                            MatRow\n                            MatHeaderRowDef\n                            MatRowDef\n                            MatHeaderCellDef\n                            MatCellDef\n                            MatButton\n                            MatIcon\n                            MatMiniFabButton\n                            MatChipSet\n                            MatChip\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lobby-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./lobby-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                games\n                            \n                            \n                                gameTableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                fetchGames\n                            \n                            \n                                filterPlayers\n                            \n                            \n                                    Async\n                                joinGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, playerService: PlayerService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterPlayers\n                        \n                    \n                \n            \n            \n                \nfilterPlayers(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        joinGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameTableColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['gameId', 'host', 'playerIds', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { Game } from 'api-types/src/game';\nimport { GameService } from '../../service/game-management/game.service';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatHeaderCell,\n  MatHeaderCellDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef,\n  MatTable,\n} from '@angular/material/table';\nimport { MatButton, MatMiniFabButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatChip, MatChipSet } from '@angular/material/chips';\nimport { PlayerService } from '../../service/game-management/player.service';\nimport { Player } from 'api-types/src/player';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { NavigateService } from '../../service/navigate.service';\n\n@Component({\n  selector: 'app-lobby-page',\n  standalone: true,\n  imports: [\n    MatTable,\n    MatColumnDef,\n    MatHeaderCell,\n    MatCell,\n    MatHeaderRow,\n    MatRow,\n    MatHeaderRowDef,\n    MatRowDef,\n    MatHeaderCellDef,\n    MatCellDef,\n    MatButton,\n    MatIcon,\n    MatMiniFabButton,\n    MatChipSet,\n    MatChip,\n    MatTooltip,\n  ],\n  templateUrl: './lobby-page.component.html',\n  styleUrl: './lobby-page.component.scss',\n})\nexport class LobbyPageComponent {\n  games = signal([]);\n  gameTableColumns: string[] = ['gameId', 'host', 'playerIds', 'actions'];\n  readonly currentPlayer = signal(undefined);\n\n  constructor(\n    private gameService: GameService,\n    private playerService: PlayerService,\n    private navigate: NavigateService,\n  ) {\n    this.playerService.currentPlayer$.subscribe((player) => {\n      this.currentPlayer.set(player);\n      void this.fetchGames();\n    });\n  }\n\n  filterPlayers(game: Game): string[] {\n    return game.playerIds\n      .filter((player) => player !== game.host)\n      .slice()\n      .sort();\n  }\n\n  async fetchGames(): Promise {\n    this.games.set(await this.gameService.getGamesForLoggedInPlayer());\n  }\n\n  async createGame(): Promise {\n    await this.navigate.toCreateGamePage();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameService.completeGame(gameId);\n    await this.fetchGames();\n  }\n\n  async joinGame(gameId: string): Promise {\n    await this.gameService.joinGame(gameId);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      refresh\n    \n    \n      add_circle\n    \n  \n  \n    \n      \n        Id\n        {{ game.gameId }}\n      \n      \n        Host\n        \n          \n            {{ game.host }}\n          \n        \n      \n      \n        Players\n        \n          \n            @for (player of filterPlayers(game); track $index) {\n              {{ player }}\n            }\n          \n        \n      \n      \n        \n        \n          \n            @if (game.host === currentPlayer()?.username) {\n              \n                delete\n              \n            }\n            \n              login\n            \n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            refresh              add_circle                          Id        {{ game.gameId }}                    Host                              {{ game.host }}                                      Players                              @for (player of filterPlayers(game); track $index) {              {{ player }}            }                                                                    @if (game.host === currentPlayer()?.username) {                              delete                          }                          login                                                      '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LobbyPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletedStorageKey\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                setStorageKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletedStorageKey\n                        \n                    \n                \n            \n            \n                \ndeletedStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageKey\n                        \n                    \n                \n            \n            \n                \ngetStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageKey\n                        \n                    \n                \n            \n            \n                \nsetStorageKey(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  deletedStorageKey(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  getStorageKey(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  setStorageKey(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginFormData.html":{"url":"interfaces/LoginFormData.html","title":"interface - LoginFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/login-page/login-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private navigate: NavigateService,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.navigate.toLobbyPage();\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatCard\n                            MatCardContent\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/login-page/login-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private navigate: NavigateService,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.navigate.toLobbyPage();\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n          \n          Confirm\n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n        \n          \n          \n            Sign Up Here\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                            Username:                                    Password:                          .                            Confirm                                                @if (errorMessage()) {              {{ errorMessage() }}            }                                                          Sign Up Here                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutPageComponent.html":{"url":"components/LogoutPageComponent.html","title":"component - LogoutPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/logout-page/logout-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-page\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logout-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logout-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/logout-page/logout-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/logout-page/logout-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { NavigateService } from '../../service/navigate.service';\n\n@Component({\n  selector: 'app-logout-page',\n  standalone: true,\n  imports: [],\n  templateUrl: './logout-page.component.html',\n  styleUrl: './logout-page.component.scss',\n})\nexport class LogoutPageComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private navigate: NavigateService,\n  ) {}\n\n  ngOnInit() {\n    this.authService.logout();\n    void this.navigate.toLoginPage();\n  }\n}\n\n    \n\n    \n        logout-page works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout-page works!'\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigateService.html":{"url":"injectables/NavigateService.html","title":"injectable - NavigateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/navigate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                toCreateGamePage\n                            \n                            \n                                    Async\n                                toGamePage\n                            \n                            \n                                    Async\n                                toLobbyPage\n                            \n                            \n                                    Async\n                                toLoginPage\n                            \n                            \n                                    Async\n                                toSignUpConfirmPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/navigate.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toCreateGamePage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toCreateGamePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toGamePage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toGamePage(gameTitle: string, gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameTitle\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toLobbyPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toLobbyPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toLoginPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toLoginPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toSignUpConfirmPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toSignUpConfirmPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigateService {\n  constructor(private router: Router) {}\n\n  async toCreateGamePage(): Promise {\n    await this.router.navigate(['/create-game']);\n  }\n\n  async toGamePage(gameTitle: string, gameId: string): Promise {\n    await this.router.navigate(['game', gameTitle], {\n      queryParams: {\n        gameId: gameId,\n      },\n    });\n  }\n\n  async toLobbyPage(): Promise {\n    await this.router.navigate(['/lobby']);\n  }\n\n  async toLoginPage(): Promise {\n    await this.router.navigate(['/login']);\n  }\n\n  async toSignUpConfirmPage(): Promise {\n    await this.router.navigate(['/sign-up-confirm']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                owner\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitLength\n                            \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:13\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitLength\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitLength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:58\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:88\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:32\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  override setState(newState: PileState) {\n    super.setState(newState);\n    this.emitLength();\n  }\n\n  private emitLength(): void {\n    this.lengthSubject.next(this.length);\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.emitLength();\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pile.pullOne() as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PileAdapter.html":{"url":"classes/PileAdapter.html","title":"class - PileAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PileAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pile: Pile)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pile\n                                                  \n                                                        \n                                                                        Pile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:101\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:105\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  override setState(newState: PileState) {\n    super.setState(newState);\n    this.emitLength();\n  }\n\n  private emitLength(): void {\n    this.lengthSubject.next(this.length);\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.emitLength();\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pile.pullOne() as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileConfig.html":{"url":"interfaces/PileConfig.html","title":"interface - PileConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/pile-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawn\n                                        \n                                \n                                \n                                        \n                                            species\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        species\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        species:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalEnum } from './animal.constant';\nimport { PileIdEnum } from './pile.constant';\n\nexport interface PileConfig {\n  actionPawn: string;\n  species: string;\n}\n\nexport const pileIdsByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n]);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:50\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement | TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:65\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nEmits the updated set of registered IDs.\nRegisters the elements with the GameElementStateService for state synchronization.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement | TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement or array of GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:39\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:88\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:70\n\n                        \n                    \n\n\n            \n                \n                        Initializes the service by subscribing to the central GameStateService's observable\nof GameElementState. When the state of a registered GameElement changes in the\ncentral game state, this method updates the corresponding GameElement.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:103\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nRegisters their state with the central GameStateService.\nSubscribes to their state changes to update the central game state.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:30\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerAuthData.html":{"url":"interfaces/PlayerAuthData.html","title":"interface - PlayerAuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerAuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            accessTokenExpire\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenExpire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenExpire:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PlayerAuthData {\n  username: string;\n  accessToken: string;\n  accessTokenExpire: number;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlayer\n                            \n                            \n                                currentPlayer$\n                            \n                            \n                                    Private\n                                currentPlayerSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFriend\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                removeFriend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameManagementClientService: GameManagementClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Player | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentPlayerSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayerSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.currentPlayer)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from 'api-types/src/player';\nimport { AuthService } from '../auth/auth.service';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { ensureDefined } from '../../util/misc';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  currentPlayer: Player | undefined = undefined;\n  private currentPlayerSubject: BehaviorSubject = new BehaviorSubject(this.currentPlayer);\n  currentPlayer$ = this.currentPlayerSubject.asObservable();\n\n  constructor(\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n  ) {\n    this.authService.isLoggedIn$.pipe().subscribe((isLoggedIn) => {\n      if (isLoggedIn) {\n        this.gameManagementClientService\n          .getLoggedInPlayer()\n          .then((player) => {\n            this.currentPlayer = player;\n            this.currentPlayerSubject.next(this.currentPlayer);\n          })\n          .catch((error: unknown) => {\n            throw error;\n          });\n      } else {\n        this.currentPlayer = undefined;\n        this.currentPlayerSubject.next(this.currentPlayer);\n      }\n    });\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await this.gameManagementClientService.findPlayers(username);\n    return playerCollection.map((player) => player.username);\n  }\n\n  async addFriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends.push(username);\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n    this.currentPlayerSubject.next(this.currentPlayer);\n  }\n\n  async removeFriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends = ensureDefined(this.currentPlayer).friends.filter(\n      (friendUsername) => friendUsername !== username,\n    );\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n    this.currentPlayerSubject.next(this.currentPlayer);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpConfirmFormData.html":{"url":"interfaces/SignUpConfirmFormData.html","title":"interface - SignUpConfirmFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpConfirmFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private navigate: NavigateService,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.navigate.toLoginPage();\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpConfirmPageComponent.html":{"url":"components/SignUpConfirmPageComponent.html","title":"component - SignUpConfirmPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpConfirmPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-confirm-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-confirm-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-confirm-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpConfirmForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private navigate: NavigateService,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.navigate.toLoginPage();\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Confirm Sign Up\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Code:\n          \n        \n        .\n        \n          \n          \n            Confirm\n          \n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm Sign Up                            Username:                                    Code:                          .                                        Confirm                                                          @if (errorMessage()) {              {{ errorMessage() }}            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpConfirmPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpFormData.html":{"url":"interfaces/SignUpFormData.html","title":"interface - SignUpFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-page/sign-up-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private navigate: NavigateService,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.navigate.toSignUpConfirmPage();\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpPageComponent.html":{"url":"components/SignUpPageComponent.html","title":"component - SignUpPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-page/sign-up-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardHeader\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private navigate: NavigateService,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.navigate.toSignUpConfirmPage();\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up for VPA Games\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Email:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n        \n          \n          Sign Up\n        \n\n        \n\n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n            @if (signUpForm.invalid && signUpForm.dirty) {\n              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {\n                Please enter a valid email.\n              }\n              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {\n                Password must be at least 6 characters long.\n              }\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up for VPA Games                            Username:                                    Email:                                    Password:                          .                                    Sign Up                                                        @if (errorMessage()) {              {{ errorMessage() }}            }            @if (signUpForm.invalid && signUpForm.dirty) {              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {                Please enter a valid email.              }              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {                Password must be at least 6 characters long.              }            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignUpService.html":{"url":"injectables/SignUpService.html","title":"injectable - SignUpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignUpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/sign-up.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/sign-up.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignUpService {\n  constructor(private cognitoClientService: CognitoClientService) {}\n\n  async signUp(username: string, email: string, password: string): Promise {\n    return this.cognitoClientService.signUp(username, email, password);\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    return this.cognitoClientService.confirmSignUp(username, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Space is part of an Area and can either be empty or contain a Piece.\nA space can have zero or more actions associated with it. Actions are not part of the Space's state, so when an action is added/removed,\ninterested parties need to be notified. Notifications also need to happen when the state is updated, so a GSP can be created, etc.\nThis leads to having two observables:\n\nstate$ for when anything state relates, such as the space's piece\nspace$ for when anything about the space changes, even if the change is not state related such as adding/removing action.\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _actions\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                space$\n                            \n                            \n                                    Private\n                                spaceSubject\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                clearActions\n                            \n                            \n                                    Private\n                                notifyChange\n                            \n                            \n                                removePiece\n                            \n                            \n                                setActions\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    actions\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: SpaceState)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        SpaceState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        space$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spaceSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.stateSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                        Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearActions\n                        \n                    \n                \n            \n            \n                \nclearActions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notifyChange\n                        \n                    \n                \n            \n            \n                \n                        \n                    notifyChange(stateChange: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stateChange\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActions\n                        \n                    \n                \n            \n            \n                \nsetActions(actions: Action[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actions\n                                            \n                                                            Action[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actions\n                    \n                \n\n                \n                    \n                        getactions()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:55\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { deepClone } from 'fast-json-patch';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { Piece, SpaceState } from 'api-types/src/game-state';\nimport { Action } from './action.model';\n\n/**\n * A Space is part of an Area and can either be empty or contain a Piece.\n *\n * A space can have zero or more actions associated with it. Actions are not part of the Space's state, so when an action is added/removed,\n * interested parties need to be notified. Notifications also need to happen when the state is updated, so a GSP can be created, etc.\n * This leads to having two observables:\n * - state$ for when anything state relates, such as the space's piece\n * - space$ for when anything about the space changes, even if the change is not state related such as adding/removing action.\n */\nexport class Space {\n  readonly kind: string;\n  private _actions: Action[] = [];\n  private _piece: Piece | null = null;\n  private spaceSubject: BehaviorSubject;\n  space$: Observable;\n  private stateSubject = new Subject();\n  state$ = this.stateSubject.asObservable();\n\n  constructor(state: SpaceState) {\n    this.kind = state.kind;\n    this._piece = state.piece;\n    this.spaceSubject = new BehaviorSubject(this);\n    this.space$ = this.spaceSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  private notifyChange(stateChange: boolean): void {\n    this.spaceSubject.next(this);\n    if (stateChange) {\n      this.stateSubject.next(this.state);\n    }\n  }\n\n  setActions(actions: Action[]): void {\n    this._actions = actions;\n    this.notifyChange(false);\n  }\n\n  clearActions(): void {\n    this._actions = [];\n    this.notifyChange(false);\n  }\n\n  get actions(): Action[] {\n    return this._actions;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.notifyChange(true);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.notifyChange(true);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n      this.notifyChange(false);\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeciesPiece.html":{"url":"interfaces/SpeciesPiece.html","title":"interface - SpeciesPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeciesPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/species.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface SpeciesPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/component/create-game-page/create-game-page.component.ts\n            \n            component\n            CreateGamePageComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/engine/component/lobby-page/lobby-page.component.ts\n            \n            component\n            LobbyPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            interface\n            LoginFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/logout-page/logout-page.component.ts\n            \n            component\n            LogoutPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            component\n            SignUpConfirmPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            interface\n            SignUpConfirmFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            component\n            SignUpPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            interface\n            SignUpFormData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/gaurd/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/api-url.interceptor.ts\n            \n            function\n            apiUrlInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/auth.interceptor.ts\n            \n            function\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/error-handler.interceptor.ts\n            \n            function\n            errorHandlerInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            class\n            Action\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            ActionContext\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/engine/model/action.model.ts\n            \n            type alias\n            ActionCompleteCallback\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/action.model.ts\n            \n            type alias\n            ActionFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            interface\n            InitialGameElementStatesFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            function\n            getEmptyInitialGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameElementStates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            type alias\n            InitialGameElementStatesFactoryConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            type alias\n            PieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            PileAdapter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerAuthData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/cognito-client.service.ts\n            \n            injectable\n            CognitoClientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/sign-up.service.ts\n            \n            injectable\n            SignUpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game-management-client.service.ts\n            \n            injectable\n            GameManagementClientService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game.service.ts\n            \n            injectable\n            GameService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-initialization.service.ts\n            \n            injectable\n            GameStateInitializationService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                        src/app/engine/service/game-state/game-state-initialization.service.ts\n            \n            variable\n            FACTORY_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                13 %\n                (2/15)\n            \n        \n        \n            \n                \n                src/app/engine/service/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/service/navigate.service.ts\n            \n            injectable\n            NavigateService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            deepFreeze\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            ensureDefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            setDifference\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n            \n            component\n            AdaptionActionDisplayCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n            \n            component\n            ActionPawnSpaceComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/element-space/element-space.component.ts\n            \n            component\n            ElementSpaceComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n            \n            component\n            EyeballComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-pawn/action-pawn.component.ts\n            \n            component\n            ActionPawnComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/animal-card/animal-card.component.ts\n            \n            component\n            AnimalCardComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/game/component/dominant-species-game/dominant-species-game.component.ts\n            \n            component\n            DominantSpeciesGameComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/component/element/element.component.ts\n            \n            component\n            ElementComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/game/constant/animal.constant.ts\n            \n            type alias\n            AnimalKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            variable\n            elementAreaIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            type alias\n            AreaId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element-config.constant.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element.constant.ts\n            \n            type alias\n            ElementKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/game-state.constant.ts\n            \n            variable\n            ACTION_DISPLAY_ADAPTION_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/game-state.constant.ts\n            \n            variable\n            ELEMENT_DRAW_POOL_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/image.constant.ts\n            \n            variable\n            imgPathByKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            interface\n            PileConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/game/constant/pile-config.ts\n            \n            variable\n            pileIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/action-display.model.ts\n            \n            interface\n            ActionDisplayService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/game/model/action-pawn.model.ts\n            \n            interface\n            ActionPawnPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            AnimalElements\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            interface\n            AnimalConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/element.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/species.model.ts\n            \n            interface\n            SpeciesPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            injectable\n            ActionDisplayManagerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/adaption-action-display.service.ts\n            \n            injectable\n            AdaptionActionDisplayService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/game/service/action-function-factory.service.ts\n            \n            injectable\n            ActionFunctionFactoryService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/game/service/action.service.ts\n            \n            injectable\n            ActionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/service/animal-provider.service.ts\n            \n            injectable\n            AnimalProviderService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/game/service/game-element-states-factory.service.ts\n            \n            class\n            GameElementStatesFactoryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/game/service/game-ready.service.ts\n            \n            injectable\n            GameReadyService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @aws-sdk/client-cognito-identity-provider : ^3.670.0\n        \n            fast-json-patch : ^3.1.1\n        \n            human-id : ^4.1.1\n        \n            jwt-decode : ^4.0.0\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionIdEnum   (src/.../action.constant.ts)\n                        \n                        \n                            AnimalEnum   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../area.constant.ts)\n                        \n                        \n                            ElementEnum   (src/.../element.constant.ts)\n                        \n                        \n                            GameTitle   (src/.../game-title.constant.ts)\n                        \n                        \n                            LocalStorageKey   (src/.../local-storage.constant.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../piece.constant.ts)\n                        \n                        \n                            PileIdEnum   (src/.../pile.constant.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../area.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/action.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionIdEnum\n                    \n                \n                        \n                            \n                                 PLACE_ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : placeActionPawn\n                            \n                        \n                        \n                            \n                                 TAKE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : takeElement\n                            \n                        \n            \n        \n\n    src/app/game/constant/animal.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n\n    src/app/game/constant/area.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n    src/app/game/constant/element.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grass\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grub\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meat\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seed\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sun\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : water\n                            \n                        \n            \n        \n\n    src/app/engine/constant/game-title.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        GameTitle\n                    \n                \n                        \n                            \n                                 DOMINANT_SPECIES\n                            \n                        \n                        \n                            \n                                Value : dominant-species\n                            \n                        \n            \n        \n\n    src/app/engine/constant/local-storage.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageKey\n                    \n                \n                        \n                            \n                                 PLAYER_AUTH_DATA\n                            \n                        \n                        \n                            \n                                Value : playerAuthData\n                            \n                        \n            \n        \n\n    src/app/game/constant/piece.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 SPECIES\n                            \n                        \n                        \n                            \n                                Value : species\n                            \n                        \n            \n        \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PileIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrlInterceptor   (src/.../api-url.interceptor.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            deepCompare   (src/.../misc.ts)\n                        \n                        \n                            deepFreeze   (src/.../misc.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            ensureDefined   (src/.../misc.ts)\n                        \n                        \n                            errorHandlerInterceptor   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            getEmptyInitialGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            getOrThrow   (src/.../misc.ts)\n                        \n                        \n                            isFalse   (src/.../predicate.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                        \n                            isTrue   (src/.../predicate.ts)\n                        \n                        \n                            setDifference   (src/.../misc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/interceptor/api-url.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrlInterceptor\n                        \n                    \n                \n            \n            \n                \napiUrlInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n            \n                \nauthInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/misc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deepFreeze\n                        \n                    \n                \n            \n            \n                \ndeepFreeze(obj: T)\n                \n            \n\n\n\n\n            \n                \n                        Returns a readonly version of an object.\nThis is intended to be used with \"seed\" objects that should be copied to create a \"read/write\" object that can be used.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureDefined\n                        \n                    \n                \n            \n            \n                \nensureDefined(value)\n                \n            \n\n\n\n\n            \n                \n                        Ensures that a given value is defined (i.e., not undefined).\nTypically used for values that start as undefined and then are set during initialization by a subscription.\nIf the value is undefined, this function throws an error with a message\nindicating that the value is not defined. If the value is defined, it is\nreturned unchanged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be checked.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \nThe value itself if it is defined.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDifference\n                        \n                    \n                \n            \n            \n                \nsetDifference(setA: Set, setB: Set)\n                \n            \n\n\n\n\n            \n                \n                        Returns the items that are in setA, but not in setB\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                setA\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setB\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Set\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner, name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/error-handler.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorHandlerInterceptor\n                        \n                    \n                \n            \n            \n                \nerrorHandlerInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyInitialGameState\n                        \n                    \n                \n            \n            \n                \ngetEmptyInitialGameState(gameId: string, playerIds, patchId: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playerIds\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                patchId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFalse\n                        \n                    \n                \n            \n            \n                \nisFalse(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTrue\n                        \n                    \n                \n            \n            \n                \nisTrue(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    28 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionCompleteCallback   (src/.../action.model.ts)\n                        \n                        \n                            ActionFunction   (src/.../action.model.ts)\n                        \n                        \n                            AnimalKind   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaId   (src/.../area.constant.ts)\n                        \n                        \n                            ElementKind   (src/.../element.constant.ts)\n                        \n                        \n                            InitialGameElementStatesFactoryConstructor   (src/.../game-state.model.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/model/action.model.ts\n    \n    \n        \n            \n                \n                    \n                    ActionCompleteCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/game/constant/animal.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/area.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/element.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/game-state.model.ts\n    \n    \n        \n            \n                \n                    \n                    InitialGameElementStatesFactoryConstructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTION_DISPLAY_ADAPTION_STATE   (src/.../game-state.constant.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            ELEMENT_DRAW_POOL_STATE   (src/.../game-state.constant.ts)\n                        \n                        \n                            elementAreaIdsByAnimal   (src/.../area.constant.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../element-config.constant.ts)\n                        \n                        \n                            emptyGameElementStates   (src/.../game-state.model.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            FACTORY_MAP   (src/.../game-state-initialization.service.ts)\n                        \n                        \n                            imgPathByKind   (src/.../image.constant.ts)\n                        \n                        \n                            pileIdsByAnimal   (src/.../pile-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/game-state.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACTION_DISPLAY_ADAPTION_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : deepFreeze({\n  id: AreaIdEnum.ACTION_DISPLAY_ADAPTION,\n  space: [\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n    { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n    { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n  ],\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ELEMENT_DRAW_POOL_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : deepFreeze({\n  id: PileIdEnum.ELEMENT,\n  owner: null,\n  inventory: {\n    // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n    [ElementEnum.GRASS]: 18,\n    [ElementEnum.GRUB]: 18,\n    [ElementEnum.MEAT]: 18,\n    [ElementEnum.SEED]: 18,\n    [ElementEnum.SUN]: 18,\n    [ElementEnum.WATER]: 18,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(\n      withFetch(),\n      withInterceptors([apiUrlInterceptor, authInterceptor, errorHandlerInterceptor]),\n    ),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideAnimationsAsync('animations'),\n    provideRouter(routes),\n    {\n      provide: CognitoIdentityProviderClient,\n      useFactory: () => new CognitoIdentityProviderClient({ region: environment.cognito.region }),\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/engine/gaurd/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  if (inject(AuthService).checkIsLoggedIn()) {\n    return inject(AuthService).checkIsLoggedIn();\n  } else {\n    void inject(NavigateService).toLoginPage();\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/area.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementAreaIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [AnimalEnum.AMPHIBIAN, AreaIdEnum.AMPHIBIAN_ELEMENT],\n  [AnimalEnum.ARACHNID, AreaIdEnum.ARACHNID_ELEMENT],\n  [AnimalEnum.BIRD, AreaIdEnum.BIRD_ELEMENT],\n  [AnimalEnum.INSECT, AreaIdEnum.INSECT_ELEMENT],\n  [AnimalEnum.MAMMAL, AreaIdEnum.MAMMAL_ELEMENT],\n  [AnimalEnum.REPTILE, AreaIdEnum.REPTILE_ELEMENT],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/element-config.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameElementStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameElementStates\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [],\n  faction: [],\n  pile: [],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  gameId: 'placeholder',\n  patchId: 0,\n  playerIds: [],\n  gameElements: emptyGameElementStates,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/engine/service/game-state/game-state-initialization.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FACTORY_MAP\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map([\n  [GameTitle.DOMINANT_SPECIES, GameElementStatesFactoryService],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/image.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imgPathByKind\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  // elements /\n  ['grass', 'dominant-species/element/noun-grass-7195612.svg'],\n  ['grub', 'dominant-species/element/noun-grub-3386143.svg'],\n  ['meat', 'dominant-species/element/noun-cow-skull-151117.svg'],\n  ['seed', 'dominant-species/element/noun-seed-6850047.svg'],\n  ['sun', 'dominant-species/element/noun-sun-7300296.svg'],\n  ['water', 'dominant-species/element/noun-water-water-1235535.svg'],\n  // animals /\n  ['amphibian', 'dominant-species/animal/noun-gecko-367390.svg'],\n  ['arachnid', 'dominant-species/animal/noun-spider-7144060.svg'],\n  ['bird', 'dominant-species/animal/noun-eagle-6606521.svg'],\n  ['insect', 'dominant-species/animal/noun-grasshopper-7049525.svg'],\n  ['mammal', 'dominant-species/animal/noun-monkey-2997582.svg'],\n  ['reptile', 'dominant-species/animal/noun-snake-4412103.svg'],\n  // others /\n  ['eyeball', 'dominant-species/other/noun-eye-2037742.svg'],\n  ['elementSpace', 'dominant-species/other/noun-leaf-7290921.svg'],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/pile-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pileIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
