var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.327,1,1.218]],["body/interfaces/Action.html",[0,0.499,1,2.171,2,1.938,3,0.309,4,0.28,5,0.28,6,5.064,7,0.167,8,0.664,9,2,10,1.141,11,0.223,12,0.016,13,0.309,14,0.014,15,0.014]],["title/components/ActionPawnComponent.html",[16,1.167,17,1.76]],["body/components/ActionPawnComponent.html",[1,2.315,3,0.201,4,0.182,5,0.182,7,0.109,10,0.933,11,0.145,12,0.017,13,0.201,14,0.011,15,0.011,16,1.803,17,2.924,18,2.511,19,1.937,20,1.937,21,1.937,22,4.08,23,4.377,24,3.292,25,1.937,26,3.41,27,3.41,28,3.595,29,3.794,30,2.863,31,2.65,32,2.385,33,2.65,34,5.215,35,2.65,36,5.215,37,3.41,38,2.863,39,1.516,40,2.863,41,0.773,42,4.205,43,2.587,44,3.876,45,0.858,46,0.786,47,0.91,48,3.811,49,3.811,50,3.811,51,2.492,52,3.811,53,2.695,54,3.811,55,0.37,56,2.492,57,3.41,58,0.821,59,2.322,60,1.937,61,2.322,62,2.695,63,1.835,64,1.937,65,1.937,66,0.182,67,1.156,68,1.052,69,3.811,70,3.811,71,3.689,72,2.695,73,1.937,74,2.65,75,1.397,76,1.937,77,3.249,78,1.937,79,1.937,80,1.743,81,2.65,82,1.743,83,1.937,84,1.835,85,2.65,86,1.743,87,1.44,88,1.743,89,1.937,90,1.743,91,1.44,92,1.58,93,1.937,94,1.743,95,1.937,96,1.743,97,1.743,98,1.835,99,1.937,100,1.937]],["title/interfaces/ActionPawnPiece.html",[0,0.327,43,1.674]],["body/interfaces/ActionPawnPiece.html",[0,0.48,2,1.864,3,0.297,4,0.269,5,0.269,7,0.161,8,0.649,11,0.214,12,0.016,13,0.297,14,0.014,15,0.014,40,3.562,43,2.915,55,0.388,101,4.869,102,4.869,103,2.032,104,2.701,105,5.727,106,3.219,107,4.364]],["title/components/ActionPawnSpaceComponent.html",[16,1.167,80,1.76]],["body/components/ActionPawnSpaceComponent.html",[1,2.359,3,0.209,4,0.189,5,0.189,7,0.113,11,0.15,12,0.017,13,0.209,14,0.011,15,0.011,16,1.84,17,2.971,18,2.579,19,2.013,20,2.013,21,2.013,22,3.263,23,2.59,25,2.013,26,3.501,27,3.501,28,3.62,29,3.82,30,3.62,31,2.721,32,2.449,33,2.721,35,2.721,37,3.501,38,3.268,41,0.618,43,2.639,45,0.892,46,0.817,47,0.564,55,0.393,56,2.59,57,3.501,58,0.854,59,2.414,60,2.013,65,2.721,66,0.189,67,1.97,73,2.013,74,2.721,75,1.425,76,2.013,77,3.302,78,2.013,79,2.013,80,2.971,81,2.721,82,1.812,83,2.013,84,1.908,85,2.721,86,1.812,87,1.497,88,1.812,89,2.013,90,1.812,91,1.497,92,1.643,93,2.013,94,2.971,95,2.013,96,1.812,97,2.971,98,1.908,99,2.013,100,2.013,108,4.626,109,4.146,110,3.067,111,2.118,112,4.626,113,4.626,114,3.423,115,2.802,116,3.067,117,3.962]],["title/components/AdaptionActionDisplayCardComponent.html",[16,1.167,82,1.76]],["body/components/AdaptionActionDisplayCardComponent.html",[1,2.417,3,0.165,4,0.149,5,0.149,7,0.177,8,0.439,11,0.203,12,0.017,13,0.165,14,0.009,15,0.009,16,1.619,17,1.431,18,2.185,19,1.59,20,1.59,21,1.59,22,3.789,25,1.59,28,3.461,29,3.652,30,2.571,31,2.306,32,2.075,33,2.306,35,2.306,38,2.185,41,0.616,43,2.323,45,1.021,46,0.936,47,0.834,55,0.411,58,0.674,59,1.906,60,1.59,65,2.306,66,0.149,67,1.776,73,1.59,74,2.306,75,1.461,76,1.59,77,2.977,78,1.59,79,1.59,80,2.678,81,2.306,82,2.678,83,3.55,84,3.627,85,2.306,86,1.431,87,1.182,88,1.431,89,1.59,90,1.431,91,1.182,92,1.297,93,1.59,94,1.431,95,1.59,96,2.678,97,2.678,98,1.506,99,1.59,100,1.59,109,3.513,118,4.587,119,4.815,120,2.422,121,3.513,122,4.613,123,3.92,124,4.613,125,3.92,126,3.92,127,5.021,128,2.689,129,1.021,130,5.06,131,0.871,132,3.128,133,4.587,134,4.537,135,0.645,136,0.645,137,2.702,138,0.645,139,0.54,140,3.128,141,2.214,142,2.702,143,3.209,144,3.92,145,3.128,146,1.787,147,3.128,148,3.128,149,1.787,150,1.787,151,0.735,152,2.422,153,1.906,154,1.906,155,3.128,156,3.128,157,3.128,158,2.702,159,3.128,160,2.422,161,3.128,162,4.535]],["title/injectables/AdaptionActionDisplayService.html",[133,2.721,163,0.576]],["body/injectables/AdaptionActionDisplayService.html",[1,2.326,3,0.125,4,0.113,5,0.113,7,0.145,8,0.357,11,0.246,12,0.017,13,0.125,14,0.008,15,0.008,38,2.177,41,0.588,43,2.879,44,2.741,45,1.516,46,1.39,47,1.04,55,0.396,58,0.511,59,1.446,60,1.206,64,1.206,66,0.113,67,1.772,68,0.744,75,0.557,91,0.896,104,1.393,106,1.355,111,2.493,118,5.196,127,4.523,128,2.422,129,0.83,131,1.027,133,2.607,135,1.052,136,1.052,138,1.258,139,1.052,141,2.743,146,1.355,149,2.106,150,2.106,151,0.557,153,1.446,158,2.05,160,1.837,163,0.552,164,0.785,165,6.347,166,2.05,167,4.52,168,1.516,169,4.52,170,2.11,171,3.197,172,3.197,173,3.905,174,3.905,175,3.686,176,2.59,177,3.686,178,3.184,179,5.097,180,5.519,181,5.097,182,2.373,183,3.337,184,3.987,185,3.686,186,3.686,187,2.96,188,2.373,189,2.373,190,3.686,191,2.373,192,3.686,193,2.373,194,2.373,195,2.373,196,2.373,197,2.373,198,3.686,199,2.373,200,2.373,201,1.038,202,3.686,203,2.373,204,2.373,205,2.373,206,2.607,207,2.373,208,2.373,209,3.686,210,2.373,211,3.184,212,3.686,213,2.373,214,1.678,215,1.355,216,1.206,217,2.05,218,1.551,219,0.751,220,2.05,221,1.551,222,2.582,223,1.551,224,1.446,225,1.678,226,1.446,227,0.785,228,0.751,229,1.446,230,2.373,231,1.551,232,2.373,233,3.686,234,2.373,235,2.373,236,1.551,237,2.373,238,2.05,239,2.373,240,2.373,241,3.686,242,2.854,243,2.05,244,2.373,245,2.754,246,2.373,247,2.373,248,1.551,249,2.373,250,3.686,251,2.373,252,2.373,253,2.373,254,1.143,255,1.273,256,2.373,257,2.106,258,2.373,259,1.837,260,2.373,261,0.661,262,3.184,263,2.373,264,2.373,265,1.276,266,1.678,267,2.373,268,2.373,269,1.837,270,1.678,271,2.373,272,2.373,273,2.373]],["title/classes/Animal.html",[66,0.184,87,1.454]],["body/classes/Animal.html",[0,0.261,1,0.971,3,0.162,4,0.146,5,0.146,7,0.088,8,0.433,9,1.409,10,0.702,11,0.234,12,0.017,13,0.279,14,0.009,15,0.009,38,2.542,39,1.3,41,0.67,43,1.335,47,1.006,51,2.005,55,0.419,60,1.559,64,1.559,66,0.214,68,1.144,75,1.051,87,1.69,111,2.088,128,2.406,131,1.246,135,0.633,136,0.633,139,0.771,141,2.67,151,0.721,153,1.869,168,1.681,170,1.907,171,2.169,172,2.169,201,1.06,206,2.169,218,2.005,219,1.416,222,1.752,223,2.005,224,1.869,225,2.169,226,1.869,245,3.536,248,2.005,255,1.545,257,1.752,261,1.616,265,1.65,266,2.169,270,2.169,274,1.477,275,2.169,276,3.149,277,4.104,278,4.348,279,2.254,280,4.104,281,2.84,282,3.463,283,3.536,284,4.473,285,2.375,286,3.577,287,3.067,288,3.067,289,3.067,290,2.65,291,3.067,292,3.067,293,3.067,294,3.067,295,2.65,296,3.067,297,3.067,298,3.067,299,1.869,300,1.824,301,2.005,302,3.464,303,2.169,304,2.005,305,1.869,306,2.375,307,1.159,308,3.164,309,4.088,310,2.375,311,2.375,312,2.375,313,2.375,314,2.375,315,2.375,316,2.375,317,3.463,318,2.375,319,2.375,320,2.375,321,2.925,322,2.375,323,2.375,324,2.375,325,2.375,326,2.375,327,2.169,328,2.375,329,2.375,330,2.375,331,2.375,332,2.375,333,2.375,334,2.375,335,2.169,336,2.375,337,3.463,338,2.375,339,3.463,340,2.375,341,3.463,342,2.375,343,2.375,344,2.375,345,2.375]],["title/components/AnimalCardComponent.html",[16,1.167,86,1.76]],["body/components/AnimalCardComponent.html",[1,1.867,3,0.128,4,0.116,5,0.116,7,0.159,8,0.363,11,0.253,12,0.017,13,0.128,14,0.008,15,0.008,16,1.391,17,2.36,18,1.807,19,1.234,20,1.234,21,1.234,23,1.587,25,1.234,28,3.264,29,3.445,30,1.169,31,1.907,32,1.716,33,1.907,35,1.907,37,2.453,41,0.644,43,2.245,44,3.749,45,1.384,46,1.269,47,0.965,55,0.408,57,2.453,58,0.523,59,1.479,60,1.234,65,1.907,66,0.116,67,1.138,73,1.234,74,1.907,75,1.31,76,1.234,77,2.622,78,1.234,79,1.234,80,1.11,81,1.907,82,1.11,83,1.234,84,1.169,85,1.907,86,2.36,87,2.663,88,1.11,89,1.234,90,1.11,91,0.917,92,1.006,93,1.234,94,2.36,95,1.234,96,1.11,97,1.11,98,1.169,99,1.234,100,1.234,106,1.387,115,1.717,116,1.88,120,1.88,121,2.905,122,3.962,123,3.241,124,3.962,125,3.241,126,3.241,128,2.445,129,0.844,130,4.457,131,0.676,135,0.946,136,0.946,137,2.097,138,0.946,139,0.962,141,1.901,142,2.097,146,1.387,149,1.387,150,2.143,151,0.57,153,1.479,154,1.479,160,1.88,162,3.995,168,1.327,187,1.716,201,0.4,231,1.587,254,2.485,255,0.839,279,2.331,281,2.018,299,1.479,335,1.717,346,5.944,347,5.327,348,4.586,349,4.586,350,4.586,351,4.586,352,5.578,353,5.578,354,5.578,355,3.752,356,3.752,357,2.428,358,4.171,359,3.752,360,3.752,361,2.428,362,2.428,363,3.752,364,2.428,365,2.428,366,2.428,367,2.428,368,2.428,369,2.428,370,1.907,371,1.717,372,2.097,373,2.428,374,2.428,375,0.917,376,2.428,377,2.428,378,2.097,379,1.88,380,2.428,381,2.097,382,2.428,383,2.428,384,0.839,385,2.428,386,2.428,387,2.428,388,2.428,389,2.428,390,3.752,391,2.999,392,2.428,393,2.428,394,2.428,395,2.428,396,2.428,397,2.428,398,2.428,399,2.428,400,2.428,401,2.428,402,2.428,403,2.286,404,2.428,405,2.428,406,2.428,407,2.428,408,3.752,409,3.752,410,3.752]],["title/interfaces/AnimalConfig.html",[0,0.327,283,2.344]],["body/interfaces/AnimalConfig.html",[0,0.28,1,1.041,2,1.087,3,0.173,4,0.157,5,0.157,7,0.094,8,0.455,9,0.877,10,0.738,11,0.241,12,0.017,13,0.29,14,0.01,15,0.01,38,1.583,41,0.379,43,1.43,55,0.425,60,1.671,64,1.671,66,0.225,68,1.164,75,1.105,87,1.242,111,2.172,128,1.95,131,0.915,139,0.811,141,2.734,151,0.772,153,2.003,168,1.563,170,2.29,171,2.325,172,2.325,201,1.086,206,2.325,218,2.149,219,1.489,222,1.878,223,2.149,224,2.003,225,2.325,226,2.003,245,3.651,248,2.149,255,1.624,257,1.878,261,1.669,265,1.768,266,2.325,270,2.325,275,2.325,276,2.607,277,4.484,278,3.918,279,2.372,280,4.484,281,1.768,282,2.545,283,3.345,286,3.41,299,2.003,300,2.346,301,2.149,302,3.905,303,2.325,304,2.149,305,2.003,306,2.545,307,1.242,308,4.484,309,4.251,310,2.545,311,2.545,312,2.545,313,2.545,314,2.545,315,2.545,316,2.545,317,3.641,318,2.545,319,2.545,320,2.545,321,3.075,322,2.545,323,2.545,324,2.545,325,2.545,326,2.545,327,2.325,328,2.545,329,2.545,330,2.545,331,2.545,332,2.545,333,2.545,334,2.545,335,2.325,336,2.545,337,3.641,338,2.545,339,3.641,340,2.545,341,3.641,342,2.545,343,2.545,344,2.545,345,2.545]],["title/classes/AnimalElements.html",[66,0.184,278,2.516]],["body/classes/AnimalElements.html",[0,0.26,1,0.967,3,0.161,4,0.146,5,0.146,7,0.087,8,0.432,9,0.815,10,0.7,11,0.2,12,0.017,13,0.278,14,0.009,15,0.009,38,1.471,39,1.296,41,0.668,43,1.329,45,1.004,46,0.92,47,0.97,55,0.419,60,1.552,64,1.552,66,0.213,68,1.143,75,1.36,87,1.154,111,2.083,128,2.401,129,1.004,131,1.242,135,1.087,136,1.087,138,0.92,139,0.999,141,2.925,151,0.718,153,1.861,168,1.588,170,2.224,171,2.16,172,3.725,178,3.852,201,1.093,206,3.154,218,1.997,219,1.668,222,1.745,223,1.997,224,1.861,225,2.16,226,1.861,245,3.529,248,1.997,255,1.541,257,1.745,261,1.613,265,1.643,266,2.16,270,2.16,274,1.471,275,2.16,276,2.52,277,3.154,278,4.027,279,2.037,280,3.154,281,1.643,282,2.365,283,2.717,286,3.313,299,1.861,300,1.82,301,1.997,302,3.795,303,2.16,304,1.997,305,1.861,306,2.365,307,1.154,308,3.725,309,4.078,310,4.078,311,2.365,312,2.365,313,2.365,314,2.365,315,2.365,316,3.453,317,3.453,318,2.365,319,2.365,320,3.453,321,2.916,322,2.365,323,2.365,324,2.365,325,2.365,326,2.365,327,2.16,328,2.365,329,4.078,330,2.365,331,2.365,332,4.078,333,2.365,334,2.365,335,2.16,336,2.365,337,3.453,338,2.365,339,3.453,340,2.365,341,3.453,342,2.365,343,2.365,344,2.365,345,2.365,411,4.459,412,3.054,413,4.459,414,3.054,415,3.054,416,3.054,417,3.054,418,3.054,419,3.054,420,3.054,421,3.054,422,3.054]],["title/injectables/AnimalProviderService.html",[163,0.576,358,2.721]],["body/injectables/AnimalProviderService.html",[3,0.163,4,0.148,5,0.148,7,0.088,8,0.436,9,0.826,11,0.221,12,0.017,13,0.163,14,0.009,15,0.009,41,0.612,45,1.311,46,1.202,47,0.973,55,0.41,58,0.667,63,1.489,64,1.572,66,0.148,68,0.509,87,2.339,129,1.013,131,1.253,135,1.095,136,1.095,138,1.095,139,1.005,149,2.571,150,2.571,151,0.727,163,0.673,164,1.023,168,1.721,183,3.328,201,1.147,214,3.752,215,1.767,216,2.696,219,1.68,220,2.672,227,1.023,228,0.979,231,2.022,236,2.022,261,1.857,276,2.308,277,2.188,279,2.259,280,2.188,283,4.063,285,2.395,299,1.885,302,1.664,303,2.188,304,2.022,308,2.188,358,3.183,375,1.7,378,2.672,384,2.232,391,2.022,423,6.017,424,2.672,425,5.305,426,4.583,427,5.305,428,5.826,429,4.5,430,4.5,431,5.826,432,2.672,433,3.808,434,4.063,435,4.5,436,3.888,437,4.5,438,3.093,439,4.5,440,3.093,441,3.093,442,3.093,443,4.5,444,3.093,445,3.093,446,2.022,447,3.093,448,2.022,449,1.767,450,1.885,451,2.395,452,3.093,453,3.093,454,3.093,455,3.093,456,2.672,457,3.093,458,2.672,459,3.093,460,3.093,461,3.093,462,2.672,463,3.093,464,4.5,465,3.093,466,5.305,467,3.093,468,3.093,469,3.093,470,3.093,471,3.093,472,3.888,473,3.093,474,3.093,475,4.5,476,3.093,477,3.093,478,3.093,479,3.093,480,3.093,481,3.093,482,3.093,483,3.093,484,3.093,485,3.093,486,3.093,487,3.093,488,3.093,489,3.093,490,3.093,491,3.093]],["title/components/AppComponent.html",[16,1.167,88,1.76]],["body/components/AppComponent.html",[1,2.021,3,0.232,4,0.21,5,0.21,7,0.125,8,0.555,10,0.689,11,0.167,12,0.017,13,0.232,14,0.012,15,0.012,16,1.936,17,2.007,18,2.76,19,2.23,20,2.23,21,2.23,25,2.23,28,3.681,29,3.885,30,2.113,31,2.913,32,2.621,33,2.913,35,2.913,41,0.661,45,0.988,46,0.906,47,0.625,55,0.369,58,0.946,65,2.913,66,0.21,73,2.23,74,2.913,75,1.499,76,2.23,77,3.439,78,2.23,79,2.23,80,2.007,81,2.913,82,2.007,83,2.23,84,2.113,85,2.913,86,2.007,87,1.658,88,3.094,89,2.23,90,3.094,91,1.658,92,2.646,93,2.23,94,2.007,95,2.23,96,2.007,97,2.007,98,2.113,99,2.23,100,2.23,228,1.815,281,3.083,492,3.791,493,6.382,494,5.731,495,5.731,496,6.382,497,4.951,498,4.388,499,3.791,500,4.388,501,3.398,502,4.388]],["title/classes/Area.html",[66,0.184,170,1.389]],["body/classes/Area.html",[0,0.274,3,0.17,4,0.154,5,0.154,7,0.155,8,0.449,9,1.679,10,1.028,11,0.271,12,0.017,13,0.244,14,0.01,15,0.01,41,0.626,47,1.04,55,0.314,66,0.154,67,1.8,68,0.53,103,1.646,111,2.824,129,1.043,131,0.897,135,1.12,136,1.12,138,1.225,139,0.936,151,0.756,168,1.583,170,2.144,176,3.017,201,0.977,219,1.879,229,1.962,242,2.493,245,1.962,254,1.55,255,1.601,257,4.129,261,1.29,269,3.587,274,1.55,276,2.85,307,1.216,503,2.493,504,2.609,505,4.688,506,4.405,507,3.154,508,2.823,509,1.725,510,2.492,511,4.633,512,2.823,513,3.307,514,4.002,515,4.633,516,3.22,517,1.725,518,3.22,519,3.22,520,1.55,521,3.029,522,2.277,523,2.277,524,2.277,525,3.22,526,4.002,527,3.22,528,1.96,529,2.782,530,2.355,531,3.196,532,3.22,533,1.55,534,2.277,535,2.782,536,1.833,537,0.897,538,2.782,539,2.493,540,1.839,541,4.002,542,2.782,543,2.782,544,2.782,545,4.688,546,2.782,547,2.782,548,2.782,549,2.782,550,2.782,551,2.782,552,2.782,553,1.962,554,4.002,555,2.277,556,2.277,557,2.277,558,2.277,559,2.823,560,2.782,561,2.782,562,2.782,563,1.962,564,2.782,565,2.782,566,2.782,567,2.782,568,2.782]],["title/injectables/AreaRegistryService.html",[163,0.576,183,2.198]],["body/injectables/AreaRegistryService.html",[3,0.225,4,0.204,5,0.204,7,0.122,8,0.545,9,1.14,10,0.884,11,0.271,12,0.017,13,0.225,14,0.012,15,0.012,41,0.727,45,1.506,46,1.381,47,1.038,55,0.388,58,0.92,66,0.204,75,1.003,103,1.707,128,1.77,129,1.267,131,1.189,135,1.299,136,1.299,138,1.161,139,0.736,163,0.842,164,1.412,168,1.608,170,2.033,183,3.215,201,1.037,215,3.215,216,2.17,227,1.412,228,1.352,375,2.126,384,2.175,517,1.241,521,3.441,531,2.17,537,1.189,569,2.126,570,2.601,571,4.273,572,3.027,573,3.981,574,3.6,575,2.861,576,4.269,577,4.735,578,3.688,579,5.628,580,3.02,581,3.305,582,3.387,583,2.791,584,3.688,585,3.305,586,3.02,587,3.305,588,3.305,589,3.02,590,3.305,591,2.791,592,2.056,593,2.601,594,4.269]],["title/interfaces/AreaState.html",[0,0.327,531,1.955]],["body/interfaces/AreaState.html",[0,0.337,2,1.31,3,0.209,4,0.189,5,0.189,7,0.173,8,0.518,9,1.811,10,0.841,11,0.15,12,0.017,13,0.283,14,0.011,15,0.011,55,0.351,66,0.189,67,1.84,68,0.652,103,1.84,111,2.915,151,0.931,168,1.365,170,2.346,176,2.013,201,1.07,219,1.695,229,2.414,242,3.067,245,2.414,254,1.908,255,1.85,257,3.876,261,1.491,269,4.146,276,2.33,307,1.497,503,3.067,504,2.023,505,3.423,506,4.539,509,1.556,514,3.423,517,1.556,526,3.423,528,1.934,530,2.013,531,3.449,535,3.423,536,2.399,537,1.103,538,4.626,539,4.146,540,3.059,541,5.612,542,3.423,543,3.423,544,3.423,545,5.24,546,3.423,547,3.423,548,3.423,549,3.423,550,3.423,551,3.423,552,3.423,553,2.414,554,4.626,555,2.802,556,2.802,557,2.802,558,2.802,559,3.263,560,3.423,561,3.423,562,3.423,563,2.414,564,3.423,565,3.423,566,3.423,567,3.423,568,3.423,595,2.131]],["title/injectables/AreaStateService.html",[163,0.576,577,2.721]],["body/injectables/AreaStateService.html",[3,0.213,4,0.193,5,0.193,7,0.115,8,0.525,9,1.077,10,0.851,11,0.267,12,0.017,13,0.213,14,0.011,15,0.011,39,1.575,41,0.755,45,1.22,46,1.118,47,1.04,55,0.354,58,0.87,66,0.193,68,0.664,75,0.948,103,1.644,129,1.22,135,1.35,136,1.35,138,1.409,139,1.129,163,0.811,164,1.334,168,1.643,170,2.466,176,3.111,201,0.892,215,3.096,227,1.334,228,1.277,375,2.048,384,1.873,507,3.459,509,1.172,521,3.459,531,3.326,537,1.124,569,2.048,572,2.915,574,2.915,575,2.755,577,3.834,582,3.293,591,2.638,592,1.943,596,2.458,597,4.27,598,3.834,599,3.834,600,3.834,601,4.33,602,5.42,603,3.124,604,3.834,605,3.124,606,2.854,607,3.124,608,3.124,609,2.854,610,3.124,611,2.854,612,3.124,613,3.124,614,2.854,615,3.124,616,4.034,617,4.034,618,4.034]],["title/components/DrawPoolGameComponent.html",[16,1.167,90,1.76]],["body/components/DrawPoolGameComponent.html",[1,1.886,3,0.097,4,0.088,5,0.088,7,0.109,8,0.292,10,0.866,11,0.219,12,0.017,13,0.097,14,0.006,15,0.006,16,1.16,17,2.021,18,1.453,19,0.938,20,0.938,21,0.938,23,1.207,25,0.938,28,3.022,29,3.189,30,0.889,31,1.533,32,1.38,33,1.533,35,1.533,39,0.877,41,0.51,43,1.923,44,3.444,45,1.177,46,1.079,47,0.955,55,0.422,58,0.398,59,1.124,60,0.938,65,1.533,66,0.088,67,0.56,68,0.63,73,0.938,74,1.533,75,1.144,76,0.938,77,2.246,78,0.938,79,0.938,80,0.844,81,1.533,82,2.021,83,0.938,84,1.842,85,1.533,86,2.021,87,1.669,88,0.844,89,0.938,90,2.021,91,2.563,92,3.156,93,0.938,94,2.021,95,0.938,96,2.021,97,2.021,98,0.889,99,0.938,100,0.938,106,1.054,107,1.429,115,1.305,116,1.429,118,1.305,119,1.429,127,3.772,128,2.02,129,0.679,131,0.84,135,0.622,136,0.622,138,1.079,139,1.057,141,2.02,143,1.305,144,1.594,146,1.054,149,1.054,150,2.185,151,0.433,162,3.421,168,1.441,170,1.382,176,2.658,183,3.152,184,2.889,187,0.844,214,3.125,215,1.054,216,1.533,217,1.594,218,1.207,221,1.207,222,1.054,223,1.207,229,1.124,231,1.972,236,1.207,238,1.594,254,1.453,261,1.659,262,2.606,279,1.904,295,1.594,299,1.124,300,1.322,301,1.207,347,1.429,370,0.938,371,1.305,372,1.594,391,1.972,403,1.124,433,2.524,449,1.054,462,1.594,501,5.253,528,0.666,537,1.066,592,0.889,619,5.861,620,1.594,621,3.826,622,3.826,623,3.017,624,3.017,625,3.826,626,3.826,627,4.209,628,4.872,629,4.209,630,4.872,631,3.817,632,4.419,633,3.017,634,4.419,635,1.845,636,3.125,637,3.305,638,2.889,639,3.826,640,3.305,641,3.608,642,3.017,643,3.017,644,1.845,645,1.845,646,1.845,647,3.017,648,1.845,649,1.845,650,1.845,651,1.845,652,1.845,653,1.845,654,1.845,655,1.845,656,1.845,657,1.845,658,1.845,659,1.845,660,1.845,661,1.845,662,1.054,663,1.845,664,2.134,665,1.594,666,1.838,667,3.017,668,1.845,669,1.845,670,1.429,671,1.845,672,1.845,673,1.845,674,3.017,675,1.845,676,1.845,677,1.845,678,1.845,679,1.845,680,3.017,681,1.845,682,1.845,683,1.594,684,1.845,685,1.845,686,1.207,687,1.845,688,3.017,689,3.017,690,1.845,691,1.845,692,1.429,693,1.845,694,1.845,695,4.517,696,1.845,697,1.845,698,1.845,699,1.845,700,1.845,701,1.845,702,1.845,703,1.845,704,1.845,705,1.845,706,1.845,707,1.845,708,1.845,709,1.845,710,1.207,711,1.845,712,1.845,713,1.305,714,1.845,715,1.845,716,1.845,717,1.845,718,2.336,719,2.606,720,4.419]],["title/components/ElementComponent.html",[16,1.167,94,1.76]],["body/components/ElementComponent.html",[1,1.915,3,0.208,4,0.188,5,0.188,7,0.112,10,0.95,11,0.15,12,0.017,13,0.208,14,0.011,15,0.011,16,1.835,17,1.802,18,2.569,19,2.003,20,2.003,21,2.003,25,2.003,26,3.488,27,3.488,28,3.616,29,3.817,30,1.898,31,2.711,32,2.44,33,2.711,35,2.711,37,3.488,39,1.55,41,0.782,42,4.278,44,3.906,45,0.887,46,0.813,47,0.923,51,2.576,53,2.787,55,0.375,56,2.576,57,3.488,58,0.849,61,2.401,62,2.787,63,1.898,64,2.003,65,2.003,66,0.188,68,1.067,72,2.787,73,2.003,74,2.711,75,1.706,76,2.003,77,3.294,78,2.003,79,2.003,80,1.802,81,2.711,82,1.802,83,2.003,84,1.898,85,2.711,86,1.802,87,1.489,88,1.802,89,2.003,90,1.802,91,1.489,92,1.634,93,2.003,94,2.964,95,2.003,96,1.802,97,1.802,98,1.898,99,2.003,100,2.003,141,2.508,146,2.251,528,2.184,721,3.404,722,5.335,723,5.335,724,3.94,725,3.94,726,3.94,727,3.94,728,3.94,729,3.94,730,3.94,731,4.131]],["title/interfaces/ElementConfig.html",[0,0.327,302,2.069]],["body/interfaces/ElementConfig.html",[0,0.387,2,1.502,3,0.24,4,0.217,5,0.217,7,0.13,8,0.567,11,0.246,12,0.017,13,0.309,14,0.012,15,0.012,55,0.376,187,2.967,201,0.748,221,2.97,261,1.632,302,3.152,375,1.716,448,2.97,528,2.757,664,3.213,666,2.768,713,4.849,732,3.517,733,3.517,734,6.041,735,6.594,736,4.542,737,4.542,738,3.924,739,3.517,740,3.517,741,3.924,742,3.924,743,3.924,744,3.517,745,3.924,746,5.495,747,3.924,748,3.517,749,3.924,750,3.924,751,3.517,752,3.924,753,3.924,754,3.517,755,3.924,756,3.924,757,3.517,758,3.924,759,3.924]],["title/injectables/ElementDrawPoolService.html",[163,0.576,184,2.516]],["body/injectables/ElementDrawPoolService.html",[3,0.18,4,0.163,5,0.163,7,0.098,8,0.468,11,0.254,12,0.017,13,0.18,14,0.01,15,0.01,32,1.564,39,1.406,41,0.648,44,3.281,45,1.449,46,1.328,47,1.03,55,0.398,58,0.737,66,0.163,67,1.037,68,0.924,91,2.764,104,1.827,106,1.953,129,1.088,131,0.952,135,1.158,136,1.158,138,1.158,139,1.052,141,2.77,146,1.953,149,1.953,150,2.763,151,0.803,154,2.084,163,0.724,164,1.131,168,1.676,173,5.934,174,4.848,176,3.1,184,3.162,187,2.212,201,0.924,211,4.178,214,2.419,216,1.738,219,1.777,227,1.131,228,1.083,229,2.084,231,2.236,236,2.236,255,1.181,300,2.107,301,2.236,403,3.419,434,3.717,450,2.084,517,1.773,627,4.848,760,6.321,761,2.954,762,5.612,763,3.421,764,3.421,765,3.42,766,4.837,767,4.178,768,3.42,769,3.421,770,3.42,771,2.419,772,3.162,773,3.421,774,3.42,775,2.419,776,3.42,777,4.837,778,3.42,779,4.837,780,3.42,781,3.42,782,3.42,783,2.648,784,3.42,785,2.648,786,3.42,787,3.42,788,3.42,789,3.42,790,5.612,791,3.42,792,3.42,793,3.42,794,3.42,795,3.42,796,3.42,797,3.42]],["title/interfaces/ElementPiece.html",[0,0.327,141,1.595]],["body/interfaces/ElementPiece.html",[0,0.475,2,1.845,3,0.294,4,0.266,5,0.266,7,0.159,8,0.645,11,0.212,12,0.016,13,0.294,14,0.014,15,0.014,40,3.55,55,0.386,67,1.692,103,2.02,104,2.689,106,3.187,141,2.761,528,2.663,665,4.82,713,5.215,798,4.82]],["title/components/ElementSpaceComponent.html",[16,1.167,96,1.76]],["body/components/ElementSpaceComponent.html",[1,1.92,3,0.209,4,0.189,5,0.189,7,0.113,10,0.622,11,0.15,12,0.017,13,0.209,14,0.011,15,0.011,16,1.84,17,1.812,18,2.579,19,2.013,20,2.013,21,2.013,22,3.696,25,2.013,26,3.501,27,3.501,28,3.62,29,3.82,30,1.908,31,2.721,32,2.449,33,2.721,35,2.721,37,3.501,39,1.556,41,0.618,42,4.29,45,0.892,46,0.817,47,0.763,53,2.802,55,0.393,56,2.59,57,3.501,58,0.854,61,2.414,62,2.802,63,1.908,64,2.013,65,2.721,66,0.189,67,1.97,68,0.652,72,2.802,73,2.013,74,2.721,75,1.8,76,2.013,77,3.302,78,2.013,79,2.013,80,1.812,81,2.721,82,1.812,83,2.013,84,1.908,85,2.721,86,1.812,87,1.497,88,1.812,89,2.013,90,1.812,91,1.497,92,1.643,93,2.013,94,2.971,95,2.013,96,2.971,97,1.812,98,1.908,99,2.013,100,2.013,110,3.067,111,2.118,112,4.626,113,4.626,114,3.423,115,2.802,141,2.515,143,4.29,146,2.263,321,2.59,670,4.696,799,3.962]],["title/components/EyeballComponent.html",[16,1.167,97,1.76]],["body/components/EyeballComponent.html",[1,2.029,3,0.233,4,0.211,5,0.211,7,0.126,10,0.695,12,0.017,13,0.233,14,0.012,15,0.012,16,1.943,17,2.023,18,2.774,19,2.248,20,2.248,21,2.248,22,3.51,25,2.248,26,3.767,27,3.767,28,3.686,29,3.89,30,2.13,31,2.928,32,2.635,33,2.928,35,2.928,39,1.674,41,0.665,42,4.531,47,0.63,53,3.129,55,0.371,56,2.892,58,0.953,61,2.695,62,3.129,63,2.13,64,2.248,65,2.248,66,0.211,68,0.728,72,3.129,73,2.248,74,2.928,75,1.505,76,2.248,77,3.449,78,2.248,79,2.248,80,2.023,81,2.928,82,2.023,83,2.248,84,2.13,85,2.928,86,2.023,87,1.671,88,2.023,89,2.248,90,2.023,91,1.671,92,1.834,93,2.248,94,2.023,95,2.248,96,2.023,97,3.104,98,3.268,99,2.248,100,2.248,800,3.822,801,5.761,802,5.761,803,4.424]],["title/classes/Faction.html",[66,0.184,279,1.272]],["body/classes/Faction.html",[0,0.326,3,0.202,4,0.183,5,0.183,7,0.109,8,0.507,10,1.006,11,0.269,12,0.017,13,0.276,14,0.011,15,0.011,39,1.521,41,0.833,47,1.064,51,2.505,55,0.222,66,0.183,68,0.981,103,1.808,129,1.178,135,1.322,136,1.322,138,1.384,139,1.244,187,3.417,219,1.213,274,1.845,279,1.731,307,1.447,384,1.323,504,2.726,507,3.334,508,3.189,509,1.862,510,2.815,512,3.189,513,3.632,517,1.113,520,2.871,521,3.23,522,2.709,523,2.709,524,2.709,530,1.947,533,1.845,534,2.709,536,2.07,537,1.067,804,2.966,805,5.234,806,5.234,807,5.234,808,4.189,809,4.96,810,4.521,811,3.831,812,5.982,813,4.521,814,3.831,815,4.521,816,3.831,817,2.966,818,2.505,819,1.947,820,2.334,821,2.334,822,2.505,823,2.505,824,1.845,825,1.667,826,3.831,827,3.831,828,3.831,829,3.831,830,3.831,831,1.845,832,2.709,833,3.309,834,5.535,835,3.898]],["title/interfaces/FactionAssignment.html",[0,0.327,686,2.516]],["body/interfaces/FactionAssignment.html",[0,0.401,2,1.557,3,0.248,4,0.225,5,0.225,7,0.134,8,0.581,9,1.915,10,1.152,11,0.228,12,0.017,13,0.316,14,0.013,15,0.013,55,0.415,58,1.015,66,0.225,75,1.106,103,1.428,139,0.812,151,1.106,163,0.897,168,1.35,201,0.775,216,2.393,219,1.899,227,1.557,228,1.491,279,2.182,391,3.078,433,2.689,449,2.689,517,1.743,537,1.311,555,3.33,569,1.779,570,2.868,571,3.425,583,3.078,592,2.267,593,2.868,686,4.692,692,3.645,808,4.692,831,2.267,836,2.868,837,3.921,838,4.067,839,4.067,840,4.067,841,4.067,842,4.067,843,4.067,844,4.067,845,4.067,846,4.067]],["title/injectables/FactionRegistryService.html",[163,0.576,433,2.198]],["body/injectables/FactionRegistryService.html",[0,0.308,3,0.191,4,0.173,5,0.173,7,0.103,8,0.488,9,1.545,10,0.982,11,0.27,12,0.017,13,0.266,14,0.011,15,0.011,41,0.668,45,1.571,46,1.441,47,1.043,55,0.381,58,0.781,66,0.173,75,0.851,103,1.527,128,1.502,129,1.133,131,1.009,135,1.194,136,1.194,138,1.039,139,0.869,151,0.851,163,0.753,164,1.198,168,1.679,201,1.082,216,1.841,219,1.833,227,1.198,228,1.147,279,2.174,375,1.903,384,2,391,2.369,433,2.877,449,3.756,517,1.818,521,3.278,537,1.009,555,2.562,569,2.484,570,2.207,571,4.13,572,2.709,573,3.562,574,3.365,575,2.559,580,2.562,581,2.805,582,1.948,583,3.293,585,2.805,586,2.562,587,2.805,588,2.805,589,2.562,590,2.805,592,1.744,593,2.207,686,4.727,692,2.805,808,3.293,831,1.744,836,2.207,837,4.091,838,5.001,839,4.351,840,4.351,841,4.351,842,3.13,843,3.13,844,3.13,845,3.13,846,3.13,847,3.623,848,3.623,849,3.623,850,3.623,851,3.623,852,3.623]],["title/interfaces/FactionState.html",[0,0.327,831,1.853]],["body/interfaces/FactionState.html",[0,0.41,2,1.594,3,0.254,4,0.23,5,0.23,7,0.138,8,0.589,10,1.19,11,0.253,12,0.017,13,0.321,14,0.013,15,0.013,41,0.834,55,0.279,66,0.23,68,1.098,103,2.024,139,1.151,187,3.427,279,1.594,307,1.821,504,2.3,536,2.639,537,1.343,804,3.733,808,4.725,809,5.596,810,4.165,812,5.764,813,4.165,815,4.165,831,2.932,832,3.41,833,4.165,834,6.055,835,4.363]],["title/injectables/FactionStateService.html",[163,0.576,837,2.516]],["body/injectables/FactionStateService.html",[3,0.213,4,0.193,5,0.193,7,0.115,8,0.525,9,1.077,10,0.851,11,0.267,12,0.017,13,0.213,14,0.011,15,0.011,39,1.575,41,0.755,45,1.22,46,1.118,47,1.04,55,0.354,58,0.87,66,0.193,68,0.664,75,0.948,103,1.644,129,1.22,135,1.35,136,1.35,138,1.409,139,1.129,163,0.811,164,1.334,168,1.643,176,3.111,201,0.892,227,1.334,228,1.277,279,2.258,375,2.048,384,1.873,449,3.096,507,3.459,509,1.172,521,3.459,537,1.124,569,2.048,572,2.915,574,2.915,575,2.755,582,3.293,592,1.943,596,2.458,597,4.27,598,3.834,599,3.834,600,3.834,601,4.33,603,3.124,604,3.834,605,3.124,606,2.854,607,3.124,608,3.124,609,2.854,610,3.124,611,2.854,612,3.124,613,3.124,614,2.854,615,3.124,831,3.152,836,2.458,837,3.544,853,5.42,854,4.034,855,4.034,856,4.034]],["title/classes/GameElement.html",[66,0.184,504,1.454]],["body/classes/GameElement.html",[0,0.333,3,0.206,4,0.187,5,0.187,7,0.112,8,0.514,9,1.804,10,0.834,11,0.257,12,0.017,13,0.28,14,0.011,15,0.011,39,1.543,41,0.613,47,1.033,55,0.307,66,0.187,68,0.874,129,1.195,131,1.09,135,1.096,136,1.096,138,1.096,139,1.039,151,0.919,201,0.874,219,1.908,255,1.352,274,1.884,290,3.38,384,1.834,504,2.006,507,3.54,508,3.672,509,2.197,510,3.241,512,3.235,513,3.938,517,1.751,520,3.579,530,2.698,533,2.902,536,1.548,553,2.384,556,2.767,557,2.767,559,2.384,818,3.471,819,2.698,820,3.235,821,3.235,822,3.471,823,3.471,824,2.557,825,2.31,857,4.479,858,3.029,859,3.471,860,5.309,861,3.912,862,3.912,863,3.912,864,3.912,865,3.912,866,3.38,867,3.912,868,2.558,869,2.104,870,2.104,871,2.104,872,4.587,873,2.767,874,3.38,875,2.767,876,2.767,877,3.38,878,3.38,879,2.384,880,3.38,881,3.38,882,3.029]],["title/injectables/GameElementRegistryService.html",[163,0.576,571,2.198]],["body/injectables/GameElementRegistryService.html",[3,0.199,4,0.18,5,0.18,7,0.107,8,0.501,9,1.577,10,0.928,11,0.261,12,0.017,13,0.199,14,0.011,15,0.011,41,0.682,45,1.431,46,1.312,47,1.005,55,0.386,58,0.812,63,1.813,66,0.18,68,0.62,75,1.733,103,1.142,128,1.561,129,1.164,131,1.049,135,1.219,136,1.219,138,1.067,139,0.892,151,0.884,163,0.774,164,1.245,168,1.641,201,1.161,219,1.192,227,1.245,228,1.192,255,1.301,307,1.422,375,2.403,384,2.38,504,1.422,517,1.717,536,1.489,537,1.049,569,2.715,570,2.294,571,2.954,572,3.178,573,4.179,574,3.705,575,2.629,580,3.658,582,3.586,583,3.382,586,3.658,589,3.658,592,1.813,593,2.294,597,2.954,824,1.813,883,5.564,884,3.765,885,6.36,886,5.172,887,5.172,888,3.765,889,3.765,890,3.765,891,3.765,892,3.765,893,2.294,894,2.915,895,3.253,896,3.253,897,3.765,898,3.253,899,3.253,900,3.253,901,3.765,902,3.253,903,2.915,904,3.765,905,3.765]],["title/interfaces/GameElementState.html",[0,0.327,536,1.522]],["body/interfaces/GameElementState.html",[0,0.396,2,1.537,3,0.245,4,0.222,5,0.222,7,0.133,8,0.576,9,1.952,10,1.086,11,0.176,12,0.017,13,0.314,14,0.012,15,0.012,55,0.344,66,0.222,68,0.979,139,0.802,151,1.092,201,0.979,219,1.883,255,1.606,384,1.606,504,1.756,507,3.159,508,2.832,509,2.077,510,2.5,513,2.832,517,1.729,520,3.442,530,2.362,533,2.864,536,2.353,553,2.832,556,3.288,557,3.288,559,2.832,818,3.039,819,2.362,820,2.832,821,2.832,822,3.039,823,3.039,824,2.238,825,2.022,857,2.832,858,3.599,859,3.039,868,3.039,869,2.5,870,2.5,871,2.5,872,5.138,873,3.288,874,4.015,875,3.288,876,3.288,877,4.015,878,4.015,879,2.832,880,4.015,881,4.015,882,3.599]],["title/injectables/GameElementStateService.html",[163,0.576,597,2.198]],["body/injectables/GameElementStateService.html",[3,0.176,4,0.16,5,0.16,7,0.095,8,0.461,9,1.479,10,0.87,11,0.259,12,0.017,13,0.176,14,0.01,15,0.01,39,1.383,41,0.736,45,1.071,46,0.982,47,1.011,55,0.369,58,0.72,63,1.609,66,0.16,68,0.55,75,1.743,129,1.071,131,0.931,135,1.317,136,1.317,138,1.317,139,1.203,151,0.785,163,0.712,164,1.105,168,1.655,176,3.068,201,1.05,227,1.105,228,1.058,229,2.036,255,1.155,261,0.931,307,1.263,375,2.281,384,2.086,504,1.263,507,3.286,509,0.971,517,1.383,536,2.388,537,0.931,569,2.72,572,2.98,574,2.98,575,2.418,582,3.818,592,1.609,593,2.036,596,2.036,597,2.718,598,3.365,599,3.365,600,3.365,601,3.919,604,3.365,606,3.365,609,3.365,611,2.364,614,2.364,637,4.111,638,3.948,662,1.909,824,1.609,883,5.574,893,2.036,894,2.588,895,6.026,896,2.887,898,2.887,899,2.887,900,2.887,902,2.887,903,2.588,906,3.342,907,4.758,908,3.342,909,3.342,910,3.342,911,4.758,912,3.342,913,3.342,914,3.342,915,3.342,916,3.342,917,3.342,918,3.342,919,3.342,920,3.342,921,3.342,922,3.342,923,3.342,924,3.342,925,3.342,926,3.342]],["title/injectables/GameManagementService.html",[163,0.576,636,2.721]],["body/injectables/GameManagementService.html",[3,0.177,4,0.16,5,0.16,7,0.136,9,0.896,11,0.127,12,0.017,13,0.177,14,0.01,15,0.01,41,0.551,47,0.91,55,0.442,58,0.724,63,1.617,66,0.16,75,0.789,111,2.197,129,1.074,131,1.33,135,0.693,136,0.693,138,1.248,139,1.145,163,0.714,164,1.11,168,1.657,170,2.006,183,3.456,201,0.553,215,1.918,216,2.823,222,1.918,227,1.11,228,1.063,254,2.299,257,3.456,261,1.979,279,1.837,285,2.599,300,1.649,302,1.806,304,2.195,370,1.706,371,2.375,432,2.9,433,3.456,434,3.686,436,4.124,446,2.195,448,2.195,449,1.918,450,2.046,472,2.9,537,1.547,569,2.509,591,2.195,629,2.9,631,5.227,636,3.376,640,4.799,641,4.468,666,2.046,767,4.799,808,2.195,809,2.599,836,2.046,894,2.599,927,2.9,928,6.05,929,5.555,930,6.05,931,3.357,932,3.357,933,3.357,934,3.357,935,3.357,936,1.535,937,2.195,938,3.357,939,3.357,940,2.9,941,2.599,942,3.357,943,2.599,944,3.357,945,3.357,946,3.357,947,3.357,948,3.357,949,3.357,950,3.357,951,3.357,952,3.357,953,3.357,954,3.357,955,4.774,956,3.357,957,3.357,958,3.357,959,3.357,960,3.357,961,3.357,962,3.357,963,3.357,964,3.357,965,3.357,966,3.357,967,5.555,968,3.357,969,3.357,970,3.357,971,3.357,972,3.357,973,3.357,974,3.357,975,3.357]],["title/interfaces/GameState.html",[0,0.327,825,1.674]],["body/interfaces/GameState.html",[0,0.429,2,1.667,3,0.266,4,0.241,5,0.241,7,0.144,8,0.606,11,0.259,12,0.017,13,0.33,14,0.013,15,0.013,55,0.394,170,2.645,261,1.404,279,2.422,300,2.53,531,3.62,595,2.712,825,3.187,831,3.43,857,3.072,936,3.257,976,3.904,977,5.409,978,4.094,979,6.261,980,4.094,981,5.042,982,5.042,983,5.042,984,3.566]],["title/injectables/GameStateClientService.html",[163,0.576,985,2.721]],["body/injectables/GameStateClientService.html",[3,0.269,4,0.244,5,0.244,7,0.146,11,0.194,12,0.017,13,0.269,14,0.013,15,0.013,39,1.833,41,0.589,47,0.898,55,0.396,58,1.099,66,0.244,68,0.84,129,1.419,135,1.052,136,1.052,138,1.052,139,1.088,151,1.198,163,0.943,164,1.687,227,1.687,228,1.615,509,2.078,517,1.833,569,2.586,662,3.91,819,3.634,893,3.108,985,4.46,986,4.406,987,6.306,988,6.306,989,4.357,990,5.1,991,5.1,992,5.1,993,3.949,994,5.1,995,5.1]],["title/interfaces/GameStatePatch.html",[0,0.327,989,2.344]],["body/interfaces/GameStatePatch.html",[0,0.476,2,1.849,3,0.295,4,0.267,5,0.267,7,0.16,8,0.646,11,0.253,12,0.016,13,0.295,14,0.014,15,0.014,55,0.324,187,3.259,509,1.625,857,3.408,869,3.008,870,3.008,871,4.055,989,4.064,996,4.832,997,6.375,998,7.379]],["title/injectables/GameStatePatchService.html",[163,0.576,999,2.721]],["body/injectables/GameStatePatchService.html",[3,0.241,4,0.218,5,0.218,7,0.13,11,0.223,12,0.017,13,0.241,14,0.012,15,0.012,41,0.678,44,2.453,47,0.837,55,0.398,58,0.983,66,0.218,68,0.967,129,1.322,135,1.213,136,1.213,138,1.213,163,0.879,164,1.508,227,1.508,228,1.444,509,1.996,533,3.307,569,2.456,595,2.453,662,3.714,819,3.304,825,3.382,869,2.453,870,2.453,871,3.161,893,3.581,989,4.433,993,3.532,997,3.94,999,4.156,1000,3.94,1001,5.077,1002,5.876,1003,5.876,1004,5.876,1005,5.876,1006,5.876,1007,4.561,1008,5.876,1009,4.561,1010,4.561,1011,3.94,1012,4.561,1013,4.561,1014,4.561,1015,4.561,1016,4.561,1017,4.561,1018,4.561]],["title/injectables/GameStateService.html",[163,0.576,638,2.516]],["body/injectables/GameStateService.html",[0,0.343,3,0.141,4,0.127,5,0.127,7,0.076,11,0.248,12,0.017,13,0.141,14,0.008,15,0.008,39,1.172,41,0.755,47,1.032,55,0.388,58,0.575,66,0.127,68,0.801,129,0.908,131,1.124,135,1.35,136,1.35,138,1.431,139,1.3,149,1.525,151,0.627,163,0.604,164,0.883,168,1.378,170,1.756,201,0.664,227,0.883,228,0.845,255,1.873,259,3.123,261,1.124,265,1.436,279,1.608,300,1.68,509,1.902,517,1.575,531,3.23,533,2.948,537,1.354,569,2.759,591,1.745,595,1.436,596,1.626,638,3.544,662,4.171,819,2.755,825,1.755,831,3.061,836,1.626,893,1.626,936,2.907,937,1.745,980,3.544,985,3.834,989,3.303,993,2.067,999,3.834,1019,3.485,1020,4.034,1021,4.034,1022,4.034,1023,4.034,1024,3.485,1025,4.034,1026,4.034,1027,4.034,1028,4.683,1029,3.485,1030,3.485,1031,3.485,1032,5.42,1033,4.683,1034,3.485,1035,3.485,1036,3.485,1037,4.683,1038,2.669,1039,4.863,1040,4.863,1041,2.669,1042,4.034,1043,4.034,1044,2.669,1045,2.669,1046,3.485,1047,2.669,1048,3.485,1049,2.669,1050,3.485,1051,2.669,1052,2.669,1053,3.485,1054,5.028,1055,4.201,1056,4.034,1057,4.034,1058,4.034,1059,2.669,1060,3.485,1061,2.669,1062,3.485,1063,2.669,1064,3.485,1065,2.669,1066,2.669,1067,2.306,1068,2.669,1069,2.306,1070,2.669,1071,2.306,1072,2.669,1073,2.669,1074,2.669,1075,2.669,1076,2.669,1077,2.669,1078,2.669,1079,2.669,1080,2.669,1081,2.669,1082,2.669,1083,4.863,1084,2.306,1085,2.669,1086,2.669,1087,2.669,1088,2.669,1089,2.669,1090,2.669,1091,1.888,1092,2.669,1093,2.669,1094,2.669,1095,2.669,1096,2.669,1097,2.669,1098,2.669,1099,2.669,1100,2.669]],["title/injectables/GameStateStoreService.html",[163,0.576,980,2.516]],["body/injectables/GameStateStoreService.html",[3,0.078,4,0.071,5,0.071,7,0.123,8,0.243,11,0.24,12,0.017,13,0.078,14,0.005,15,0.005,28,0.712,39,0.729,41,0.673,45,0.564,46,0.794,47,0.981,55,0.304,58,0.319,66,0.071,67,1.592,68,0.864,75,0.904,128,0.613,129,0.866,131,0.91,135,1.233,136,1.203,138,1.283,139,1.203,151,0.347,163,0.375,164,0.489,168,1.549,170,1.179,201,1.071,219,1.034,227,0.489,228,0.468,236,1.64,255,1.813,259,1.145,261,1.071,265,1.349,279,1.08,300,1.724,307,0.559,327,1.774,375,0.559,384,1.128,456,2.166,509,2.107,517,1.645,520,1.208,528,1.389,531,2.536,533,3.045,536,1.974,539,5.15,540,2.198,563,1.528,569,2.619,575,2.78,591,0.967,595,1.757,662,3.96,683,2.166,695,2.166,710,1.64,718,1.942,746,1.942,772,2.515,819,1.275,820,1.528,821,1.528,824,1.853,825,3.312,831,2.403,836,0.901,868,0.967,869,0.795,870,0.795,871,0.795,879,2.344,882,1.942,893,1.528,903,2.979,936,2.282,937,0.967,978,3.991,980,3.432,984,1.046,1001,2.166,1011,1.277,1019,2.166,1024,2.166,1028,4.043,1029,2.166,1030,2.166,1031,2.166,1033,4.043,1034,2.166,1035,2.166,1036,3.324,1037,4.043,1046,2.166,1048,2.166,1050,2.166,1054,5.161,1055,3.324,1060,2.166,1062,2.166,1064,2.166,1067,1.277,1069,1.277,1071,1.277,1084,1.277,1091,2.721,1101,1.277,1102,2.508,1103,2.508,1104,2.508,1105,2.508,1106,2.166,1107,2.508,1108,2.508,1109,2.166,1110,5.249,1111,2.508,1112,2.508,1113,3.847,1114,2.508,1115,2.508,1116,2.508,1117,2.508,1118,3.847,1119,4.68,1120,2.508,1121,2.508,1122,2.508,1123,4.067,1124,2.508,1125,6.104,1126,2.508,1127,2.166,1128,3.047,1129,2.166,1130,2.508,1131,4.535,1132,3.847,1133,2.508,1134,2.508,1135,2.508,1136,2.508,1137,3.847,1138,2.515,1139,3.324,1140,3.06,1141,2.508,1142,2.508,1143,2.508,1144,2.508,1145,2.821,1146,3.847,1147,2.508,1148,3.847,1149,2.515,1150,2.508,1151,2.508,1152,2.166,1153,3.266,1154,3.266,1155,3.266,1156,2.508,1157,2.508,1158,3.266,1159,3.266,1160,3.266,1161,2.508,1162,2.508,1163,1.478,1164,1.478,1165,2.508,1166,1.478,1167,0.795,1168,1.478,1169,1.478,1170,1.478,1171,1.478,1172,5.828,1173,1.478,1174,2.508,1175,2.508,1176,3.847,1177,1.478,1178,1.478,1179,1.478,1180,2.508,1181,1.478,1182,1.478,1183,1.478,1184,1.478,1185,4.307,1186,2.508,1187,2.508,1188,1.478,1189,2.508,1190,1.478,1191,1.478,1192,1.478,1193,1.478,1194,1.478,1195,1.478,1196,1.478,1197,1.478,1198,1.478,1199,1.478,1200,1.478,1201,1.478,1202,1.478,1203,1.478,1204,2.508,1205,5.47,1206,1.478,1207,1.478,1208,2.508,1209,1.478,1210,2.508,1211,2.508,1212,2.508,1213,2.508,1214,1.478,1215,2.508,1216,2.508,1217,1.478,1218,1.478,1219,1.478,1220,1.478,1221,2.508,1222,1.478,1223,1.478,1224,1.478,1225,1.478,1226,1.478,1227,1.478,1228,1.478,1229,1.277,1230,1.478,1231,1.478,1232,1.478,1233,1.478,1234,3.266,1235,1.478,1236,1.478,1237,1.478,1238,1.478,1239,1.478,1240,1.478,1241,1.478,1242,1.478,1243,1.478]],["title/interfaces/Piece.html",[0,0.327,104,1.454]],["body/interfaces/Piece.html",[0,0.412,2,1.601,3,0.256,4,0.231,5,0.231,7,0.138,8,0.591,10,1.238,11,0.267,12,0.017,13,0.353,14,0.013,15,0.013,40,3.654,41,0.884,55,0.28,67,2.323,68,0.797,104,2.652,370,2.461,528,2.741,940,4.183,941,3.749,1167,2.604,1244,3.425,1245,3.166,1246,4.842]],["title/classes/Pile.html",[66,0.184,300,1.329]],["body/classes/Pile.html",[0,0.191,3,0.119,4,0.107,5,0.107,7,0.064,8,0.342,10,0.686,11,0.252,12,0.017,13,0.23,14,0.007,15,0.007,39,1.027,40,2.384,41,0.571,45,0.506,46,0.729,47,1.008,55,0.253,66,0.169,67,1.878,68,0.984,71,2.5,91,1.336,92,2.053,103,1.325,104,2.62,129,0.796,131,0.626,135,1.022,136,1.022,138,1.314,139,1.031,151,0.528,154,1.37,168,1.52,187,3.038,201,0.37,219,1.568,254,2.981,261,1.591,274,1.083,276,2.486,286,1.21,300,2.596,307,0.85,370,1.797,384,0.777,403,3.772,504,2.339,507,2.751,508,2.154,509,1.66,510,1.901,512,2.154,513,2.661,517,1.564,520,2.751,521,2.592,522,1.591,523,1.591,524,1.591,528,2.399,530,1.143,533,1.083,534,1.591,536,1.398,537,0.626,540,2.495,563,1.37,595,2.663,710,2.311,763,3.502,764,3.502,769,3.089,771,4.041,772,3.908,773,3.089,775,5.315,783,1.741,817,1.741,818,1.47,819,1.143,820,1.37,821,1.37,822,1.47,823,1.47,824,1.083,825,0.979,835,1.47,859,2.311,879,3.017,936,2.461,978,2.311,1123,3.237,1128,2.5,1138,3.519,1140,2.311,1149,2.311,1167,1.901,1245,4.534,1247,1.591,1248,3.833,1249,3.382,1250,3.833,1251,3.535,1252,3.089,1253,2.737,1254,2.737,1255,2.737,1256,2.737,1257,2.311,1258,2.5,1259,2.737,1260,2.249,1261,2.249,1262,2.249,1263,2.249,1264,2.249,1265,2.737,1266,3.502,1267,3.502,1268,2.737,1269,2.737,1270,2.737,1271,2.249,1272,2.737,1273,2.249,1274,2.737,1275,1.47,1276,1.591,1277,1.741,1278,1.741,1279,1.741,1280,1.741,1281,1.741,1282,1.741,1283,2.5,1284,1.741,1285,1.741,1286,1.741,1287,1.741,1288,1.741,1289,1.741,1290,1.741,1291,1.741,1292,1.741,1293,2.737,1294,2.737,1295,1.741,1296,1.741,1297,1.741,1298,1.741,1299,1.741,1300,1.741,1301,2.737,1302,2.737,1303,1.741,1304,2.737,1305,2.737,1306,1.741,1307,1.741,1308,2.737,1309,1.741,1310,2.737,1311,2.737,1312,2.737,1313,1.741,1314,1.741]],["title/classes/PileAdapter.html",[66,0.184,286,2.069]],["body/classes/PileAdapter.html",[0,0.244,3,0.152,4,0.137,5,0.137,7,0.082,10,0.669,11,0.193,12,0.017,13,0.268,14,0.009,15,0.009,39,1.238,40,2.052,41,0.586,45,0.646,46,0.879,47,0.896,55,0.294,66,0.203,67,1.908,68,1.072,71,3.014,91,1.085,92,1.767,103,1.292,104,2.582,129,0.959,131,0.8,135,1.048,136,1.048,138,1.16,139,0.969,151,0.674,154,1.749,168,1.265,187,2.978,201,0.473,219,1.349,254,3.221,261,1.752,274,1.383,276,1.854,286,2.292,300,2.569,307,1.085,370,2.165,403,4.076,504,1.61,509,0.834,517,1.476,520,2.892,528,2.168,536,1.685,537,0.8,540,1.64,563,1.749,710,1.877,763,3.593,764,3.593,769,3.593,771,3.976,772,4.113,773,3.593,775,5.228,783,3.299,835,1.877,859,1.877,879,3.425,936,2.323,978,1.877,1123,2.786,1128,2.031,1138,2.786,1140,1.877,1149,1.877,1167,1.544,1245,4.258,1247,2.031,1248,3.299,1249,2.223,1250,2.223,1252,2.031,1253,2.223,1254,2.223,1255,2.223,1256,2.223,1257,1.877,1258,2.031,1259,2.223,1265,2.223,1266,3.014,1267,3.014,1268,2.223,1269,2.223,1270,2.223,1272,2.223,1274,2.223,1275,1.877,1276,2.031,1277,2.223,1278,2.223,1279,2.223,1280,2.223,1281,2.223,1282,2.223,1283,3.014,1284,2.223,1285,2.223,1286,2.223,1287,2.223,1288,2.223,1289,2.223,1290,2.223,1291,2.223,1292,2.223,1293,3.299,1294,3.299,1295,2.223,1296,2.223,1297,2.223,1298,2.223,1299,2.223,1300,2.223,1301,3.299,1302,3.299,1303,2.223,1304,3.299,1305,3.299,1306,2.223,1307,2.223,1308,3.299,1309,2.223,1310,3.299,1311,3.299,1312,3.299,1313,2.223,1314,2.223,1315,2.871,1316,2.871,1317,2.871,1318,2.871,1319,2.871,1320,2.871]],["title/interfaces/PileConfig.html",[0,0.327,1321,2.979]],["body/interfaces/PileConfig.html",[0,0.411,2,1.598,3,0.255,4,0.231,5,0.231,7,0.138,8,0.59,10,1.16,11,0.231,12,0.017,13,0.322,14,0.013,15,0.013,38,3.713,55,0.353,201,0.795,261,1.346,281,4.147,375,1.825,446,3.159,666,2.944,738,4.174,739,3.741,740,3.741,744,3.741,748,3.741,751,3.741,754,3.741,757,3.741,785,3.741,1321,4.72,1322,3.741,1323,3.741,1324,4.832,1325,4.174,1326,4.174,1327,4.174,1328,4.174,1329,4.174,1330,4.174,1331,4.174,1332,4.174,1333,4.174,1334,4.174,1335,4.174,1336,4.174]],["title/injectables/PileRegistryService.html",[163,0.576,434,2.344]],["body/injectables/PileRegistryService.html",[3,0.225,4,0.204,5,0.204,7,0.122,8,0.545,9,1.14,10,0.884,11,0.271,12,0.017,13,0.225,14,0.012,15,0.012,41,0.727,45,1.506,46,1.381,47,1.038,55,0.388,58,0.92,66,0.204,75,1.003,103,1.707,128,1.77,129,1.267,131,1.189,135,1.299,136,1.299,138,1.161,139,0.736,163,0.842,164,1.412,168,1.608,201,1.037,216,2.17,227,1.412,228,1.352,300,1.944,375,2.126,384,2.175,434,3.43,450,3.43,517,1.241,521,3.441,537,1.189,569,2.126,570,2.601,571,4.273,572,3.027,573,3.981,574,3.6,575,2.861,578,3.688,580,3.02,581,3.305,582,3.387,583,2.791,584,3.688,585,3.305,586,3.02,587,3.305,588,3.305,589,3.02,590,3.305,592,2.056,593,2.601,936,1.952,937,2.791,1337,4.269,1338,4.735,1339,5.628,1340,4.269]],["title/interfaces/PileState.html",[0,0.327,936,1.76]],["body/interfaces/PileState.html",[0,0.254,2,0.987,3,0.157,4,0.142,5,0.142,7,0.085,8,0.424,10,0.899,11,0.166,12,0.017,13,0.274,14,0.009,15,0.009,40,2.938,46,0.616,47,0.425,55,0.301,66,0.209,67,2.051,68,1.085,71,3.101,91,1.127,92,1.818,103,1.576,104,2.608,138,0.905,139,0.896,151,0.701,154,1.818,168,1.289,187,2.79,201,0.491,219,1.388,254,3.257,261,1.777,276,1.907,286,1.605,300,2.552,307,1.127,370,2.228,403,3.49,504,1.656,509,0.867,517,1.51,520,2.502,528,2.203,536,2.056,537,0.831,540,1.704,563,1.818,595,1.605,710,1.951,763,2.111,764,2.111,769,3.101,771,3.675,772,3.989,773,3.101,775,5.26,835,1.951,859,1.951,879,3.49,936,2.79,978,1.951,1123,2.866,1128,2.111,1138,2.866,1140,1.951,1149,1.951,1167,1.605,1245,4.311,1247,2.111,1248,3.394,1249,2.31,1250,2.31,1252,2.111,1253,2.31,1254,2.31,1255,2.31,1256,2.31,1257,1.951,1258,2.111,1259,2.31,1265,2.31,1266,3.101,1267,3.101,1268,2.31,1269,2.31,1270,2.31,1272,2.31,1274,2.31,1275,1.951,1276,2.111,1277,3.394,1278,3.394,1279,3.394,1280,3.394,1281,3.394,1282,3.394,1283,4.315,1284,4.023,1285,2.31,1286,2.31,1287,2.31,1288,2.31,1289,2.31,1290,2.31,1291,2.31,1292,2.31,1293,3.394,1294,3.394,1295,2.31,1296,2.31,1297,2.31,1298,2.31,1299,2.31,1300,2.31,1301,3.394,1302,3.394,1303,2.31,1304,3.394,1305,3.394,1306,2.31,1307,2.31,1308,3.394,1309,2.31,1310,3.394,1311,3.394,1312,3.394,1313,2.31,1314,2.31]],["title/injectables/PileStateService.html",[163,0.576,1338,2.721]],["body/injectables/PileStateService.html",[3,0.213,4,0.193,5,0.193,7,0.115,8,0.525,9,1.077,10,0.851,11,0.267,12,0.017,13,0.213,14,0.011,15,0.011,39,1.575,41,0.755,45,1.22,46,1.118,47,1.04,55,0.354,58,0.87,66,0.193,68,0.664,75,0.948,103,1.644,129,1.22,135,1.35,136,1.35,138,1.409,139,1.129,163,0.811,164,1.334,168,1.643,176,3.111,201,0.892,227,1.334,228,1.277,300,2.359,375,2.048,384,1.873,450,3.303,507,3.459,509,1.172,521,3.459,537,1.124,569,2.048,572,2.915,574,2.915,575,2.755,582,3.293,592,1.943,596,2.458,597,4.27,598,3.834,599,3.834,600,3.834,601,4.33,603,3.124,604,3.834,605,3.124,606,2.854,607,3.124,608,3.124,609,2.854,610,3.124,611,2.854,612,3.124,613,3.124,614,2.854,615,3.124,936,2.993,937,2.638,1338,3.834,1341,5.42,1342,4.034,1343,4.034,1344,4.034]],["title/classes/Player.html",[66,0.184,1345,2.516]],["body/classes/Player.html",[0,0.396,3,0.246,4,0.222,5,0.222,7,0.133,8,0.577,9,1.243,10,1.031,11,0.263,12,0.016,13,0.314,14,0.012,15,0.012,39,1.731,41,0.825,47,1.042,51,3.045,55,0.27,66,0.222,68,0.767,103,1.807,129,1.34,135,0.961,136,0.961,138,1.229,139,1.027,219,1.475,274,2.243,307,1.76,384,1.609,504,2.845,507,3.523,508,3.629,509,2.011,510,3.203,512,3.629,513,4.001,517,1.354,520,3.162,521,3.444,522,3.294,523,3.294,524,3.294,530,2.367,533,2.243,534,3.294,537,1.297,817,3.606,818,3.045,819,2.367,820,2.838,821,2.838,822,3.045,823,3.045,824,2.243,825,2.027,832,3.294,1345,3.894,1346,3.606,1347,4.658,1348,3.294]],["title/injectables/PlayerService.html",[163,0.576,641,2.516]],["body/injectables/PlayerService.html",[3,0.225,4,0.203,5,0.203,7,0.122,8,0.544,9,2.044,11,0.213,12,0.017,13,0.225,14,0.012,15,0.012,41,0.884,45,1.265,46,1.16,47,0.801,55,0.325,58,0.918,66,0.203,163,0.841,164,1.409,201,1.261,227,1.409,228,1.349,261,1.566,276,3.107,641,3.675,1345,5.117,1349,3.681,1350,6.291,1351,6.291,1352,5.621,1353,4.261,1354,5.621,1355,6.617,1356,5.621,1357,5.621,1358,5.621,1359,5.621,1360,5.621,1361,5.621,1362,5.621,1363,5.621,1364,5.621,1365,5.621,1366,5.621,1367,4.261,1368,4.261]],["title/interfaces/PlayerState.html",[0,0.327,1348,2.721]],["body/interfaces/PlayerState.html",[0,0.464,2,1.804,3,0.288,4,0.26,5,0.26,7,0.156,8,0.636,9,1.953,10,1.208,11,0.249,12,0.017,13,0.347,14,0.014,15,0.014,41,0.864,55,0.316,66,0.26,68,0.898,103,1.654,307,2.061,504,2.482,537,1.519,832,3.858,1345,3.566,1346,4.223,1348,4.647]],["title/classes/Space.html",[66,0.184,111,1.522]],["body/classes/Space.html",[0,0.289,1,2.17,3,0.179,4,0.162,5,0.162,7,0.097,8,0.466,10,1.047,11,0.266,12,0.017,13,0.254,14,0.01,15,0.01,39,1.398,41,0.645,45,1.083,46,0.993,47,1.051,55,0.352,66,0.162,67,2.079,68,1.001,104,2.901,111,2.405,129,1.083,131,0.945,135,1.153,136,1.153,138,1.153,139,0.964,151,0.797,168,1.603,201,1.001,255,1.93,261,0.945,265,1.825,274,1.634,276,2.431,506,4.061,509,1.937,510,3.005,512,2.931,517,1.624,528,2.529,530,2.445,533,1.634,553,2.931,558,2.4,559,2.068,731,4.326,824,1.634,866,2.932,868,3.145,869,1.825,870,1.825,871,1.825,873,2.4,875,2.4,876,2.4,1275,2.219,1369,2.627,1370,4.827,1371,4.827,1372,4.81,1373,5.252,1374,4.156,1375,4.81,1376,3.394,1377,3.394,1378,3.394,1379,4.707,1380,3.394,1381,4.156,1382,3.394,1383,3.394,1384,3.394,1385,3.394,1386,3.394,1387,3.394,1388,3.394,1389,3.394,1390,2.932,1391,6.05,1392,2.932,1393,2.932,1394,4.156,1395,2.932,1396,2.932,1397,2.932]],["title/interfaces/SpaceState.html",[0,0.327,506,2.344]],["body/interfaces/SpaceState.html",[0,0.345,1,2.077,2,1.341,3,0.214,4,0.194,5,0.194,7,0.116,8,0.527,10,1.074,11,0.207,12,0.017,13,0.287,14,0.011,15,0.011,55,0.38,66,0.194,67,2.182,68,1.08,104,2.941,111,2.428,139,0.7,151,0.953,168,1.381,201,1.08,255,2.121,261,1.13,265,2.182,276,1.765,506,4.168,509,1.581,510,2.182,517,1.581,528,2.64,530,2.062,553,3.315,558,2.869,559,2.472,731,4.753,824,1.954,868,3.557,869,2.182,870,2.182,871,2.182,873,2.869,875,2.869,876,2.869,1275,2.652,1369,3.141,1370,3.505,1371,3.505,1373,3.505,1374,3.505,1379,4.753,1381,3.505,1390,3.505,1391,6.316,1392,3.505,1393,3.505,1394,4.7,1395,3.505,1396,3.505,1397,3.505]],["title/interfaces/SpeciesPiece.html",[0,0.327,305,2.344]],["body/interfaces/SpeciesPiece.html",[0,0.481,2,1.868,3,0.298,4,0.27,5,0.27,7,0.161,8,0.65,11,0.215,12,0.016,13,0.298,14,0.014,15,0.014,40,3.565,55,0.388,103,2.035,104,2.704,105,5.732,106,3.228,107,4.375,305,4.088,1398,4.882]],["title/coverage.html",[1399,4.535]],["body/coverage.html",[0,0.623,1,1.69,5,0.124,6,2.238,11,0.098,12,0.017,14,0.008,15,0.008,16,2.015,17,1.185,22,3.5,23,1.694,24,2.238,30,1.899,43,1.127,61,1.578,63,1.247,66,0.317,75,0.926,80,1.185,82,1.185,84,1.899,86,1.185,87,0.979,88,1.185,90,1.185,91,0.979,92,1.635,94,1.185,96,1.185,97,1.185,101,2.238,102,2.238,104,0.979,108,2.238,109,2.006,110,3.054,111,1.025,118,2.789,119,2.006,120,3.054,133,1.832,141,1.074,143,1.832,152,2.006,163,1.095,165,2.238,166,2.238,170,0.936,183,1.48,184,1.694,201,0.426,215,2.253,224,1.578,226,1.578,254,3.822,275,3.378,278,1.694,279,0.857,283,1.578,286,1.393,300,0.895,302,1.393,305,1.578,346,2.238,347,2.006,358,1.832,370,1.317,379,2.006,423,2.238,424,2.238,433,1.48,434,1.578,446,1.694,448,1.694,449,2.728,450,2.403,451,2.006,492,2.238,501,2.006,503,3.054,504,0.979,506,1.578,509,1.551,531,1.317,536,1.025,569,2.698,570,3.5,571,1.48,577,1.832,596,3.5,597,1.48,619,2.238,620,2.238,636,1.832,638,1.694,641,1.694,662,3.049,670,2.006,686,1.694,721,2.238,732,3.054,733,3.054,760,2.238,761,2.238,798,2.238,800,2.238,804,3.054,825,1.127,831,1.247,837,1.694,857,3.5,858,3.054,883,3.054,927,2.238,936,1.185,943,2.006,976,3.054,980,1.694,984,1.832,985,1.832,986,2.238,989,1.578,996,2.238,999,1.832,1000,2.238,1101,2.238,1167,3.644,1244,2.789,1247,3.378,1321,2.006,1322,3.054,1323,3.054,1338,1.832,1345,1.694,1346,3.054,1348,1.832,1349,2.238,1369,3.054,1398,2.238,1399,2.238,1400,2.238,1401,2.59,1402,2.59,1403,6.775,1404,2.238,1405,6.291,1406,2.238,1407,7.068,1408,2.59,1409,2.59,1410,2.59,1411,2.59,1412,2.59,1413,5.338,1414,2.59,1415,2.59,1416,6.291,1417,2.59,1418,2.59,1419,2.59,1420,2.59,1421,3.944,1422,3.944,1423,2.59,1424,2.59,1425,2.59,1426,6.051,1427,2.59,1428,4.775,1429,5.338,1430,3.944,1431,2.59,1432,2.59,1433,4.612,1434,2.238,1435,5.744,1436,5.744,1437,4.962,1438,2.238,1439,2.238,1440,2.59,1441,2.59,1442,2.59,1443,1.832,1444,2.238,1445,2.238,1446,2.238,1447,2.238,1448,2.59,1449,2.59,1450,2.59]],["title/dependencies.html",[1451,2.488,1452,3.997]],["body/dependencies.html",[12,0.017,14,0.014,15,0.014,58,1.176,151,1.281,499,4.712,869,2.934,870,2.934,871,2.934,941,4.223,1452,4.712,1453,5.454,1454,7.759,1455,5.454,1456,6.569,1457,5.454,1458,5.454,1459,5.454,1460,5.454,1461,6.569,1462,6.569,1463,5.454,1464,5.454,1465,5.454,1466,5.454,1467,5.454,1468,5.454,1469,5.454,1470,5.454]],["title/miscellaneous/enumerations.html",[1471,1.729,1472,3.997]],["body/miscellaneous/enumerations.html",[7,0.119,12,0.017,14,0.012,15,0.012,38,2.673,46,1.66,75,1.56,221,3.629,222,3.17,281,2.985,371,3.926,664,3.926,666,3.382,785,4.297,1443,2.957,1471,2.248,1472,3.611,1473,3.611,1474,4.297,1475,3.611,1476,4.18,1477,4.18,1478,3.611,1479,4.795,1480,4.795,1481,4.795,1482,4.795,1483,4.795,1484,4.795,1485,4.18,1486,4.18,1487,4.18,1488,4.18,1489,4.18,1490,4.18,1491,4.18,1492,4.18,1493,4.18,1494,4.18,1495,4.18,1496,4.18,1497,4.18,1498,4.18,1499,4.18,1500,4.18,1501,5.55,1502,3.611,1503,4.795,1504,4.795,1505,4.795,1506,4.795,1507,4.795,1508,4.795,1509,4.18,1510,4.18,1511,4.18,1512,4.18,1513,4.18,1514,4.18,1515,4.18,1516,4.18,1517,4.18,1518,4.18,1519,4.18,1520,4.18,1521,4.18,1522,4.18,1523,4.18,1524,4.18,1525,4.18,1526,4.18,1527,4.18,1528,4.18,1529,4.18,1530,4.18,1531,4.18,1532,4.18,1533,4.18,1534,4.18]],["title/miscellaneous/functions.html",[1471,1.729,1535,3.997]],["body/miscellaneous/functions.html",[7,0.107,10,0.997,11,0.224,12,0.016,14,0.011,15,0.011,40,2.485,41,0.866,44,3.172,45,1.161,46,1.591,47,0.904,63,2.485,67,1.565,104,1.418,135,1.521,136,1.536,138,1.536,152,3.995,224,3.144,226,3.144,255,1.296,370,2.622,375,2.399,379,3.995,384,2.377,451,3.995,520,3.313,528,1.355,529,3.242,595,2.775,718,2.905,1053,5.095,1123,4.609,1129,3.242,1138,2.453,1139,3.242,1140,4.153,1145,3.242,1152,3.242,1167,2.018,1229,3.242,1244,2.654,1266,2.654,1267,2.654,1276,2.654,1433,3.242,1434,4.458,1437,3.242,1438,4.458,1439,4.458,1471,2.018,1535,3.242,1536,6.351,1537,3.242,1538,6.659,1539,3.752,1540,5.16,1541,3.752,1542,3.752,1543,3.752,1544,3.752,1545,3.752,1546,3.752,1547,3.752,1548,3.752,1549,3.752,1550,5.897,1551,3.752,1552,5.16,1553,3.752,1554,3.752,1555,3.752,1556,3.752,1557,4.458,1558,5.16,1559,3.752,1560,3.752,1561,3.752,1562,3.752,1563,3.752,1564,3.752,1565,3.752,1566,3.752,1567,3.242,1568,3.752,1569,3.242,1570,3.752,1571,5.897,1572,3.752,1573,5.16,1574,3.752,1575,3.752,1576,3.752,1577,3.752,1578,3.752,1579,3.752]],["title/index.html",[7,0.092,1091,2.273,1580,2.776]],["body/index.html",[4,0.231,12,0.013,14,0.013,15,0.013,16,2.028,41,0.559,121,3.749,150,2.766,201,0.797,381,4.183,458,4.183,719,6.383,1109,4.183,1131,5.274,1149,3.166,1257,4.371,1258,4.965,1355,4.183,1451,3.749,1581,4.842,1582,6.105,1583,4.842,1584,6.686,1585,6.686,1586,4.183,1587,4.842,1588,4.842,1589,6.105,1590,7.237,1591,7.502,1592,4.842,1593,4.842,1594,4.842,1595,4.842,1596,4.842,1597,4.842,1598,4.842,1599,4.183,1600,4.842,1601,4.842,1602,6.686,1603,4.842,1604,4.842,1605,4.842,1606,4.842,1607,4.842,1608,6.105,1609,6.105,1610,7.02,1611,6.105,1612,4.842,1613,4.842,1614,4.842,1615,4.842,1616,6.105,1617,4.842,1618,4.842,1619,4.842,1620,6.686,1621,4.842,1622,4.842,1623,4.183,1624,3.749,1625,4.842,1626,4.842]],["title/license.html",[1091,2.273,1580,2.776,1627,2.776]],["body/license.html",[1,1.564,12,0.013,14,0.013,15,0.013,528,1.784,1127,4.268,1252,3.494,1257,4.042,1379,3.825,1400,4.268,1557,4.268,1567,4.268,1569,4.268,1599,4.268,1623,4.268,1627,4.268,1628,4.94,1629,6.747,1630,4.94,1631,4.94,1632,4.94,1633,6.182,1634,4.94,1635,4.94,1636,4.94,1637,4.94,1638,4.94,1639,4.94,1640,6.182,1641,7.684,1642,4.94,1643,6.747,1644,4.94,1645,6.182,1646,4.94,1647,4.94,1648,4.94,1649,4.94,1650,4.94,1651,4.94,1652,4.94,1653,4.94,1654,4.94,1655,6.182,1656,4.94,1657,4.94,1658,4.94,1659,4.94,1660,4.94,1661,4.94,1662,6.182,1663,6.182,1664,4.94,1665,4.94,1666,4.94,1667,4.94,1668,4.94,1669,4.94,1670,4.94,1671,4.94,1672,4.94,1673,4.94,1674,4.94,1675,4.94,1676,4.94,1677,4.94,1678,4.94,1679,4.94,1680,4.94,1681,4.94,1682,4.94,1683,4.94,1684,4.94,1685,4.94,1686,4.94,1687,4.94,1688,4.94]],["title/modules.html",[1689,4.535]],["body/modules.html",[12,0.015,14,0.015,15,0.015,1689,5.379]],["title/overview.html",[1624,4.064]],["body/overview.html",[2,2.013,12,0.015,14,0.015,15,0.015,18,2.932,164,2.013,274,2.932,1624,4.714,1690,7.009,1691,7.009]],["title/properties.html",[8,0.448,1451,2.488]],["body/properties.html",[8,0.598,12,0.016,14,0.015,15,0.015,1586,5.334,1692,6.174]],["title/miscellaneous/typealiases.html",[1471,1.729,1693,4.627]],["body/miscellaneous/typealiases.html",[7,0.167,11,0.222,12,0.014,14,0.014,15,0.014,105,5.3,221,3.822,664,4.135,666,3.562,713,4.842,734,5.3,1167,3.144,1244,4.135,1245,4.476,1443,4.135,1471,3.144,1473,5.05,1474,4.526,1475,5.05,1478,5.05,1502,5.05,1537,5.05,1694,5.846]],["title/miscellaneous/variables.html",[1471,1.729,1695,3.997]],["body/miscellaneous/variables.html",[7,0.081,9,1.132,11,0.247,12,0.017,14,0.009,15,0.009,32,1.304,38,3.022,40,1.374,45,1.462,46,1.341,61,2.584,67,2.025,98,1.374,104,2.455,111,1.128,128,2.098,170,1.531,201,0.922,243,4.372,248,3.664,261,0.794,279,1.402,281,3.375,300,1.465,321,1.865,375,2.117,426,2.464,446,2.772,448,2.772,497,6.283,528,2.603,537,0.794,540,1.629,732,2.209,733,3.283,734,4.859,735,5.421,739,4.338,740,3.918,741,3.663,742,2.464,743,3.663,744,3.918,745,3.663,746,4.859,747,3.663,748,3.918,749,3.663,750,3.663,751,3.918,752,3.663,753,3.663,754,3.918,755,3.663,756,3.663,757,3.918,758,3.663,759,3.663,825,2.202,857,1.738,943,3.283,976,3.283,977,2.464,984,2.999,1106,2.464,1283,2.018,1322,2.209,1323,3.283,1325,2.464,1326,2.464,1327,2.464,1328,2.464,1329,2.464,1330,2.464,1331,2.464,1332,2.464,1333,2.464,1334,2.464,1335,2.464,1336,2.464,1404,2.464,1406,3.663,1443,2.018,1444,3.663,1445,2.464,1446,3.663,1447,2.464,1471,1.534,1474,2.209,1479,2.464,1480,2.464,1481,2.464,1482,2.464,1483,2.464,1484,2.464,1503,3.663,1504,3.663,1505,2.464,1506,3.663,1507,3.663,1508,4.372,1695,2.464,1696,2.852,1697,4.24,1698,2.852,1699,2.852,1700,2.852,1701,2.852,1702,2.852,1703,2.852,1704,2.852,1705,2.852,1706,2.852,1707,2.852,1708,2.852,1709,2.852,1710,2.852,1711,2.852,1712,2.852,1713,2.852,1714,6.498,1715,2.852,1716,2.852,1717,2.852,1718,6.276,1719,2.852,1720,2.852,1721,2.852,1722,2.852,1723,2.852,1724,2.852,1725,2.852,1726,2.852,1727,6.276,1728,2.852,1729,2.852,1730,2.852,1731,2.852,1732,2.852,1733,2.852,1734,2.852,1735,2.852,1736,2.852,1737,2.852,1738,2.852,1739,2.852,1740,4.24,1741,2.852,1742,2.852,1743,2.852,1744,2.852]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":254,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1692,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1413,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":772,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["1/1",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["1235535.svg",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["151117.svg",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1691,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["18.2.5",{"_index":1587,"title":{},"body":{"index.html":{}}}],["18.2.7",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":746,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1631,"title":{},"body":{"license.html":{}}}],["2037742.svg",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["2997582.svg",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":742,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["3/19",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["3386143.svg",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["367390.svg",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.17.21",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["4412103.svg",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5/14",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["6606521.svg",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6850047.svg",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["7049525.svg",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7144060.svg",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7195612.svg",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7290921.svg",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7300296.svg",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":1690,"title":{},"body":{"overview.html":{}}}],["_action",{"_index":1370,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_drawpool",{"_index":762,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":1153,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":1371,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_setgamestate",{"_index":1156,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":1162,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":508,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["_transactionstate",{"_index":1154,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["above",{"_index":1661,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":895,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":1105,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":39,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"license.html":{}}}],["action.model",{"_index":1390,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["action_display_abundance",{"_index":1485,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":1487,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn",{"_index":1501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":1511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":1513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":1515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":1517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":1519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":1521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayabundance",{"_index":1486,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":1488,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawn",{"_index":38,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actionpawnamphibian",{"_index":1512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":1514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":1516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawncomponent",{"_index":17,"title":{"components/ActionPawnComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["actionpawnforheader",{"_index":351,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawninsect",{"_index":1518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnmammal",{"_index":1520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnpiece",{"_index":43,"title":{"interfaces/ActionPawnPiece.html":{}},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["actionpawnpile",{"_index":277,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["actionpawnpileid",{"_index":474,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["actionpawnpilelength",{"_index":352,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnreptile",{"_index":1522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawns",{"_index":127,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["actionpawns.push(defaultpiecefactory(piecekindenum.action_pawn",{"_index":717,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["actionpawnspacecomponent",{"_index":80,"title":{"components/ActionPawnSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["actionpawnspaces",{"_index":167,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnssubject",{"_index":169,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actions",{"_index":1143,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["acts",{"_index":1253,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["actual_component",{"_index":100,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["adaption",{"_index":83,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["adaptionactiondisplaycardcomponent",{"_index":82,"title":{"components/AdaptionActionDisplayCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["adaptionactiondisplayservice",{"_index":133,"title":{"injectables/AdaptionActionDisplayService.html":{}},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["adaptionarea",{"_index":625,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["add",{"_index":458,"title":{},"body":{"injectables/AnimalProviderService.html":{},"index.html":{}}}],["addactionpawn",{"_index":175,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["addactionpawn(index",{"_index":186,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["added",{"_index":327,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameStateStoreService.html":{}}}],["addedelements",{"_index":332,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addedelementspaces",{"_index":310,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addelement",{"_index":411,"title":{},"body":{"classes/AnimalElements.html":{}}}],["addelement(element",{"_index":316,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addpiece",{"_index":1372,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":1381,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["aliases",{"_index":1694,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allelements",{"_index":329,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["already",{"_index":824,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["always",{"_index":1297,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["amount",{"_index":812,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["amphibian",{"_index":1479,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["amphibian_element",{"_index":1489,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":1490,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["and/or",{"_index":1653,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1584,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":660,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["angular/material/card",{"_index":142,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["angular/material/grid",{"_index":373,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/tooltip",{"_index":661,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["angular/platform",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["animal",{"_index":87,"title":{"classes/Animal.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["animal(animalconfig",{"_index":470,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animal.actionpawn.length$.subscribe((length",{"_index":401,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.constant",{"_index":738,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{}}}],["animal.elements.elements$.subscribe((elements",{"_index":397,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.id",{"_index":390,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.species.length$.subscribe((length",{"_index":404,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalbyid",{"_index":425,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalcardcomponent",{"_index":86,"title":{"components/AnimalCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["animalconfig",{"_index":283,"title":{"interfaces/AnimalConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["animalelements",{"_index":278,"title":{"classes/AnimalElements.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["animalelements(config.elementarea",{"_index":342,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["animalenum",{"_index":666,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":740,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":744,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":748,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":751,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":754,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":757,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalfactory",{"_index":429,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalfactory(animalconfig",{"_index":437,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalkind",{"_index":105,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/typealiases.html":{}}}],["animalproviderservice",{"_index":358,"title":{"injectables/AnimalProviderService.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["animals",{"_index":426,"title":{},"body":{"injectables/AnimalProviderService.html":{},"miscellaneous/variables.html":{}}}],["animals.find((animal",{"_index":393,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animals.some((animal",{"_index":389,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalssubject",{"_index":427,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["app",{"_index":29,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["app.component.html",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":88,"title":{"components/AppComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1406,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1596,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":1002,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":1004,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(gamestate",{"_index":1006,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":1027,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":1043,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":1012,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applypatch(gamestate",{"_index":1016,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":1480,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arachnid_element",{"_index":1491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":1492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":170,"title":{"classes/Area.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area(areastate.id",{"_index":961,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["area.constant",{"_index":737,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["area.model",{"_index":983,"title":{},"body":{"interfaces/GameState.html":{}}}],["areaid",{"_index":734,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":221,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":743,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":747,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":750,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":753,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":756,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":759,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaids",{"_index":481,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaids.has(elementareaid",{"_index":483,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["arearegistryservice",{"_index":183,"title":{"injectables/AreaRegistryService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":436,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["areas",{"_index":955,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areas.push(new",{"_index":960,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areaservice",{"_index":1115,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["areastate",{"_index":531,"title":{"interfaces/AreaState.html":{}},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["areastate.space.foreach((spacestate",{"_index":957,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areastateservice",{"_index":577,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":579,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["arising",{"_index":1686,"title":{},"body":{"license.html":{}}}],["array",{"_index":1269,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["array(6",{"_index":399,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["artifacts",{"_index":1604,"title":{},"body":{"index.html":{}}}],["assignedanimal",{"_index":967,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["associated",{"_index":1569,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["assume",{"_index":1309,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["authors",{"_index":1676,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1597,"title":{},"body":{"index.html":{}}}],["available",{"_index":266,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace",{"_index":317,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace.addpiece(element",{"_index":319,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespaces",{"_index":566,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces.length",{"_index":567,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces[0",{"_index":568,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["back",{"_index":822,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["bag",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1141,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["basegamestate",{"_index":943,"title":{},"body":{"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basegamestate.area.foreach((areastate",{"_index":956,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["before",{"_index":259,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":219,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Player.html":{}}}],["behaviorsubject(false",{"_index":212,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this._gamestate",{"_index":1200,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.actionpawns",{"_index":202,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.elements",{"_index":209,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.length",{"_index":1289,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["behaviorsubject(this.ready",{"_index":779,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["behaviorsubject(this.spaces",{"_index":547,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["behaviorsubject(this.state",{"_index":874,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["behaviorsubject>(new",{"_index":586,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bird",{"_index":1481,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bird_element",{"_index":1493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":1494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":1544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browser",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1258,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"index.html":{}}}],["buildanimal",{"_index":430,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimal(faction",{"_index":439,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimals",{"_index":431,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["building",{"_index":455,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["c",{"_index":1630,"title":{},"body":{"license.html":{}}}],["call",{"_index":1056,"title":{},"body":{"injectables/GameStateService.html":{}}}],["called",{"_index":1147,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":1148,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["capabilities",{"_index":1618,"title":{},"body":{"index.html":{}}}],["card",{"_index":123,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card'},{'name",{"_index":85,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["card.component",{"_index":667,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["card.component.html",{"_index":125,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.scss",{"_index":126,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts",{"_index":120,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:20",{"_index":140,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:21",{"_index":134,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:25",{"_index":137,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts:26",{"_index":366,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:27",{"_index":367,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:28",{"_index":368,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:29",{"_index":365,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:30",{"_index":369,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:31",{"_index":359,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:35",{"_index":362,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:43",{"_index":361,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:66",{"_index":364,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card/adaption",{"_index":119,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["card/animal",{"_index":347,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["case",{"_index":1146,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["change",{"_index":381,"title":{},"body":{"components/AnimalCardComponent.html":{},"index.html":{}}}],["changedetection",{"_index":26,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["changedetectionstrategy",{"_index":56,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":27,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["charge",{"_index":1637,"title":{},"body":{"license.html":{}}}],["check",{"_index":1622,"title":{},"body":{"index.html":{}}}],["checked",{"_index":1554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["choice",{"_index":1615,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1679,"title":{},"body":{"license.html":{}}}],["class",{"_index":66,"title":{"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Player.html":{},"classes/Space.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["classes",{"_index":274,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Player.html":{},"classes/Space.html":{},"overview.html":{}}}],["cleared",{"_index":258,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["cli",{"_index":1585,"title":{},"body":{"index.html":{}}}],["client.service",{"_index":1075,"title":{},"body":{"injectables/GameStateService.html":{}}}],["client.service.ts",{"_index":986,"title":{},"body":{"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:13",{"_index":992,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:9",{"_index":990,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["code",{"_index":1600,"title":{},"body":{"index.html":{}}}],["combinelatestwith",{"_index":220,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{}}}],["combinelatestwith(this.arearegistryservice.registeredids",{"_index":232,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["combinelatestwith(this.pileregistryservice.registeredids",{"_index":480,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["command",{"_index":1616,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1084,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":1028,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":1013,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate",{"_index":1015,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":1299,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["component",{"_index":16,"title":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":78,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["components",{"_index":18,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1660,"title":{},"body":{"license.html":{}}}],["config",{"_index":285,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["config.constant",{"_index":304,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["config.constant.ts",{"_index":733,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.elementconfig",{"_index":343,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.faction",{"_index":336,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.ts",{"_index":1323,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":1687,"title":{},"body":{"license.html":{}}}],["console.log('create",{"_index":682,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log('end",{"_index":711,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log('start",{"_index":694,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log(json.stringify(gsp",{"_index":994,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":261,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/variables.html":{}}}],["constant/animal.constant",{"_index":107,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/SpeciesPiece.html":{}}}],["constant/area.constant",{"_index":223,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["constant/element",{"_index":303,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["constant/element.constant",{"_index":665,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementPiece.html":{}}}],["constant/image.constant",{"_index":62,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["constant/piece.constant",{"_index":372,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["constant/pile",{"_index":447,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constant/pile.constant",{"_index":786,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor",{"_index":131,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"classes/Space.html":{}}}],["constructor(adaptionactiondisplayservice",{"_index":132,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["constructor(animalproviderservice",{"_index":357,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constructor(arearegistryservice",{"_index":182,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["constructor(arearegistrysvc",{"_index":432,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["constructor(areastatesvc",{"_index":576,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(config",{"_index":282,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["constructor(elementarea",{"_index":412,"title":{},"body":{"classes/AnimalElements.html":{}}}],["constructor(factionstatesvc",{"_index":847,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(gameelementstatesvc",{"_index":884,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gamemanagementsvc",{"_index":635,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["constructor(gamestatestore",{"_index":1038,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":906,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["constructor(id",{"_index":514,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["constructor(kind",{"_index":1374,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["constructor(pile",{"_index":1315,"title":{},"body":{"classes/PileAdapter.html":{}}}],["constructor(pileregistrysvc",{"_index":765,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":1337,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":154,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["constructor(protected",{"_index":593,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(state",{"_index":859,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["contract",{"_index":1683,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1655,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1640,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1629,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":771,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["coverage",{"_index":1399,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":1005,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["create(oldstate",{"_index":1008,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["createarea",{"_index":928,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["createdrawpoolpile",{"_index":929,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["createfactions",{"_index":930,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["creategame",{"_index":631,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["creates",{"_index":1001,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["current",{"_index":563,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["currentcount",{"_index":1304,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["currentitemcount",{"_index":1310,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["currentplayer",{"_index":1350,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentplayerfaction",{"_index":626,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["custom",{"_index":1565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["damages",{"_index":1680,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":1014,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["deal",{"_index":1642,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1688,"title":{},"body":{"license.html":{}}}],["decreasescore",{"_index":805,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":810,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["deepclone",{"_index":868,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["deepclone(emptygamestate",{"_index":1189,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._gamestate",{"_index":1221,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":878,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["deepclone(this._transactionstate",{"_index":1222,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":1434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":1539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":45,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":370,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":1574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":1268,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["defined",{"_index":47,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["defining",{"_index":977,"title":{},"body":{"interfaces/GameState.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":1254,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["dependencies",{"_index":1452,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":595,"title":{},"body":{"interfaces/AreaState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":1231,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":1541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dev",{"_index":1593,"title":{},"body":{"index.html":{}}}],["development",{"_index":1588,"title":{},"body":{"index.html":{}}}],["directive",{"_index":76,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["directives",{"_index":99,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1603,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1607,"title":{},"body":{"index.html":{}}}],["display",{"_index":84,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["display.service",{"_index":148,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["display.service.ts",{"_index":166,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:103",{"_index":191,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:18",{"_index":204,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:19",{"_index":200,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:20",{"_index":197,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:21",{"_index":203,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:22",{"_index":199,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:23",{"_index":208,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:24",{"_index":205,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:25",{"_index":210,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:26",{"_index":207,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:27",{"_index":213,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:28",{"_index":185,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:37",{"_index":189,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:69",{"_index":196,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:73",{"_index":195,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:89",{"_index":193,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:93",{"_index":194,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:99",{"_index":188,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display/adaption",{"_index":118,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["display/space/action",{"_index":108,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"coverage.html":{}}}],["display/space/element",{"_index":670,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component",{"_index":669,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["display/space/eyeball/eyeball.component.ts",{"_index":800,"title":{},"body":{"components/EyeballComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component.ts:14",{"_index":803,"title":{},"body":{"components/EyeballComponent.html":{}}}],["dist",{"_index":1606,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1276,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["distribute",{"_index":1651,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1400,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":881,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["dom",{"_index":20,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["dominant",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["dominantspecies",{"_index":1581,"title":{},"body":{"index.html":{}}}],["done",{"_index":1142,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":91,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["drawpool",{"_index":627,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["drawpool.length$.subscribe((length",{"_index":675,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["drawpoolgamecomponent",{"_index":90,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["drawpoollength",{"_index":628,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["drew",{"_index":708,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["ds",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":1145,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":1463,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1613,"title":{},"body":{"index.html":{}}}],["each",{"_index":540,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["eagle",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":75,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element'},{'name",{"_index":95,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["element.component.html",{"_index":722,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.component.scss",{"_index":723,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.constant",{"_index":736,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["element.id",{"_index":902,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":324,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["element.model",{"_index":307,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{}}}],["element.model.ts",{"_index":858,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"coverage.html":{}}}],["element.model.ts:10",{"_index":862,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:11",{"_index":860,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:19",{"_index":865,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:23",{"_index":867,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:31",{"_index":864,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:39",{"_index":863,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:9",{"_index":861,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":921,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":924,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":215,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["element/element.component",{"_index":115,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["element/faction",{"_index":449,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["element/game",{"_index":883,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":450,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["elementarea",{"_index":308,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["elementareaid",{"_index":471,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["elementareaidsbyanimal",{"_index":1444,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbyid",{"_index":572,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementcomponent",{"_index":94,"title":{"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["elementconfig",{"_index":302,"title":{"interfaces/ElementConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["elementconfig.inherentcount",{"_index":314,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementconfigbyanimal",{"_index":448,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpoolservice",{"_index":184,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["elementdrawpoolsvc",{"_index":639,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementenum",{"_index":664,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":752,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":745,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":755,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":749,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":758,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":741,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":713,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"miscellaneous/typealiases.html":{}}}],["elementname",{"_index":697,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementname.charat(0).touppercase",{"_index":699,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementname.slice(1",{"_index":700,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementpiece",{"_index":141,"title":{"interfaces/ElementPiece.html":{}},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["elementpiece).filter(isnotnull",{"_index":334,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elements",{"_index":128,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.foreach((element",{"_index":897,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elements.foreach((faction",{"_index":844,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elements.push(defaultpiecefactory(elementkind",{"_index":715,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementspace",{"_index":321,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementSpaceComponent.html":{},"miscellaneous/variables.html":{}}}],["elementspace.removepiece",{"_index":325,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacecomponent",{"_index":96,"title":{"components/ElementSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["elementspaces",{"_index":171,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.length",{"_index":313,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.slice(elementconfig.inherentcount",{"_index":315,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementssubject",{"_index":172,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementstate",{"_index":601,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["emit",{"_index":1137,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitpilestate",{"_index":1250,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["emitstate",{"_index":513,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["emitted",{"_index":821,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["empty",{"_index":710,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["emptyelementspace",{"_index":409,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptyelementspaces",{"_index":353,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptygamestate",{"_index":984,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":719,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"index.html":{}}}],["endturn",{"_index":632,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["engine/model/area.model",{"_index":218,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/faction.model",{"_index":299,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/piece.model",{"_index":106,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"interfaces/SpeciesPiece.html":{}}}],["engine/model/pile.model",{"_index":301,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/model/space.model",{"_index":225,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["engine/service/game",{"_index":214,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/service/player.service",{"_index":668,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["engine/util/misc",{"_index":64,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["engine/util/predicate",{"_index":153,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensure",{"_index":1150,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ensuredefined",{"_index":224,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].addpiece(actionpawn",{"_index":272,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].removepiece",{"_index":273,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.area).nextavailablespace(spacekindenum.element",{"_index":263,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementarea",{"_index":330,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).nextavailablespace",{"_index":318,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).spaces",{"_index":311,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementconfig",{"_index":312,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementspaces",{"_index":268,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementspaces)[index].removepiece",{"_index":267,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(value",{"_index":1545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensures",{"_index":1229,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["entire",{"_index":1134,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":611,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":922,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":918,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enumerations",{"_index":1472,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":1542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":1053,"title":{},"body":{"injectables/GameStateService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":1227,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":880,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["error('can",{"_index":1218,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('element",{"_index":256,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["error('faction",{"_index":383,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["error('gamestate",{"_index":1225,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":1206,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":265,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('number",{"_index":562,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["error('pile",{"_index":794,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["error('space",{"_index":1393,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('state",{"_index":558,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('transaction",{"_index":1090,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":326,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["error(`element",{"_index":901,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":926,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":1215,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["errormessage",{"_index":1558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["event",{"_index":1675,"title":{},"body":{"license.html":{}}}],["eventcoalescing",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1611,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":882,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["express",{"_index":1667,"title":{},"body":{"license.html":{}}}],["extend",{"_index":538,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["extends",{"_index":103,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"interfaces/SpeciesPiece.html":{}}}],["eye",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeball",{"_index":98,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"miscellaneous/variables.html":{}}}],["eyeball.component.html",{"_index":801,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball.component.scss",{"_index":802,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball/eyeball.component",{"_index":117,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["eyeballcomponent",{"_index":97,"title":{"components/EyeballComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["faction",{"_index":279,"title":{"classes/Faction.html":{}},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction.id",{"_index":391,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.id).actionpawn",{"_index":476,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).areaid",{"_index":473,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).species",{"_index":478,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.model",{"_index":981,"title":{},"body":{"interfaces/GameState.html":{}}}],["faction.ownerid",{"_index":692,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction?.name",{"_index":408,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["factionassignment",{"_index":686,"title":{"interfaces/FactionAssignment.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.id",{"_index":463,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionassignments",{"_index":684,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionassignments.map((factionassignment",{"_index":462,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["factionassignments[0",{"_index":687,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionassignmentsubject",{"_index":838,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionids",{"_index":461,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess",{"_index":464,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess.foreach((factionid",{"_index":467,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionregistryservice",{"_index":433,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":640,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["factions",{"_index":629,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["factions.push",{"_index":969,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["factionstate",{"_index":831,"title":{"interfaces/FactionState.html":{}},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["factionstateservice",{"_index":837,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":841,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":1256,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["false",{"_index":777,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["false).newdocument",{"_index":1018,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["fast",{"_index":869,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["files",{"_index":1599,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":149,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateService.html":{}}}],["filter((animals",{"_index":388,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["filter((drawpool",{"_index":672,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((ids",{"_index":678,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((registeredids",{"_index":788,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["filter((space",{"_index":269,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["filter(isnotundefined",{"_index":394,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["first",{"_index":150,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"index.html":{}}}],["first()).subscribe",{"_index":156,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["fitness",{"_index":1672,"title":{},"body":{"license.html":{}}}],["following",{"_index":1659,"title":{},"body":{"license.html":{}}}],["formatelementname",{"_index":633,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["formatelementname(kind",{"_index":647,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["found",{"_index":1566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["free",{"_index":1636,"title":{},"body":{"license.html":{}}}],["function",{"_index":1167,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1535,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1658,"title":{},"body":{"license.html":{}}}],["further",{"_index":1619,"title":{},"body":{"index.html":{}}}],["game",{"_index":537,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"miscellaneous/variables.html":{}}}],["game'},{'name",{"_index":93,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["game.component",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["game.component.html",{"_index":623,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":624,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":620,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:102",{"_index":650,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:107",{"_index":648,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:112",{"_index":645,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:128",{"_index":646,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:133",{"_index":656,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:141",{"_index":658,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:46",{"_index":652,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:47",{"_index":655,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:48",{"_index":653,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:49",{"_index":654,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:50",{"_index":651,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:51",{"_index":642,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:63",{"_index":649,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:85",{"_index":644,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game/component/draw",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["game/constant/animal.constant",{"_index":946,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/area.constant",{"_index":947,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/element",{"_index":948,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/game",{"_index":944,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/piece.constant",{"_index":949,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/pile",{"_index":951,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/draw",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["gameelement",{"_index":504,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["gameelement:10",{"_index":524,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:11",{"_index":523,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:31",{"_index":817,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:38",{"_index":532,"title":{},"body":{"classes/Area.html":{}}}],["gameelement:39",{"_index":534,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:9",{"_index":522,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelementregistryservice",{"_index":571,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:15",{"_index":588,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:16",{"_index":585,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:17",{"_index":587,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:18",{"_index":590,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:22",{"_index":581,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:26",{"_index":584,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:30",{"_index":849,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelementstate",{"_index":536,"title":{"interfaces/GameElementState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["gameelementstateservice",{"_index":597,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:13",{"_index":603,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:14",{"_index":613,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:15",{"_index":612,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:17",{"_index":605,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:25",{"_index":608,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:36",{"_index":607,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:40",{"_index":610,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesvc",{"_index":887,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gamemanagementservice",{"_index":636,"title":{"injectables/GameManagementService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["gamemanagementsvc",{"_index":643,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamestate",{"_index":825,"title":{"interfaces/GameState.html":{}},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gamestate.area",{"_index":1235,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.faction",{"_index":1238,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.pile",{"_index":1241,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateclient",{"_index":1040,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":985,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":539,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{}}}],["gamestateelements",{"_index":1108,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatepatch",{"_index":989,"title":{"interfaces/GameStatePatch.html":{}},"body":{"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatepatches",{"_index":1003,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":999,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":638,"title":{"injectables/GameStateService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatestore",{"_index":1042,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":980,"title":{"injectables/GameStateStoreService.html":{}},"body":{"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":1155,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":637,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["gecko",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1602,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1583,"title":{},"body":{"index.html":{}}}],["get(id",{"_index":580,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getaction",{"_index":1386,"title":{},"body":{"classes/Space.html":{}}}],["getactionpawn",{"_index":293,"title":{},"body":{"classes/Animal.html":{}}}],["getactionpawns",{"_index":657,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["getaddedelements",{"_index":421,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getaddedelementspaces",{"_index":417,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getallelements",{"_index":419,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getanimal",{"_index":355,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getanimal(faction",{"_index":360,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getarea",{"_index":1067,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":781,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelements",{"_index":295,"title":{},"body":{"classes/Animal.html":{},"components/DrawPoolGameComponent.html":{}}}],["getelementstate",{"_index":614,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity",{"_index":600,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":606,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":1069,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamestate",{"_index":1192,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getgsp",{"_index":991,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["getid",{"_index":290,"title":{},"body":{"classes/Animal.html":{},"classes/GameElement.html":{}}}],["getimgpath",{"_index":53,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getkind",{"_index":725,"title":{},"body":{"components/ElementComponent.html":{}}}],["getlength",{"_index":783,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["getname",{"_index":51,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{},"classes/Player.html":{}}}],["getobservableforkey",{"_index":1157,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":1165,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":63,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":472,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["getorthrow(imgpathbykind",{"_index":72,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getorthrow(map",{"_index":1556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorthrow(pileidsbyanimal",{"_index":475,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.elementbyid",{"_index":896,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["getowner",{"_index":49,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["getownerid",{"_index":827,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":1388,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":1071,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getscore",{"_index":829,"title":{},"body":{"classes/Faction.html":{}}}],["getspecies",{"_index":297,"title":{},"body":{"classes/Animal.html":{}}}],["getstate",{"_index":866,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["getting",{"_index":1580,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettransactionstate",{"_index":1194,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":1267,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["go",{"_index":1621,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1635,"title":{},"body":{"license.html":{}}}],["grass",{"_index":1503,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grasshopper",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grub",{"_index":1504,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gsp",{"_index":819,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gsp.patch",{"_index":1017,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":1039,"title":{},"body":{"injectables/GameStateService.html":{}}}],["happens",{"_index":818,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["help",{"_index":1620,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1634,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1677,"title":{},"body":{"license.html":{}}}],["html",{"_index":74,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["http://localhost:4200",{"_index":1595,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":1546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["ids.has(areaidenum.action_display_adaption",{"_index":679,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["imgpath",{"_index":42,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["imgpathbykind",{"_index":61,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":121,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"index.html":{}}}],["implied",{"_index":1668,"title":{},"body":{"license.html":{}}}],["import",{"_index":55,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["imports",{"_index":65,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["included",{"_index":1252,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"license.html":{}}}],["including",{"_index":1645,"title":{},"body":{"license.html":{}}}],["increasescore",{"_index":806,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":813,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":1551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["inherent",{"_index":972,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["inherentcount",{"_index":735,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":521,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["initialization",{"_index":1547,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":176,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["injectable",{"_index":163,"title":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["injectables",{"_index":164,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"overview.html":{}}}],["input",{"_index":57,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["inputs",{"_index":37,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["insect",{"_index":1482,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["insect_element",{"_index":1495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":1496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instantiated",{"_index":1107,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interact",{"_index":1022,"title":{},"body":{"injectables/GameStateService.html":{}}}],["interested",{"_index":1122,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/Piece.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"interfaces/PlayerState.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionPawnPiece.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/Piece.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"interfaces/PlayerState.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"overview.html":{}}}],["inventory",{"_index":1283,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["isfalse",{"_index":1438,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfalse(value",{"_index":1575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotnull",{"_index":226,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":1576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":379,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(value",{"_index":1577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":1439,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(value",{"_index":1578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isready",{"_index":233,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["istrue",{"_index":152,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istrue(value",{"_index":1579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":823,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["item",{"_index":701,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["item.id",{"_index":1212,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["item[0",{"_index":703,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["items",{"_index":1572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["itself",{"_index":1555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["joe",{"_index":1632,"title":{},"body":{"license.html":{}}}],["json",{"_index":870,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["json.stringify(element",{"_index":328,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["json.stringify(newgamestateelement",{"_index":1216,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["k",{"_index":1557,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["karma",{"_index":1612,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":1279,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["key",{"_index":1123,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":1204,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":1118,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":528,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["kind.replace('element",{"_index":698,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["kinds",{"_index":1281,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["leaf",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaving",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":73,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["length",{"_index":403,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["lengthsubject",{"_index":1249,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["level",{"_index":1117,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["liability",{"_index":1681,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1678,"title":{},"body":{"license.html":{}}}],["license",{"_index":1627,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1646,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1669,"title":{},"body":{"license.html":{}}}],["line",{"_index":720,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["list",{"_index":374,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["local",{"_index":1151,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["lodash",{"_index":941,"title":{},"body":{"injectables/GameManagementService.html":{},"interfaces/Piece.html":{},"dependencies.html":{}}}],["log",{"_index":630,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["maintain",{"_index":1103,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["making",{"_index":1104,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":1483,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mammal_element",{"_index":1497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":1498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["managed",{"_index":979,"title":{},"body":{"interfaces/GameState.html":{}}}],["management",{"_index":1111,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["management.service",{"_index":659,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["management.service.ts",{"_index":927,"title":{},"body":{"injectables/GameManagementService.html":{},"coverage.html":{}}}],["management.service.ts:106",{"_index":933,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:23",{"_index":931,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:31",{"_index":935,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:37",{"_index":932,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:49",{"_index":934,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["many",{"_index":1282,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["map",{"_index":375,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((animals",{"_index":392,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["map((gamestate",{"_index":1202,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["map((space",{"_index":270,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["matbutton",{"_index":621,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["matcard",{"_index":124,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["matcardtitle",{"_index":348,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["match",{"_index":559,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["matches",{"_index":1186,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matgridlist",{"_index":349,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matgridtile",{"_index":350,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["mattooltip",{"_index":622,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["meat",{"_index":1505,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1671,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1649,"title":{},"body":{"license.html":{}}}],["message",{"_index":1550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["method",{"_index":1110,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["methods",{"_index":129,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["minimize",{"_index":454,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["miscellaneous",{"_index":1471,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1628,"title":{},"body":{"license.html":{}}}],["model/action",{"_index":59,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["model/animal.model",{"_index":378,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{}}}],["model/area.model",{"_index":591,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/element.model",{"_index":146,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{}}}],["model/faction.model",{"_index":836,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/game",{"_index":893,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/piece.model",{"_index":950,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["model/pile.model",{"_index":937,"title":{},"body":{"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":1368,"title":{},"body":{"injectables/PlayerService.html":{}}}],["model/space.model",{"_index":938,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["modify",{"_index":1648,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1689,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monkey",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1149,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"index.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1594,"title":{},"body":{"index.html":{}}}],["need",{"_index":1109,"title":{},"body":{"injectables/GameStateStoreService.html":{},"index.html":{}}}],["new",{"_index":201,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newgamestateelement",{"_index":1172,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":1213,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":533,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["newstate.id",{"_index":556,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["newstate.kind",{"_index":1396,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.piece",{"_index":1397,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.space.foreach((spacestate",{"_index":564,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["newstate.space.length",{"_index":561,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["nextavailablespace",{"_index":511,"title":{},"body":{"classes/Area.html":{}}}],["nextavailablespace(kind",{"_index":526,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["nextspace",{"_index":262,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["nextspace.addpiece(element",{"_index":264,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["nextspace.addpiece(item[0",{"_index":705,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["ng",{"_index":1591,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":130,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["noninfringement",{"_index":1674,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1662,"title":{},"body":{"license.html":{}}}],["null",{"_index":67,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":187,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"interfaces/GameStatePatch.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["object",{"_index":978,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":1292,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["object.values(animalenum",{"_index":716,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["object.values(elementenum",{"_index":714,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["object1",{"_index":1543,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":1540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":1152,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":517,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["observables",{"_index":1119,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["obtaining",{"_index":1639,"title":{},"body":{"license.html":{}}}],["of(undefined",{"_index":995,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["oldstate",{"_index":1010,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":1175,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["one",{"_index":1128,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["oninit",{"_index":122,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["onpush",{"_index":382,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["operation",{"_index":998,"title":{},"body":{"interfaces/GameStatePatch.html":{}}}],["optional",{"_index":136,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":1023,"title":{},"body":{"injectables/GameStateService.html":{}}}],["others",{"_index":1106,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":1685,"title":{},"body":{"license.html":{}}}],["out",{"_index":1623,"title":{},"body":{"index.html":{},"license.html":{}}}],["override",{"_index":555,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["overview",{"_index":1624,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrites",{"_index":1135,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":40,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ownerid",{"_index":808,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/GameManagementService.html":{}}}],["package",{"_index":1451,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":1626,"title":{},"body":{"index.html":{}}}],["param",{"_index":879,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["parameters",{"_index":135,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1127,"title":{},"body":{"injectables/GameStateStoreService.html":{},"license.html":{}}}],["passed",{"_index":1187,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["patch",{"_index":871,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["patch.model",{"_index":993,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["patch.model.ts",{"_index":996,"title":{},"body":{"interfaces/GameStatePatch.html":{},"coverage.html":{}}}],["patch.service",{"_index":1074,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":1000,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:13",{"_index":1009,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":1007,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["pawn",{"_index":30,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["pawn'},{'name",{"_index":79,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["pawn.component",{"_index":116,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.component.html",{"_index":34,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.scss",{"_index":36,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts",{"_index":24,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["pawn.component.ts:15",{"_index":48,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:17",{"_index":50,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:21",{"_index":52,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:25",{"_index":54,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.model",{"_index":60,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.model.ts",{"_index":102,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["pawn/action",{"_index":23,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["pawns",{"_index":410,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["permission",{"_index":1633,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1656,"title":{},"body":{"license.html":{}}}],["person",{"_index":1638,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1657,"title":{},"body":{"license.html":{}}}],["piece",{"_index":104,"title":{"interfaces/Piece.html":{}},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":1275,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["piececount",{"_index":1301,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["piecefactory",{"_index":1245,"title":{},"body":{"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":371,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["piecekindenum.action_pawn",{"_index":407,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["pieces",{"_index":775,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieces.push(null",{"_index":1307,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":1306,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount.length",{"_index":1302,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":1303,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pile",{"_index":300,"title":{"classes/Pile.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile(pilestate",{"_index":974,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["pile.constant",{"_index":1324,"title":{},"body":{"interfaces/PileConfig.html":{}}}],["pile.model",{"_index":982,"title":{},"body":{"interfaces/GameState.html":{}}}],["pileadapter",{"_index":286,"title":{"classes/PileAdapter.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["pileadapter(config.actionpawnpile",{"_index":338,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileadapter(config.speciespile",{"_index":340,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileconfig",{"_index":1321,"title":{"interfaces/PileConfig.html":{}},"body":{"interfaces/PileConfig.html":{},"coverage.html":{}}}],["pileidenum",{"_index":785,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{}}}],["pileidenum.action_pawn_amphibian",{"_index":1325,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_arachnid",{"_index":1327,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_bird",{"_index":1329,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_insect",{"_index":1331,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_mammal",{"_index":1333,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_reptile",{"_index":1335,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.element",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_amphibian",{"_index":1326,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_arachnid",{"_index":1328,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_bird",{"_index":1330,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_insect",{"_index":1332,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_mammal",{"_index":1334,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_reptile",{"_index":1336,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileids",{"_index":482,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(actionpawnpileid",{"_index":484,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(speciespileid",{"_index":485,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileidsbyanimal",{"_index":446,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{},"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pileregistryservice",{"_index":434,"title":{"injectables/PileRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":767,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{}}}],["piles",{"_index":963,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["piles.push(new",{"_index":973,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["pileservice",{"_index":1114,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["pilestate",{"_index":936,"title":{"interfaces/PileState.html":{}},"body":{"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestateservice",{"_index":1338,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":1339,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":231,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["places",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":1614,"title":{},"body":{"index.html":{}}}],["player",{"_index":1345,"title":{"classes/Player.html":{}},"body":{"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["player.id",{"_index":971,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["player.service",{"_index":942,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["player1",{"_index":1356,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player2",{"_index":1358,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player3",{"_index":1360,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player4",{"_index":1362,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player5",{"_index":1364,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player6",{"_index":1366,"title":{},"body":{"injectables/PlayerService.html":{}}}],["players",{"_index":1351,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playerservice",{"_index":641,"title":{"injectables/PlayerService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["playerstate",{"_index":1348,"title":{"interfaces/PlayerState.html":{}},"body":{"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["pool",{"_index":92,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["pool.service",{"_index":217,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["pool.service.ts",{"_index":761,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:14",{"_index":776,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:15",{"_index":778,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":780,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:17",{"_index":766,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:23",{"_index":768,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:36",{"_index":782,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:44",{"_index":784,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:48",{"_index":770,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:52",{"_index":774,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["portions",{"_index":1665,"title":{},"body":{"license.html":{}}}],["possible",{"_index":460,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pretty",{"_index":1277,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["previous",{"_index":1136,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":168,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["processedfactionids",{"_index":428,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["progress",{"_index":1055,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["project",{"_index":1582,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionPawnPiece.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"properties.html":{}}}],["protected",{"_index":507,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["provideanimationsasync('noop",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1567,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["providedin",{"_index":227,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{}}}],["provider.service",{"_index":377,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["provider.service.ts",{"_index":424,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["provider.service.ts:16",{"_index":445,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:17",{"_index":442,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:18",{"_index":444,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:19",{"_index":435,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:28",{"_index":441,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:46",{"_index":438,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:50",{"_index":440,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["providerouter(routes",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":1019,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":1650,"title":{},"body":{"license.html":{}}}],["pull",{"_index":763,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pull(count",{"_index":769,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pulled",{"_index":1270,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pulls",{"_index":1265,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["purpose",{"_index":1673,"title":{},"body":{"license.html":{}}}],["put",{"_index":764,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["put(pieces",{"_index":773,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["puts",{"_index":1272,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["quickly",{"_index":459,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["random",{"_index":1248,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["readonly",{"_index":276,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["readonlymap",{"_index":739,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["ready",{"_index":173,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["readysubject",{"_index":174,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["received",{"_index":820,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["record",{"_index":1284,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["reference",{"_index":1625,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":1126,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["register",{"_index":575,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(elements",{"_index":583,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":609,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":1029,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":1046,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":903,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registeredareaids",{"_index":234,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredareaids.has(areaidenum.action_display_adaption",{"_index":235,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredelementsubject",{"_index":573,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":574,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(pileidenum.element",{"_index":789,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":598,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":602,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":911,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":853,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":1341,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":1030,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":1048,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":1031,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":1050,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement",{"_index":1158,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":1171,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registry.service",{"_index":216,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":570,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:13",{"_index":578,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:15",{"_index":892,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:16",{"_index":890,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:17",{"_index":891,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:18",{"_index":886,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:20",{"_index":850,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:21",{"_index":852,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:22",{"_index":888,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:24",{"_index":851,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:25",{"_index":848,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:26",{"_index":889,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":1025,"title":{},"body":{"injectables/GameStateService.html":{}}}],["reload",{"_index":1598,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1395,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeactionpawn",{"_index":177,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removeactionpawn(index",{"_index":190,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removedpiece",{"_index":1394,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeelement",{"_index":178,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/AnimalElements.html":{}}}],["removeelement(element",{"_index":320,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["removeelement(index",{"_index":192,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removepiece",{"_index":1373,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeremainingelements",{"_index":179,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["replenish",{"_index":180,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["represents",{"_index":1255,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["reptile",{"_index":1484,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reptile_element",{"_index":1499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":1500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["require",{"_index":1058,"title":{},"body":{"injectables/GameStateService.html":{}}}],["requiretransaction",{"_index":1032,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":1102,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":1020,"title":{},"body":{"injectables/GameStateService.html":{}}}],["restriction",{"_index":1644,"title":{},"body":{"license.html":{}}}],["results",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":1559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":68,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["returned",{"_index":1552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":138,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1647,"title":{},"body":{"license.html":{}}}],["rollback",{"_index":1233,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":1033,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":228,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{}}}],["root'},{'name",{"_index":89,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["routeroutlet",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1590,"title":{},"body":{"index.html":{}}}],["running",{"_index":1608,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":151,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["same",{"_index":1174,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["scaffolding",{"_index":1601,"title":{},"body":{"index.html":{}}}],["score",{"_index":809,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/GameManagementService.html":{}}}],["seed",{"_index":1506,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1259,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["selector",{"_index":28,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["selector(gamestate",{"_index":1203,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sell",{"_index":1654,"title":{},"body":{"license.html":{}}}],["sendgsptobackend",{"_index":987,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":988,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["serve",{"_index":1592,"title":{},"body":{"index.html":{}}}],["server",{"_index":1589,"title":{},"body":{"index.html":{}}}],["service",{"_index":1112,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["service/action",{"_index":147,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["service/animal",{"_index":376,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["service/element",{"_index":663,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["services",{"_index":1026,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":384,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"miscellaneous/functions.html":{}}}],["seta",{"_index":1573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setactionpawnforheader",{"_index":356,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["setactionpawnforheader(faction",{"_index":363,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["setarea",{"_index":1034,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":1060,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setb",{"_index":1571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setdifference",{"_index":451,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdifference(factionids",{"_index":465,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["setdifference(seta",{"_index":1570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setentitystate",{"_index":599,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":604,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":1035,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":1062,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setgamestate",{"_index":1132,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":1180,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setpile",{"_index":1036,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":1064,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":807,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":815,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["setstate",{"_index":512,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":530,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["settransactionstateelement",{"_index":1159,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":1183,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setup",{"_index":181,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["several",{"_index":456,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameStateStoreService.html":{}}}],["shall",{"_index":1663,"title":{},"body":{"license.html":{}}}],["shuffle",{"_index":939,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffle(object.values(animalenum",{"_index":965,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffledanimals",{"_index":964,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffledanimals[index",{"_index":968,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["simple",{"_index":1278,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["skip",{"_index":916,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["skull",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snake",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1641,"title":{},"body":{"license.html":{}}}],["someone",{"_index":1121,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"index.html":{}}}],["space",{"_index":111,"title":{"classes/Space.html":{}},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/ElementSpaceComponent.html":{},"injectables/GameManagementService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space'},{'name",{"_index":81,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["space(spacestate.kind",{"_index":959,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["space.component",{"_index":144,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["space.component.html",{"_index":112,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.scss",{"_index":113,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts",{"_index":110,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space.component.ts:16",{"_index":114,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts:18",{"_index":799,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.kind",{"_index":242,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.model",{"_index":535,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.piece",{"_index":245,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.piece.kind",{"_index":323,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["space.removepiece",{"_index":271,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["space.state",{"_index":543,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.state$.subscribe((spacestate",{"_index":551,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space/action",{"_index":109,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{}}}],["space/element",{"_index":143,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space/eyeball/eyeball.component",{"_index":145,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["spacekindenum",{"_index":222,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":243,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"miscellaneous/variables.html":{}}}],["spacekindenum.element",{"_index":248,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":257,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameManagementService.html":{}}}],["spaces.filter",{"_index":241,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["spaces.filter((space",{"_index":331,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["spaces.map((space",{"_index":542,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spaces.push(new",{"_index":958,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["spacessubject",{"_index":505,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spacestate",{"_index":506,"title":{"interfaces/SpaceState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["species",{"_index":281,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["species.model",{"_index":306,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["species/animal/noun",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/element/noun",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/other/noun",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":1523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":1525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":1531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":1533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":1524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":1530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":1532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciespiece",{"_index":305,"title":{"interfaces/SpeciesPiece.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["speciespile",{"_index":280,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["speciespileid",{"_index":477,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["speciespilelength",{"_index":354,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciesreptile",{"_index":1534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specified",{"_index":1266,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["spider",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animal.constant.ts",{"_index":1473,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../app.config.ts",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area.constant.ts",{"_index":1474,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../element",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../element.constant.ts",{"_index":1475,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../game",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../image.constant.ts",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../misc.ts",{"_index":1536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../piece.constant.ts",{"_index":1476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../piece.model.ts",{"_index":1537,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pile",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pile.constant.ts",{"_index":1477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../predicate.ts",{"_index":1538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":503,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:13",{"_index":516,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:14",{"_index":519,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:15",{"_index":518,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:16",{"_index":515,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:28",{"_index":525,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:54",{"_index":527,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":804,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:10",{"_index":826,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:14",{"_index":828,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:18",{"_index":830,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":814,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":811,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:32",{"_index":816,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":857,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":1244,"title":{},"body":{"interfaces/Piece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":1247,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:103",{"_index":1317,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:107",{"_index":1318,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:17",{"_index":1261,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:18",{"_index":1262,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:19",{"_index":1260,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:20",{"_index":1251,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:39",{"_index":1273,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:46",{"_index":1263,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:56",{"_index":1264,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:82",{"_index":1271,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:92",{"_index":1316,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:95",{"_index":1319,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:99",{"_index":1320,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":1346,"title":{},"body":{"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["src/app/engine/model/player.model.ts:9",{"_index":1347,"title":{},"body":{"classes/Player.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":1369,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:12",{"_index":1378,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:13",{"_index":1376,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:14",{"_index":1377,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:15",{"_index":1380,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:16",{"_index":1375,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:24",{"_index":1385,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:31",{"_index":1387,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:35",{"_index":1389,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:39",{"_index":1382,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:48",{"_index":1383,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:59",{"_index":1384,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/service/game",{"_index":569,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["src/app/engine/service/player.service.ts",{"_index":1349,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/app/engine/service/player.service.ts:16",{"_index":1353,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/engine/service/player.service.ts:8",{"_index":1367,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/engine/util/misc.ts",{"_index":1433,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/util/predicate.ts",{"_index":1437,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/action",{"_index":22,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["src/app/game/component/animal",{"_index":346,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["src/app/game/component/draw",{"_index":619,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts",{"_index":721,"title":{},"body":{"components/ElementComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts:16",{"_index":724,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:18",{"_index":726,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:22",{"_index":727,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:26",{"_index":728,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/constant/animal.constant.ts",{"_index":1478,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/area.constant.ts",{"_index":1443,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element",{"_index":732,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element.constant.ts",{"_index":1502,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/game",{"_index":1445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/image.constant.ts",{"_index":1447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/piece.constant.ts",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/pile",{"_index":1322,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/pile.constant.ts",{"_index":1510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/model/action",{"_index":101,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts",{"_index":275,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts:103",{"_index":296,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:107",{"_index":298,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:23",{"_index":414,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:24",{"_index":413,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:33",{"_index":418,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:43",{"_index":415,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:55",{"_index":416,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:67",{"_index":420,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:73",{"_index":422,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:79",{"_index":288,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:80",{"_index":287,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:81",{"_index":289,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:82",{"_index":284,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:91",{"_index":291,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:95",{"_index":292,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:99",{"_index":294,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/element.model.ts",{"_index":798,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["src/app/game/model/species.model.ts",{"_index":1398,"title":{},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["src/app/game/service/action",{"_index":165,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["src/app/game/service/animal",{"_index":423,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["src/app/game/service/element",{"_index":760,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["standalone",{"_index":31,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["start",{"_index":718,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["startcase",{"_index":940,"title":{},"body":{"injectables/GameManagementService.html":{},"interfaces/Piece.html":{}}}],["startcase(assignedanimal",{"_index":970,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["startcase(kind",{"_index":1246,"title":{},"body":{"interfaces/Piece.html":{}}}],["started",{"_index":1091,"title":{"index.html":{},"license.html":{}},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["starttransaction",{"_index":1037,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["startturn",{"_index":634,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["state",{"_index":509,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["state.constant",{"_index":945,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["state.constant.ts",{"_index":1446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.model",{"_index":1011,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":976,"title":{},"body":{"interfaces/GameState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.owner",{"_index":1286,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["state.service",{"_index":592,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":596,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:14",{"_index":914,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:15",{"_index":907,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:18",{"_index":1041,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:21",{"_index":915,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:22",{"_index":912,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:23",{"_index":913,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:25",{"_index":909,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:29",{"_index":1044,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:34",{"_index":1066,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:36",{"_index":908,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:38",{"_index":1045,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:40",{"_index":910,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:51",{"_index":1059,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:58",{"_index":1052,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:64",{"_index":1068,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:68",{"_index":1061,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:72",{"_index":1047,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:76",{"_index":1070,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:80",{"_index":1063,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:83",{"_index":1049,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:87",{"_index":1072,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:9",{"_index":615,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:91",{"_index":1065,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:95",{"_index":1051,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state/game",{"_index":662,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["statements",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["statesubject",{"_index":510,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["static",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.service",{"_index":1073,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":1101,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:103",{"_index":1195,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:111",{"_index":1163,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:116",{"_index":1181,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:124",{"_index":1188,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:132",{"_index":1164,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:141",{"_index":1177,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:151",{"_index":1196,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:155",{"_index":1178,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:159",{"_index":1168,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:163",{"_index":1197,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:167",{"_index":1179,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:171",{"_index":1169,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:175",{"_index":1198,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:179",{"_index":1182,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:183",{"_index":1170,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:34",{"_index":1190,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:35",{"_index":1191,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:36",{"_index":1161,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:42",{"_index":1166,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:58",{"_index":1184,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:82",{"_index":1173,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:99",{"_index":1193,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stored",{"_index":1605,"title":{},"body":{"index.html":{}}}],["stores",{"_index":1176,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":35,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["subject",{"_index":1379,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{},"license.html":{}}}],["sublicense",{"_index":1652,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":236,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((animal",{"_index":395,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["subscribe((drawpool",{"_index":673,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["subscribers",{"_index":1230,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["subscription",{"_index":1548,"title":{},"body":{"miscellaneous/functions.html":{}}}],["substantial",{"_index":1664,"title":{},"body":{"license.html":{}}}],["substatearray",{"_index":1208,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":1211,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":1220,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":1214,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["such",{"_index":1113,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sum",{"_index":1293,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["sun",{"_index":1507,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":544,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["super(areastatesvc",{"_index":594,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":842,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":1340,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":1285,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["super.register(elements",{"_index":843,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["system",{"_index":1021,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":520,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":1144,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":1133,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["template",{"_index":19,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["test",{"_index":1355,"title":{},"body":{"injectables/PlayerService.html":{},"index.html":{}}}],["test1",{"_index":1354,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test2",{"_index":1357,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test3",{"_index":1359,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test4",{"_index":1361,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test5",{"_index":1363,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test6",{"_index":1365,"title":{},"body":{"injectables/PlayerService.html":{}}}],["testing",{"_index":1617,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1610,"title":{},"body":{"index.html":{}}}],["tgameelement",{"_index":582,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstatesvc",{"_index":885,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this._action",{"_index":1392,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._drawpool",{"_index":790,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":1223,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate[key",{"_index":1219,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":1391,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":1232,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":1226,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":1228,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":872,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.id",{"_index":877,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.inventory[key",{"_index":1294,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[kind",{"_index":1305,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[piece.kind",{"_index":1311,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this._state.name",{"_index":832,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{}}}],["this._state.ownerid",{"_index":833,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._state.score",{"_index":834,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._transactionstate",{"_index":1205,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate[key",{"_index":1209,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.actionpawn?.name",{"_index":70,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawn?.owner",{"_index":69,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawnforheader",{"_index":406,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawnpile",{"_index":337,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.actionpawnpilelength",{"_index":402,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawns",{"_index":158,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces",{"_index":240,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces.map",{"_index":244,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.asobservable",{"_index":198,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.next(this.actionpawns",{"_index":246,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.adaptionactiondisplayservice.actionpawns$.subscribe((actionpawns",{"_index":157,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.elements$.subscribe((elements",{"_index":159,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.ready$.pipe(filter(istrue",{"_index":155,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.setup",{"_index":161,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionarea",{"_index":680,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionarea.nextavailablespace(spacekindenum.element",{"_index":704,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.addedelementspaces.find",{"_index":322,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.addedelementspaces.map((space",{"_index":333,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animal",{"_index":396,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalbyid.set(faction.id",{"_index":489,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalelements",{"_index":341,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalfactory(animalconfig",{"_index":490,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalproviderservice.animals",{"_index":387,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalssubject.asobservable",{"_index":443,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalssubject.next(array.from(this.animalbyid.values",{"_index":491,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.applygsp(gsp",{"_index":1078,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.area",{"_index":237,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.area.spaces$.subscribe((spaces",{"_index":239,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.arearegistryservice.get(areaidenum.action_display_adaption",{"_index":238,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["this.arearegistryservice.registeredids",{"_index":677,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.arearegistrysvc.get(elementareaid",{"_index":487,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.arearegistrysvc.register(areas",{"_index":962,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":479,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimal(faction",{"_index":469,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimals",{"_index":452,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.createarea",{"_index":952,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.createdrawpoolpile",{"_index":954,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.createfactions",{"_index":953,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.currentplayerfaction",{"_index":690,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpool",{"_index":674,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpool.length",{"_index":795,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.pull",{"_index":702,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpool.pull(count",{"_index":796,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.put(pieces",{"_index":797,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpoollength",{"_index":676,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.element?.kind",{"_index":729,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.element?.name",{"_index":730,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.elementbyid.set(element.id",{"_index":899,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementdrawpoolservice.pull(4).foreach((element",{"_index":260,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementdrawpoolservice.ready",{"_index":230,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementdrawpoolsvc.drawpool",{"_index":671,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.elements",{"_index":160,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{}}}],["this.elements.filter(isnotnull).length",{"_index":253,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.length).fill(null",{"_index":400,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.elementspaces",{"_index":247,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspaces.map((space",{"_index":249,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementssubject.asobservable",{"_index":206,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.allelements",{"_index":309,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.elements",{"_index":250,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":917,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitpilestate",{"_index":1308,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.emitstate",{"_index":835,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.emptyelementspaces",{"_index":398,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction",{"_index":335,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.id",{"_index":344,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.name",{"_index":345,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.factionassignment",{"_index":839,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":845,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":840,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":846,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionregistryservice.factionassignment$.subscribe((factionassignments",{"_index":453,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.get(factionid",{"_index":468,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistrysvc.factionassignment$.subscribe((factionassignments",{"_index":685,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factionregistrysvc.get(factionassignment.id",{"_index":689,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions",{"_index":688,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions.find",{"_index":691,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.formatelementname(item[0].kind",{"_index":706,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gameelementstatesvc.register(elements",{"_index":905,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementsvc.creategame",{"_index":681,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestateclient.gsp$.pipe(filter((gsp",{"_index":1076,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":1088,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.area",{"_index":1092,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":1087,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":1095,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.gamestate",{"_index":1086,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":1098,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":1094,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":1097,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":1100,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":1089,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":1093,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":1096,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate(updatedstate",{"_index":1081,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":1099,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":1082,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":1083,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":1199,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":1201,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":1224,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":616,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":712,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":854,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":1342,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":617,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":855,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":1343,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":618,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":856,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":1344,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":696,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getanimal(this.faction",{"_index":386,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":920,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":1234,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gspservice.apply(this.gamestatestore.gamestate",{"_index":1080,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gspservice.create",{"_index":1085,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.id",{"_index":557,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this.initialize",{"_index":229,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.kind",{"_index":731,"title":{},"body":{"components/ElementComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.length",{"_index":1290,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject",{"_index":1288,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":1291,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.next(this.length",{"_index":1295,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.log.push('pile",{"_index":709,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.log.push(`you",{"_index":707,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.owner",{"_index":71,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.piececounts.get(key",{"_index":1296,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.piecefactory",{"_index":1287,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pile.length",{"_index":1312,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pile.pull(count",{"_index":1313,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pile.put(pieces",{"_index":1314,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pileregistryservice.get(actionpawnpileid",{"_index":486,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.get(speciespileid",{"_index":488,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistrysvc.get(pileidenum.element",{"_index":791,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.register(piles",{"_index":975,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":787,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.players[0",{"_index":1352,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playerservice.currentplayer.id",{"_index":693,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.playerservice.players.foreach((player",{"_index":966,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.processedfactionids",{"_index":466,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.ready",{"_index":792,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.asobservable",{"_index":211,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(this.ready",{"_index":793,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(true",{"_index":251,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":589,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":904,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":900,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":898,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":919,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":923,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":1237,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":1240,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":1243,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.replenish",{"_index":252,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.setactionpawnforheader(this.faction",{"_index":385,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.setentitystate(state",{"_index":925,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":1236,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":1239,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":1242,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.spaces",{"_index":545,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.foreach((space",{"_index":550,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.length",{"_index":560,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":565,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacessubject",{"_index":546,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacessubject.asobservable",{"_index":548,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacessubject.next(this.spaces",{"_index":554,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate",{"_index":549,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate[index",{"_index":552,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.speciespile",{"_index":339,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.speciespilelength",{"_index":405,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.state",{"_index":875,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject",{"_index":873,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.asobservable",{"_index":876,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.next(this.state",{"_index":553,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.transactionstate",{"_index":1217,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["those",{"_index":1120,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":255,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":1560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":1549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["times",{"_index":457,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["timestamp",{"_index":997,"title":{},"body":{"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{}}}],["title",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":380,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["top",{"_index":1116,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tort",{"_index":1684,"title":{},"body":{"license.html":{}}}],["total",{"_index":1274,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["track",{"_index":162,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["tracks",{"_index":1280,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["transaction",{"_index":1054,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":1160,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":21,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["true",{"_index":32,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"miscellaneous/variables.html":{}}}],["tsc",{"_index":1298,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["tslib",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":695,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["two",{"_index":1129,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1693,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1210,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["typically",{"_index":1139,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["unchanged",{"_index":1553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":44,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"miscellaneous/functions.html":{}}}],["undefined)).subscribe((gsp",{"_index":1077,"title":{},"body":{"injectables/GameStateService.html":{}}}],["unique",{"_index":541,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["unit",{"_index":1609,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1300,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["update",{"_index":1185,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updated",{"_index":1125,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updatedstate",{"_index":1079,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updates",{"_index":1057,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updating",{"_index":1207,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["use",{"_index":1257,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":1140,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["using",{"_index":683,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["util/misc",{"_index":894,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{}}}],["v",{"_index":1568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":46,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1138,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":77,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["variable",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1695,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1024,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["version",{"_index":1586,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1131,"title":{},"body":{"injectables/GameStateStoreService.html":{},"index.html":{}}}],["void",{"_index":139,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["warranties",{"_index":1670,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1666,"title":{},"body":{"license.html":{}}}],["water",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":1130,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whenever",{"_index":1124,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whether",{"_index":1682,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["without",{"_index":1643,"title":{},"body":{"license.html":{}}}],["yes",{"_index":529,"title":{},"body":{"classes/Area.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Action {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnComponent.html":{"url":"components/ActionPawnComponent.html","title":"component - ActionPawnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-pawn/action-pawn.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./action-pawn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    owner\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        owner\n                    \n                \n\n                \n                    \n                        getowner()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-action-pawn',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './action-pawn.component.html',\n  styleUrl: './action-pawn.component.scss',\n})\nexport class ActionPawnComponent {\n  @Input() actionPawn: ActionPawnPiece | undefined = undefined;\n\n  get owner(): string | null | undefined {\n    return this.actionPawn?.owner;\n  }\n\n  get name(): string | undefined {\n    return this.actionPawn?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.owner) {\n      return getOrThrow(imgPathByKind, this.owner);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionPawnPiece.html":{"url":"interfaces/ActionPawnPiece.html","title":"interface - ActionPawnPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionPawnPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-pawn.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\nimport { AnimalKind } from '../constant/animal.constant';\n\nexport interface ActionPawnPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnSpaceComponent.html":{"url":"components/ActionPawnSpaceComponent.html","title":"component - ActionPawnSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                                ActionPawnComponent\n                                EyeballComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./action-pawn-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../../../model/action-pawn.model';\nimport { ElementComponent } from '../../../element/element.component';\nimport { ActionPawnComponent } from '../../../action-pawn/action-pawn.component';\nimport { EyeballComponent } from '../eyeball/eyeball.component';\n\n@Component({\n  selector: 'app-action-pawn-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent, ActionPawnComponent, EyeballComponent],\n  templateUrl: './action-pawn-space.component.html',\n  styleUrl: './action-pawn-space.component.scss',\n})\nexport class ActionPawnSpaceComponent {\n  @Input() actionPawn: ActionPawnPiece | null = null;\n}\n\n    \n\n    \n        \n  \n    @if (actionPawn) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (actionPawn) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdaptionActionDisplayCardComponent.html":{"url":"components/AdaptionActionDisplayCardComponent.html","title":"component - AdaptionActionDisplayCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdaptionActionDisplayCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adaption-action-display-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                                ElementSpaceComponent\n                                EyeballComponent\n                                ActionPawnSpaceComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adaption-action-display-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adaption-action-display-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ActionPawnPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ElementPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatCard } from '@angular/material/card';\nimport { ElementSpaceComponent } from '../space/element-space/element-space.component';\nimport { EyeballComponent } from '../space/eyeball/eyeball.component';\nimport { ActionPawnSpaceComponent } from '../space/action-pawn-space/action-pawn-space.component';\nimport { ElementPiece } from '../../../model/element.model';\nimport { ActionPawnPiece } from '../../../model/action-pawn.model';\nimport { AdaptionActionDisplayService } from '../../../service/action-display/adaption-action-display.service';\nimport { filter, first } from 'rxjs';\nimport { isTrue } from '../../../../engine/util/predicate';\n\n@Component({\n  selector: 'app-adaption-action-display-card',\n  standalone: true,\n  imports: [MatCard, ElementSpaceComponent, EyeballComponent, ActionPawnSpaceComponent],\n  templateUrl: './adaption-action-display-card.component.html',\n  styleUrl: './adaption-action-display-card.component.scss',\n})\nexport class AdaptionActionDisplayCardComponent implements OnInit {\n  actionPawns: (ActionPawnPiece | null)[] = [];\n  elements: (ElementPiece | null)[] = [];\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {}\n\n  ngOnInit() {\n    this.adaptionActionDisplayService.ready$.pipe(filter(isTrue), first()).subscribe(() => {\n      this.adaptionActionDisplayService.actionPawns$.subscribe((actionPawns) => {\n        this.actionPawns = actionPawns;\n      });\n      this.adaptionActionDisplayService.elements$.subscribe((elements) => {\n        this.elements = elements;\n      });\n      this.adaptionActionDisplayService.setup();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Adaption\n    \n      \n        @for (element of elements; track $index) {\n          \n        }\n      \n      \n        @for (actionPawn of actionPawns; track $index) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Adaption                  @for (element of elements; track $index) {                  }                    @for (actionPawn of actionPawns; track $index) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdaptionActionDisplayCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdaptionActionDisplayService.html":{"url":"injectables/AdaptionActionDisplayService.html","title":"injectable - AdaptionActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdaptionActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/adaption-action-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                actionPawns$\n                            \n                            \n                                actionPawnSpaces\n                            \n                            \n                                    Private\n                                actionPawnsSubject\n                            \n                            \n                                area\n                            \n                            \n                                elements\n                            \n                            \n                                elements$\n                            \n                            \n                                elementSpaces\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActionPawn\n                            \n                            \n                                initialize\n                            \n                            \n                                removeActionPawn\n                            \n                            \n                                removeElement\n                            \n                            \n                                removeRemainingElements\n                            \n                            \n                                replenish\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistryService: AreaRegistryService, elementDrawPoolService: ElementDrawPoolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActionPawn\n                        \n                    \n                \n            \n            \n                \naddActionPawn(index: number, actionPawn: ActionPawnPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionPawn\n                                            \n                                                            ActionPawnPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActionPawn\n                        \n                    \n                \n            \n            \n                \nremoveActionPawn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ElementPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRemainingElements\n                        \n                    \n                \n            \n            \n                \nremoveRemainingElements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ElementPiece[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replenish\n                        \n                    \n                \n            \n            \n                \nreplenish()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ActionPawnPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.actionPawnsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionPawnsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.actionPawns)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ElementPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.elements)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { ElementDrawPoolService } from '../element-draw-pool.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { ElementPiece } from '../../model/element.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaIdEnum, SpaceKindEnum } from '../../constant/area.constant';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { Piece } from '../../../engine/model/piece.model';\nimport { Space } from '../../../engine/model/space.model';\nimport { isNotNull } from '../../../engine/util/predicate';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdaptionActionDisplayService {\n  area: Area | undefined = undefined;\n  actionPawnSpaces: Space[] = [];\n  actionPawns: (ActionPawnPiece | null)[] = [];\n  private actionPawnsSubject = new BehaviorSubject(this.actionPawns);\n  actionPawns$ = this.actionPawnsSubject.asObservable();\n  elementSpaces: Space[] = [];\n  elements: (ElementPiece | null)[] = [];\n  private elementsSubject = new BehaviorSubject(this.elements);\n  elements$ = this.elementsSubject.asObservable();\n  private readySubject = new BehaviorSubject(false);\n  ready$ = this.readySubject.asObservable();\n\n  constructor(\n    private areaRegistryService: AreaRegistryService,\n    private elementDrawPoolService: ElementDrawPoolService,\n  ) {\n    this.initialize();\n  }\n\n  initialize() {\n    this.elementDrawPoolService.ready$\n      .pipe(\n        combineLatestWith(this.areaRegistryService.registeredIds$),\n        filter(\n          ([isReady, registeredAreaIds]) =>\n            isReady && registeredAreaIds.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        this.area = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n\n        this.area.spaces$.subscribe((spaces) => {\n          this.actionPawnSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ACTION_PAWN,\n          );\n          this.actionPawns = this.actionPawnSpaces.map(\n            (space) => space.piece,\n          ) as (ActionPawnPiece | null)[];\n          this.actionPawnsSubject.next(this.actionPawns);\n\n          this.elementSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ELEMENT,\n          );\n          this.elements = this.elementSpaces.map((space) => space.piece) as (ElementPiece | null)[];\n          this.elementsSubject.next(this.elements);\n          this.readySubject.next(true);\n        });\n      });\n  }\n\n  setup(): void {\n    this.replenish();\n  }\n\n  replenish(): void {\n    if (this.elements.filter(isNotNull).length > 0) {\n      throw new Error('Element spaces must be cleared before replenish');\n    }\n\n    this.elementDrawPoolService.pull(4).forEach((element) => {\n      const nextSpace = ensureDefined(this.area).nextAvailableSpace(SpaceKindEnum.ELEMENT);\n      if (nextSpace) {\n        nextSpace.addPiece(element as Piece);\n      } else {\n        throw new Error('No Spaces available');\n      }\n    });\n    this.elementsSubject.next(this.elements);\n  }\n\n  removeElement(index: number): ElementPiece {\n    return ensureDefined(this.elementSpaces)[index].removePiece() as ElementPiece;\n  }\n\n  removeRemainingElements(): ElementPiece[] {\n    return ensureDefined(this.elementSpaces)\n      .filter((space) => space.piece)\n      .map((space) => space.removePiece() as ElementPiece);\n  }\n\n  addActionPawn(index: number, actionPawn: ActionPawnPiece): void {\n    ensureDefined(this.actionPawnSpaces)[index].addPiece(actionPawn);\n  }\n\n  removeActionPawn(index: number): ActionPawnPiece {\n    return ensureDefined(this.actionPawnSpaces)[index].removePiece() as ActionPawnPiece;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                actionPawnPile\n                            \n                            \n                                    Private\n                                    Readonly\n                                animalElements\n                            \n                            \n                                    Private\n                                    Readonly\n                                faction\n                            \n                            \n                                    Private\n                                    Readonly\n                                speciesPile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    actionPawn\n                                \n                                \n                                    elements\n                                \n                                \n                                    species\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AnimalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        actionPawnPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimalElements\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        speciesPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n\n                \n                    \n                        getactionPawn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        species\n                    \n                \n\n                \n                    \n                        getspecies()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:107\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimalCardComponent.html":{"url":"components/AnimalCardComponent.html","title":"component - AnimalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/animal-card/animal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animal-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardTitle\n                                ActionPawnComponent\n                            MatGridList\n                            MatGridTile\n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnForHeader\n                            \n                            \n                                actionPawnPileLength\n                            \n                            \n                                animal\n                            \n                            \n                                elements\n                            \n                            \n                                emptyElementSpaces\n                            \n                            \n                                speciesPileLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAnimal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setActionPawnForHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                faction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(animalProviderService: AnimalProviderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        faction\n                    \n                \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/animal-card/animal-card.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setActionPawnForHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    setActionPawnForHeader(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnForHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Animal | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementPiece[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyElementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :     undefined[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speciesPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { MatCard, MatCardTitle } from '@angular/material/card';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { MatGridList, MatGridTile } from '@angular/material/grid-list';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { filter, first, map } from 'rxjs';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementComponent } from '../element/element.component';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { Animal } from '../../model/animal.model';\nimport { isNotUndefined } from '../../../engine/util/predicate';\n\n// Todo: change to OnPush\n@Component({\n  selector: 'app-animal-card',\n  standalone: true,\n  imports: [MatCard, MatCardTitle, ActionPawnComponent, MatGridList, MatGridTile, ElementComponent],\n  templateUrl: './animal-card.component.html',\n  styleUrl: './animal-card.component.scss',\n})\nexport class AnimalCardComponent implements OnInit {\n  @Input() faction: Faction | undefined = undefined;\n  animal: Animal | undefined = undefined;\n  elements: ElementPiece[] = [];\n  emptyElementSpaces: null[] = [];\n  actionPawnPileLength = 0;\n  speciesPileLength = 0;\n  actionPawnForHeader: ActionPawnPiece | undefined = undefined;\n\n  constructor(private animalProviderService: AnimalProviderService) {}\n\n  ngOnInit() {\n    if (!this.faction) {\n      throw new Error('faction not set');\n    }\n    this.setActionPawnForHeader(this.faction);\n    this.getAnimal(this.faction);\n  }\n\n  private getAnimal(faction: Faction): void {\n    this.animalProviderService.animals$\n      .pipe(\n        // filter((animals) => animals.some((animal) => animal.id === faction.id)),\n        map((animals) => animals.find((animal) => animal.id === faction.id)),\n        filter(isNotUndefined),\n        first(),\n      )\n      .subscribe((animal) => {\n        this.animal = animal;\n        animal.elements.elements$.subscribe((elements) => {\n          this.elements = elements;\n          this.emptyElementSpaces = Array(6 - this.elements.length).fill(null) as null[];\n        });\n        animal.actionPawn.length$.subscribe((length) => {\n          this.actionPawnPileLength = length;\n        });\n        animal.species.length$.subscribe((length) => {\n          this.speciesPileLength = length;\n        });\n      });\n  }\n\n  private setActionPawnForHeader(faction: Faction): void {\n    this.actionPawnForHeader = defaultPieceFactory(\n      PieceKindEnum.ACTION_PAWN,\n      faction.id,\n    ) as ActionPawnPiece;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{ faction?.name }}\n      \n    \n    \n      \n        @for (element of elements; track $index) {\n          \n        }\n        @for (emptyElementSpace of emptyElementSpaces; track $index) {\n          \n        }\n      \n    \n    \n      \n        Action Pawns\n      \n      Species\n      \n        {{ actionPawnPileLength }}\n      \n      {{ speciesPileLength }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ faction?.name }}                            @for (element of elements; track $index) {                  }        @for (emptyElementSpace of emptyElementSpaces; track $index) {                  }                            Action Pawns            Species              {{ actionPawnPileLength }}            {{ speciesPileLength }}            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalConfig.html":{"url":"interfaces/AnimalConfig.html","title":"interface - AnimalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnimalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawnPile\n                                        \n                                \n                                \n                                        \n                                            elementArea\n                                        \n                                \n                                \n                                        \n                                            elementConfig\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            speciesPile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawnPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawnPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementArea\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementArea:         Area\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Area\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementConfig:         ElementConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         Faction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Faction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speciesPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speciesPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalElements.html":{"url":"classes/AnimalElements.html","title":"class - AnimalElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elements$\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    allElements\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementArea: Area, elementConfig: ElementConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementArea\n                                                  \n                                                        \n                                                                        Area\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementConfig\n                                                  \n                                                        \n                                                                        ElementConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allElements\n                    \n                \n\n                \n                    \n                        getallElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:73\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalProviderService.html":{"url":"injectables/AnimalProviderService.html","title":"injectable - AnimalProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal-provider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animalById\n                            \n                            \n                                animals$\n                            \n                            \n                                    Private\n                                animalsSubject\n                            \n                            \n                                    Private\n                                processedFactionIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalFactory\n                            \n                            \n                                    Private\n                                buildAnimal\n                            \n                            \n                                    Private\n                                buildAnimals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalFactory(animalConfig: AnimalConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animalConfig\n                                            \n                                                            AnimalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimals\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animals$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.animalsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processedFactionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../engine/model/faction.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport { FactionRegistryService } from '../../engine/service/game-element/faction-registry.service';\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { getOrThrow, setDifference } from '../../engine/util/misc';\nimport { Animal, AnimalConfig } from '../model/animal.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalProviderService {\n  private processedFactionIds: Set = new Set();\n  private readonly animalById = new Map();\n  private animalsSubject = new BehaviorSubject([]);\n  animals$ = this.animalsSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {\n    this.buildAnimals();\n  }\n  private buildAnimals(): void {\n    this.factionRegistryService.factionAssignment$.subscribe((factionAssignments) => {\n      // To minimize any building an animal several times, we add the animal id to processedFactionIds as quickly as possible /\n      const factionIds = new Set(\n        factionAssignments.map((factionAssignment) => factionAssignment.id),\n      );\n      const factionIdsToProcess = setDifference(factionIds, this.processedFactionIds);\n      this.processedFactionIds = new Set([\n        ...factionIdsToProcess,\n        ...this.processedFactionIds,\n      ]);\n      factionIdsToProcess.forEach((factionId) => {\n        const faction = this.factionRegistryService.get(factionId);\n        this.buildAnimal(faction);\n      });\n    });\n  }\n\n  private animalFactory(animalConfig: AnimalConfig): Animal {\n    return new Animal(animalConfig);\n  }\n\n  private buildAnimal(faction: Faction): void {\n    const elementAreaId = getOrThrow(elementConfigByAnimal, faction.id).areaId;\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id).actionPawn;\n    const speciesPileId = getOrThrow(pileIdsByAnimal, faction.id).species;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        combineLatestWith(this.pileRegistryService.registeredIds$),\n        filter(\n          ([areaIds, pileIds]) =>\n            areaIds.has(elementAreaId) &&\n            pileIds.has(actionPawnPileId) &&\n            pileIds.has(speciesPileId),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        const animalConfig: AnimalConfig = {\n          faction: faction,\n          actionPawnPile: this.pileRegistryService.get(actionPawnPileId),\n          elementArea: this.areaRegistrySvc.get(elementAreaId),\n          elementConfig: getOrThrow(elementConfigByAnimal, faction.id),\n          speciesPile: this.pileRegistryService.get(speciesPileId),\n        };\n        this.animalById.set(faction.id, this.animalFactory(animalConfig));\n        this.animalsSubject.next(Array.from(this.animalById.values()));\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                spaces$\n                            \n                            \n                                    Private\n                                spacesSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, spaces: Space[])\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spaces\n                                                  \n                                                        \n                                                                        Space[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace(kind?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Space | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AreaState.html":{"url":"interfaces/AreaState.html","title":"interface - AreaState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AreaState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n            \n                Description\n            \n            \n                AreaState does not extend GameStateElement as each Area is unique with a unique ID\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            space\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        space\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        space:         SpaceState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpaceState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                                ElementComponent\n                                ActionPawnComponent\n                                AnimalCardComponent\n                                EyeballComponent\n                                ElementSpaceComponent\n                                AdaptionActionDisplayCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adaptionArea\n                            \n                            \n                                currentPlayerFaction\n                            \n                            \n                                drawPool\n                            \n                            \n                                drawPoolLength\n                            \n                            \n                                factions\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGame\n                            \n                            \n                                draw\n                            \n                            \n                                endTurn\n                            \n                            \n                                    Private\n                                formatElementName\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                startTurn\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elements\n                                \n                                \n                                    actionPawns\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameManagementSvc: GameManagementService, gameStateSvc: GameStateService, elementDrawPoolSvc: ElementDrawPoolService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, areaRegistryService: AreaRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameManagementSvc\n                                                  \n                                                        \n                                                                        GameManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolSvc\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGame\n                        \n                    \n                \n            \n            \n                \ncreateGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endTurn\n                        \n                    \n                \n            \n            \n                \nendTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatElementName\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatElementName(kind: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTurn\n                        \n                    \n                \n            \n            \n                \nstartTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adaptionArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerFaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawPoolLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:51\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:133\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawns\n                    \n                \n\n                \n                    \n                        getactionPawns()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:141\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameManagementService } from '../../../engine/service/game-management.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter, first } from 'rxjs';\nimport { Pile } from '../../../engine/model/pile.model';\nimport { ElementDrawPoolService } from '../../service/element-draw-pool.service';\n\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\nimport { ElementComponent } from '../element/element.component';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementEnum } from '../../constant/element.constant';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { AnimalEnum } from '../../constant/animal.constant';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { AnimalCardComponent } from '../animal-card/animal-card.component';\nimport { PlayerService } from '../../../engine/service/player.service';\nimport { EyeballComponent } from '../action-display/space/eyeball/eyeball.component';\nimport { ElementSpaceComponent } from '../action-display/space/element-space/element-space.component';\nimport { AdaptionActionDisplayCardComponent } from '../action-display/adaption-action-display-card/adaption-action-display-card.component';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { AreaIdEnum, SpaceKindEnum } from '../../constant/area.constant';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [\n    MatButton,\n    MatTooltip,\n    ElementComponent,\n    ActionPawnComponent,\n    AnimalCardComponent,\n    EyeballComponent,\n    ElementSpaceComponent,\n    AdaptionActionDisplayCardComponent,\n  ],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent {\n  currentPlayerFaction: Faction | undefined = undefined;\n  factions: Faction[] = [];\n  drawPool: Pile | undefined = undefined;\n  drawPoolLength = 0;\n  adaptionArea: Area | undefined = undefined;\n  log: string[] = [];\n  constructor(\n    private gameManagementSvc: GameManagementService,\n    private gameStateSvc: GameStateService,\n    private elementDrawPoolSvc: ElementDrawPoolService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private areaRegistryService: AreaRegistryService,\n  ) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    // this.elementDrawPoolSvc.drawPool$\n    //   .pipe(\n    //     filter((drawPool) => drawPool != null),\n    //     first(),\n    //   )\n    //   .subscribe((drawPool) => {\n    //     this.drawPool = drawPool;\n    //     drawPool.length$.subscribe((length) => {\n    //       this.drawPoolLength = length;\n    //     });\n    //   });\n    this.areaRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION)),\n        first(),\n      )\n      .subscribe(() => {\n        this.adaptionArea = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n      });\n  }\n\n  createGame(): void {\n    this.gameManagementSvc.createGame();\n    console.log('Create Game');\n    // should be using factionAssignments$\n    this.factionRegistrySvc.factionAssignment$.subscribe((factionAssignments) => {\n      const factionAssignment = factionAssignments[0];\n      this.factions = [this.factionRegistrySvc.get(factionAssignment.id)];\n\n      // this.factions = factionAssignments.map((factionAssignment) =>\n      //   this.factionRegistrySvc.get(factionAssignment.id),\n      // );\n      this.currentPlayerFaction = this.factions.find(\n        (faction) => faction.ownerId === this.playerService.currentPlayer.id,\n      );\n    });\n  }\n\n  startTurn(): void {\n    console.log('Start Turn');\n    this.gameStateSvc.startTransaction();\n  }\n\n  private formatElementName(kind: string): string {\n    const elementName = kind.replace('Element', '');\n    return elementName.charAt(0).toUpperCase() + elementName.slice(1);\n  }\n\n  draw(): void {\n    if (this.drawPool && this.adaptionArea) {\n      const item = this.drawPool.pull();\n      if (item[0]) {\n        const nextSpace = this.adaptionArea.nextAvailableSpace(SpaceKindEnum.ELEMENT);\n        if (nextSpace) {\n          nextSpace.addPiece(item[0] as ElementPiece);\n        }\n        const element = this.formatElementName(item[0].kind);\n        this.log.push(`You drew a ${element}`);\n      } else {\n        this.log.push('Pile is empty!');\n      }\n    }\n  }\n\n  endTurn(): void {\n    console.log('End Turn');\n    this.gameStateSvc.commitTransaction();\n  }\n\n  get elements(): ElementPiece[] {\n    const elements: ElementPiece[] = [];\n    for (const elementKind of Object.values(ElementEnum) as ElementEnum[]) {\n      elements.push(defaultPieceFactory(elementKind) as ElementPiece);\n    }\n    return elements;\n  }\n\n  get actionPawns(): ActionPawnPiece[] {\n    const actionPawns: ActionPawnPiece[] = [];\n    for (const animal of Object.values(AnimalEnum) as AnimalEnum[]) {\n      actionPawns.push(defaultPieceFactory(PieceKindEnum.ACTION_PAWN, animal) as ActionPawnPiece);\n    }\n    return actionPawns;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Initialize\n      Start Turn\n      Draw!\n      End Turn\n    \n    \n      Draw Pool: {{ drawPoolLength }}\n      \n        \n          @for (line of log; track $index) {\n            {{ line }}\n          }\n        \n      \n    \n  \n  \n    \n  \n  \n    @for (faction of factions; track faction.id) {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Initialize      Start Turn      Draw!      End Turn              Draw Pool: {{ drawPoolLength }}                        @for (line of log; track $index) {            {{ line }}          }                                  @for (faction of factions; track faction.id) {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementComponent.html":{"url":"components/ElementComponent.html","title":"component - ElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/element/element.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    kind\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :     ElementPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/element/element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        kind\n                    \n                \n\n                \n                    \n                        getkind()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../model/element.model';\n\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-element',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './element.component.html',\n  styleUrl: './element.component.scss',\n})\nexport class ElementComponent {\n  @Input() element: ElementPiece | undefined = undefined;\n\n  get kind(): string | undefined {\n    return this.element?.kind;\n  }\n\n  get name(): string | undefined {\n    return this.element?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.kind) {\n      return getOrThrow(imgPathByKind, this.kind);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/element-config.constant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementEnum, ElementKind } from './element.constant';\nimport { AreaId, AreaIdEnum } from './area.constant';\nimport { AnimalEnum } from './animal.constant';\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                    Private\n                                ready\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: ElementPiece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        ElementPiece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ready\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.ready)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:44\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, first, Observable } from 'rxjs';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { PileIdEnum } from '../constant/pile.constant';\nimport { ElementPiece } from '../model/element.model';\nimport { Piece } from '../../engine/model/piece.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | undefined = undefined;\n  private ready = false;\n  private readySubject: BehaviorSubject = new BehaviorSubject(this.ready);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.pileRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(PileIdEnum.ELEMENT)),\n        first(),\n      )\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PileIdEnum.ELEMENT);\n        this.ready = true;\n        this.readySubject.next(this.ready);\n      });\n  }\n\n  private get drawPool(): Pile {\n    if (this._drawPool) {\n      return this._drawPool;\n    } else {\n      throw new Error('Pile not ready');\n    }\n  }\n\n  get length$(): Observable {\n    return this.drawPool.length$;\n  }\n\n  pull(count = 1): (ElementPiece | null)[] {\n    return this.drawPool.pull(count) as ElementPiece[];\n  }\n\n  put(pieces: ElementPiece[]): void {\n    this.drawPool.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/element.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\n\nimport { ElementKind } from '../constant/element.constant';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementSpaceComponent.html":{"url":"components/ElementSpaceComponent.html","title":"component - ElementSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/element-space/element-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./element-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :     ElementPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../../../model/element.model';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\nimport { ElementComponent } from '../../../element/element.component';\n\n@Component({\n  selector: 'app-element-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent],\n  templateUrl: './element-space.component.html',\n  styleUrl: './element-space.component.scss',\n})\nexport class ElementSpaceComponent {\n  @Input() element: ElementPiece | null = null;\n\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'elementSpace');\n  }\n}\n\n    \n\n    \n        \n  \n    @if (element) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (element) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EyeballComponent.html":{"url":"components/EyeballComponent.html","title":"component - EyeballComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EyeballComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-eyeball\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./eyeball.component.html\n            \n\n\n\n            \n                styleUrl\n                ./eyeball.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/eyeball/eyeball.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\n\n@Component({\n  selector: 'app-eyeball',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  templateUrl: './eyeball.component.html',\n  styleUrl: './eyeball.component.scss',\n})\nexport class EyeballComponent {\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'eyeball');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EyeballComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  name: string;\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionState.html":{"url":"interfaces/FactionState.html","title":"interface - FactionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  name: string;\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:31\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  get(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(elements: TgameElement[]): void {\n    elements.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elements);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameElementState.html":{"url":"interfaces/GameElementState.html","title":"interface - GameElementState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameElementState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  protected abstract get elementState$(): Observable;\n  protected abstract registerEntityState(element: TgameElement): void;\n  protected abstract setEntityState(state: GameElementState): void;\n\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  private getEntity(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementService.html":{"url":"injectables/GameManagementService.html","title":"injectable - GameManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createArea\n                            \n                            \n                                    Private\n                                createDrawPoolPile\n                            \n                            \n                                    Private\n                                createFactions\n                            \n                            \n                                createGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDrawPoolPile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDrawPoolPile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createFactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFactions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGame\n                        \n                    \n                \n            \n            \n                \ncreateGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../model/pile.model';\nimport { Space } from '../model/space.model';\nimport { Area } from '../model/area.model';\nimport { shuffle, startCase } from 'lodash';\nimport { Faction } from '../model/faction.model';\nimport { PlayerService } from './player.service';\nimport { getOrThrow } from '../util/misc';\nimport { AreaRegistryService } from './game-element/area-registry.service';\nimport { FactionRegistryService } from './game-element/faction-registry.service';\nimport { PileRegistryService } from './game-element/pile-registry.service';\nimport { baseGameState } from '../../game/constant/game-state.constant';\nimport { AnimalEnum } from '../../game/constant/animal.constant';\nimport { SpaceKindEnum } from '../../game/constant/area.constant';\nimport { elementConfigByAnimal } from '../../game/constant/element-config.constant';\nimport { PieceKindEnum } from '../../game/constant/piece.constant';\nimport { defaultPieceFactory } from '../model/piece.model';\nimport { pileIdsByAnimal } from '../../game/constant/pile-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementService {\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private pileRegistrySvc: PileRegistryService,\n  ) {}\n\n  createGame(): void {\n    this.createArea();\n    this.createFactions();\n    this.createDrawPoolPile();\n  }\n\n  private createArea(): void {\n    const areas: Area[] = [];\n    baseGameState.area.forEach((areaState) => {\n      const spaces: Space[] = [];\n      areaState.space.forEach((spaceState) => {\n        spaces.push(new Space(spaceState.kind));\n      });\n      areas.push(new Area(areaState.id, spaces));\n    });\n    this.areaRegistrySvc.register(areas);\n  }\n\n  private createFactions() {\n    const factions: Faction[] = [];\n    const areas: Area[] = [];\n    const piles: Pile[] = [];\n    const shuffledAnimals = shuffle(Object.values(AnimalEnum));\n    this.playerService.players.forEach((player, index) => {\n      const assignedAnimal = shuffledAnimals[index];\n      const elementConfig = getOrThrow(elementConfigByAnimal, assignedAnimal);\n\n      factions.push(\n        new Faction({\n          id: assignedAnimal,\n          name: startCase(assignedAnimal),\n          ownerId: player.id,\n          score: 0,\n        }),\n      );\n\n      const spaces: Space[] = [];\n      // inherent element spaces\n      for (let i = 0; i  {\n      piles.push(new Pile(pileState));\n    });\n    this.pileRegistrySvc.register(piles);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Defining the GameState object managed by GameStateStoreService\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            area\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            pile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        area\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        area:         AreaState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         FactionState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FactionState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pile:         PileState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PileState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FactionState } from './faction.model';\nimport { PileState } from './pile.model';\nimport { AreaState } from './area.model';\n\n/**\n * Defining the GameState object managed by GameStateStoreService\n */\nexport interface GameState {\n  area: AreaState[];\n  faction: FactionState[];\n  pile: PileState[];\n}\n\nexport const emptyGameState: GameState = {\n  area: [],\n  faction: [],\n  pile: [],\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gsp$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gsp$\n                    \n                \n\n                \n                    \n                        getgsp$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-client.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { of, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n  }\n\n  get gsp$(): Observable {\n    return of(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameStatePatch.html":{"url":"interfaces/GameStatePatch.html","title":"interface - GameStatePatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameStatePatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state-patch.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            patch\n                                        \n                                \n                                \n                                        \n                                            timeStamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        patch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        patch:     Operation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Operation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeStamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Operation } from 'fast-json-patch';\n\nexport interface GameStatePatch {\n  timeStamp: number;\n  patch: Operation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(gameState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameState } from '../../model/game-state.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { applyPatch, compare } from 'fast-json-patch';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      timeStamp: Date.now(),\n      patch: compare(oldState, newState),\n    };\n  }\n\n  apply(gameState: GameState, gsp: GameStatePatch): GameState {\n    return applyPatch(gameState, gsp.patch, undefined, false).newDocument;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:87\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { filter, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { PileState } from '../../model/pile.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { AreaState } from '../../model/area.model';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.pipe(filter((gsp) => gsp != undefined)).subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    const updatedState = this.gspService.apply(this.gameStateStore.gameState, gsp);\n    this.gameStateStore.setGameState(updatedState);\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        this.gameStateStore.gameState,\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\nusing the register method of the state element management service such as PileService or AreaService.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : deepClone(emptyGameState) as GameState\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:151\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:163\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:175\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PileState } from '../../model/pile.model';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { emptyGameState, GameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\nimport { AreaState } from '../../model/area.model';\nimport { GameElementState } from '../../model/game-element.model';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\n * using the register method of the state element management service such as PileService or AreaService.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState = deepClone(emptyGameState) as GameState;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      map((gameState) => {\n        return selector(gameState);\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = this._gameState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState {\n    return deepClone(this._gameState) as GameState;\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Piece.html":{"url":"interfaces/Piece.html","title":"interface - Piece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Piece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/piece.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { startCase } from 'lodash';\n\nexport interface Piece {\n  kind: string;\n  owner: string | null;\n  name: string;\n}\n\nexport type PieceFactory = (kind: string, owner?: string | null, name?: string | null) => Piece;\n\nexport function defaultPieceFactory(\n  kind: string,\n  owner: string | null = null,\n  name: string | null = null,\n): Piece {\n  return { kind: kind, owner: owner, name: name ? name : startCase(kind) };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                owner\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:20\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:56\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:82\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:39\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pull(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pull(count = 1): (T | null)[] {\n    return this.pile.pull(count) as T[];\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PileAdapter.html":{"url":"classes/PileAdapter.html","title":"class - PileAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PileAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pile: Pile)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pile\n                                                  \n                                                        \n                                                                        Pile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:99\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pull(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pull(count = 1): (T | null)[] {\n    return this.pile.pull(count) as T[];\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileConfig.html":{"url":"interfaces/PileConfig.html","title":"interface - PileConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/pile-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawn\n                                        \n                                \n                                \n                                        \n                                            species\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        species\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        species:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalEnum } from './animal.constant';\nimport { PileIdEnum } from './pile.constant';\n\nexport interface PileConfig {\n  actionPawn: string;\n  species: string;\n}\n\nexport const pileIdsByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n]);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileState.html":{"url":"interfaces/PileState.html","title":"interface - PileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inventory\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inventory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inventory:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pull(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pull(count = 1): (T | null)[] {\n    return this.pile.pull(count) as T[];\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Player.html":{"url":"classes/Player.html","title":"class - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/player.model.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement } from './game-element.model';\n\nexport interface PlayerState {\n  id: string;\n  name: string;\n}\n\nexport class Player extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                    Readonly\n                                players\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player\n\n                    \n                \n                \n                    \n                        Default value : this.players[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Player({ id: 'test1', name: 'Test Player1' }),\n    new Player({ id: 'test2', name: 'Test Player2' }),\n    new Player({ id: 'test3', name: 'Test Player3' }),\n    new Player({ id: 'test4', name: 'Test Player4' }),\n    new Player({ id: 'test5', name: 'Test Player5' }),\n    new Player({ id: 'test6', name: 'Test Player6' }),\n  ] as const\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/player.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from '../model/player.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  readonly players: Player[] = [\n    new Player({ id: 'test1', name: 'Test Player1' }),\n    new Player({ id: 'test2', name: 'Test Player2' }),\n    new Player({ id: 'test3', name: 'Test Player3' }),\n    new Player({ id: 'test4', name: 'Test Player4' }),\n    new Player({ id: 'test5', name: 'Test Player5' }),\n    new Player({ id: 'test6', name: 'Test Player6' }),\n  ] as const;\n  readonly currentPlayer: Player = this.players[0];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerState.html":{"url":"interfaces/PlayerState.html","title":"interface - PlayerState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameElement } from './game-element.model';\n\nexport interface PlayerState {\n  id: string;\n  name: string;\n}\n\nexport class Player extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _action\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                removePiece\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    action\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kind: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kind\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                            Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Piece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n\n                \n                    \n                        getaction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpaceState.html":{"url":"interfaces/SpaceState.html","title":"interface - SpaceState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpaceState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            piece\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        piece\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        piece:         Piece | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Piece | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeciesPiece.html":{"url":"interfaces/SpeciesPiece.html","title":"interface - SpeciesPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeciesPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/species.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\nimport { AnimalKind } from '../constant/animal.constant';\n\nexport interface SpeciesPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            interface\n            AreaState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            interface\n            FactionState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            interface\n            GameElementState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state-patch.model.ts\n            \n            interface\n            GameStatePatch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            interface\n            GameState\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/piece.model.ts\n            \n            interface\n            Piece\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            PileAdapter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            interface\n            PileState\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            class\n            Player\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            interface\n            SpaceState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management.service.ts\n            \n            injectable\n            GameManagementService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/engine/service/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/util/misc.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/misc.ts\n            \n            function\n            ensureDefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/misc.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/misc.ts\n            \n            function\n            setDifference\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n            \n            component\n            AdaptionActionDisplayCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n            \n            component\n            ActionPawnSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/element-space/element-space.component.ts\n            \n            component\n            ElementSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n            \n            component\n            EyeballComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-pawn/action-pawn.component.ts\n            \n            component\n            ActionPawnComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/animal-card/animal-card.component.ts\n            \n            component\n            AnimalCardComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/game/component/element/element.component.ts\n            \n            component\n            ElementComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/constant/area.constant.ts\n            \n            variable\n            elementAreaIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/game-state.constant.ts\n            \n            variable\n            baseGameState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/image.constant.ts\n            \n            variable\n            imgPathByKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            interface\n            PileConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            variable\n            pileIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/action-pawn.model.ts\n            \n            interface\n            ActionPawnPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            AnimalElements\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            interface\n            AnimalConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/element.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/species.model.ts\n            \n            interface\n            SpeciesPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/adaption-action-display.service.ts\n            \n            injectable\n            AdaptionActionDisplayService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/game/service/animal-provider.service.ts\n            \n            injectable\n            AnimalProviderService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            fast-json-patch : ^3.1.1\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalEnum   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../area.constant.ts)\n                        \n                        \n                            ElementEnum   (src/.../element.constant.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../piece.constant.ts)\n                        \n                        \n                            PileIdEnum   (src/.../pile.constant.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../area.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n\n    src/app/game/constant/area.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n    src/app/game/constant/element.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grass\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grub\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meat\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seed\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sun\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : water\n                            \n                        \n            \n        \n\n    src/app/game/constant/piece.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 SPECIES\n                            \n                        \n                        \n                            \n                                Value : species\n                            \n                        \n            \n        \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PileIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deepCompare   (src/.../misc.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            ensureDefined   (src/.../misc.ts)\n                        \n                        \n                            getOrThrow   (src/.../misc.ts)\n                        \n                        \n                            isFalse   (src/.../predicate.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                        \n                            isTrue   (src/.../predicate.ts)\n                        \n                        \n                            setDifference   (src/.../misc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/util/misc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureDefined\n                        \n                    \n                \n            \n            \n                \nensureDefined(value)\n                \n            \n\n\n\n\n            \n                \n                        Ensures that a given value is defined (i.e., not undefined).\nTypically used for values that start as undefined and then are set during initialization by a subscription.\nIf the value is undefined, this function throws an error with a message\nindicating that the value is not defined. If the value is defined, it is\nreturned unchanged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be checked.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \nThe value itself if it is defined.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDifference\n                        \n                    \n                \n            \n            \n                \nsetDifference(setA: Set, setB: Set)\n                \n            \n\n\n\n\n            \n                \n                        Returns the items that are in setA, but not in setB\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                setA\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setB\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Set\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner, name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFalse\n                        \n                    \n                \n            \n            \n                \nisFalse(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTrue\n                        \n                    \n                \n            \n            \n                \nisTrue(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDominantSpecies\nThis project was generated with Angular CLI version 18.2.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Joe K.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalKind   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaId   (src/.../area.constant.ts)\n                        \n                        \n                            ElementKind   (src/.../element.constant.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/area.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/element.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            baseGameState   (src/.../game-state.constant.ts)\n                        \n                        \n                            elementAreaIdsByAnimal   (src/.../area.constant.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../element-config.constant.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            imgPathByKind   (src/.../image.constant.ts)\n                        \n                        \n                            pileIdsByAnimal   (src/.../pile-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideAnimationsAsync('noop'),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/game-state.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [\n    {\n      id: AreaIdEnum.ACTION_DISPLAY_ADAPTION,\n      space: [\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n      ],\n    },\n  ],\n  faction: [],\n  pile: [\n    {\n      id: PileIdEnum.ELEMENT,\n      owner: null,\n      inventory: {\n        // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n        [ElementEnum.GRASS]: 18,\n        [ElementEnum.GRUB]: 18,\n        [ElementEnum.MEAT]: 18,\n        [ElementEnum.SEED]: 18,\n        [ElementEnum.SUN]: 18,\n        [ElementEnum.WATER]: 18,\n      },\n    },\n  ],\n}\n                    \n                \n\n            \n                \n                    GameState defining the static elements of the DS game\n\n                \n            \n\n        \n    \n\n    src/app/game/constant/area.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementAreaIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [AnimalEnum.AMPHIBIAN, AreaIdEnum.AMPHIBIAN_ELEMENT],\n  [AnimalEnum.ARACHNID, AreaIdEnum.ARACHNID_ELEMENT],\n  [AnimalEnum.BIRD, AreaIdEnum.BIRD_ELEMENT],\n  [AnimalEnum.INSECT, AreaIdEnum.INSECT_ELEMENT],\n  [AnimalEnum.MAMMAL, AreaIdEnum.MAMMAL_ELEMENT],\n  [AnimalEnum.REPTILE, AreaIdEnum.REPTILE_ELEMENT],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/element-config.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [],\n  faction: [],\n  pile: [],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/image.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imgPathByKind\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  // elements /\n  ['grass', 'dominant-species/element/noun-grass-7195612.svg'],\n  ['grub', 'dominant-species/element/noun-grub-3386143.svg'],\n  ['meat', 'dominant-species/element/noun-cow-skull-151117.svg'],\n  ['seed', 'dominant-species/element/noun-seed-6850047.svg'],\n  ['sun', 'dominant-species/element/noun-sun-7300296.svg'],\n  ['water', 'dominant-species/element/noun-water-water-1235535.svg'],\n  // animals /\n  ['amphibian', 'dominant-species/animal/noun-gecko-367390.svg'],\n  ['arachnid', 'dominant-species/animal/noun-spider-7144060.svg'],\n  ['bird', 'dominant-species/animal/noun-eagle-6606521.svg'],\n  ['insect', 'dominant-species/animal/noun-grasshopper-7049525.svg'],\n  ['mammal', 'dominant-species/animal/noun-monkey-2997582.svg'],\n  ['reptile', 'dominant-species/animal/noun-snake-4412103.svg'],\n  // others /\n  ['eyeball', 'dominant-species/other/noun-eye-2037742.svg'],\n  ['elementSpace', 'dominant-species/other/noun-leaf-7290921.svg'],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/pile-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pileIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
