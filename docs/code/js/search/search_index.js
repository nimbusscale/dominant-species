var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.285,1,1.156]],["body/interfaces/Action.html",[0,0.436,1,2.068,2,1.901,3,0.256,4,0.232,5,0.232,6,5.332,7,0.14,8,0.607,9,2.343,10,0.993,11,0.185,12,0.013,13,0.256,14,0.012,15,0.012]],["title/injectables/ActionDisplayManagerService.html",[16,0.524,17,2.682]],["body/injectables/ActionDisplayManagerService.html",[1,1.235,3,0.179,4,0.162,5,0.162,7,0.098,8,0.485,11,0.195,12,0.014,13,0.239,14,0.01,15,0.01,16,0.748,17,3.83,18,1.328,19,5.168,20,5.168,21,2.792,22,3.358,23,1.38,24,4.958,25,4.801,26,1.11,27,4.801,28,0.894,29,3.725,30,4.357,31,0.9,32,5.725,33,0.771,34,0.468,35,0.771,36,4.282,37,0.771,38,0.979,39,4.801,40,4.282,41,1.986,42,0.315,43,0.714,44,1.807,45,3.083,46,1.842,47,3.725,48,2.159,49,3.033,50,1.602,51,0.996,52,2.526,53,3.725,54,1.28,55,1.235,56,0.217,57,2.159,58,3.725,59,1.03,60,3.725,61,3.358,62,3.725,63,3.725,64,4.98,65,3.083,66,3.358,67,3.083,68,3.725,69,3.725,70,2.39,71,2.06,72,0.927,73,3.725,74,3.725,75,3.725,76,3.725,77,2.526,78,3.725,79,3.358,80,3.725,81,3.725,82,3.725,83,3.725,84,3.725,85,3.725,86,3.725]],["title/interfaces/ActionDisplayServiceWithSetup.html",[0,0.285,39,2.682]],["body/interfaces/ActionDisplayServiceWithSetup.html",[0,0.417,2,1.818,3,0.245,4,0.222,5,0.222,7,0.134,8,0.592,11,0.211,12,0.014,13,0.245,14,0.012,15,0.012,25,5.167,27,5.167,38,0.834,39,4.673,41,2.227,42,0.268,51,1.364,87,4.598,88,5.101,89,3.7]],["title/classes/ActionDisplaySetupManager.html",[24,2.886,56,0.152]],["body/classes/ActionDisplaySetupManager.html",[1,1.161,3,0.168,4,0.153,5,0.153,7,0.092,8,0.465,11,0.203,12,0.014,13,0.23,14,0.009,15,0.009,16,0.718,17,2.694,19,5.345,20,5.345,21,2.888,22,3.158,23,1.448,24,4.501,25,4.701,26,1.065,27,4.701,28,0.84,30,3.688,31,0.948,33,0.725,34,0.44,35,0.725,37,0.988,38,0.999,39,4.965,41,1.936,42,0.307,43,0.671,44,1.7,45,2.9,46,2.011,47,3.503,48,2.031,49,2.91,50,1.507,51,0.937,52,2.376,53,3.503,54,1.204,55,1.161,56,0.208,57,2.031,58,3.503,59,1.125,60,3.503,61,3.158,62,3.503,63,3.503,64,6.113,65,4.501,66,4.307,67,3.955,68,4.778,69,3.503,70,2.247,71,3.23,72,0.872,73,3.503,74,3.503,75,3.503,76,3.503,77,2.376,78,3.503,79,3.158,80,3.503,81,3.503,82,3.503,83,3.503,84,3.503,85,3.503,86,3.503,90,1.937,91,5.493,92,4.027,93,1.232,94,1.105,95,4.027,96,4.027,97,4.027]],["title/components/ActionPawnComponent.html",[98,0.966,99,1.692]],["body/components/ActionPawnComponent.html",[1,2.19,3,0.162,4,0.146,5,0.146,7,0.088,10,0.8,11,0.117,12,0.014,13,0.162,14,0.009,15,0.009,21,1.504,31,0.862,34,0.756,42,0.302,43,0.644,44,1.631,52,2.28,56,0.146,93,0.867,94,0.778,98,1.475,99,2.785,100,2.351,101,1.777,102,1.777,103,1.777,104,4.338,105,4.633,106,3.362,107,1.777,108,2.569,109,2.569,110,3.088,111,3.214,112,2.693,113,2.163,114,1.851,115,2.163,116,5.34,117,2.163,118,5.34,119,3.572,120,2.943,121,1.782,122,3.085,123,4.406,124,2.943,125,4.175,126,3.865,127,3.865,128,3.865,129,2.585,130,3.865,131,2.783,132,3.865,133,1.859,134,3.345,135,2.157,136,2.421,137,2.783,138,1.949,139,1.949,140,1.565,141,1.243,142,1.233,143,3.865,144,3.865,145,3.845,146,2.783,147,1.777,148,2.455,149,1.475,150,1.777,151,3.035,152,1.777,153,1.777,154,1.631,155,2.455,156,1.631,157,2.455,158,1.631,159,1.391,160,1.631,161,1.777,162,1.631,163,1.391,164,1.504,165,1.777,166,1.631,167,1.777,168,1.631,169,1.631,170,1.777,171,1.565,172,1.565,173,2.455,174,1.565,175,2.163,176,2.078,177,1.565,178,1.565,179,1.504,180,1.777,181,1.777]],["title/interfaces/ActionPawnPiece.html",[0,0.285,124,1.928]],["body/interfaces/ActionPawnPiece.html",[0,0.419,2,1.828,3,0.246,4,0.223,5,0.223,7,0.134,8,0.594,11,0.178,12,0.014,13,0.246,14,0.012,15,0.012,42,0.321,87,4.622,122,3.901,124,3.371,182,5.127,183,2.339,184,3.028,185,6.066,186,3.692,187,5.127]],["title/components/ActionPawnSpaceComponent.html",[98,0.966,154,1.692]],["body/components/ActionPawnSpaceComponent.html",[1,2.233,3,0.168,4,0.152,5,0.152,7,0.091,11,0.121,12,0.014,13,0.168,14,0.009,15,0.009,21,1.562,31,0.524,34,0.599,42,0.321,43,0.669,44,1.694,52,2.368,56,0.152,93,0.9,94,0.807,98,1.504,99,2.83,100,2.412,101,1.845,102,1.845,103,1.845,104,3.433,105,2.685,107,1.845,108,2.636,109,2.636,110,3.105,111,3.232,112,3.441,113,2.219,114,1.899,115,2.219,117,2.219,119,3.666,120,3.377,124,3.002,133,1.931,134,3.433,135,2.24,140,2.219,141,2.157,147,1.845,148,2.52,149,1.504,150,1.845,151,3.083,152,1.845,153,1.845,154,2.83,155,2.52,156,1.694,157,2.52,158,1.694,159,1.445,160,1.694,161,1.845,162,1.694,163,1.445,164,1.562,165,1.845,166,2.83,167,1.845,168,1.694,169,2.83,170,1.845,171,1.625,172,1.625,173,2.52,174,1.625,175,2.219,176,2.132,177,1.625,178,1.625,179,1.562,180,1.845,181,1.845,188,4.766,189,4.297,190,3.147,191,2.313,192,4.766,193,4.766,194,3.491,195,2.89,196,3.147,197,4.013]],["title/components/AdaptionActionDisplayCardComponent.html",[98,0.966,156,1.692]],["body/components/AdaptionActionDisplayCardComponent.html",[1,2.295,3,0.134,4,0.121,5,0.121,7,0.147,8,0.395,11,0.166,12,0.014,13,0.134,14,0.008,15,0.008,21,3.054,26,0.904,28,0.667,29,2.778,30,3.968,31,0.792,33,0.575,34,0.602,35,0.575,37,0.575,38,0.454,42,0.338,43,0.533,44,3.064,45,2.3,48,1.611,49,1.692,51,0.743,52,1.884,56,0.121,57,1.611,93,1.046,94,0.938,98,1.328,99,1.348,100,2.053,101,1.469,102,1.469,103,1.469,104,4.035,107,1.469,110,2.996,111,3.118,112,2.425,113,1.889,114,1.616,115,1.889,117,1.889,120,2.243,124,2.65,135,1.783,140,1.889,141,1.948,147,1.469,148,2.144,149,1.553,150,1.469,151,2.785,152,1.469,153,1.469,154,2.556,155,2.144,156,2.556,157,2.144,158,1.348,159,1.15,160,1.348,161,1.469,162,1.348,163,1.15,164,1.243,165,1.469,166,1.348,167,1.469,168,2.556,169,2.556,170,1.469,171,1.294,172,1.294,173,2.144,174,1.294,175,1.889,176,1.815,177,1.294,178,1.294,179,1.243,180,1.469,181,1.469,189,3.657,198,4.843,199,5.051,200,2.505,201,3.657,202,4.791,203,4.056,204,3.074,205,4.056,206,4.056,207,5.851,208,3.093,209,5.268,210,4.663,211,2.778,212,3.194,213,2.533,214,1.783,215,3.358,216,4.056,217,3.194,218,2.001,219,2.778,220,2.3,221,2.001,222,3.194,223,3.194,224,3.194,225,2.778,226,3.194,227,2.505,228,4.749]],["title/injectables/AdaptionActionDisplayService.html",[16,0.524,30,2.365]],["body/injectables/AdaptionActionDisplayService.html",[1,2.216,3,0.104,4,0.094,5,0.094,7,0.121,8,0.327,11,0.205,12,0.014,13,0.104,14,0.006,15,0.006,16,0.504,18,0.769,19,5.532,23,1.317,25,3.162,26,0.748,27,3.566,28,0.804,30,2.274,31,0.998,33,0.959,34,0.582,35,0.959,37,1.147,38,0.906,42,0.328,43,0.414,46,0.798,48,1.944,49,2.042,51,0.577,52,1.464,54,0.742,55,0.716,56,0.094,59,1.186,65,3.404,66,3.023,67,2.776,70,1.385,71,2.564,72,0.537,77,1.464,93,1.581,94,1.418,120,2.274,124,3.329,125,2.975,135,1.385,139,1.251,141,1.965,142,0.883,149,0.598,163,0.893,184,1.561,186,1.554,191,2.782,198,5.532,207,5.315,208,2.81,213,3.182,218,1.554,221,1.554,225,2.158,227,1.946,229,2.158,230,4.727,231,4.727,232,2.377,233,3.404,234,3.404,235,3.855,236,3.855,237,3.353,238,5.33,239,5.772,240,2.481,241,3.605,242,4.592,243,3.855,244,3.855,245,3.414,246,2.481,247,2.481,248,3.855,249,2.481,250,3.855,251,2.481,252,2.481,253,2.481,254,2.481,255,2.481,256,3.855,257,2.481,258,2.481,259,3.855,260,2.481,261,2.481,262,2.481,263,2.776,264,2.481,265,2.481,266,3.855,267,2.481,268,2.481,269,1.787,270,1.464,271,1.314,272,2.481,273,1.66,274,2.158,275,1.66,276,2.961,277,1.66,278,1.464,279,1.787,280,1.554,281,2.481,282,2.481,283,3.855,284,2.481,285,2.481,286,1.66,287,2.481,288,2.158,289,2.481,290,2.481,291,3.855,292,3.023,293,2.158,294,2.481,295,2.961,296,2.481,297,2.481,298,1.66,299,2.481,300,3.855,301,2.481,302,2.481,303,2.481,304,1.314,305,1.442,306,2.481,307,2.274,308,2.481,309,1.946,310,2.481,311,3.855,312,2.481,313,2.481,314,1.385,315,1.787,316,2.481,317,2.481,318,1.946,319,1.787,320,2.481,321,2.481,322,2.481]],["title/classes/Animal.html",[56,0.152,159,1.443]],["body/classes/Animal.html",[0,0.228,1,0.925,3,0.134,4,0.121,5,0.121,7,0.073,8,0.396,9,1.651,10,0.611,11,0.195,12,0.014,13,0.231,14,0.008,15,0.008,23,1.459,28,0.976,31,0.965,33,0.577,34,0.663,35,0.577,38,0.665,42,0.346,46,1.505,51,0.746,56,0.177,59,1.212,72,1.313,90,1.543,120,2.656,121,1.561,124,1.543,129,2.146,135,1.79,139,1.617,142,1.358,149,1.128,159,1.684,191,2.33,208,2.79,213,3.097,221,2.009,232,2.148,233,2.31,234,2.31,263,2.31,273,2.146,276,2.009,277,2.146,278,1.892,279,2.31,280,2.009,295,3.801,298,2.146,305,1.75,307,1.892,314,1.79,315,2.31,319,2.31,323,2.31,324,3.48,325,4.37,326,4.652,327,2.566,328,4.37,329,3.081,330,3.668,331,3.801,332,4.678,333,2.515,334,3.881,335,3.207,336,3.207,337,3.207,338,2.79,339,3.207,340,3.207,341,3.207,342,3.207,343,3.207,344,3.207,345,3.207,346,3.207,347,2.009,348,2.148,349,2.31,350,3.759,351,2.31,352,2.146,353,2.009,354,2.515,355,1.299,356,3.368,357,4.329,358,2.515,359,2.515,360,2.515,361,2.515,362,2.515,363,2.515,364,2.515,365,3.668,366,2.515,367,2.515,368,2.515,369,3.129,370,2.515,371,2.515,372,2.515,373,2.515,374,2.515,375,2.31,376,2.515,377,2.515,378,2.515,379,2.515,380,2.515,381,2.515,382,2.515,383,2.31,384,2.515,385,3.668,386,2.515,387,3.668,388,2.515,389,3.668,390,2.515,391,2.515,392,2.515,393,2.515]],["title/components/AnimalCardComponent.html",[98,0.966,158,1.692]],["body/components/AnimalCardComponent.html",[1,1.764,3,0.104,4,0.094,5,0.094,7,0.132,8,0.327,11,0.209,12,0.014,13,0.104,14,0.006,15,0.006,21,0.969,23,1.143,26,0.749,28,0.519,31,0.922,33,0.852,34,0.631,35,0.852,37,0.852,38,0.822,42,0.336,43,0.415,44,1.051,48,1.255,49,2.047,50,0.931,51,0.579,52,1.469,56,0.094,57,1.255,59,0.448,77,1.469,93,1.432,94,1.284,98,1.142,99,2.253,100,1.701,101,1.145,102,1.145,103,1.145,105,1.665,107,1.145,110,2.856,111,2.973,112,1.096,113,1.565,114,1.339,115,1.565,117,1.565,119,2.585,124,2.569,125,4.05,134,2.421,135,1.389,140,1.565,141,1.243,147,1.145,148,1.777,149,1.394,150,1.145,151,2.455,152,1.145,153,1.145,154,1.051,155,1.777,156,1.051,157,1.777,158,2.253,159,2.642,160,1.051,161,1.145,162,1.051,163,0.896,164,0.969,165,1.145,166,2.253,167,1.145,168,1.051,169,1.051,170,1.145,171,1.008,172,1.008,173,1.777,174,1.008,175,1.565,176,1.504,177,1.008,178,1.008,179,0.969,180,1.145,181,1.145,186,1.559,195,1.793,196,1.952,200,1.952,201,3.03,202,4.12,203,3.362,204,2.644,205,3.362,206,3.362,208,2.813,209,4.645,211,2.165,213,2.178,214,1.389,218,1.559,221,1.559,227,1.952,228,4.187,245,1.949,304,2.829,305,0.931,327,2.642,329,2.157,347,1.559,383,1.793,394,6.23,395,5.616,396,4.737,397,4.737,398,4.737,399,4.737,400,5.781,401,5.781,402,5.781,403,3.865,404,3.865,405,2.489,406,4.093,407,3.865,408,3.865,409,2.489,410,2.489,411,3.865,412,2.489,413,2.489,414,2.489,415,2.489,416,2.489,417,2.489,418,2.157,419,1.952,420,2.489,421,2.489,422,2.489,423,2.165,424,2.165,425,2.165,426,1.952,427,2.489,428,2.165,429,2.489,430,2.489,431,0.931,432,2.489,433,2.489,434,2.489,435,2.489,436,2.489,437,3.865,438,3.169,439,2.489,440,2.489,441,2.489,442,2.489,443,2.489,444,2.489,445,2.489,446,2.489,447,2.489,448,2.489,449,2.489,450,2.585,451,2.489,452,2.489,453,2.489,454,2.489,455,3.865,456,3.865,457,3.865]],["title/interfaces/AnimalConfig.html",[0,0.285,331,2.511]],["body/interfaces/AnimalConfig.html",[0,0.244,1,0.991,2,1.066,3,0.144,4,0.13,5,0.13,7,0.078,8,0.417,9,1.028,10,0.643,11,0.2,12,0.014,13,0.24,14,0.008,15,0.008,23,1.357,28,0.717,34,0.375,38,0.699,42,0.351,46,1.582,51,0.8,56,0.186,59,1.241,72,1.356,120,1.654,124,1.654,135,1.918,139,1.733,142,1.381,149,1.186,159,1.237,191,2.423,208,2.261,213,3.172,221,2.153,232,2.58,233,2.475,234,2.475,263,2.475,273,2.3,276,2.153,277,2.3,278,2.028,279,2.475,280,2.153,295,3.926,298,2.3,305,1.84,307,2.028,314,1.918,315,2.475,319,2.475,323,2.475,324,2.882,325,4.775,326,4.192,327,2.7,328,4.775,329,1.918,330,2.695,331,3.597,334,3.7,347,2.153,348,2.763,349,2.475,350,4.237,351,2.475,352,2.3,353,2.153,354,2.695,355,1.392,356,4.775,357,4.502,358,2.695,359,2.695,360,2.695,361,2.695,362,2.695,363,2.695,364,2.695,365,3.856,366,2.695,367,2.695,368,2.695,369,3.29,370,2.695,371,2.695,372,2.695,373,2.695,374,2.695,375,2.475,376,2.695,377,2.695,378,2.695,379,2.695,380,2.695,381,2.695,382,2.695,383,2.475,384,2.695,385,3.856,386,2.695,387,3.856,388,2.695,389,3.856,390,2.695,391,2.695,392,2.695,393,2.695]],["title/classes/AnimalElements.html",[56,0.152,326,2.682]],["body/classes/AnimalElements.html",[0,0.227,1,0.921,3,0.134,4,0.121,5,0.121,7,0.073,8,0.395,9,0.955,10,0.609,11,0.166,12,0.014,13,0.23,14,0.008,15,0.008,23,1.379,26,0.904,28,0.973,31,0.93,33,0.991,34,0.662,35,0.991,37,0.839,38,0.861,42,0.346,46,1.772,51,0.743,56,0.177,59,1.25,72,1.311,90,1.537,93,1.046,94,0.938,120,1.537,121,1.557,124,1.537,135,1.783,139,1.611,142,1.357,149,1.46,159,1.15,191,2.324,208,2.785,213,3.393,221,2.001,232,2.506,233,2.3,234,3.966,237,4.056,263,3.358,273,2.137,276,2.001,277,2.137,278,1.884,279,2.3,280,2.001,295,3.794,298,2.137,305,1.745,307,1.884,314,1.783,315,2.3,319,2.3,323,2.3,324,2.785,325,3.358,326,4.309,327,2.319,328,3.358,329,1.783,330,2.505,331,2.921,334,3.595,347,2.001,348,2.143,349,2.3,350,4.118,351,2.3,352,2.137,353,2.001,354,2.505,355,1.294,356,3.966,357,4.319,358,4.319,359,2.505,360,2.505,361,2.505,362,2.505,363,2.505,364,3.657,365,3.657,366,2.505,367,2.505,368,3.657,369,3.12,370,2.505,371,2.505,372,2.505,373,2.505,374,2.505,375,2.3,376,2.505,377,4.319,378,2.505,379,2.505,380,4.319,381,2.505,382,2.505,383,2.3,384,2.505,385,3.657,386,2.505,387,3.657,388,2.505,389,3.657,390,2.505,391,2.505,392,2.505,393,2.505,458,4.663,459,3.194,460,4.663,461,3.194,462,3.194,463,3.194,464,3.194,465,3.194,466,3.194,467,3.194,468,3.194,469,3.194]],["title/injectables/AnimalProviderService.html",[16,0.524,406,2.682]],["body/injectables/AnimalProviderService.html",[3,0.131,4,0.119,5,0.119,7,0.071,8,0.39,9,1.629,10,0.712,11,0.193,12,0.014,13,0.131,14,0.008,15,0.008,16,0.601,18,0.972,23,1.489,26,0.892,28,0.96,31,0.944,33,1.08,34,0.655,35,1.08,37,1.08,38,0.853,42,0.336,43,0.522,46,1.752,48,2.319,49,2.436,50,1.72,51,0.729,54,0.937,55,0.904,56,0.119,59,1.3,72,1.494,77,1.849,93,1.346,94,1.207,138,1.58,139,1.58,142,0.859,159,2.485,241,3.54,269,3.922,270,1.849,271,2.886,274,2.725,286,2.096,324,2.505,325,2.256,327,2.549,328,2.256,331,4.325,333,2.457,347,1.963,350,1.749,351,2.256,352,2.096,356,2.256,406,3.076,425,2.725,431,2.499,438,2.096,470,6.39,471,2.725,472,5.447,473,4.738,474,5.447,475,6.001,476,4.598,477,4.598,478,6.001,479,2.725,480,4.073,481,4.325,482,4.598,483,4,484,4.598,485,3.133,486,4.598,487,3.133,488,3.133,489,3.076,490,3.133,491,3.133,492,4.598,493,3.133,494,3.133,495,2.096,496,3.133,497,2.096,498,1.849,499,1.963,500,2.457,501,3.133,502,3.133,503,3.133,504,3.133,505,2.725,506,3.133,507,2.725,508,3.133,509,3.133,510,3.133,511,2.725,512,3.133,513,4.598,514,3.133,515,5.447,516,3.133,517,3.133,518,3.133,519,3.133,520,3.133,521,4,522,3.133,523,3.133,524,4.598,525,3.133,526,3.133,527,3.133,528,3.133,529,3.133,530,3.133,531,3.133,532,3.133,533,3.133,534,3.133,535,3.133,536,3.133,537,3.133,538,3.133,539,3.133,540,3.133,541,3.133]],["title/components/AppComponent.html",[98,0.966,160,1.692]],["body/components/AppComponent.html",[1,1.892,3,0.185,4,0.168,5,0.168,7,0.101,8,0.496,10,0.579,11,0.134,12,0.014,13,0.185,14,0.01,15,0.01,21,1.724,31,0.579,34,0.64,42,0.3,43,0.739,44,1.87,55,1.689,56,0.168,93,0.994,94,0.891,98,1.582,99,1.87,100,2.578,101,2.037,102,2.037,103,2.037,107,2.037,110,3.147,111,3.276,112,1.95,113,2.372,114,2.029,115,2.372,117,2.372,140,2.372,147,2.037,148,2.693,149,1.582,150,2.037,151,3.209,152,2.037,153,2.037,154,1.87,155,2.693,156,1.87,157,2.693,158,1.87,159,1.595,160,2.945,161,2.037,162,2.945,163,1.595,164,2.553,165,2.037,166,1.87,167,2.037,168,1.87,169,1.87,170,2.037,171,1.794,172,1.794,173,2.693,174,1.794,175,2.372,176,2.279,177,1.794,178,1.794,179,1.724,180,2.037,181,2.037,329,3.268,542,3.854,543,6.56,544,5.856,545,5.856,546,6.56,547,5.094,548,4.43,549,2.472,550,4.43,551,3.474,552,4.43]],["title/classes/Area.html",[56,0.152,232,1.56]],["body/classes/Area.html",[0,0.239,3,0.141,4,0.128,5,0.128,7,0.129,8,0.41,9,1.967,10,0.895,11,0.226,12,0.014,13,0.203,14,0.008,15,0.008,23,1.375,26,0.94,28,0.703,31,0.998,33,1.021,34,0.62,35,1.021,37,1.117,38,0.807,41,1.79,42,0.26,46,1.997,51,0.783,56,0.128,59,1.117,70,1.879,71,2.986,72,1.049,90,1.62,141,1.997,142,0.629,183,1.895,191,3.151,232,2.415,292,2.64,295,2.109,304,1.784,305,1.813,307,4.46,318,3.799,324,3.15,355,1.364,553,2.64,554,2.926,555,4.937,556,4.736,557,3.454,558,3.035,559,1.997,560,2.704,561,4.845,562,3.035,563,3.555,564,4.214,565,4.845,566,3.367,567,3.367,568,3.367,569,1.698,570,3.317,571,2.425,572,2.425,573,2.425,574,3.367,575,4.214,576,3.367,577,2.299,578,2.929,579,2.567,580,3.484,581,3.367,582,1.698,583,2.425,584,2.929,585,2.045,586,1.044,587,2.929,588,2.64,589,1.986,590,4.214,591,2.929,592,2.929,593,2.929,594,4.937,595,2.929,596,2.929,597,2.929,598,2.929,599,2.929,600,2.929,601,2.929,602,2.109,603,4.214,604,2.425,605,2.425,606,2.425,607,2.425,608,3.035,609,2.929,610,2.929,611,2.929,612,2.109,613,2.929,614,2.929,615,2.929,616,2.929,617,2.929]],["title/injectables/AreaRegistryService.html",[16,0.524,241,2.365]],["body/injectables/AreaRegistryService.html",[3,0.187,4,0.169,5,0.169,7,0.102,8,0.499,9,1.335,10,0.769,11,0.226,12,0.014,13,0.187,14,0.01,15,0.01,16,0.769,18,1.384,23,1.396,26,1.141,28,0.932,31,0.996,33,1.185,34,0.719,35,1.185,37,1.059,38,0.635,41,1.288,42,0.32,43,0.744,50,2.202,54,1.335,55,1.288,56,0.169,59,1.185,93,1.571,94,1.409,149,1.076,183,1.965,208,2.053,232,2.29,241,3.473,270,3.473,271,2.365,431,2.464,489,2.987,570,3.768,580,2.365,586,1.384,618,2.384,619,2.797,620,4.616,621,3.285,622,4.239,623,3.907,624,3.118,625,4.465,626,5.041,627,3.884,628,5.886,629,3.501,630,3.675,631,2.987,632,3.884,633,3.501,634,3.215,635,3.501,636,3.501,637,3.215,638,3.501,639,2.987,640,2.148,641,2.797,642,4.465]],["title/interfaces/AreaState.html",[0,0.285,580,2.123]],["body/interfaces/AreaState.html",[0,0.294,2,1.285,3,0.173,4,0.157,5,0.157,7,0.144,8,0.474,9,2.122,10,0.732,11,0.125,12,0.014,13,0.234,14,0.009,15,0.009,23,1.185,41,1.615,42,0.29,46,1.801,51,0.964,56,0.157,59,1.223,70,2.312,71,1.993,72,1.212,141,2.04,142,0.774,183,2.117,191,3.253,232,2.644,292,3.249,295,2.595,304,2.195,305,2.095,307,4.187,318,4.391,324,2.575,355,1.678,553,3.249,554,2.268,555,3.604,556,4.88,559,1.801,564,3.604,575,3.604,577,2.268,579,2.195,580,3.759,584,3.604,585,2.677,586,1.285,587,4.871,588,4.391,589,3.304,590,5.91,591,3.604,592,3.604,593,3.604,594,5.517,595,3.604,596,3.604,597,3.604,598,3.604,599,3.604,600,3.604,601,3.604,602,2.595,603,4.871,604,2.983,605,2.983,606,2.983,607,2.983,608,3.508,609,3.604,610,3.604,611,3.604,612,2.595,613,3.604,614,3.604,615,3.604,616,3.604,617,3.604,643,2.312]],["title/injectables/AreaStateService.html",[16,0.524,626,2.886]],["body/injectables/AreaStateService.html",[3,0.176,4,0.16,5,0.16,7,0.096,8,0.48,9,1.262,10,0.741,11,0.222,12,0.014,13,0.176,14,0.01,15,0.01,16,0.741,18,1.308,23,1.427,26,1.099,31,0.998,33,1.232,34,0.748,35,1.232,37,1.285,38,0.973,42,0.293,43,0.703,50,2.121,54,1.262,55,1.217,56,0.16,59,1.02,71,3.08,93,1.272,94,1.141,121,1.892,142,0.788,149,1.017,183,1.892,232,2.778,270,3.344,431,2.121,557,3.788,559,1.357,570,3.788,580,3.626,586,1.308,618,2.296,621,3.164,623,3.164,624,3.003,626,4.082,630,3.573,639,2.822,640,2.03,644,2.643,645,4.612,646,4.082,647,4.082,648,4.082,649,4.61,650,5.669,651,3.308,652,4.082,653,3.308,654,3.038,655,3.308,656,3.308,657,3.038,658,3.308,659,3.038,660,3.308,661,3.308,662,3.038,663,3.308,664,4.219,665,4.219,666,4.219]],["title/injectables/CognitoClientService.html",[16,0.524,667,2.682]],["body/injectables/CognitoClientService.html",[3,0.148,4,0.134,5,0.134,7,0.081,8,0.425,10,1.056,11,0.192,12,0.014,13,0.148,14,0.008,15,0.008,16,0.656,18,1.097,23,1.09,26,0.973,28,1.217,31,0.876,33,1.05,34,0.693,35,1.05,37,1.05,38,0.714,42,0.267,43,0.59,54,1.058,55,1.02,56,0.134,59,1.143,72,1.55,94,0.712,114,1.739,134,3.654,141,1.615,142,1.338,172,2.033,175,1.433,176,1.377,667,3.358,668,6.057,669,2.774,670,5.834,671,5.837,672,4.366,673,4.366,674,5.019,675,4.366,676,4.247,677,3.538,678,3.943,679,5.46,680,4.366,681,4.453,682,3.538,683,4.366,684,4.827,685,3.538,686,6.349,687,3.538,688,3.538,689,3.538,690,5.019,691,3.538,692,3.077,693,3.077,694,2.548,695,3.077,696,3.077,697,3.538,698,3.538,699,3.538,700,3.538,701,3.538,702,3.538,703,3.538,704,5.834,705,5.834,706,3.538,707,5.075,708,3.538,709,5.834,710,6.349,711,5.075,712,5.834,713,3.538,714,5.834,715,5.019,716,5.019,717,3.538,718,3.538,719,3.615,720,3.538,721,3.538,722,3.936,723,3.538,724,3.538]],["title/components/DrawPoolGameComponent.html",[98,0.966,162,1.692]],["body/components/DrawPoolGameComponent.html",[1,2.036,3,0.098,4,0.089,5,0.089,7,0.053,8,0.313,10,0.482,11,0.17,12,0.014,13,0.098,14,0.006,15,0.006,21,1.775,23,1.273,26,0.716,28,0.77,30,3.685,31,0.87,33,0.422,34,0.498,35,0.422,37,0.821,38,0.849,42,0.351,43,0.391,44,0.991,45,1.69,48,1.184,49,1.955,51,0.546,56,0.089,70,1.31,71,2.488,72,1.292,77,1.385,93,1.262,94,1.339,98,1.1,99,2.183,100,1.625,101,1.079,102,1.079,103,1.079,105,1.57,107,1.079,110,2.82,111,2.936,112,1.033,113,1.495,114,1.581,115,1.495,117,1.495,120,2.195,125,3.61,139,1.184,140,1.495,141,1.187,147,1.079,148,1.697,149,1.247,150,1.079,151,2.378,152,1.079,153,1.079,154,0.991,155,1.697,156,2.183,157,1.697,158,2.183,159,1.642,160,0.991,161,1.079,162,2.183,163,2.248,164,3.057,165,1.079,166,2.183,167,1.079,168,2.183,169,2.183,170,1.079,171,0.951,172,0.951,173,1.697,174,0.951,175,1.495,176,1.436,177,0.951,178,0.951,179,0.913,180,1.079,181,1.079,195,1.69,196,1.84,198,2.658,199,1.84,215,1.69,216,2.042,219,2.042,228,2.894,232,1.775,241,3.685,269,3.724,270,1.385,271,1.955,273,1.57,275,1.57,277,1.57,278,1.385,286,1.57,288,2.042,327,2.329,347,1.47,395,1.84,406,4.178,423,2.042,424,2.042,438,2.469,480,3.051,498,1.385,511,2.042,551,5.341,586,1.744,640,1.129,719,2.658,725,5.924,726,2.042,727,2.691,728,4.562,729,3.691,730,3.691,731,4.562,732,4.562,733,4.891,734,5.623,735,4.562,736,5.172,737,5.172,738,2.347,739,3.724,740,3.968,741,3.24,742,3.968,743,4.178,744,3.691,745,3.691,746,2.347,747,2.347,748,2.347,749,2.347,750,2.347,751,2.347,752,2.347,753,2.347,754,1.385,755,2.347,756,1.31,757,3.691,758,2.347,759,2.347,760,1.84,761,2.347,762,2.347,763,2.347,764,2.347,765,2.347,766,2.347,767,2.347,768,1.57,769,2.347,770,3.691,771,3.691,772,2.347,773,2.347,774,1.84,775,2.347,776,2.347,777,2.347,778,2.347,779,2.347,780,2.347,781,2.347,782,2.347,783,2.347,784,2.347,785,2.347,786,2.347,787,2.347,788,2.894,789,3.691]],["title/components/ElementComponent.html",[98,0.966,166,1.692]],["body/components/ElementComponent.html",[1,1.795,3,0.167,4,0.151,5,0.151,7,0.091,10,0.813,11,0.121,12,0.014,13,0.167,14,0.009,15,0.009,21,1.553,31,0.874,34,0.765,42,0.306,43,0.666,44,1.685,56,0.151,93,0.896,94,0.803,98,1.5,99,1.685,100,2.404,101,1.836,102,1.836,103,1.836,107,1.836,108,2.627,109,2.627,110,3.102,111,3.229,112,1.757,113,2.212,114,1.892,115,2.212,117,2.212,119,3.653,121,1.823,123,4.481,125,4.208,129,2.671,131,2.875,133,1.921,134,3.42,136,2.501,137,2.875,138,2.013,139,2.013,140,1.617,142,1.25,146,2.875,147,1.836,148,2.511,149,1.818,150,1.836,151,3.076,152,1.836,153,1.836,154,1.685,155,2.511,156,1.685,157,2.511,158,1.685,159,1.437,160,1.685,161,1.836,162,1.685,163,1.437,164,1.553,165,1.836,166,2.823,167,1.836,168,1.685,169,1.685,170,1.836,171,1.617,172,1.617,173,2.511,174,1.617,175,2.212,176,2.125,177,1.617,178,1.617,179,1.553,180,1.836,181,1.836,213,2.862,218,2.501,577,2.521,790,3.473,791,5.46,792,5.46,793,3.992,794,3.992,795,3.992,796,3.992,797,3.992,798,3.992,799,3.992,800,4.281]],["title/interfaces/ElementConfig.html",[0,0.285,350,2.237]],["body/interfaces/ElementConfig.html",[0,0.338,2,1.473,3,0.199,4,0.18,5,0.18,7,0.108,8,0.519,11,0.205,12,0.014,13,0.256,14,0.01,15,0.01,42,0.311,50,1.777,59,0.855,72,1.326,245,3.422,275,3.178,350,3.421,497,3.178,577,3.233,801,3.725,802,3.725,803,6.398,804,6.944,805,5.622,806,3.725,807,4.75,808,4.75,809,3.178,810,4.132,811,3.725,812,3.725,813,4.132,814,4.132,815,4.132,816,3.725,817,4.132,818,5.82,819,4.132,820,3.725,821,4.132,822,4.132,823,3.725,824,4.132,825,4.132,826,3.725,827,4.132,828,4.132,829,3.725,830,4.132,831,4.132]],["title/injectables/ElementDrawPoolService.html",[16,0.524,242,2.886]],["body/injectables/ElementDrawPoolService.html",[3,0.148,4,0.134,5,0.134,7,0.081,8,0.425,11,0.21,12,0.014,13,0.148,14,0.008,15,0.008,16,0.656,18,1.097,23,1.453,25,4.791,26,0.973,28,0.738,31,0.987,33,1.05,34,0.637,35,1.05,37,1.05,38,0.902,41,1.831,42,0.328,43,0.59,46,1.877,48,1.784,49,2.659,51,0.823,54,1.058,55,1.02,56,0.134,57,1.784,59,1.05,61,2.774,65,4.201,67,3.615,70,1.974,71,3.054,77,2.087,93,1.504,94,1.349,114,1.226,121,1.676,125,3.543,141,1.138,142,1.186,163,2.748,184,2.033,186,2.216,213,3.202,218,2.216,242,3.615,245,2.531,269,2.548,271,1.874,286,2.367,305,1.324,348,2.47,349,2.548,450,3.903,481,3.977,499,2.216,719,3.615,832,6.642,833,3.077,834,5.834,835,3.615,836,3.615,837,5.834,838,3.538,839,5.019,840,4.366,841,3.538,842,5.019,843,3.538,844,2.548,845,3.358,846,3.615,847,3.538,848,2.548,849,3.538,850,3.538,851,5.019,852,3.538,853,3.538,854,3.538,855,2.774,856,3.538,857,2.774,858,3.538,859,3.538,860,3.538,861,3.538,862,6.349,863,3.538,864,3.538,865,3.538,866,3.538,867,3.538,868,3.538,869,3.538]],["title/interfaces/ElementPiece.html",[0,0.285,213,1.843]],["body/interfaces/ElementPiece.html",[0,0.415,2,1.809,3,0.244,4,0.221,5,0.221,7,0.133,8,0.59,11,0.176,12,0.014,13,0.244,14,0.012,15,0.012,42,0.319,122,3.888,141,1.877,183,2.325,184,3.015,186,3.655,213,3.202,577,3.123,805,6.046,870,5.075,871,5.834]],["title/components/ElementSpaceComponent.html",[98,0.966,168,1.692]],["body/components/ElementSpaceComponent.html",[1,1.8,3,0.168,4,0.152,5,0.152,7,0.091,10,0.524,11,0.121,12,0.014,13,0.168,14,0.009,15,0.009,21,1.562,31,0.716,34,0.599,42,0.321,43,0.669,44,1.694,56,0.152,93,0.9,94,0.807,98,1.504,99,1.694,100,2.412,101,1.845,102,1.845,103,1.845,104,3.909,107,1.845,108,2.636,109,2.636,110,3.105,111,3.232,112,1.767,113,2.219,114,1.899,115,2.219,117,2.219,119,3.666,121,1.829,123,4.493,131,2.89,133,1.931,134,3.433,136,2.514,137,2.89,138,2.024,139,2.024,140,2.219,141,2.157,142,0.75,146,2.89,147,1.845,148,2.52,149,1.924,150,1.845,151,3.083,152,1.845,153,1.845,154,1.694,155,2.52,156,1.694,157,2.52,158,1.694,159,1.445,160,1.694,161,1.845,162,1.694,163,1.445,164,1.562,165,1.845,166,2.83,167,1.845,168,2.83,169,1.694,170,1.845,171,1.625,172,1.625,173,2.52,174,1.625,175,2.219,176,2.132,177,1.625,178,1.625,179,1.562,180,1.845,181,1.845,190,3.147,191,2.313,192,4.766,193,4.766,194,3.491,195,2.89,213,2.869,215,4.493,218,2.514,369,2.685,760,4.893,872,4.013]],["title/components/EyeballComponent.html",[98,0.966,169,1.692]],["body/components/EyeballComponent.html",[1,1.899,3,0.187,4,0.169,5,0.169,7,0.102,10,0.584,12,0.014,13,0.187,14,0.01,15,0.01,21,1.737,31,0.584,34,0.643,42,0.301,43,0.744,44,1.884,56,0.169,98,1.588,99,1.884,100,2.591,101,2.053,102,2.053,103,2.053,104,3.687,107,2.053,108,2.832,109,2.832,110,3.15,111,3.279,112,1.965,113,2.384,114,2.04,115,2.384,117,2.384,121,1.965,123,4.742,131,3.215,133,2.148,136,2.797,137,3.215,138,2.251,139,2.251,140,1.808,142,0.834,146,3.215,147,2.053,148,2.707,149,1.588,150,2.053,151,3.219,152,2.053,153,2.053,154,1.884,155,2.707,156,1.884,157,2.707,158,1.884,159,1.607,160,1.884,161,2.053,162,1.884,163,1.607,164,1.737,165,2.053,166,1.884,167,2.053,168,1.884,169,2.954,170,2.053,171,1.808,172,1.808,173,2.707,174,1.808,175,2.384,176,2.29,177,1.808,178,1.808,179,1.737,180,2.053,181,2.053,873,3.884,874,5.728,875,5.886,876,5.886,877,4.465]],["title/classes/Faction.html",[56,0.152,327,1.443]],["body/classes/Faction.html",[0,0.285,3,0.167,4,0.152,5,0.152,7,0.091,8,0.464,10,0.876,11,0.224,12,0.014,13,0.229,14,0.009,15,0.009,26,1.061,31,1.021,33,1.206,34,0.824,35,1.206,37,1.262,38,1.073,41,1.155,42,0.183,46,1.289,56,0.152,90,1.927,121,1.827,129,2.68,142,1.165,183,2.081,245,3.941,327,1.97,355,1.623,431,1.499,554,3.056,557,3.651,558,3.429,559,2.155,560,3.054,562,3.429,563,3.905,569,3.144,570,3.537,571,2.885,572,2.885,573,2.885,579,2.122,582,2.02,583,2.885,585,2.31,586,1.242,878,3.141,879,5.473,880,5.473,881,5.473,882,4.482,883,5.254,884,4.761,885,4.006,886,6.299,887,4.761,888,4.006,889,4.761,890,4.006,891,3.141,892,2.68,893,2.122,894,2.51,895,2.51,896,2.68,897,2.68,898,2.02,899,1.842,900,4.006,901,4.006,902,4.006,903,4.006,904,4.006,905,2.02,906,2.885,907,3.485,908,5.828,909,4.171]],["title/interfaces/FactionAssignment.html",[0,0.285,768,2.682]],["body/interfaces/FactionAssignment.html",[0,0.35,2,1.527,3,0.206,4,0.186,5,0.186,7,0.112,8,0.531,9,2.244,10,1.003,11,0.189,12,0.014,13,0.262,14,0.011,15,0.011,16,0.82,23,1.172,38,0.7,41,1.809,42,0.344,43,0.821,46,2.017,51,1.145,54,1.472,55,1.42,56,0.186,59,0.886,149,1.187,183,1.643,271,2.608,327,2.484,438,3.294,480,2.905,498,2.905,586,1.527,604,3.545,618,1.994,619,3.084,620,3.7,631,3.294,640,2.368,641,3.084,768,5.02,774,3.86,882,5.02,905,2.483,910,3.084,911,4.195,912,4.282,913,4.282,914,4.282,915,4.282,916,4.282,917,4.282,918,4.282,919,4.282,920,4.282]],["title/injectables/FactionRegistryService.html",[16,0.524,480,2.365]],["body/injectables/FactionRegistryService.html",[0,0.269,3,0.158,4,0.143,5,0.143,7,0.086,8,0.446,9,1.81,10,0.855,11,0.225,12,0.014,13,0.22,14,0.009,15,0.009,16,0.688,18,1.175,23,1.458,26,1.021,28,0.791,31,1.001,33,1.089,34,0.661,35,1.089,37,0.948,38,0.749,41,1.887,42,0.315,43,0.632,46,1.947,50,1.97,51,0.881,54,1.133,55,1.093,56,0.143,59,1.237,93,1.638,94,1.469,149,0.913,183,1.758,208,1.742,271,2.007,327,2.475,431,2.265,438,2.534,480,3.107,489,2.534,498,4.057,570,3.589,586,1.175,604,2.728,618,2.785,619,2.373,620,4.461,621,2.939,622,3.792,623,3.651,624,2.79,629,2.971,630,2.114,631,3.523,633,2.971,634,2.728,635,2.971,636,2.971,637,2.728,638,2.971,640,1.823,641,2.373,768,5.058,774,2.971,882,3.523,905,1.91,910,2.373,911,4.377,912,5.266,913,4.581,914,4.581,915,4.581,916,3.295,917,3.295,918,3.295,919,3.295,920,3.295,921,3.788,922,3.788,923,3.788,924,3.788,925,3.788,926,3.788]],["title/interfaces/FactionState.html",[0,0.285,905,2.021]],["body/interfaces/FactionState.html",[0,0.358,2,1.563,3,0.211,4,0.191,5,0.191,7,0.115,8,0.539,10,1.036,11,0.211,12,0.014,13,0.266,14,0.011,15,0.011,34,0.826,38,0.992,42,0.231,56,0.191,142,1.304,183,2.329,245,3.952,327,1.815,355,2.042,554,2.579,585,2.945,586,1.563,878,3.953,882,5.056,883,5.927,884,4.386,886,6.07,887,4.386,889,4.386,905,3.21,906,3.631,907,4.386,908,6.376,909,4.668]],["title/injectables/FactionStateService.html",[16,0.524,911,2.682]],["body/injectables/FactionStateService.html",[3,0.176,4,0.16,5,0.16,7,0.096,8,0.48,9,1.262,10,0.741,11,0.222,12,0.014,13,0.176,14,0.01,15,0.01,16,0.741,18,1.308,23,1.427,26,1.099,31,0.998,33,1.232,34,0.748,35,1.232,37,1.285,38,0.973,42,0.293,43,0.703,50,2.121,54,1.262,55,1.217,56,0.16,59,1.02,71,3.08,93,1.272,94,1.141,121,1.892,142,0.788,149,1.017,183,1.892,327,2.57,431,2.121,498,3.344,557,3.788,559,1.357,570,3.788,586,1.308,618,2.296,621,3.164,623,3.164,624,3.003,630,3.573,640,2.03,644,2.643,645,4.612,646,4.082,647,4.082,648,4.082,649,4.61,651,3.308,652,4.082,653,3.308,654,3.038,655,3.308,656,3.308,657,3.038,658,3.308,659,3.038,660,3.308,661,3.308,662,3.038,663,3.308,905,3.451,910,2.643,911,3.792,927,5.669,928,4.219,929,4.219,930,4.219]],["title/classes/GameElement.html",[56,0.152,554,1.624]],["body/classes/GameElement.html",[0,0.291,3,0.171,4,0.155,5,0.155,7,0.093,8,0.47,9,2.113,10,0.726,11,0.214,12,0.014,13,0.232,14,0.009,15,0.009,26,1.077,28,0.854,31,0.991,33,0.999,34,0.606,35,0.999,37,0.999,38,0.896,41,1.818,42,0.254,46,2.027,51,0.952,56,0.155,59,0.999,90,1.968,121,1.853,142,1.037,305,1.531,338,3.559,431,2.077,554,2.249,557,3.876,558,3.948,559,2.543,560,3.517,562,3.478,563,4.234,569,3.919,579,2.941,582,3.178,585,1.727,602,2.563,605,2.946,606,2.946,608,2.563,892,3.714,893,2.941,894,3.478,895,3.478,896,3.714,897,3.714,898,2.8,899,2.553,931,4.815,932,3.208,933,3.714,934,5.552,935,4.091,936,4.091,937,4.091,938,4.091,939,4.091,940,3.559,941,4.091,942,2.737,943,2.283,944,2.283,945,2.283,946,4.83,947,2.946,948,3.559,949,2.946,950,2.946,951,3.559,952,3.559,953,2.563,954,3.559,955,3.559,956,3.208]],["title/injectables/GameElementRegistryService.html",[16,0.524,620,2.365]],["body/injectables/GameElementRegistryService.html",[3,0.165,4,0.149,5,0.149,7,0.09,8,0.458,9,1.847,10,0.807,11,0.218,12,0.014,13,0.165,14,0.009,15,0.009,16,0.707,18,1.221,23,1.425,26,1.049,28,0.822,31,0.964,33,1.112,34,0.675,35,1.112,37,0.973,38,0.769,41,1.782,42,0.319,43,0.656,46,1.267,50,2.488,51,0.916,54,1.177,55,1.136,56,0.149,59,1.328,93,1.492,94,1.338,138,1.985,142,0.736,149,1.86,183,1.314,208,1.811,305,1.473,355,1.595,431,2.695,489,3.618,554,1.595,585,1.662,586,1.221,618,3.044,619,2.467,620,3.191,621,3.448,622,4.449,623,4.02,624,2.865,630,3.891,631,3.618,634,3.895,637,3.895,640,1.894,641,2.467,645,3.191,898,1.985,957,5.893,958,3.937,959,6.651,960,5.409,961,5.409,962,3.937,963,3.937,964,3.937,965,3.937,966,3.937,967,2.467,968,3.088,969,3.425,970,3.425,971,3.937,972,3.425,973,3.425,974,3.425,975,3.937,976,3.425,977,3.088,978,3.937,979,3.937]],["title/interfaces/GameElementState.html",[0,0.285,585,1.692]],["body/interfaces/GameElementState.html",[0,0.345,2,1.507,3,0.203,4,0.184,5,0.184,7,0.111,8,0.527,9,2.286,10,0.945,11,0.147,12,0.014,13,0.26,14,0.01,15,0.01,38,0.691,41,1.794,42,0.285,46,2.001,51,1.131,56,0.184,59,1.119,142,1.162,305,1.818,431,1.818,554,1.969,557,3.459,558,3.045,559,2.404,560,2.713,563,3.045,569,3.769,579,2.575,582,3.137,585,2.625,602,3.045,605,3.5,606,3.5,608,3.045,892,3.252,893,2.575,894,3.045,895,3.045,896,3.252,897,3.252,898,2.451,899,2.235,931,3.045,932,3.811,933,3.252,942,3.252,943,2.713,944,2.713,945,2.713,946,5.411,947,3.5,948,4.228,949,3.5,950,3.5,951,4.228,952,4.228,953,3.045,954,4.228,955,4.228,956,3.811]],["title/injectables/GameElementStateService.html",[16,0.524,645,2.365]],["body/injectables/GameElementStateService.html",[3,0.146,4,0.132,5,0.132,7,0.08,8,0.422,9,1.733,10,0.757,11,0.216,12,0.014,13,0.146,14,0.008,15,0.008,16,0.65,18,1.084,23,1.437,26,0.965,28,0.729,31,0.97,33,1.201,34,0.729,35,1.201,37,1.201,38,1.037,41,1.435,42,0.305,43,0.583,50,2.362,51,0.813,54,1.045,55,1.008,56,0.132,59,1.201,70,1.95,71,3.037,72,0.756,93,1.117,94,1.001,121,1.661,138,1.762,142,0.653,149,1.87,305,1.308,355,1.416,431,2.362,554,1.416,557,3.598,559,1.124,585,2.665,586,1.084,618,3.049,621,3.234,623,3.234,624,2.636,630,4.142,640,1.681,641,2.189,644,2.189,645,2.936,646,3.583,647,3.583,648,3.583,649,4.173,652,3.583,654,3.583,657,3.583,659,2.517,662,2.517,740,4.328,741,3.955,756,1.95,898,1.762,957,5.903,967,2.189,968,2.741,969,6.345,970,3.04,972,3.04,973,3.04,974,3.04,976,3.04,977,2.741,980,3.495,981,4.976,982,3.495,983,3.495,984,3.495,985,4.976,986,3.495,987,3.495,988,3.495,989,3.495,990,3.495,991,3.495,992,3.495,993,3.495,994,3.495,995,3.495,996,3.495,997,3.495,998,3.495,999,3.495,1000,3.495]],["title/injectables/GameManagementService.html",[16,0.524,739,2.886]],["body/injectables/GameManagementService.html",[3,0.134,4,0.121,5,0.121,7,0.106,9,0.958,11,0.097,12,0.014,13,0.134,14,0.008,15,0.008,16,0.611,17,4.65,18,0.993,20,2.307,21,1.246,23,1.467,26,0.906,27,4.057,28,0.975,31,0.88,33,0.576,34,0.51,35,0.576,37,1.16,38,1.013,42,0.367,43,0.534,48,1.615,51,0.745,54,0.958,55,0.924,56,0.121,59,0.576,72,1.573,138,1.615,149,0.772,191,2.328,220,2.307,232,2.147,241,3.578,270,1.89,271,2.923,276,2.006,304,2.475,307,3.578,327,1.986,333,2.512,348,1.818,350,1.788,352,2.143,418,1.788,419,2.512,479,2.786,480,3.578,481,3.799,483,4.065,495,2.143,497,2.143,498,1.89,499,2.006,521,2.786,586,1.881,618,2.816,639,2.143,640,1.541,733,2.786,739,3.365,741,4.355,742,4.799,743,4.65,756,1.788,809,2.143,840,4.799,882,2.143,883,2.512,910,2.006,968,2.512,1001,2.786,1002,6.064,1003,5.517,1004,6.064,1005,6.064,1006,3.203,1007,3.203,1008,3.203,1009,3.203,1010,3.203,1011,3.203,1012,1.541,1013,2.143,1014,3.203,1015,3.203,1016,2.786,1017,2.512,1018,3.203,1019,2.512,1020,3.203,1021,3.203,1022,3.203,1023,3.203,1024,3.203,1025,3.203,1026,3.203,1027,3.203,1028,3.203,1029,3.203,1030,3.203,1031,3.203,1032,3.203,1033,3.203,1034,3.203,1035,3.203,1036,3.203,1037,4.673,1038,3.203,1039,3.203,1040,3.203,1041,3.203,1042,3.203,1043,3.203,1044,3.203,1045,3.203,1046,3.203,1047,3.203,1048,3.203,1049,5.517,1050,3.203,1051,3.203,1052,3.203,1053,3.203,1054,3.203,1055,3.203,1056,3.203,1057,3.203,1058,3.203,1059,3.203]],["title/interfaces/GameState.html",[0,0.285,899,1.843]],["body/interfaces/GameState.html",[0,0.375,2,1.635,3,0.22,4,0.2,5,0.2,7,0.12,8,0.555,11,0.215,12,0.014,13,0.274,14,0.011,15,0.011,42,0.326,72,1.141,232,2.98,327,2.757,348,2.98,580,3.946,643,2.943,899,3.522,905,3.756,931,3.303,1012,3.583,1060,4.135,1061,5.696,1062,4.38,1063,6.548,1064,4.38,1065,5.273,1066,5.273,1067,5.273,1068,3.797]],["title/injectables/GameStateClientService.html",[16,0.524,1069,2.886]],["body/injectables/GameStateClientService.html",[3,0.223,4,0.202,5,0.202,7,0.121,11,0.161,12,0.014,13,0.223,14,0.011,15,0.011,16,0.862,18,1.654,26,1.279,31,0.862,33,0.96,34,0.583,35,0.96,37,0.96,38,0.937,41,1.902,42,0.328,43,0.889,51,1.241,54,1.595,55,1.538,56,0.202,121,2.201,142,0.997,559,2.406,618,2.9,669,4.183,756,3.995,893,3.962,967,3.341,1069,4.749,1070,6.595,1071,6.595,1072,4.685,1073,5.334,1074,5.334,1075,5.334,1076,4.183,1077,5.334,1078,5.334]],["title/interfaces/GameStatePatch.html",[0,0.285,1072,2.511]],["body/interfaces/GameStatePatch.html",[0,0.416,2,1.814,3,0.244,4,0.222,5,0.222,7,0.133,8,0.591,11,0.211,12,0.014,13,0.244,14,0.012,15,0.012,42,0.268,245,3.758,559,1.882,931,3.664,943,3.264,944,3.264,945,4.4,1072,4.369,1079,5.088,1080,6.712,1081,7.717]],["title/injectables/GameStatePatchService.html",[16,0.524,1082,2.886]],["body/injectables/GameStatePatchService.html",[3,0.199,4,0.181,5,0.181,7,0.109,11,0.186,12,0.014,13,0.199,14,0.01,15,0.01,16,0.803,18,1.479,26,1.192,31,0.803,33,1.106,34,0.671,35,1.106,37,1.106,42,0.329,43,0.795,54,1.426,55,1.376,56,0.181,125,2.662,142,1.148,559,2.31,582,3.621,618,2.754,643,2.662,756,3.794,893,3.602,899,3.738,943,2.662,944,2.662,945,3.43,967,3.85,1072,4.766,1076,3.74,1080,4.149,1082,4.425,1083,4.149,1084,5.346,1085,6.145,1086,6.145,1087,6.145,1088,6.145,1089,6.145,1090,4.77,1091,6.145,1092,4.77,1093,4.77,1094,4.149,1095,4.77,1096,4.77,1097,4.77,1098,4.77,1099,4.77,1100,4.77,1101,4.77]],["title/injectables/GameStateService.html",[16,0.524,741,2.511]],["body/injectables/GameStateService.html",[0,0.3,3,0.117,4,0.106,5,0.106,7,0.064,11,0.207,12,0.014,13,0.117,14,0.007,15,0.007,16,0.551,18,0.866,23,1.196,26,0.818,28,0.88,31,0.99,33,1.232,34,0.748,35,1.232,37,1.306,38,1.121,41,1.635,42,0.321,43,0.465,48,1.407,51,0.649,54,0.835,55,0.805,56,0.106,59,0.759,72,0.913,121,1.408,142,0.95,232,1.979,305,2.121,309,3.308,314,1.558,327,1.831,348,1.979,559,2.202,580,3.521,582,3.228,586,1.577,618,3.093,639,1.867,643,1.558,644,1.748,722,3.308,741,3.551,756,4.262,893,3.003,899,1.94,905,3.352,910,1.748,967,1.748,1012,3.198,1013,1.867,1064,3.792,1069,4.082,1072,3.551,1076,2.189,1082,4.082,1102,3.67,1103,4.219,1104,4.219,1105,4.219,1106,4.219,1107,3.67,1108,4.219,1109,4.219,1110,4.219,1111,4.931,1112,3.67,1113,3.67,1114,3.67,1115,5.668,1116,4.931,1117,3.67,1118,3.67,1119,3.67,1120,4.931,1121,2.791,1122,5.086,1123,5.086,1124,2.791,1125,4.219,1126,4.219,1127,2.791,1128,2.791,1129,3.67,1130,2.791,1131,3.67,1132,2.791,1133,3.67,1134,2.791,1135,2.791,1136,5.295,1137,4.424,1138,4.219,1139,4.219,1140,4.219,1141,2.791,1142,3.67,1143,2.791,1144,3.67,1145,2.791,1146,3.67,1147,2.791,1148,2.791,1149,2.428,1150,2.791,1151,2.428,1152,2.791,1153,2.428,1154,2.791,1155,2.791,1156,2.791,1157,2.189,1158,2.791,1159,2.791,1160,2.791,1161,2.791,1162,2.791,1163,2.791,1164,2.791,1165,5.086,1166,2.428,1167,2.791,1168,2.791,1169,2.791,1170,2.791,1171,2.791,1172,2.791,1173,2.01,1174,2.791,1175,2.791,1176,2.791,1177,2.791,1178,2.791,1179,2.791,1180,2.791,1181,2.791,1182,2.791]],["title/injectables/GameStateStoreService.html",[16,0.524,1064,2.682]],["body/injectables/GameStateStoreService.html",[3,0.065,4,0.059,5,0.059,7,0.103,8,0.222,11,0.2,12,0.014,13,0.065,14,0.004,15,0.004,16,0.343,18,0.479,23,1.345,26,0.78,28,0.713,31,0.941,33,1.124,34,0.666,35,1.097,37,1.171,38,1.037,41,1.708,42,0.251,43,0.258,46,1.099,50,0.578,51,0.36,54,0.462,55,0.446,56,0.059,59,1.224,72,0.871,89,0.819,93,0.588,94,0.809,110,0.602,121,0.875,141,1.766,142,1.026,149,0.97,208,0.711,232,1.329,286,1.754,305,2.054,309,1.212,314,1.464,327,1.229,348,2.03,355,0.626,375,1.888,431,1.278,505,2.281,559,2.439,569,1.322,577,1.63,580,2.764,582,3.335,585,2.202,588,5.455,589,2.374,612,1.643,618,2.937,624,3.031,639,1.034,643,1.906,756,4.046,788,2.056,818,2.056,845,2.691,893,1.389,894,1.643,895,1.643,898,2.029,899,3.66,905,2.631,910,0.968,942,1.034,943,0.863,944,0.863,945,0.863,953,2.52,956,2.056,967,1.643,977,3.155,1012,2.51,1013,1.034,1062,4.271,1064,3.672,1068,1.113,1084,2.281,1094,1.345,1102,2.281,1107,2.281,1111,4.258,1112,2.281,1113,2.281,1114,2.281,1116,4.258,1117,2.281,1118,2.281,1119,3.5,1120,4.258,1129,2.281,1131,2.281,1133,2.281,1136,5.435,1137,3.5,1142,2.281,1144,2.281,1146,2.281,1149,1.345,1151,1.345,1153,1.345,1166,1.345,1173,2.897,1183,1.345,1184,2.622,1185,2.622,1186,2.622,1187,2.622,1188,2.281,1189,2.622,1190,1.888,1191,2.622,1192,2.281,1193,2.622,1194,5.489,1195,2.622,1196,2.622,1197,4.023,1198,2.622,1199,2.622,1200,2.622,1201,2.622,1202,4.023,1203,4.895,1204,2.622,1205,2.622,1206,2.622,1207,4.352,1208,2.622,1209,6.384,1210,2.622,1211,2.281,1212,3.244,1213,2.281,1214,2.622,1215,4.775,1216,4.023,1217,2.622,1218,2.622,1219,2.622,1220,2.622,1221,4.023,1222,2.691,1223,3.5,1224,3.274,1225,2.622,1226,2.622,1227,2.622,1228,2.622,1229,2.971,1230,2.622,1231,4.023,1232,2.622,1233,4.023,1234,1.935,1235,2.622,1236,2.622,1237,2.281,1238,3.415,1239,3.415,1240,3.415,1241,2.622,1242,2.622,1243,3.415,1244,3.415,1245,3.415,1246,2.622,1247,2.622,1248,1.546,1249,1.546,1250,2.622,1251,1.546,1252,1.546,1253,1.546,1254,1.546,1255,1.546,1256,6.095,1257,1.546,1258,2.622,1259,2.622,1260,4.023,1261,1.546,1262,1.546,1263,1.546,1264,2.622,1265,1.546,1266,1.546,1267,1.546,1268,1.546,1269,4.504,1270,2.622,1271,2.622,1272,1.546,1273,2.622,1274,1.546,1275,1.546,1276,1.546,1277,1.546,1278,1.546,1279,1.546,1280,1.546,1281,1.546,1282,1.546,1283,1.546,1284,1.546,1285,1.546,1286,1.546,1287,1.546,1288,2.622,1289,5.721,1290,1.546,1291,1.546,1292,2.622,1293,1.546,1294,2.622,1295,2.622,1296,2.622,1297,2.622,1298,1.546,1299,2.622,1300,2.622,1301,1.546,1302,1.546,1303,1.546,1304,1.546,1305,2.622,1306,1.546,1307,1.546,1308,1.546,1309,1.546,1310,1.546,1311,1.546,1312,1.546,1313,1.345,1314,1.546,1315,1.546,1316,1.546,1317,1.546,1318,3.415,1319,1.546,1320,1.546,1321,1.546,1322,1.546,1323,1.546,1324,1.546,1325,1.546,1326,1.546,1327,1.546]],["title/interfaces/LoginFormData.html",[0,0.285,1328,2.886]],["body/interfaces/LoginFormData.html",[0,0.32,2,1.395,3,0.188,4,0.17,5,0.17,7,0.102,8,0.501,10,0.979,11,0.179,12,0.014,13,0.188,14,0.01,15,0.01,23,1.235,28,0.939,38,0.94,42,0.343,43,0.75,56,0.17,72,0.974,98,1.426,108,2.165,109,2.165,110,1.751,111,1.822,113,1.822,114,1.559,115,1.822,117,1.822,133,2.165,140,1.822,171,1.822,172,2.677,179,1.751,204,3.302,214,2.511,549,2.511,678,3.967,681,4.418,727,3.491,754,2.655,1234,2.165,1328,4.76,1329,3.528,1330,3.528,1331,2.655,1332,3.706,1333,4.141,1334,3.706,1335,3.706,1336,2.819,1337,2.655,1338,4.141,1339,5.146,1340,4.422,1341,3.914,1342,3.706,1343,2.819,1344,2.819,1345,3.914,1346,2.655,1347,3.914,1348,2.819,1349,3.706,1350,2.819,1351,3.914,1352,3.914,1353,3.914,1354,3.24,1355,2.819,1356,3.914,1357,3.914,1358,2.819,1359,2.819,1360,2.819,1361,2.819]],["title/components/LoginPageComponent.html",[98,0.966,171,1.624]],["body/components/LoginPageComponent.html",[0,0.237,1,1.626,3,0.139,4,0.126,5,0.126,7,0.076,8,0.407,10,0.628,11,0.145,12,0.014,13,0.139,14,0.008,15,0.008,21,1.295,23,1.054,26,0.932,28,1.003,31,0.807,33,0.599,34,0.616,35,0.599,37,0.599,38,0.878,42,0.312,43,0.555,44,1.405,56,0.126,72,0.72,93,0.747,94,0.67,98,1.359,99,1.405,100,2.115,101,1.53,102,1.53,103,1.53,107,1.53,108,2.311,109,2.311,110,3.017,111,3.14,112,1.465,113,1.946,114,1.665,115,1.946,117,1.946,133,1.601,140,1.946,147,1.53,148,2.209,149,1.359,150,1.53,151,2.839,152,1.53,153,1.53,154,1.405,155,2.209,156,1.405,157,2.209,158,1.405,159,1.198,160,1.405,161,1.53,162,1.405,163,1.198,164,1.295,165,1.53,166,1.405,167,1.53,168,1.405,169,1.405,170,1.53,171,2.501,172,2.971,173,2.209,174,1.348,175,2.501,176,2.402,177,2.284,178,1.348,179,2.194,180,1.53,181,1.53,204,3.147,214,1.857,549,1.857,678,3.468,681,3.863,727,3.327,754,1.964,1234,1.601,1328,3.46,1329,5.134,1330,5.134,1331,1.964,1332,3.532,1333,4.274,1334,3.532,1335,3.532,1336,2.085,1337,1.964,1338,4.406,1339,4.905,1340,4.705,1341,2.895,1342,3.532,1343,3.01,1344,3.01,1345,4.905,1346,4.149,1347,2.895,1348,2.085,1349,3.01,1350,3.868,1351,2.895,1352,2.895,1353,2.895,1354,2.397,1355,2.085,1356,2.895,1357,2.895,1358,2.085,1359,2.085,1360,2.085,1361,2.085,1362,2.61,1363,3.767,1364,2.895,1365,2.895,1366,4.805]],["title/injectables/LoginService.html",[16,0.524,1340,2.682]],["body/injectables/LoginService.html",[3,0.217,4,0.197,5,0.197,7,0.118,10,1.016,11,0.196,12,0.014,13,0.217,14,0.011,15,0.011,16,0.847,18,1.609,26,1.257,28,1.083,31,0.847,33,1.167,34,0.708,35,1.167,37,0.934,42,0.297,43,0.865,54,1.552,55,1.497,56,0.197,57,2.617,72,1.123,114,1.798,142,1.211,172,2.626,667,5.202,671,5.544,678,2.749,679,5.084,680,5.639,681,4.369,694,3.737,711,4.514,719,3.737,1157,4.069,1340,4.337,1367,4.514,1368,4.514,1369,5.19,1370,5.19,1371,6.483,1372,5.19,1373,5.19]],["title/interfaces/Piece.html",[0,0.285,184,1.624]],["body/interfaces/Piece.html",[0,0.36,2,1.57,3,0.212,4,0.192,5,0.192,7,0.115,8,0.541,10,1.078,11,0.222,12,0.014,13,0.292,14,0.011,15,0.011,34,0.875,42,0.232,89,2.683,122,4.002,141,2.576,142,0.946,184,2.973,418,2.826,577,3.214,1016,4.405,1017,3.971,1374,3.647,1375,3.388,1376,5.064]],["title/classes/Pile.html",[56,0.152,348,1.56]],["body/classes/Pile.html",[0,0.163,3,0.096,4,0.087,5,0.087,7,0.052,8,0.307,10,0.586,11,0.208,12,0.014,13,0.188,14,0.006,15,0.006,23,1.311,26,0.702,28,0.478,31,0.97,33,0.918,34,0.557,35,0.918,37,1.217,38,0.879,41,1.602,42,0.205,46,1.641,51,0.532,56,0.137,57,1.154,59,0.412,72,1.278,89,1.917,90,1.101,93,0.514,94,0.728,121,1.208,122,2.572,141,2.219,142,1.233,145,2.606,163,1.302,164,1.984,183,1.498,184,2.981,245,3.478,304,3.397,324,2.716,334,1.277,348,3.047,355,0.927,418,2.019,431,0.856,450,4.29,554,2.597,557,2.978,558,2.267,559,1.9,560,2.019,562,2.267,563,2.811,569,3.234,570,2.801,571,1.648,572,1.648,573,1.648,577,2.794,579,1.212,582,1.154,583,1.648,585,1.527,586,0.71,589,2.648,612,1.434,643,2.846,835,2.606,836,3.673,844,4.253,845,4.138,846,3.231,848,5.639,855,1.795,891,1.795,892,1.531,893,1.212,894,1.434,895,1.434,896,1.531,897,1.531,898,1.154,899,1.052,909,1.531,933,2.421,953,3.195,1012,2.672,1062,2.421,1190,2.606,1207,3.412,1212,2.606,1222,3.716,1224,2.421,1234,1.741,1375,4.822,1377,1.648,1378,3.999,1379,3.519,1380,3.999,1381,3.147,1382,4.356,1383,3.618,1384,3.231,1385,2.837,1386,2.837,1387,2.837,1388,2.837,1389,2.421,1390,2.606,1391,2.837,1392,2.289,1393,2.289,1394,2.289,1395,2.289,1396,3.519,1397,2.289,1398,2.837,1399,3.673,1400,3.673,1401,2.837,1402,2.837,1403,2.837,1404,2.289,1405,2.289,1406,2.837,1407,2.289,1408,2.837,1409,1.531,1410,1.648,1411,1.795,1412,1.795,1413,1.795,1414,1.795,1415,1.795,1416,1.795,1417,2.606,1418,1.795,1419,1.795,1420,1.795,1421,1.795,1422,1.795,1423,1.795,1424,1.795,1425,1.795,1426,1.795,1427,2.837,1428,2.837,1429,1.795,1430,1.795,1431,1.795,1432,1.795,1433,1.795,1434,1.795,1435,2.837,1436,2.837,1437,1.795,1438,2.837,1439,2.837,1440,1.795,1441,1.795,1442,2.837,1443,2.837,1444,1.795,1445,2.837,1446,2.837,1447,2.837,1448,1.795,1449,1.795]],["title/classes/PileAdapter.html",[56,0.152,334,2.237]],["body/classes/PileAdapter.html",[0,0.206,3,0.121,4,0.11,5,0.11,7,0.066,10,0.568,11,0.157,12,0.014,13,0.218,14,0.007,15,0.007,23,1.08,26,0.842,28,0.605,31,0.88,33,0.937,34,0.569,35,0.937,37,1.114,38,0.821,41,1.501,42,0.238,46,1.397,51,0.675,56,0.164,57,1.462,59,0.522,72,1.406,89,1.536,90,1.395,93,0.651,94,0.874,121,1.449,122,2.19,141,2.277,142,1.323,145,3.127,163,1.044,164,1.69,183,1.449,184,2.92,245,3.395,304,3.668,324,1.997,334,2.423,348,3.01,355,1.175,418,2.423,450,4.632,554,1.759,559,0.933,569,3.492,577,2.506,585,1.833,586,0.899,589,1.711,612,1.817,835,2.089,836,3.748,844,4.161,845,4.345,846,3.748,848,5.535,855,3.405,909,1.94,933,1.94,953,3.62,1012,2.504,1062,1.94,1190,2.089,1207,2.905,1212,2.089,1222,2.905,1224,1.94,1234,1.395,1375,4.505,1377,2.089,1378,3.405,1379,2.274,1380,2.274,1381,3.777,1382,4.852,1384,2.089,1385,2.274,1386,2.274,1387,2.274,1388,2.274,1389,1.94,1390,2.089,1391,2.274,1396,4.081,1398,2.274,1399,3.127,1400,3.127,1401,2.274,1402,2.274,1403,2.274,1406,2.274,1408,2.274,1409,1.94,1410,2.089,1411,2.274,1412,2.274,1413,2.274,1414,2.274,1415,2.274,1416,2.274,1417,3.127,1418,2.274,1419,2.274,1420,2.274,1421,2.274,1422,2.274,1423,2.274,1424,2.274,1425,2.274,1426,2.274,1427,3.405,1428,3.405,1429,2.274,1430,2.274,1431,2.274,1432,2.274,1433,2.274,1434,2.274,1435,3.405,1436,3.405,1437,2.274,1438,3.405,1439,3.405,1440,2.274,1441,2.274,1442,3.405,1443,3.405,1444,2.274,1445,3.405,1446,3.405,1447,3.405,1448,2.274,1449,2.274,1450,2.9,1451,2.9,1452,2.9,1453,2.9,1454,2.9,1455,2.9,1456,2.9]],["title/interfaces/PileConfig.html",[0,0.285,1457,3.143]],["body/interfaces/PileConfig.html",[0,0.359,2,1.567,3,0.211,4,0.191,5,0.191,7,0.115,8,0.54,10,1.009,11,0.193,12,0.014,13,0.266,14,0.011,15,0.011,42,0.292,50,1.89,59,0.909,72,1.094,120,3.879,329,4.5,495,3.38,809,3.38,810,4.395,811,3.962,812,3.962,816,3.962,820,3.962,823,3.962,826,3.962,829,3.962,857,3.962,1457,4.999,1458,3.962,1459,3.962,1460,5.053,1461,4.395,1462,4.395,1463,4.395,1464,4.395,1465,4.395,1466,4.395,1467,4.395,1468,4.395,1469,4.395,1470,4.395,1471,4.395,1472,4.395]],["title/injectables/PileRegistryService.html",[16,0.524,481,2.511]],["body/injectables/PileRegistryService.html",[3,0.187,4,0.169,5,0.169,7,0.102,8,0.499,9,1.335,10,0.769,11,0.226,12,0.014,13,0.187,14,0.01,15,0.01,16,0.769,18,1.384,23,1.396,26,1.141,28,0.932,31,0.996,33,1.185,34,0.719,35,1.185,37,1.059,38,0.635,41,1.288,42,0.32,43,0.744,50,2.202,54,1.335,55,1.288,56,0.169,59,1.185,93,1.571,94,1.409,149,1.076,183,1.965,208,2.053,271,2.365,348,2.29,431,2.464,481,3.687,489,2.987,499,3.687,570,3.768,586,1.384,618,2.384,619,2.797,620,4.616,621,3.285,622,4.239,623,3.907,624,3.118,627,3.884,629,3.501,630,3.675,631,2.987,632,3.884,633,3.501,634,3.215,635,3.501,636,3.501,637,3.215,638,3.501,640,2.148,641,2.797,1012,2.148,1013,2.987,1473,4.465,1474,5.041,1475,5.886,1476,4.465]],["title/interfaces/PileState.html",[0,0.285,1012,1.928]],["body/interfaces/PileState.html",[0,0.217,2,0.946,3,0.127,4,0.116,5,0.116,7,0.069,8,0.382,10,0.774,11,0.136,12,0.014,13,0.224,14,0.008,15,0.008,23,1.107,31,0.399,37,0.811,38,0.762,41,1.547,42,0.245,46,1.45,51,0.709,56,0.171,57,1.538,59,0.549,72,1.432,89,1.616,94,0.614,122,3.187,141,2.348,142,1.341,145,3.246,163,1.098,164,1.754,183,1.79,184,2.956,245,3.187,304,3.723,324,2.073,334,1.702,348,2.995,355,1.235,418,2.516,450,3.963,554,1.826,559,0.981,569,3.187,577,2.56,585,2.263,586,0.946,589,1.8,612,1.911,643,1.702,835,2.196,836,2.196,844,3.862,845,4.229,846,3.246,848,5.58,909,2.041,933,2.041,953,3.711,1012,3.041,1062,2.041,1190,2.196,1207,3.016,1212,2.196,1222,3.016,1224,2.041,1234,1.467,1375,4.579,1377,2.196,1378,3.535,1379,2.392,1380,2.392,1382,3.535,1384,2.196,1385,2.392,1386,2.392,1387,2.392,1388,2.392,1389,2.041,1390,2.196,1391,2.392,1396,3.535,1398,2.392,1399,3.246,1400,3.246,1401,2.392,1402,2.392,1403,2.392,1406,2.392,1408,2.392,1409,2.041,1410,2.196,1411,3.535,1412,3.535,1413,3.535,1414,3.535,1415,3.535,1416,3.535,1417,4.552,1418,4.205,1419,2.392,1420,2.392,1421,2.392,1422,2.392,1423,2.392,1424,2.392,1425,2.392,1426,2.392,1427,3.535,1428,3.535,1429,2.392,1430,2.392,1431,2.392,1432,2.392,1433,2.392,1434,2.392,1435,3.535,1436,3.535,1437,2.392,1438,3.535,1439,3.535,1440,2.392,1441,2.392,1442,3.535,1443,3.535,1444,2.392,1445,3.535,1446,3.535,1447,3.535,1448,2.392,1449,2.392]],["title/injectables/PileStateService.html",[16,0.524,1474,2.886]],["body/injectables/PileStateService.html",[3,0.176,4,0.16,5,0.16,7,0.096,8,0.48,9,1.262,10,0.741,11,0.222,12,0.014,13,0.176,14,0.01,15,0.01,16,0.741,18,1.308,23,1.427,26,1.099,31,0.998,33,1.232,34,0.748,35,1.232,37,1.285,38,0.973,42,0.293,43,0.703,50,2.121,54,1.262,55,1.217,56,0.16,59,1.02,71,3.08,93,1.272,94,1.141,121,1.892,142,0.788,149,1.017,183,1.892,348,2.778,431,2.121,499,3.551,557,3.788,559,1.357,570,3.788,586,1.308,618,2.296,621,3.164,623,3.164,624,3.003,630,3.573,640,2.03,644,2.643,645,4.612,646,4.082,647,4.082,648,4.082,649,4.61,651,3.308,652,4.082,653,3.308,654,3.038,655,3.308,656,3.308,657,3.038,658,3.308,659,3.038,660,3.308,661,3.308,662,3.038,663,3.308,1012,3.293,1013,2.822,1474,4.082,1477,5.669,1478,4.219,1479,4.219,1480,4.219]],["title/classes/Player.html",[56,0.152,1481,2.682]],["body/classes/Player.html",[0,0.346,3,0.204,4,0.185,5,0.185,7,0.111,8,0.528,9,1.457,10,0.897,11,0.219,12,0.014,13,0.26,14,0.01,15,0.01,26,1.208,31,1,33,0.877,34,0.817,35,0.877,37,1.121,38,0.885,41,1.405,42,0.223,46,1.567,56,0.185,90,2.343,121,2.079,129,3.259,142,0.91,183,2.079,355,1.973,431,1.822,554,3.19,557,3.858,558,3.902,559,2.328,560,3.476,562,3.902,563,4.301,569,3.463,570,3.772,571,3.508,572,3.508,573,3.508,579,2.58,582,2.456,583,3.508,586,1.51,891,3.82,892,3.259,893,2.58,894,3.051,895,3.051,896,3.259,897,3.259,898,2.456,899,2.24,906,3.508,1481,4.167,1482,3.82,1483,4.871,1484,3.508]],["title/injectables/PlayerService.html",[16,0.524,743,2.682]],["body/injectables/PlayerService.html",[3,0.186,4,0.169,5,0.169,7,0.101,8,0.498,9,2.395,11,0.178,12,0.014,13,0.186,14,0.01,15,0.01,16,0.768,18,1.382,31,0.768,34,0.875,42,0.269,43,0.743,54,1.332,55,1.285,56,0.169,59,1.441,72,1.272,93,1.319,94,1.183,324,3.434,743,3.933,1481,5.475,1485,3.876,1486,6.579,1487,6.579,1488,5.879,1489,4.456,1490,5.879,1491,6.967,1492,5.879,1493,5.879,1494,5.879,1495,5.879,1496,5.879,1497,5.879,1498,5.879,1499,5.879,1500,5.879,1501,5.879,1502,5.879,1503,4.456,1504,4.456]],["title/interfaces/PlayerState.html",[0,0.285,1484,2.886]],["body/interfaces/PlayerState.html",[0,0.405,2,1.769,3,0.238,4,0.216,5,0.216,7,0.13,8,0.582,9,2.288,10,1.051,11,0.208,12,0.014,13,0.287,14,0.012,15,0.012,34,0.855,42,0.261,56,0.216,142,1.066,183,1.904,355,2.31,554,2.783,586,1.769,906,4.108,1481,3.816,1482,4.473,1484,4.947]],["title/interfaces/SignUpConfirmFormData.html",[0,0.285,1505,2.886]],["body/interfaces/SignUpConfirmFormData.html",[0,0.313,2,1.366,3,0.184,4,0.167,5,0.167,7,0.1,8,0.494,10,0.973,11,0.176,12,0.014,13,0.184,14,0.01,15,0.01,23,1.222,28,0.919,38,0.93,42,0.341,43,0.734,56,0.167,72,0.953,98,1.406,108,2.119,109,2.119,110,1.714,111,1.784,113,1.784,114,1.526,115,1.784,117,1.784,133,2.119,140,1.784,174,1.784,175,2.649,176,2.897,177,2.934,179,1.714,204,3.256,214,2.458,549,2.458,676,4.98,678,3.943,727,3.442,754,2.599,1234,2.119,1331,2.599,1332,3.655,1333,4.098,1334,3.655,1335,3.655,1336,2.759,1337,2.599,1338,4.098,1342,3.655,1343,2.759,1344,2.759,1346,2.599,1348,2.759,1349,3.655,1350,2.759,1355,2.759,1358,2.759,1359,2.759,1360,2.759,1361,2.759,1505,4.71,1506,2.947,1507,2.947,1508,3.859,1509,3.172,1510,3.172,1511,3.832,1512,3.832,1513,3.832,1514,3.832,1515,3.832,1516,3.832,1517,3.832,1518,3.172,1519,3.832]],["title/components/SignUpConfirmPageComponent.html",[98,0.966,174,1.624]],["body/components/SignUpConfirmPageComponent.html",[0,0.227,1,1.587,3,0.133,4,0.121,5,0.121,7,0.073,8,0.395,10,0.609,11,0.141,12,0.014,13,0.133,14,0.008,15,0.008,21,1.241,23,1.028,26,0.903,28,0.972,31,0.791,33,0.574,34,0.601,35,0.574,37,0.574,38,0.86,42,0.308,43,0.532,44,1.346,56,0.121,72,0.69,93,0.716,94,0.642,98,1.327,99,1.346,100,2.051,101,1.467,102,1.467,103,1.467,107,1.467,108,2.241,109,2.241,110,2.995,111,3.118,112,1.404,113,1.887,114,1.614,115,1.887,117,1.887,133,1.535,140,1.887,147,1.467,148,2.142,149,1.327,150,1.467,151,2.783,152,1.467,153,1.467,154,1.346,155,2.142,156,1.346,157,2.142,158,1.346,159,1.148,160,1.346,161,1.467,162,1.346,163,1.148,164,1.241,165,1.467,166,1.346,167,1.467,168,1.346,169,1.346,170,1.467,171,1.292,172,1.292,173,2.142,174,2.451,175,2.988,176,3.108,177,3.235,178,1.292,179,2.141,180,1.467,181,1.467,204,3.071,214,1.78,549,1.78,676,4.307,678,3.41,727,3.247,754,1.882,1234,1.535,1331,1.882,1332,3.448,1333,4.211,1334,3.448,1335,3.448,1336,1.998,1337,1.882,1338,4.349,1342,3.448,1343,2.918,1344,2.918,1346,4.096,1348,1.998,1349,2.918,1350,3.791,1355,1.998,1358,1.998,1359,1.998,1360,1.998,1361,1.998,1362,2.501,1363,3.653,1364,2.775,1365,2.775,1505,3.355,1506,4.307,1507,4.307,1508,4.096,1509,2.297,1510,2.297,1511,4.787,1512,2.775,1513,2.775,1514,2.775,1515,2.775,1516,2.775,1517,2.775,1518,2.297,1519,2.775]],["title/interfaces/SignUpFormData.html",[0,0.285,1520,2.886]],["body/interfaces/SignUpFormData.html",[0,0.301,2,1.316,3,0.177,4,0.161,5,0.161,7,0.097,8,0.482,10,1.012,11,0.194,12,0.014,13,0.177,14,0.01,15,0.01,23,1.199,28,0.885,38,0.913,42,0.337,43,0.707,56,0.161,72,0.918,98,1.372,108,2.041,109,2.041,110,1.651,111,1.718,113,1.718,114,1.47,115,1.718,117,1.718,133,2.041,140,1.718,175,2.6,176,2.927,177,1.718,178,1.718,179,1.651,204,3.175,214,2.368,549,2.368,678,3.901,681,4.345,684,5.417,727,3.357,754,2.503,1234,2.041,1331,2.503,1332,3.564,1333,4.021,1334,3.564,1335,3.564,1336,2.658,1337,2.503,1338,4.021,1342,3.564,1343,2.658,1344,2.658,1346,2.503,1348,2.658,1349,4.021,1350,2.658,1354,3.055,1355,2.658,1358,2.658,1359,2.658,1360,2.658,1361,2.658,1506,2.838,1507,2.838,1508,3.787,1509,3.055,1510,3.055,1518,3.055,1520,4.623,1521,4.949,1522,3.69,1523,3.69,1524,3.69,1525,3.69,1526,3.69,1527,3.69,1528,3.69,1529,3.69,1530,3.69,1531,3.69]],["title/components/SignUpPageComponent.html",[98,0.966,178,1.624]],["body/components/SignUpPageComponent.html",[0,0.213,1,1.53,3,0.125,4,0.113,5,0.113,7,0.068,8,0.377,10,0.693,11,0.134,12,0.014,13,0.125,14,0.007,15,0.007,21,1.165,23,0.991,26,0.862,28,0.928,31,0.767,33,0.539,34,0.579,35,0.539,37,0.539,38,0.835,42,0.301,43,0.499,44,1.264,56,0.113,72,0.648,93,0.672,94,0.603,98,1.279,99,1.264,100,1.958,101,1.377,102,1.377,103,1.377,107,1.377,108,2.139,109,2.139,110,2.962,111,3.083,112,1.318,113,1.801,114,1.541,115,1.801,117,1.801,133,1.441,140,1.801,147,1.377,148,2.045,149,1.279,150,1.377,151,2.7,152,1.377,153,1.377,154,1.264,155,2.045,156,1.264,157,2.045,158,1.264,159,1.078,160,1.264,161,1.377,162,1.264,163,1.078,164,1.165,165,1.377,166,1.264,167,1.377,168,1.264,169,1.264,170,1.377,171,1.213,172,1.213,173,2.045,174,1.213,175,3.023,176,3.116,177,1.801,178,2.378,179,2.064,180,1.377,181,1.377,204,2.961,214,1.671,549,1.671,678,3.323,681,4.015,684,5.033,727,3.13,754,1.767,1234,1.441,1331,1.767,1332,3.323,1333,4.117,1334,3.323,1335,3.323,1336,1.876,1337,1.767,1338,4.263,1342,3.323,1343,2.786,1344,2.786,1346,4.015,1348,1.876,1349,3.323,1350,3.678,1354,2.156,1355,1.876,1358,1.876,1359,1.876,1360,1.876,1361,1.876,1362,2.348,1363,2.348,1506,4.196,1507,4.196,1508,4.015,1509,2.156,1510,2.156,1518,2.156,1520,3.202,1521,4.614,1522,4.614,1523,2.605,1524,2.605,1525,2.605,1526,2.605,1527,2.605,1528,2.605,1529,2.605,1530,2.605,1531,2.605,1532,4.447,1533,2.995,1534,4.447,1535,4.447,1536,4.447,1537,4.447,1538,4.447,1539,4.447,1540,4.447,1541,4.447,1542,4.447,1543,4.447,1544,4.447,1545,4.447]],["title/injectables/SignUpService.html",[16,0.524,1508,2.365]],["body/injectables/SignUpService.html",[3,0.203,4,0.184,5,0.184,7,0.11,10,1.073,11,0.207,12,0.014,13,0.203,14,0.01,15,0.01,16,0.812,18,1.504,26,1.205,28,1.012,31,0.896,33,1.233,34,0.749,35,1.233,37,1.118,42,0.284,43,0.809,54,1.45,55,1.399,56,0.184,57,2.446,142,1.161,667,5.112,671,5.992,672,5.403,673,5.403,675,5.403,676,4.834,678,3.291,679,5.666,681,4.263,683,5.403,684,5.203,694,3.493,1157,3.803,1368,4.219,1508,3.665,1546,6.286,1547,4.219,1548,4.85,1549,4.85,1550,4.85,1551,4.85,1552,4.85]],["title/classes/Space.html",[56,0.152,191,1.692]],["body/classes/Space.html",[0,0.252,1,2.067,3,0.148,4,0.134,5,0.134,7,0.081,8,0.426,10,0.911,11,0.221,12,0.014,13,0.21,14,0.008,15,0.008,23,1.392,26,0.976,28,0.741,31,1.008,33,1.052,34,0.638,35,1.052,37,1.052,38,0.831,41,1.685,42,0.291,51,0.825,56,0.134,59,1.144,72,0.768,90,1.707,93,1.129,94,1.012,121,1.679,141,2.306,142,1.188,184,3.252,191,2.683,305,2.186,314,1.981,324,2.687,556,4.367,559,2.242,560,3.261,562,3.151,577,2.966,579,2.665,582,1.79,602,3.151,607,2.556,608,2.223,800,4.582,898,1.79,940,3.087,942,3.365,943,1.981,944,1.981,945,1.981,947,2.556,949,2.556,950,2.556,1409,2.374,1553,2.783,1554,5.083,1555,5.083,1556,5.03,1557,5.53,1558,4.376,1559,5.03,1560,3.549,1561,3.549,1562,3.549,1563,4.985,1564,3.549,1565,4.376,1566,3.549,1567,3.549,1568,3.549,1569,3.549,1570,3.549,1571,3.549,1572,3.549,1573,3.549,1574,3.087,1575,6.37,1576,3.087,1577,3.087,1578,4.376,1579,3.087,1580,3.087,1581,3.087]],["title/interfaces/SpaceState.html",[0,0.285,556,2.511]],["body/interfaces/SpaceState.html",[0,0.301,1,1.978,2,1.316,3,0.177,4,0.161,5,0.161,7,0.097,8,0.482,10,0.935,11,0.172,12,0.014,13,0.238,14,0.01,15,0.01,23,1.199,38,0.603,41,1.641,42,0.314,51,0.987,56,0.161,59,1.234,72,0.918,141,2.42,142,1.282,184,3.297,191,2.709,305,2.402,314,2.368,324,1.951,556,4.481,559,1.83,560,2.368,577,3.097,579,2.247,602,3.564,607,3.055,608,2.658,800,5.034,898,2.139,942,3.806,943,2.368,944,2.368,945,2.368,947,3.055,949,3.055,950,3.055,1409,2.838,1553,3.327,1554,3.69,1555,3.69,1557,3.69,1558,3.69,1563,5.034,1565,3.69,1574,3.69,1575,6.651,1576,3.69,1577,3.69,1578,4.949,1579,3.69,1580,3.69,1581,3.69]],["title/interfaces/SpeciesPiece.html",[0,0.285,353,2.511]],["body/interfaces/SpeciesPiece.html",[0,0.42,2,1.832,3,0.247,4,0.224,5,0.224,7,0.135,8,0.594,11,0.179,12,0.014,13,0.247,14,0.012,15,0.012,42,0.321,122,3.904,183,2.342,184,3.032,185,6.071,186,3.702,187,5.14,353,4.396,1582,5.14]],["title/coverage.html",[1583,4.763]],["body/coverage.html",[0,0.546,1,1.514,5,0.091,6,2.097,11,0.073,12,0.014,14,0.006,15,0.006,16,1.005,17,1.613,19,3.342,20,2.715,21,2.042,22,2.956,24,1.736,30,1.422,39,1.613,56,0.26,59,0.434,87,2.956,88,2.097,89,3.636,98,1.713,99,1.018,104,3.568,105,1.613,106,2.097,112,1.659,124,1.16,136,1.51,138,1.216,149,0.909,154,1.018,156,1.018,158,1.018,159,0.868,160,1.018,162,1.018,163,0.868,164,1.467,166,1.018,168,1.018,169,1.018,171,0.977,174,0.977,176,2.54,177,2.126,178,0.977,182,2.097,184,0.977,188,2.097,189,1.891,190,2.956,191,1.018,198,2.715,199,1.891,200,2.956,213,1.109,215,1.736,220,1.736,229,2.097,232,0.938,241,1.422,242,1.736,270,2.224,278,1.422,280,1.51,304,4.403,323,3.342,326,1.613,327,0.868,331,1.51,334,1.346,348,0.938,350,1.346,353,1.51,394,2.097,395,1.891,406,1.613,418,1.346,426,1.891,470,2.097,471,2.097,480,1.422,481,1.51,495,1.613,497,1.613,498,2.738,499,2.361,500,1.891,542,2.097,551,1.891,553,2.956,554,0.977,556,1.51,559,1.688,580,1.277,585,1.018,618,2.953,619,3.568,620,1.422,626,1.736,644,3.568,645,1.422,667,1.613,668,2.097,669,2.956,725,2.097,726,2.097,739,1.736,741,1.51,743,1.613,756,2.929,760,1.891,768,1.613,790,2.097,801,2.956,802,2.956,832,2.097,833,2.097,870,2.097,873,2.097,878,2.956,899,1.109,905,1.216,911,1.613,931,3.568,932,2.956,957,2.956,1001,2.097,1012,1.16,1019,1.891,1060,2.956,1064,1.613,1068,1.736,1069,1.736,1072,1.51,1079,2.097,1082,1.736,1083,2.097,1183,2.097,1328,1.736,1329,2.956,1330,2.956,1331,3.562,1340,1.613,1367,2.097,1374,2.715,1377,3.342,1457,1.891,1458,2.956,1459,2.956,1474,1.736,1481,1.613,1482,2.956,1484,1.736,1485,2.097,1505,1.736,1506,3.511,1507,3.511,1508,1.422,1520,1.736,1546,2.097,1547,2.097,1553,2.956,1582,2.097,1583,2.097,1584,2.097,1585,2.411,1586,2.411,1587,6.864,1588,2.097,1589,6.309,1590,2.097,1591,7.205,1592,6.038,1593,6.994,1594,5.695,1595,2.411,1596,2.411,1597,2.411,1598,2.411,1599,2.411,1600,2.411,1601,2.411,1602,2.411,1603,2.411,1604,4.641,1605,2.411,1606,3.77,1607,2.411,1608,2.411,1609,4.641,1610,5.248,1611,6.038,1612,2.411,1613,3.77,1614,3.77,1615,3.77,1616,2.411,1617,2.411,1618,4.565,1619,2.097,1620,5.695,1621,5.695,1622,4.954,1623,2.097,1624,2.097,1625,2.411,1626,1.736,1627,2.097,1628,2.097,1629,2.097,1630,2.097,1631,2.411,1632,2.411,1633,2.411]],["title/dependencies.html",[1634,2.623,1635,4.195]],["body/dependencies.html",[12,0.014,14,0.011,15,0.011,43,0.935,51,1.304,549,3.129,692,4.877,693,4.877,694,4.038,695,4.877,696,4.877,943,3.129,944,3.129,945,3.129,1017,4.397,1337,3.308,1635,4.877,1636,5.607,1637,8.089,1638,5.607,1639,6.799,1640,5.607,1641,5.607,1642,5.607,1643,6.799,1644,6.799,1645,5.607,1646,5.607,1647,5.607,1648,5.607,1649,5.607,1650,5.607,1651,5.607,1652,5.607,1653,5.607]],["title/miscellaneous/enumerations.html",[1654,1.867,1655,4.195]],["body/miscellaneous/enumerations.html",[7,0.1,12,0.014,14,0.01,15,0.01,94,1.693,120,2.792,149,1.674,275,3.883,276,3.636,329,3.239,419,4.551,806,4.551,809,3.883,857,4.551,1626,3.148,1654,2.44,1655,3.802,1656,3.802,1657,4.551,1658,3.802,1659,4.371,1660,4.371,1661,3.802,1662,5.049,1663,5.049,1664,5.049,1665,5.049,1666,5.049,1667,5.049,1668,4.371,1669,4.371,1670,4.371,1671,4.371,1672,4.371,1673,4.371,1674,4.371,1675,4.371,1676,4.371,1677,4.371,1678,4.371,1679,4.371,1680,4.371,1681,4.371,1682,4.371,1683,4.371,1684,5.804,1685,3.802,1686,5.049,1687,5.049,1688,5.049,1689,5.049,1690,5.049,1691,5.049,1692,4.371,1693,4.371,1694,4.371,1695,4.371,1696,4.371,1697,4.371,1698,4.371,1699,4.371,1700,4.371,1701,4.371,1702,4.371,1703,4.371,1704,4.371,1705,4.371,1706,4.371,1707,4.371,1708,4.371,1709,4.371,1710,4.371,1711,4.371,1712,4.371,1713,4.371,1714,4.371,1715,4.371,1716,4.371,1717,4.371]],["title/miscellaneous/functions.html",[1654,1.867,1718,4.195]],["body/miscellaneous/functions.html",[7,0.089,10,0.868,11,0.186,12,0.014,14,0.009,15,0.009,31,0.868,33,1.387,34,0.857,35,1.401,37,1.401,50,2.485,79,3.077,89,2.079,93,1.211,94,1.623,122,2.721,125,3.442,138,2.721,141,1.736,184,1.589,220,3.886,278,3.184,280,3.38,305,1.468,418,3.012,426,4.231,431,2.692,500,4.231,569,3.628,577,1.589,578,3.413,643,3.012,722,4.836,788,3.077,1207,4.931,1213,3.413,1222,2.625,1223,3.413,1224,4.443,1229,3.413,1237,3.413,1313,3.413,1346,3.184,1374,2.826,1399,2.826,1400,2.826,1410,2.826,1618,3.413,1619,4.694,1622,3.413,1623,4.694,1624,4.694,1654,2.19,1718,3.413,1719,6.642,1720,3.413,1721,6.963,1722,3.924,1723,5.396,1724,3.924,1725,3.924,1726,3.924,1727,3.924,1728,3.924,1729,3.924,1730,3.924,1731,3.924,1732,6.167,1733,3.924,1734,5.396,1735,3.924,1736,3.924,1737,3.924,1738,3.924,1739,4.694,1740,3.924,1741,3.924,1742,3.924,1743,3.924,1744,3.924,1745,3.924,1746,3.924,1747,3.924,1748,3.413,1749,3.924,1750,3.413,1751,3.924,1752,6.167,1753,3.924,1754,5.396,1755,3.924,1756,3.924,1757,3.924,1758,3.924,1759,3.924,1760,3.924]],["title/index.html",[7,0.076,1173,2.409,1761,2.91]],["body/index.html",[4,0.192,12,0.011,14,0.011,15,0.011,34,0.553,49,2.683,59,0.911,98,1.686,179,1.97,201,3.971,428,4.405,507,4.405,676,3.388,707,5.553,1192,4.405,1215,5.553,1234,2.436,1389,4.677,1390,5.286,1491,4.405,1634,3.971,1762,5.064,1763,6.384,1764,5.064,1765,6.992,1766,6.992,1767,4.405,1768,5.064,1769,5.064,1770,6.384,1771,7.568,1772,7.845,1773,5.064,1774,5.064,1775,5.064,1776,5.064,1777,5.064,1778,5.064,1779,5.064,1780,4.405,1781,5.064,1782,6.992,1783,5.064,1784,5.064,1785,5.064,1786,5.064,1787,5.064,1788,6.384,1789,6.384,1790,7.341,1791,6.384,1792,5.064,1793,7.727,1794,5.064,1795,5.064,1796,5.064,1797,5.064,1798,5.064,1799,5.064,1800,6.992,1801,5.064,1802,5.064,1803,4.405,1804,3.971,1805,5.064]],["title/license.html",[1173,2.409,1761,2.91,1806,2.91]],["body/license.html",[1,1.49,12,0.011,14,0.011,15,0.011,577,2.093,1211,4.494,1384,3.72,1389,4.325,1563,4.051,1584,4.494,1739,4.494,1748,4.494,1750,4.494,1780,4.494,1803,4.494,1806,4.494,1807,5.166,1808,7.056,1809,5.166,1810,5.166,1811,5.166,1812,6.465,1813,5.166,1814,5.166,1815,5.166,1816,5.166,1817,5.166,1818,5.166,1819,6.465,1820,8.036,1821,5.166,1822,7.056,1823,5.166,1824,6.465,1825,5.166,1826,5.166,1827,5.166,1828,5.166,1829,5.166,1830,5.166,1831,5.166,1832,5.166,1833,5.166,1834,6.465,1835,5.166,1836,5.166,1837,5.166,1838,5.166,1839,5.166,1840,5.166,1841,6.465,1842,6.465,1843,5.166,1844,5.166,1845,5.166,1846,5.166,1847,5.166,1848,5.166,1849,5.166,1850,5.166,1851,5.166,1852,5.166,1853,5.166,1854,5.166,1855,5.166,1856,5.166,1857,5.166,1858,5.166,1859,5.166,1860,5.166,1861,5.166,1862,5.166,1863,5.166,1864,5.166,1865,5.166,1866,5.166,1867,5.166]],["title/modules.html",[1868,4.763]],["body/modules.html",[12,0.012,14,0.012,15,0.012,1868,5.664]],["title/overview.html",[1804,4.293]],["body/overview.html",[2,1.974,12,0.012,14,0.012,15,0.012,18,1.974,90,3.063,100,2.803,1804,4.993,1869,6.367,1870,7.33,1871,6.367]],["title/properties.html",[8,0.409,1634,2.623]],["body/properties.html",[8,0.547,12,0.013,14,0.012,15,0.012,1767,5.616,1872,6.456]],["title/miscellaneous/typealiases.html",[1654,1.867,1873,4.822]],["body/miscellaneous/typealiases.html",[7,0.139,11,0.185,12,0.012,14,0.012,15,0.012,89,3.239,185,5.614,275,4.09,803,5.614,805,5.614,806,4.794,809,4.09,1374,4.402,1375,4.789,1626,4.402,1654,3.412,1656,5.318,1657,4.794,1658,5.318,1661,5.318,1685,5.318,1720,5.318,1874,6.113]],["title/miscellaneous/variables.html",[1654,1.867,1875,4.195]],["body/miscellaneous/variables.html",[7,0.068,9,1.326,11,0.205,12,0.014,14,0.007,15,0.007,50,2.192,59,1.054,72,0.646,93,1.525,94,1.367,114,1.034,120,3.157,122,1.504,136,2.778,141,2.246,184,2.753,191,1.259,208,2.434,232,1.725,293,4.604,298,3.92,327,1.596,329,3.663,348,1.725,369,1.996,473,2.595,495,2.966,497,2.966,547,6.616,577,3.053,586,0.925,589,1.76,801,2.339,802,3.477,803,5.146,804,5.709,811,4.595,812,4.15,813,3.857,814,2.595,815,3.857,816,4.15,817,3.857,818,5.146,819,3.857,820,4.15,821,3.857,822,3.857,823,4.15,824,3.857,825,3.857,826,4.15,827,3.857,828,3.857,829,4.15,830,3.857,831,3.857,874,2.595,899,2.434,931,1.869,1019,3.477,1060,3.477,1061,2.595,1068,3.193,1188,2.595,1417,2.148,1458,2.339,1459,3.477,1461,2.595,1462,2.595,1463,2.595,1464,2.595,1465,2.595,1466,2.595,1467,2.595,1468,2.595,1469,2.595,1470,2.595,1471,2.595,1472,2.595,1588,2.595,1590,3.857,1626,2.148,1627,3.857,1628,2.595,1629,3.857,1630,2.595,1654,1.665,1657,2.339,1662,2.595,1663,2.595,1664,2.595,1665,2.595,1666,2.595,1667,2.595,1686,3.857,1687,3.857,1688,2.595,1689,3.857,1690,3.857,1691,4.604,1875,2.595,1876,2.983,1877,4.434,1878,2.983,1879,2.983,1880,2.983,1881,2.983,1882,2.983,1883,2.983,1884,2.983,1885,2.983,1886,2.983,1887,2.983,1888,2.983,1889,2.983,1890,2.983,1891,2.983,1892,2.983,1893,2.983,1894,6.796,1895,2.983,1896,2.983,1897,2.983,1898,6.563,1899,2.983,1900,2.983,1901,2.983,1902,2.983,1903,2.983,1904,2.983,1905,2.983,1906,2.983,1907,6.563,1908,2.983,1909,2.983,1910,2.983,1911,2.983,1912,2.983,1913,2.983,1914,2.983,1915,2.983,1916,2.983,1917,2.983,1918,2.983,1919,2.983,1920,4.434,1921,2.983,1922,2.983,1923,2.983,1924,2.983]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":304,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameManagementService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1872,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1591,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1595,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1587,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1592,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":845,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["1/1",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1597,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1606,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1603,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1608,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1601,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1599,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1871,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1598,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1869,"title":{},"body":{"overview.html":{}}}],["1235535.svg",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1600,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["151117.svg",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1607,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":1637,"title":{},"body":{"dependencies.html":{}}}],["18.2.5",{"_index":1768,"title":{},"body":{"index.html":{}}}],["18.2.7",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":818,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1810,"title":{},"body":{"license.html":{}}}],["2037742.svg",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21",{"_index":1870,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1602,"title":{},"body":{"coverage.html":{}}}],["2997582.svg",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":814,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["3.670.0",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["3/19",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1604,"title":{},"body":{"coverage.html":{}}}],["3386143.svg",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["367390.svg",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.17.21",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["4412103.svg",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5/15",{"_index":1605,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1596,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1543,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["6606521.svg",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6850047.svg",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["7049525.svg",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7144060.svg",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7195612.svg",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7290921.svg",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7300296.svg",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_action",{"_index":1554,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_drawpool",{"_index":834,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":1238,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":1555,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_setgamestate",{"_index":1241,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":1247,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":558,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["_transactionstate",{"_index":1239,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["above",{"_index":1840,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":969,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":1187,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":121,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"injectables/AreaStateService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"license.html":{}}}],["action.model",{"_index":1574,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["action_display_abundance",{"_index":1668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":1670,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn",{"_index":1684,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":1694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":1696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":1698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":1700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":1702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":1704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayabundance",{"_index":1669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":1671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplaymanagerservice",{"_index":17,"title":{"injectables/ActionDisplayManagerService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["actiondisplayservicewithsetup",{"_index":39,"title":{"interfaces/ActionDisplayServiceWithSetup.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplaysetupmanager",{"_index":24,"title":{"classes/ActionDisplaySetupManager.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplaysetupmanager([adaptionactiondisplayservice",{"_index":60,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["actionpawn",{"_index":120,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actionpawnamphibian",{"_index":1695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":1697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":1699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawncomponent",{"_index":99,"title":{"components/ActionPawnComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnforheader",{"_index":399,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawninsect",{"_index":1701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnmammal",{"_index":1703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnpiece",{"_index":124,"title":{"interfaces/ActionPawnPiece.html":{}},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["actionpawnpile",{"_index":325,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["actionpawnpileid",{"_index":523,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["actionpawnpilelength",{"_index":400,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnreptile",{"_index":1705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawns",{"_index":207,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnspacecomponent",{"_index":154,"title":{"components/ActionPawnSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnspaces",{"_index":230,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnssubject",{"_index":231,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actions",{"_index":1227,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["actionserviceswithsetup",{"_index":64,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["acts",{"_index":1385,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["actual_component",{"_index":181,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaption",{"_index":44,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaptionactiondisplaycardcomponent",{"_index":156,"title":{"components/AdaptionActionDisplayCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["adaptionactiondisplayservice",{"_index":30,"title":{"injectables/AdaptionActionDisplayService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["adaptionarea",{"_index":731,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["add",{"_index":507,"title":{},"body":{"injectables/AnimalProviderService.html":{},"index.html":{}}}],["addactionpawn",{"_index":235,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["addactionpawn(index",{"_index":244,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["added",{"_index":375,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameStateStoreService.html":{}}}],["addedelements",{"_index":380,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addedelementspaces",{"_index":358,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addelement",{"_index":458,"title":{},"body":{"classes/AnimalElements.html":{}}}],["addelement(element",{"_index":364,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addpiece",{"_index":1556,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":1565,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["aliases",{"_index":1874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allelements",{"_index":377,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["already",{"_index":898,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["always",{"_index":1431,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["amount",{"_index":886,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["amphibian",{"_index":1662,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["amphibian_element",{"_index":1672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":1673,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["and/or",{"_index":1832,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1765,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1636,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1638,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1337,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":754,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/card",{"_index":214,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/grid",{"_index":421,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/tooltip",{"_index":755,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["angular/platform",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["animal",{"_index":159,"title":{"classes/Animal.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animal(animalconfig",{"_index":519,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animal.actionpawn.length$.subscribe((length",{"_index":448,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.actionpawn.pullone",{"_index":779,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.constant",{"_index":810,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{}}}],["animal.elements.addelement(element",{"_index":786,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.elements.elements$.subscribe((elements",{"_index":444,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.id",{"_index":437,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.species.length$.subscribe((length",{"_index":451,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalbyid",{"_index":472,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalcardcomponent",{"_index":158,"title":{"components/AnimalCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animalconfig",{"_index":331,"title":{"interfaces/AnimalConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["animalelements",{"_index":326,"title":{"classes/AnimalElements.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["animalelements(config.elementarea",{"_index":390,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["animalenum",{"_index":809,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":812,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":816,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":820,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":823,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":826,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":829,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalfactory",{"_index":476,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalfactory(animalconfig",{"_index":484,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalkind",{"_index":185,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/typealiases.html":{}}}],["animalproviderservice",{"_index":406,"title":{"injectables/AnimalProviderService.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["animals",{"_index":473,"title":{},"body":{"injectables/AnimalProviderService.html":{},"miscellaneous/variables.html":{}}}],["animals.find((animal",{"_index":440,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animals.some((animal",{"_index":436,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalssubject",{"_index":474,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["app.component.html",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":160,"title":{"components/AppComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1777,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":1085,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":1087,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(gamestate",{"_index":1089,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":1110,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":1126,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":1095,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applypatch(gamestate",{"_index":1099,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":1663,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arachnid_element",{"_index":1674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":1675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":232,"title":{"classes/Area.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area(areastate.id",{"_index":1043,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["area.constant",{"_index":808,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["area.model",{"_index":1067,"title":{},"body":{"interfaces/GameState.html":{}}}],["areaid",{"_index":803,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":275,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":815,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":819,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":822,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":825,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":828,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":831,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaids",{"_index":530,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaids.has(elementareaid",{"_index":532,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["arearegistryservice",{"_index":241,"title":{"injectables/AreaRegistryService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":483,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["areas",{"_index":1037,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areas.push(new",{"_index":1042,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areaservice",{"_index":1199,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["areastate",{"_index":580,"title":{"interfaces/AreaState.html":{}},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["areastate.space.foreach((spacestate",{"_index":1039,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areastateservice",{"_index":626,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":628,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["arising",{"_index":1865,"title":{},"body":{"license.html":{}}}],["array",{"_index":1402,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["array(6",{"_index":446,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["artifacts",{"_index":1784,"title":{},"body":{"index.html":{}}}],["assignedanimal",{"_index":1049,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["associated",{"_index":1750,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["assume",{"_index":1444,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["async",{"_index":671,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/LoginService.html":{},"injectables/SignUpService.html":{}}}],["authenticationresult",{"_index":710,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authenticationresulttype",{"_index":687,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authflow",{"_index":702,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authors",{"_index":1855,"title":{},"body":{"license.html":{}}}],["authparameters",{"_index":706,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authresult",{"_index":1371,"title":{},"body":{"injectables/LoginService.html":{}}}],["automatically",{"_index":1778,"title":{},"body":{"index.html":{}}}],["available",{"_index":315,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace",{"_index":365,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace.addpiece(element",{"_index":367,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespaces",{"_index":615,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces.length",{"_index":616,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces[0",{"_index":617,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["await",{"_index":711,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/LoginService.html":{}}}],["aws",{"_index":692,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["back",{"_index":896,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["bag",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1225,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["basegamestate",{"_index":1019,"title":{},"body":{"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basegamestate.area.foreach((areastate",{"_index":1038,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["before",{"_index":309,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":46,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Player.html":{}}}],["behaviorsubject(false",{"_index":66,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this._gamestate",{"_index":1284,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.actionpawns",{"_index":259,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.elements",{"_index":266,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.length",{"_index":1423,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["behaviorsubject(this.ready",{"_index":851,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["behaviorsubject(this.spaces",{"_index":596,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["behaviorsubject(this.state",{"_index":948,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["behaviorsubject>(new",{"_index":634,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bird",{"_index":1664,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bird_element",{"_index":1676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":1677,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blur",{"_index":1527,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"miscellaneous/functions.html":{}}}],["browser",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1390,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"index.html":{}}}],["buildanimal",{"_index":477,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimal(faction",{"_index":486,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimals",{"_index":478,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["building",{"_index":504,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["c",{"_index":1809,"title":{},"body":{"license.html":{}}}],["call",{"_index":1138,"title":{},"body":{"injectables/GameStateService.html":{}}}],["called",{"_index":1232,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":1233,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["capabilities",{"_index":1798,"title":{},"body":{"index.html":{}}}],["card",{"_index":203,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card'},{'name",{"_index":157,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["card.component",{"_index":757,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["card.component.html",{"_index":205,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.scss",{"_index":206,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts",{"_index":200,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:20",{"_index":212,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:21",{"_index":210,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:25",{"_index":211,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts:26",{"_index":414,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:27",{"_index":415,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:28",{"_index":416,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:29",{"_index":413,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:30",{"_index":417,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:31",{"_index":407,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:35",{"_index":410,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:43",{"_index":409,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:66",{"_index":412,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card/adaption",{"_index":199,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["card/animal",{"_index":395,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["case",{"_index":1231,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["catch",{"_index":714,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["change",{"_index":428,"title":{},"body":{"components/AnimalCardComponent.html":{},"index.html":{}}}],["changedetection",{"_index":108,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy",{"_index":133,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":109,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["characters",{"_index":1544,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["charge",{"_index":1816,"title":{},"body":{"license.html":{}}}],["check",{"_index":1802,"title":{},"body":{"index.html":{}}}],["checked",{"_index":1736,"title":{},"body":{"miscellaneous/functions.html":{}}}],["choice",{"_index":1796,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1858,"title":{},"body":{"license.html":{}}}],["class",{"_index":56,"title":{"classes/ActionDisplaySetupManager.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Player.html":{},"classes/Space.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["classes",{"_index":90,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Player.html":{},"classes/Space.html":{},"overview.html":{}}}],["cleared",{"_index":308,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["cli",{"_index":1766,"title":{},"body":{"index.html":{}}}],["client.service",{"_index":1157,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/LoginService.html":{},"injectables/SignUpService.html":{}}}],["client.service.ts",{"_index":669,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:13",{"_index":1075,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:16",{"_index":674,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:24",{"_index":682,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:48",{"_index":685,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:70",{"_index":677,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:9",{"_index":1073,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["clientid",{"_index":704,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["code",{"_index":676,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"injectables/SignUpService.html":{},"index.html":{}}}],["code).then((success",{"_index":1516,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["cognito",{"_index":694,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/LoginService.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["cognitoclient",{"_index":670,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoclientservice",{"_index":667,"title":{"injectables/CognitoClientService.html":{}},"body":{"injectables/CognitoClientService.html":{},"injectables/LoginService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["cognitoidentityproviderclient",{"_index":686,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["combinelatest",{"_index":47,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["combinelatest(readyobs",{"_index":76,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["combinelatestwith",{"_index":274,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{}}}],["combinelatestwith(this.arearegistryservice.registeredids",{"_index":282,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["combinelatestwith(this.pileregistryservice.registeredids",{"_index":529,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["command",{"_index":707,"title":{},"body":{"injectables/CognitoClientService.html":{},"index.html":{}}}],["commit",{"_index":1166,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":1111,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":1096,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate",{"_index":1098,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":1433,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["component",{"_index":98,"title":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["components",{"_index":100,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1839,"title":{},"body":{"license.html":{}}}],["config",{"_index":333,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["config.constant",{"_index":352,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["config.constant.ts",{"_index":802,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.elementconfig",{"_index":391,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.faction",{"_index":384,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.ts",{"_index":1459,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":177,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["confirmation",{"_index":1519,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["confirmationcode",{"_index":720,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirming",{"_index":724,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignup",{"_index":672,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignup(username",{"_index":675,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignupcommand",{"_index":688,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignupcommand(input",{"_index":721,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["connection",{"_index":1866,"title":{},"body":{"license.html":{}}}],["console",{"_index":1360,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["console.error('error",{"_index":723,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error('unexpected",{"_index":713,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(e",{"_index":716,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.log('create",{"_index":766,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log(json.stringify(authresult",{"_index":1373,"title":{},"body":{"injectables/LoginService.html":{}}}],["console.log(json.stringify(gsp",{"_index":1077,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":72,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/variables.html":{}}}],["constant/animal.constant",{"_index":187,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{}}}],["constant/area.constant",{"_index":277,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["constant/element",{"_index":351,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["constant/element.constant",{"_index":871,"title":{},"body":{"interfaces/ElementPiece.html":{}}}],["constant/image.constant",{"_index":137,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["constant/piece.constant",{"_index":420,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constant/pile",{"_index":496,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constant/pile.constant",{"_index":858,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["constructor(actionserviceswithsetup",{"_index":68,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["constructor(adaptionactiondisplayservice",{"_index":29,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{}}}],["constructor(animalproviderservice",{"_index":405,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constructor(arearegistryservice",{"_index":240,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["constructor(arearegistrysvc",{"_index":479,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["constructor(areastatesvc",{"_index":625,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(cognitoclientservice",{"_index":1368,"title":{},"body":{"injectables/LoginService.html":{},"injectables/SignUpService.html":{}}}],["constructor(config",{"_index":330,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["constructor(elementarea",{"_index":459,"title":{},"body":{"classes/AnimalElements.html":{}}}],["constructor(factionstatesvc",{"_index":921,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(formbuilder",{"_index":1362,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["constructor(gameelementstatesvc",{"_index":958,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gamemanagementsvc",{"_index":738,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["constructor(gamestatestore",{"_index":1121,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":980,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["constructor(id",{"_index":564,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["constructor(kind",{"_index":1558,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["constructor(pile",{"_index":1450,"title":{},"body":{"classes/PileAdapter.html":{}}}],["constructor(pileregistrysvc",{"_index":838,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":1473,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":57,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/LoginService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/SignUpService.html":{}}}],["constructor(protected",{"_index":641,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(state",{"_index":933,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["contract",{"_index":1862,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1834,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1819,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1808,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1745,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":844,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["coverage",{"_index":1583,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":1088,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["create(oldstate",{"_index":1091,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["createarea",{"_index":1002,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["createdrawpoolpile",{"_index":1003,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["createfactions",{"_index":1004,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["creategame",{"_index":1005,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["creates",{"_index":1084,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["current",{"_index":612,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["currentcount",{"_index":1438,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["currentitemcount",{"_index":1445,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["currentplayer",{"_index":1486,"title":{},"body":{"injectables/PlayerService.html":{}}}],["currentplayerfaction",{"_index":732,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["custom",{"_index":1746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["damages",{"_index":1859,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":1097,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["deal",{"_index":1821,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1867,"title":{},"body":{"license.html":{}}}],["decreasescore",{"_index":879,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":884,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["deepclone",{"_index":942,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["deepclone(emptygamestate",{"_index":1273,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._gamestate",{"_index":1305,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":952,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["deepclone(this._transactionstate",{"_index":1306,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":1619,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":1722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":93,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":418,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/GameManagementService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":1755,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":1401,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["defined",{"_index":31,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["defining",{"_index":1061,"title":{},"body":{"interfaces/GameState.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":1386,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["dependencies",{"_index":1635,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":643,"title":{},"body":{"interfaces/AreaState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":1315,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":1724,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dev",{"_index":1774,"title":{},"body":{"index.html":{}}}],["development",{"_index":1769,"title":{},"body":{"index.html":{}}}],["directive",{"_index":150,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["directives",{"_index":180,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1783,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1787,"title":{},"body":{"index.html":{}}}],["display",{"_index":21,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameManagementService.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["display.model",{"_index":53,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["display.model.ts",{"_index":88,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"coverage.html":{}}}],["display.service",{"_index":45,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["display.service.ts",{"_index":229,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:103",{"_index":249,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:18",{"_index":261,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:19",{"_index":258,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:20",{"_index":255,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:21",{"_index":260,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:22",{"_index":257,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:23",{"_index":265,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:24",{"_index":262,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:25",{"_index":267,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:26",{"_index":264,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:27",{"_index":268,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:28",{"_index":243,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:37",{"_index":247,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:69",{"_index":254,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:73",{"_index":253,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:89",{"_index":251,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:93",{"_index":252,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:99",{"_index":246,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display/action",{"_index":20,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["display/adaption",{"_index":198,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["display/space/action",{"_index":188,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"coverage.html":{}}}],["display/space/element",{"_index":760,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component",{"_index":759,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["display/space/eyeball/eyeball.component.ts",{"_index":873,"title":{},"body":{"components/EyeballComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component.ts:14",{"_index":877,"title":{},"body":{"components/EyeballComponent.html":{}}}],["dist",{"_index":1786,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1410,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["distribute",{"_index":1830,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1584,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":955,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["dom",{"_index":102,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["dominant",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["dominantspecies",{"_index":1762,"title":{},"body":{"index.html":{}}}],["done",{"_index":1226,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":163,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["drawpool",{"_index":837,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["drawpoolgamecomponent",{"_index":162,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["ds",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":1229,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":715,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["e2e",{"_index":1794,"title":{},"body":{"index.html":{}}}],["each",{"_index":589,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["eagle",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":149,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateStoreService.html":{},"components/LoginPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element'},{'name",{"_index":167,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["element.component.html",{"_index":791,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.component.scss",{"_index":792,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.constant",{"_index":807,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["element.id",{"_index":976,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":372,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["element.model",{"_index":355,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{}}}],["element.model.ts",{"_index":932,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"coverage.html":{}}}],["element.model.ts:10",{"_index":936,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:11",{"_index":934,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:19",{"_index":939,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:23",{"_index":941,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:31",{"_index":938,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:39",{"_index":937,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:9",{"_index":935,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":995,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":998,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":270,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["element/element.component",{"_index":195,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["element/faction",{"_index":498,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["element/game",{"_index":957,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":499,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["elementarea",{"_index":356,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["elementareaid",{"_index":520,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["elementareaidsbyanimal",{"_index":1627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbyid",{"_index":621,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementcomponent",{"_index":166,"title":{"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementconfig",{"_index":350,"title":{"interfaces/ElementConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["elementconfig.inherentcount",{"_index":362,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementconfigbyanimal",{"_index":497,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpoolservice",{"_index":242,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["elementenum",{"_index":806,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":824,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":817,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":827,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":821,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":830,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":813,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":805,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"miscellaneous/typealiases.html":{}}}],["elementpiece",{"_index":213,"title":{"interfaces/ElementPiece.html":{}},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["elementpiece).filter(isnotnull",{"_index":382,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elements",{"_index":208,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.foreach((element",{"_index":971,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elements.foreach((faction",{"_index":918,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elementspace",{"_index":369,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementSpaceComponent.html":{},"miscellaneous/variables.html":{}}}],["elementspace.removepiece",{"_index":373,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacecomponent",{"_index":168,"title":{"components/ElementSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementspaces",{"_index":233,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.length",{"_index":361,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.slice(elementconfig.inherentcount",{"_index":363,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementssubject",{"_index":234,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementstate",{"_index":649,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["email",{"_index":684,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["emit",{"_index":1221,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitpilestate",{"_index":1380,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["emitstate",{"_index":563,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["emitted",{"_index":895,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["empty",{"_index":1190,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["emptyelementspace",{"_index":456,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptyelementspaces",{"_index":401,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptygamestate",{"_index":1068,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1793,"title":{},"body":{"index.html":{}}}],["engine/model/area.model",{"_index":273,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/faction.model",{"_index":347,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/piece.model",{"_index":186,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"interfaces/SpeciesPiece.html":{}}}],["engine/model/pile.model",{"_index":349,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/model/space.model",{"_index":279,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["engine/service/game",{"_index":269,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/service/player.service",{"_index":758,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["engine/util/misc",{"_index":139,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["engine/util/predicate",{"_index":221,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensure",{"_index":1235,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ensuredefined",{"_index":278,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].addpiece(actionpawn",{"_index":321,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].removepiece",{"_index":322,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.area).nextavailablespace(spacekindenum.element",{"_index":312,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementarea",{"_index":378,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).nextavailablespace",{"_index":366,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).spaces",{"_index":359,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementconfig",{"_index":360,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementspaces",{"_index":317,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementspaces)[index].removepiece",{"_index":316,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(value",{"_index":1727,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensures",{"_index":1313,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["enter",{"_index":1540,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["entire",{"_index":1218,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":659,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":996,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":992,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enumerations",{"_index":1655,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":697,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.clientid",{"_index":705,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.region",{"_index":701,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environments/environment",{"_index":698,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["equal",{"_index":1725,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":722,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":1311,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":954,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["error('can",{"_index":1302,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('element",{"_index":306,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["error('faction",{"_index":430,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["error('gamestate",{"_index":1309,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":1290,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":314,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('number",{"_index":611,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["error('pile",{"_index":865,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["error('space",{"_index":1577,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('state",{"_index":607,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('transaction",{"_index":1172,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":374,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["error(`element",{"_index":975,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":1000,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":1299,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["errormessage",{"_index":1346,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["event",{"_index":1854,"title":{},"body":{"license.html":{}}}],["eventcoalescing",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1791,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1742,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":956,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["express",{"_index":1846,"title":{},"body":{"license.html":{}}}],["extend",{"_index":587,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["extends",{"_index":183,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"interfaces/SpeciesPiece.html":{}}}],["eye",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeball",{"_index":874,"title":{},"body":{"components/EyeballComponent.html":{},"miscellaneous/variables.html":{}}}],["eyeball'},{'name",{"_index":170,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["eyeball.component.html",{"_index":875,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball.component.scss",{"_index":876,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball/eyeball.component",{"_index":197,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["eyeballcomponent",{"_index":169,"title":{"components/EyeballComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["faction",{"_index":327,"title":{"classes/Faction.html":{}},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction.id",{"_index":438,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.id).actionpawn",{"_index":525,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).areaid",{"_index":522,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).species",{"_index":527,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.model",{"_index":1065,"title":{},"body":{"interfaces/GameState.html":{}}}],["faction.ownerid",{"_index":774,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction?.name",{"_index":455,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["factionassignment",{"_index":768,"title":{"interfaces/FactionAssignment.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.id",{"_index":512,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionassignments.map((factionassignment",{"_index":511,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["factionassignments[0",{"_index":769,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionassignmentsubject",{"_index":912,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionids",{"_index":510,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess",{"_index":513,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess.foreach((factionid",{"_index":516,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionregistryservice",{"_index":480,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":742,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["factions",{"_index":733,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["factions.push",{"_index":1051,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["factionstate",{"_index":905,"title":{"interfaces/FactionState.html":{}},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["factionstateservice",{"_index":911,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":915,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":1388,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["failed",{"_index":1358,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["false",{"_index":719,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/LoginService.html":{}}}],["false).newdocument",{"_index":1101,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["fast",{"_index":943,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["files",{"_index":1780,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":48,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{}}}],["filter((animals",{"_index":435,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["filter((ids",{"_index":762,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((registeredids",{"_index":860,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["filter((serviceready",{"_index":81,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["filter((space",{"_index":318,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["filter(isnotundefined",{"_index":441,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["first",{"_index":49,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"index.html":{}}}],["first()).subscribe",{"_index":223,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["fitness",{"_index":1851,"title":{},"body":{"license.html":{}}}],["following",{"_index":1838,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":1333,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formgroup",{"_index":1334,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["found",{"_index":1747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["free",{"_index":1815,"title":{},"body":{"license.html":{}}}],["function",{"_index":89,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1718,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1837,"title":{},"body":{"license.html":{}}}],["further",{"_index":1799,"title":{},"body":{"index.html":{}}}],["game",{"_index":586,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"miscellaneous/variables.html":{}}}],["game'},{'name",{"_index":165,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["game.component",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["game.component.html",{"_index":729,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":730,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":726,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:40",{"_index":752,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:41",{"_index":750,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:42",{"_index":751,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:43",{"_index":749,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:44",{"_index":744,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:58",{"_index":746,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:69",{"_index":747,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:86",{"_index":748,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game/component/draw",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["game/constant/animal.constant",{"_index":1022,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/area.constant",{"_index":1023,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/element",{"_index":1024,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/game",{"_index":1020,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/piece.constant",{"_index":1025,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/constant/pile",{"_index":1027,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/draw",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game/service/action",{"_index":1028,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["gameelement",{"_index":554,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["gameelement:10",{"_index":573,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:11",{"_index":572,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:31",{"_index":891,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:38",{"_index":581,"title":{},"body":{"classes/Area.html":{}}}],["gameelement:39",{"_index":583,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:9",{"_index":571,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelementregistryservice",{"_index":620,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:15",{"_index":636,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:16",{"_index":633,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:17",{"_index":635,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:18",{"_index":638,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:22",{"_index":629,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:26",{"_index":632,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:30",{"_index":923,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelementstate",{"_index":585,"title":{"interfaces/GameElementState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["gameelementstateservice",{"_index":645,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:13",{"_index":651,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:14",{"_index":661,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:15",{"_index":660,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:17",{"_index":653,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:25",{"_index":656,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:36",{"_index":655,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:40",{"_index":658,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesvc",{"_index":961,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gamemanagementservice",{"_index":739,"title":{"injectables/GameManagementService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["gamemanagementsvc",{"_index":745,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["games",{"_index":1535,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["gamestarted",{"_index":734,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamestate",{"_index":899,"title":{"interfaces/GameState.html":{}},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gamestate.area",{"_index":1319,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.faction",{"_index":1322,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.pile",{"_index":1325,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateclient",{"_index":1123,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":1069,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":588,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{}}}],["gamestateelements",{"_index":1191,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatepatch",{"_index":1072,"title":{"interfaces/GameStatePatch.html":{}},"body":{"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatepatches",{"_index":1086,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":1082,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":741,"title":{"injectables/GameStateService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatestore",{"_index":1125,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":1064,"title":{"injectables/GameStateStoreService.html":{}},"body":{"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":1240,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":740,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["gecko",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1782,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1764,"title":{},"body":{"index.html":{}}}],["get(id",{"_index":489,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getaction",{"_index":1570,"title":{},"body":{"classes/Space.html":{}}}],["getactionpawn",{"_index":341,"title":{},"body":{"classes/Animal.html":{}}}],["getaddedelements",{"_index":468,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getaddedelementspaces",{"_index":464,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getallelements",{"_index":466,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getanimal",{"_index":403,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getanimal(faction",{"_index":408,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getarea",{"_index":1149,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":853,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelements",{"_index":343,"title":{},"body":{"classes/Animal.html":{}}}],["getelementstate",{"_index":662,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity",{"_index":648,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":654,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":1151,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamestate",{"_index":1276,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getgsp",{"_index":1074,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["getid",{"_index":338,"title":{},"body":{"classes/Animal.html":{},"classes/GameElement.html":{}}}],["getimgpath",{"_index":131,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getkind",{"_index":794,"title":{},"body":{"components/ElementComponent.html":{}}}],["getlength",{"_index":855,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["getname",{"_index":129,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{},"classes/Player.html":{}}}],["getobservableforkey",{"_index":1242,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":1250,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":138,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":521,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{}}}],["getorthrow(imgpathbykind",{"_index":146,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getorthrow(map",{"_index":1738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorthrow(pileidsbyanimal",{"_index":524,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.animalbyid",{"_index":541,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.elementbyid",{"_index":970,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["getowner",{"_index":127,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["getownerid",{"_index":901,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":1572,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":1153,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getscore",{"_index":903,"title":{},"body":{"classes/Faction.html":{}}}],["getspecies",{"_index":345,"title":{},"body":{"classes/Animal.html":{}}}],["getstate",{"_index":940,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["getting",{"_index":1761,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettransactionstate",{"_index":1278,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":1400,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["go",{"_index":1801,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1814,"title":{},"body":{"license.html":{}}}],["grass",{"_index":1686,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grasshopper",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grub",{"_index":1687,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gsp",{"_index":893,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gsp.patch",{"_index":1100,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":1122,"title":{},"body":{"injectables/GameStateService.html":{}}}],["happens",{"_index":892,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["help",{"_index":1800,"title":{},"body":{"index.html":{}}}],["here",{"_index":1366,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["hereby",{"_index":1813,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1856,"title":{},"body":{"license.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["http://localhost:4200",{"_index":1776,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":1728,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1585,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":695,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["ids.has(areaidenum.action_display_adaption",{"_index":763,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["imgpath",{"_index":123,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["imgpathbykind",{"_index":136,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":201,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"index.html":{}}}],["implied",{"_index":1847,"title":{},"body":{"license.html":{}}}],["import",{"_index":42,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["imports",{"_index":140,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["included",{"_index":1384,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"license.html":{}}}],["including",{"_index":1824,"title":{},"body":{"license.html":{}}}],["increasescore",{"_index":880,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":887,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":1733,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}}}],["information",{"_index":1361,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["inherent",{"_index":1054,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["inherentcount",{"_index":804,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":570,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["initialization",{"_index":1729,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialize",{"_index":71,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["initiateauthcommand",{"_index":689,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommand(input",{"_index":708,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommandinput",{"_index":690,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["injectable",{"_index":16,"title":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LoginService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LoginService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["injectables",{"_index":18,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LoginService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"overview.html":{}}}],["input",{"_index":134,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/CognitoClientService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["inputs",{"_index":119,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["insect",{"_index":1665,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["insect_element",{"_index":1678,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":1679,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instantiated",{"_index":1189,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interact",{"_index":1105,"title":{},"body":{"injectables/GameStateService.html":{}}}],["interested",{"_index":1206,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/LoginFormData.html":{},"interfaces/Piece.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/LoginFormData.html":{},"interfaces/Piece.html":{},"interfaces/PileConfig.html":{},"interfaces/PileState.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"overview.html":{}}}],["inventory",{"_index":1417,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["isfalse",{"_index":1623,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfalse(value",{"_index":1756,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotnull",{"_index":280,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":1757,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":426,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(value",{"_index":1758,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":1624,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(value",{"_index":1759,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isready",{"_index":283,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["istrue",{"_index":220,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istrue(value",{"_index":1760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":897,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["item.id",{"_index":1296,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["items",{"_index":1753,"title":{},"body":{"miscellaneous/functions.html":{}}}],["itself",{"_index":1737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["joe",{"_index":1811,"title":{},"body":{"license.html":{}}}],["json",{"_index":944,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["json.stringify(element",{"_index":376,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["json.stringify(newgamestateelement",{"_index":1300,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["k",{"_index":1739,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["karma",{"_index":1792,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":1413,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["key",{"_index":1207,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":1288,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":1202,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":577,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["kinds",{"_index":1415,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["leaf",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaving",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":147,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["length",{"_index":450,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["lengthsubject",{"_index":1379,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["level",{"_index":1201,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["liability",{"_index":1860,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1857,"title":{},"body":{"license.html":{}}}],["license",{"_index":1806,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1825,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1848,"title":{},"body":{"license.html":{}}}],["list",{"_index":422,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["local",{"_index":1236,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["lodash",{"_index":1017,"title":{},"body":{"injectables/GameManagementService.html":{},"interfaces/Piece.html":{},"dependencies.html":{}}}],["log",{"_index":735,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["login",{"_index":172,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["login(username",{"_index":680,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/LoginService.html":{}}}],["loginform",{"_index":1345,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["loginformdata",{"_index":1328,"title":{"interfaces/LoginFormData.html":{}},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecomponent",{"_index":171,"title":{"components/LoginPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["loginservice",{"_index":1340,"title":{"injectables/LoginService.html":{}},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["long",{"_index":1545,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["maintain",{"_index":1185,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["making",{"_index":1186,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":1666,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mammal_element",{"_index":1680,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":1681,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["managed",{"_index":1063,"title":{},"body":{"interfaces/GameState.html":{}}}],["management",{"_index":1195,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["management.service",{"_index":753,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["management.service.ts",{"_index":1001,"title":{},"body":{"injectables/GameManagementService.html":{},"coverage.html":{}}}],["management.service.ts:115",{"_index":1008,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:123",{"_index":1011,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:27",{"_index":1006,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:37",{"_index":1010,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:46",{"_index":1007,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:58",{"_index":1009,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["manager.service",{"_index":1029,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["manager.service.ts",{"_index":22,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["manager.service.ts:10",{"_index":40,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:11",{"_index":32,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:18",{"_index":36,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:24",{"_index":92,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:25",{"_index":95,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:26",{"_index":91,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:33",{"_index":96,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:46",{"_index":97,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["many",{"_index":1416,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["map",{"_index":50,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((animals",{"_index":439,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["map((gamestate",{"_index":1286,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["map((serviceready",{"_index":78,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["map((space",{"_index":319,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["matbutton",{"_index":727,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcard",{"_index":204,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardcontent",{"_index":1342,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardheader",{"_index":1521,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardtitle",{"_index":396,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["match",{"_index":608,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["matches",{"_index":1270,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matgridlist",{"_index":397,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matgridtile",{"_index":398,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["mattooltip",{"_index":728,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["meat",{"_index":1688,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1850,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1828,"title":{},"body":{"license.html":{}}}],["message",{"_index":1732,"title":{},"body":{"miscellaneous/functions.html":{}}}],["metadata",{"_index":107,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["method",{"_index":1194,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["minimize",{"_index":503,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["miscellaneous",{"_index":1654,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1807,"title":{},"body":{"license.html":{}}}],["model/action",{"_index":52,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{}}}],["model/animal.model",{"_index":425,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{}}}],["model/area.model",{"_index":639,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/element.model",{"_index":218,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{}}}],["model/faction.model",{"_index":910,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/game",{"_index":967,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/piece.model",{"_index":1026,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["model/pile.model",{"_index":1013,"title":{},"body":{"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":1504,"title":{},"body":{"injectables/PlayerService.html":{}}}],["model/space.model",{"_index":1014,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["modify",{"_index":1827,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1868,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monkey",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1234,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"index.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1775,"title":{},"body":{"index.html":{}}}],["need",{"_index":1192,"title":{},"body":{"injectables/GameStateStoreService.html":{},"index.html":{}}}],["new",{"_index":59,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newgamestateelement",{"_index":1256,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":1297,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":582,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["newstate.id",{"_index":605,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["newstate.kind",{"_index":1580,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.piece",{"_index":1581,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.space.foreach((spacestate",{"_index":613,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["newstate.space.length",{"_index":610,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["nextactionpawnspaceindex",{"_index":780,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextavailablespace",{"_index":561,"title":{},"body":{"classes/Area.html":{}}}],["nextavailablespace(kind",{"_index":575,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["nextelementspaceindex",{"_index":782,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextspace",{"_index":311,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["nextspace.addpiece(element",{"_index":313,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ng",{"_index":1772,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":209,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["noninfringement",{"_index":1853,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1841,"title":{},"body":{"license.html":{}}}],["null",{"_index":141,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":245,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"interfaces/GameStatePatch.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["object",{"_index":1062,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":1426,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["object1",{"_index":1726,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":1723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":1237,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":41,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["observables",{"_index":1203,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["obtaining",{"_index":1818,"title":{},"body":{"license.html":{}}}],["of(0",{"_index":867,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["of(undefined",{"_index":1078,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["oldstate",{"_index":1093,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":1259,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["one",{"_index":1212,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["oninit",{"_index":202,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["onpush",{"_index":429,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["onsubmit",{"_index":1350,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["operation",{"_index":1081,"title":{},"body":{"interfaces/GameStatePatch.html":{}}}],["optional",{"_index":35,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":1106,"title":{},"body":{"injectables/GameStateService.html":{}}}],["others",{"_index":1188,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":1864,"title":{},"body":{"license.html":{}}}],["out",{"_index":1803,"title":{},"body":{"index.html":{},"license.html":{}}}],["override",{"_index":604,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["overview",{"_index":1804,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrites",{"_index":1219,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":122,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ownerid",{"_index":882,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/GameManagementService.html":{}}}],["package",{"_index":1634,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":179,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":173,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.html",{"_index":1343,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.scss",{"_index":1344,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts",{"_index":1331,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:22",{"_index":1365,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:23",{"_index":1363,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts:24",{"_index":1532,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:36",{"_index":1364,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:41",{"_index":1533,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page/login",{"_index":1330,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/sign",{"_index":1507,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":953,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1211,"title":{},"body":{"injectables/GameStateStoreService.html":{},"license.html":{}}}],["passed",{"_index":1271,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["password",{"_index":681,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["password).then((success",{"_index":1354,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["patch",{"_index":945,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["patch.model",{"_index":1076,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["patch.model.ts",{"_index":1079,"title":{},"body":{"interfaces/GameStatePatch.html":{},"coverage.html":{}}}],["patch.service",{"_index":1156,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":1083,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:13",{"_index":1092,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":1090,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["pawn",{"_index":112,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pawn'},{'name",{"_index":153,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["pawn.component",{"_index":196,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.component.html",{"_index":116,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.scss",{"_index":118,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts",{"_index":106,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["pawn.component.ts:15",{"_index":126,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:17",{"_index":128,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:21",{"_index":130,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:25",{"_index":132,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.model",{"_index":135,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pawn.model.ts",{"_index":182,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["pawn/action",{"_index":105,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["pawns",{"_index":457,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["permission",{"_index":1812,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1835,"title":{},"body":{"license.html":{}}}],["person",{"_index":1817,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1836,"title":{},"body":{"license.html":{}}}],["piece",{"_index":184,"title":{"interfaces/Piece.html":{}},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":1409,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["piececount",{"_index":1435,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["piecefactory",{"_index":1375,"title":{},"body":{"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":419,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/GameManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["piecekindenum.action_pawn",{"_index":454,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["pieces",{"_index":848,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieces.push(null",{"_index":1441,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":1440,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount.length",{"_index":1436,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":1437,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pile",{"_index":348,"title":{"classes/Pile.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile(pilestate",{"_index":1056,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["pile.constant",{"_index":1460,"title":{},"body":{"interfaces/PileConfig.html":{}}}],["pile.model",{"_index":1066,"title":{},"body":{"interfaces/GameState.html":{}}}],["pileadapter",{"_index":334,"title":{"classes/PileAdapter.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["pileadapter(config.actionpawnpile",{"_index":386,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileadapter(config.speciespile",{"_index":388,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileconfig",{"_index":1457,"title":{"interfaces/PileConfig.html":{}},"body":{"interfaces/PileConfig.html":{},"coverage.html":{}}}],["pileidenum",{"_index":857,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{}}}],["pileidenum.action_pawn_amphibian",{"_index":1461,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_arachnid",{"_index":1463,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_bird",{"_index":1465,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_insect",{"_index":1467,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_mammal",{"_index":1469,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_reptile",{"_index":1471,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.element",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_amphibian",{"_index":1462,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_arachnid",{"_index":1464,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_bird",{"_index":1466,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_insect",{"_index":1468,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_mammal",{"_index":1470,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_reptile",{"_index":1472,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileids",{"_index":531,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(actionpawnpileid",{"_index":533,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(speciespileid",{"_index":534,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileidsbyanimal",{"_index":495,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameManagementService.html":{},"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pileregistryservice",{"_index":481,"title":{"injectables/PileRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":840,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{}}}],["piles",{"_index":1045,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["piles.push(new",{"_index":1055,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["pileservice",{"_index":1198,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["pilestate",{"_index":1012,"title":{"interfaces/PileState.html":{}},"body":{"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestateservice",{"_index":1474,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":1475,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":77,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["places",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["platform",{"_index":1795,"title":{},"body":{"index.html":{}}}],["player",{"_index":1481,"title":{"classes/Player.html":{}},"body":{"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["player.id",{"_index":1053,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["player.service",{"_index":1018,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["player1",{"_index":1492,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player2",{"_index":1494,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player3",{"_index":1496,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player4",{"_index":1498,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player5",{"_index":1500,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player6",{"_index":1502,"title":{},"body":{"injectables/PlayerService.html":{}}}],["players",{"_index":1487,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playerservice",{"_index":743,"title":{"injectables/PlayerService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["playerstate",{"_index":1484,"title":{"interfaces/PlayerState.html":{}},"body":{"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["please",{"_index":1539,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["pool",{"_index":164,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pool.service",{"_index":272,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["pool.service.ts",{"_index":833,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:14",{"_index":849,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:15",{"_index":850,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":852,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:17",{"_index":839,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:23",{"_index":841,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:36",{"_index":854,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:44",{"_index":856,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:52",{"_index":843,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:56",{"_index":847,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["portions",{"_index":1844,"title":{},"body":{"license.html":{}}}],["possible",{"_index":509,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pretty",{"_index":1411,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["previous",{"_index":1220,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":23,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["processedfactionids",{"_index":475,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["progress",{"_index":1137,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["project",{"_index":1763,"title":{},"body":{"index.html":{}}}],["promise",{"_index":679,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/LoginService.html":{},"injectables/SignUpService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"interfaces/ActionPawnPiece.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"properties.html":{}}}],["protected",{"_index":557,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["provideanimationsasync('noop",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1748,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["providedin",{"_index":54,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LoginService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["provider",{"_index":696,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["provider.service",{"_index":424,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["provider.service.ts",{"_index":471,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["provider.service.ts:16",{"_index":494,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:17",{"_index":491,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:18",{"_index":493,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:19",{"_index":482,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:28",{"_index":488,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:46",{"_index":485,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:50",{"_index":487,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:78",{"_index":490,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["providerouter(routes",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":1102,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":1829,"title":{},"body":{"license.html":{}}}],["pull",{"_index":835,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pull(count",{"_index":842,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pulled",{"_index":1403,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pullmany",{"_index":1381,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany(count",{"_index":1396,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pullone",{"_index":1382,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["pulls",{"_index":1398,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["purpose",{"_index":1852,"title":{},"body":{"license.html":{}}}],["put",{"_index":836,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["put(pieces",{"_index":846,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["puts",{"_index":1406,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["quickly",{"_index":508,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["random",{"_index":1378,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["reactiveformsmodule",{"_index":1335,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["readonly",{"_index":324,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["readonlymap",{"_index":811,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["ready",{"_index":25,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["readyobs",{"_index":73,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["readysubject",{"_index":65,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["received",{"_index":894,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["record",{"_index":1418,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["reference",{"_index":1805,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":1210,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["region",{"_index":700,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["register",{"_index":624,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(elements",{"_index":631,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":657,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":1112,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":1129,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":977,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registeredareaids",{"_index":284,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredareaids.has(areaidenum.action_display_adaption",{"_index":285,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredelementsubject",{"_index":622,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":623,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(pileidenum.element",{"_index":861,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":646,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":650,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":985,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":927,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":1477,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":1113,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":1131,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":1114,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":1133,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement",{"_index":1243,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":1255,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registry.service",{"_index":271,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":619,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:13",{"_index":627,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:15",{"_index":966,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:16",{"_index":964,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:17",{"_index":965,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:18",{"_index":960,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:20",{"_index":924,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:21",{"_index":926,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:22",{"_index":962,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:24",{"_index":925,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:25",{"_index":922,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:26",{"_index":963,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":1108,"title":{},"body":{"injectables/GameStateService.html":{}}}],["reload",{"_index":1779,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1579,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeactionpawn",{"_index":236,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removeactionpawn(index",{"_index":248,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removedpiece",{"_index":1578,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeelement",{"_index":237,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/AnimalElements.html":{}}}],["removeelement(element",{"_index":368,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["removeelement(index",{"_index":250,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removepiece",{"_index":1557,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeremainingelements",{"_index":238,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["replenish",{"_index":239,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["represents",{"_index":1387,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["reptile",{"_index":1667,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reptile_element",{"_index":1682,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":1683,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["require",{"_index":1140,"title":{},"body":{"injectables/GameStateService.html":{}}}],["requiretransaction",{"_index":1115,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":1184,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":1103,"title":{},"body":{"injectables/GameStateService.html":{}}}],["restriction",{"_index":1823,"title":{},"body":{"license.html":{}}}],["results",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1743,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":1740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":142,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["returned",{"_index":1734,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1826,"title":{},"body":{"license.html":{}}}],["rollback",{"_index":1317,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":1116,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":55,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LoginService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["root'},{'name",{"_index":161,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["router",{"_index":1338,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["routerlink",{"_index":1339,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["routeroutlet",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1771,"title":{},"body":{"index.html":{}}}],["running",{"_index":1788,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":51,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["same",{"_index":1258,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["scaffolding",{"_index":1781,"title":{},"body":{"index.html":{}}}],["score",{"_index":883,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/GameManagementService.html":{}}}],["sdk/client",{"_index":693,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["see",{"_index":1359,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["seed",{"_index":1689,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1391,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["selector",{"_index":110,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["selector(gamestate",{"_index":1287,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sell",{"_index":1833,"title":{},"body":{"license.html":{}}}],["sendgsptobackend",{"_index":1070,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":1071,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["serve",{"_index":1773,"title":{},"body":{"index.html":{}}}],["server",{"_index":1770,"title":{},"body":{"index.html":{}}}],["service",{"_index":1196,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["service.ready",{"_index":75,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["service.setup",{"_index":86,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["service/action",{"_index":219,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/animal",{"_index":423,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/auth/login.service",{"_index":1341,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["service/auth/sign",{"_index":1509,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["serviceready",{"_index":82,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["serviceready.every((ready",{"_index":80,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["services",{"_index":1109,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":431,"title":{},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"miscellaneous/functions.html":{}}}],["seta",{"_index":1754,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setactionpawnforheader",{"_index":404,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["setactionpawnforheader(faction",{"_index":411,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["setarea",{"_index":1117,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":1142,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setb",{"_index":1752,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setdifference",{"_index":500,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdifference(factionids",{"_index":514,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["setdifference(seta",{"_index":1751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setentitystate",{"_index":647,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":652,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":1118,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":1144,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setgamestate",{"_index":1216,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":1264,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setpile",{"_index":1119,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":1146,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":881,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":889,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["setstate",{"_index":562,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":579,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["settransactionstateelement",{"_index":1244,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":1267,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setup",{"_index":27,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/GameManagementService.html":{}}}],["several",{"_index":505,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameStateStoreService.html":{}}}],["shall",{"_index":1842,"title":{},"body":{"license.html":{}}}],["shuffle",{"_index":1015,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffle(object.values(animalenum",{"_index":1047,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffledanimals",{"_index":1046,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffledanimals[index",{"_index":1050,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["sign",{"_index":175,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal",{"_index":1332,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signup",{"_index":673,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signup(username",{"_index":683,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signupcommand",{"_index":691,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupcommand(input",{"_index":718,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupconfirmform",{"_index":1511,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["signupconfirmformdata",{"_index":1505,"title":{"interfaces/SignUpConfirmFormData.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"coverage.html":{}}}],["signupconfirmpagecomponent",{"_index":174,"title":{"components/SignUpConfirmPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupform",{"_index":1522,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signupform.dirty",{"_index":1537,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"email\")?.errors?.[\"email",{"_index":1538,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"password\")?.errors?.[\"minlength",{"_index":1542,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.invalid",{"_index":1536,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupformdata",{"_index":1520,"title":{"interfaces/SignUpFormData.html":{}},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signuppagecomponent",{"_index":178,"title":{"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupservice",{"_index":1508,"title":{"injectables/SignUpService.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["simple",{"_index":1412,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["skip",{"_index":990,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["skull",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snake",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1820,"title":{},"body":{"license.html":{}}}],["someone",{"_index":1205,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"index.html":{}}}],["space",{"_index":191,"title":{"classes/Space.html":{}},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/ElementSpaceComponent.html":{},"injectables/GameManagementService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space'},{'name",{"_index":155,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["space(spacestate.kind",{"_index":1041,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["space.component",{"_index":216,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["space.component.html",{"_index":192,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.scss",{"_index":193,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts",{"_index":190,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space.component.ts:16",{"_index":194,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts:18",{"_index":872,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.kind",{"_index":292,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.model",{"_index":584,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.piece",{"_index":295,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.piece.kind",{"_index":371,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["space.removepiece",{"_index":320,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["space.state",{"_index":592,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.state$.subscribe((spacestate",{"_index":600,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space/action",{"_index":189,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{}}}],["space/element",{"_index":215,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space/eyeball/eyeball.component",{"_index":217,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["spacekindenum",{"_index":276,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":293,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"miscellaneous/variables.html":{}}}],["spacekindenum.element",{"_index":298,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":307,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameManagementService.html":{}}}],["spaces.filter",{"_index":291,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["spaces.filter((space",{"_index":379,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["spaces.map((space",{"_index":591,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spaces.push(new",{"_index":1040,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["spacessubject",{"_index":555,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spacestate",{"_index":556,"title":{"interfaces/SpaceState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["species",{"_index":329,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["species.model",{"_index":354,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["species/animal/noun",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/element/noun",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/other/noun",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":1706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":1708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":1710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":1712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":1714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":1716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":1707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":1709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":1711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":1713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":1715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciespiece",{"_index":353,"title":{"interfaces/SpeciesPiece.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["speciespile",{"_index":328,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["speciespileid",{"_index":526,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["speciespilelength",{"_index":402,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciesreptile",{"_index":1717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specified",{"_index":1399,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["spider",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animal.constant.ts",{"_index":1656,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../app.config.ts",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area.constant.ts",{"_index":1657,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../element",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../element.constant.ts",{"_index":1658,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../game",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../image.constant.ts",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../misc.ts",{"_index":1719,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../piece.constant.ts",{"_index":1659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../piece.model.ts",{"_index":1720,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pile",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pile.constant.ts",{"_index":1660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../predicate.ts",{"_index":1721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/component/login",{"_index":1329,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/sign",{"_index":1506,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":553,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:13",{"_index":566,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:14",{"_index":568,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:15",{"_index":567,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:16",{"_index":565,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:28",{"_index":574,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:54",{"_index":576,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":878,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:10",{"_index":900,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:14",{"_index":902,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:18",{"_index":904,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":888,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":885,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:32",{"_index":890,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":931,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":1374,"title":{},"body":{"interfaces/Piece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":1377,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:103",{"_index":1456,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:107",{"_index":1452,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:111",{"_index":1453,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:115",{"_index":1454,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:17",{"_index":1393,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:18",{"_index":1394,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:19",{"_index":1392,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:20",{"_index":1383,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:39",{"_index":1407,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:46",{"_index":1395,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:56",{"_index":1397,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:78",{"_index":1404,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:86",{"_index":1405,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:96",{"_index":1451,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:99",{"_index":1455,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":1482,"title":{},"body":{"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["src/app/engine/model/player.model.ts:9",{"_index":1483,"title":{},"body":{"classes/Player.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":1553,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:12",{"_index":1562,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:13",{"_index":1560,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:14",{"_index":1561,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:15",{"_index":1564,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:16",{"_index":1559,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:24",{"_index":1569,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:31",{"_index":1571,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:35",{"_index":1573,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:39",{"_index":1566,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:48",{"_index":1567,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:59",{"_index":1568,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/service/auth/cognito",{"_index":668,"title":{},"body":{"injectables/CognitoClientService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/login.service.ts",{"_index":1367,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/login.service.ts:10",{"_index":1370,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/engine/service/auth/login.service.ts:7",{"_index":1369,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/engine/service/auth/sign",{"_index":1546,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["src/app/engine/service/game",{"_index":618,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["src/app/engine/service/player.service.ts",{"_index":1485,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/app/engine/service/player.service.ts:16",{"_index":1489,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/engine/service/player.service.ts:8",{"_index":1503,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/engine/util/misc.ts",{"_index":1618,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/util/predicate.ts",{"_index":1622,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/action",{"_index":104,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["src/app/game/component/animal",{"_index":394,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["src/app/game/component/draw",{"_index":725,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts",{"_index":790,"title":{},"body":{"components/ElementComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts:16",{"_index":793,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:18",{"_index":795,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:22",{"_index":796,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:26",{"_index":797,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/constant/animal.constant.ts",{"_index":1661,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/area.constant.ts",{"_index":1626,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element",{"_index":801,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element.constant.ts",{"_index":1685,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/game",{"_index":1628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/image.constant.ts",{"_index":1630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/piece.constant.ts",{"_index":1692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/pile",{"_index":1458,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/pile.constant.ts",{"_index":1693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/model/action",{"_index":87,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts",{"_index":323,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts:103",{"_index":344,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:107",{"_index":346,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:23",{"_index":461,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:24",{"_index":460,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:33",{"_index":465,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:43",{"_index":462,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:55",{"_index":463,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:67",{"_index":467,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:73",{"_index":469,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:79",{"_index":336,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:80",{"_index":335,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:81",{"_index":337,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:82",{"_index":332,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:91",{"_index":339,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:95",{"_index":340,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:99",{"_index":342,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/element.model.ts",{"_index":870,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["src/app/game/model/species.model.ts",{"_index":1582,"title":{},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["src/app/game/service/action",{"_index":19,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["src/app/game/service/animal",{"_index":470,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["src/app/game/service/element",{"_index":832,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["standalone",{"_index":113,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["start",{"_index":788,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["startcase",{"_index":1016,"title":{},"body":{"injectables/GameManagementService.html":{},"interfaces/Piece.html":{}}}],["startcase(assignedanimal",{"_index":1052,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["startcase(kind",{"_index":1376,"title":{},"body":{"interfaces/Piece.html":{}}}],["started",{"_index":1173,"title":{"index.html":{},"license.html":{}},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["startgame",{"_index":736,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["starttransaction",{"_index":1120,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["state",{"_index":559,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["state.constant",{"_index":1021,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["state.constant.ts",{"_index":1629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.model",{"_index":1094,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":1060,"title":{},"body":{"interfaces/GameState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.owner",{"_index":1420,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["state.service",{"_index":640,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":644,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:14",{"_index":988,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:15",{"_index":981,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:18",{"_index":1124,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:21",{"_index":989,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:22",{"_index":986,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:23",{"_index":987,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:25",{"_index":983,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:29",{"_index":1127,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:34",{"_index":1148,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:36",{"_index":982,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:38",{"_index":1128,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:40",{"_index":984,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:51",{"_index":1141,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:58",{"_index":1135,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:64",{"_index":1150,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:68",{"_index":1143,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:72",{"_index":1130,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:76",{"_index":1152,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:80",{"_index":1145,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:83",{"_index":1132,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:87",{"_index":1154,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:9",{"_index":663,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:91",{"_index":1147,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:95",{"_index":1134,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state/game",{"_index":756,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["statements",{"_index":1586,"title":{},"body":{"coverage.html":{}}}],["statesubject",{"_index":560,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["static",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.service",{"_index":1155,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":1183,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:103",{"_index":1279,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:111",{"_index":1248,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:116",{"_index":1265,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:124",{"_index":1272,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:132",{"_index":1249,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:141",{"_index":1261,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:151",{"_index":1280,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:155",{"_index":1262,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:159",{"_index":1252,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:163",{"_index":1281,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:167",{"_index":1263,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:171",{"_index":1253,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:175",{"_index":1282,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:179",{"_index":1266,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:183",{"_index":1254,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:34",{"_index":1274,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:35",{"_index":1275,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:36",{"_index":1246,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:42",{"_index":1251,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:58",{"_index":1268,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:82",{"_index":1257,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:99",{"_index":1277,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stored",{"_index":1785,"title":{},"body":{"index.html":{}}}],["stores",{"_index":1260,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":117,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["subject",{"_index":1563,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{},"license.html":{}}}],["sublicense",{"_index":1831,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":286,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((allready",{"_index":83,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["subscribe((animal",{"_index":442,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["subscribers",{"_index":1314,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["subscription",{"_index":1730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["substantial",{"_index":1843,"title":{},"body":{"license.html":{}}}],["substatearray",{"_index":1292,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":1295,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":1304,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":1298,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["success",{"_index":1355,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["such",{"_index":1197,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sum",{"_index":1427,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["sun",{"_index":1690,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":593,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["super(areastatesvc",{"_index":642,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":916,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":1476,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":1419,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["super.register(elements",{"_index":917,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["system",{"_index":1104,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":569,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":789,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["takeaction",{"_index":737,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["taken",{"_index":1228,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":1217,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["templateurl",{"_index":115,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["test",{"_index":1491,"title":{},"body":{"injectables/PlayerService.html":{},"index.html":{}}}],["test1",{"_index":1490,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test2",{"_index":1493,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test3",{"_index":1495,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test4",{"_index":1497,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test5",{"_index":1499,"title":{},"body":{"injectables/PlayerService.html":{}}}],["test6",{"_index":1501,"title":{},"body":{"injectables/PlayerService.html":{}}}],["testing",{"_index":1797,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1790,"title":{},"body":{"index.html":{}}}],["tgameelement",{"_index":630,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstatesvc",{"_index":959,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this._action",{"_index":1576,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._drawpool",{"_index":862,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":1307,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate[key",{"_index":1303,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":1575,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":1316,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":1310,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":1312,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":946,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.id",{"_index":951,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.inventory[key",{"_index":1428,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[kind",{"_index":1439,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[piece.kind",{"_index":1446,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this._state.name",{"_index":906,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{}}}],["this._state.ownerid",{"_index":907,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._state.score",{"_index":908,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._transactionstate",{"_index":1289,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate[key",{"_index":1293,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.actiondisplaymanagerservice.ready$.pipe(filter(istrue)).subscribe",{"_index":1058,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.actiondisplaymanagerservice.setup",{"_index":1059,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.actiondisplaysetupmanager",{"_index":58,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actiondisplaysetupmanager.ready",{"_index":62,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actiondisplaysetupmanager.setup",{"_index":63,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionpawn?.name",{"_index":144,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawn?.owner",{"_index":143,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawnforheader",{"_index":453,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawnpile",{"_index":385,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.actionpawnpilelength",{"_index":449,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawns",{"_index":225,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces",{"_index":290,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces.map",{"_index":294,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.asobservable",{"_index":256,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.next(this.actionpawns",{"_index":296,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionserviceswithsetup",{"_index":69,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionserviceswithsetup.foreach((service",{"_index":85,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionserviceswithsetup.map((service",{"_index":74,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.adaptionactiondisplayservice.actionpawns$.subscribe((actionpawns",{"_index":224,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.actionpawns.findindex",{"_index":781,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.addactionpawn(nextactionpawnspaceindex",{"_index":784,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.elements$.subscribe((elements",{"_index":226,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.elements.findindex",{"_index":783,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.ready$.pipe(filter(istrue",{"_index":222,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.removeelement(nextelementspaceindex",{"_index":785,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionarea",{"_index":764,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.addedelementspaces.find",{"_index":370,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.addedelementspaces.map((space",{"_index":381,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animal",{"_index":443,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalbyid.set(faction.id",{"_index":538,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalelements",{"_index":389,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalfactory(animalconfig",{"_index":539,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalproviderservice.animals",{"_index":434,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalproviderservice.get(ensuredefined(this.currentplayerfaction).id",{"_index":778,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.animalssubject.asobservable",{"_index":492,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalssubject.next(array.from(this.animalbyid.values",{"_index":540,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.applygsp(gsp",{"_index":1160,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.area",{"_index":287,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.area.spaces$.subscribe((spaces",{"_index":289,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.arearegistryservice.get(areaidenum.action_display_adaption",{"_index":288,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["this.arearegistryservice.registeredids",{"_index":761,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.arearegistrysvc.get(elementareaid",{"_index":536,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.arearegistrysvc.register(areas",{"_index":1044,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":528,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimal(faction",{"_index":518,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimals",{"_index":501,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.cognitoclient",{"_index":699,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclient.send(command",{"_index":712,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclientservice.confirmsignup(username",{"_index":1552,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.cognitoclientservice.login(username",{"_index":1372,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.cognitoclientservice.signup(username",{"_index":1551,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.createarea",{"_index":1031,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.createdrawpoolpile",{"_index":1033,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.createfactions",{"_index":1032,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.currentplayerfaction",{"_index":772,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpool.length",{"_index":866,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.pullmany(count",{"_index":868,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.put(pieces",{"_index":869,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.element?.kind",{"_index":798,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.element?.name",{"_index":799,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.elementbyid.set(element.id",{"_index":973,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementdrawpoolservice.pull(4).foreach((element",{"_index":310,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementdrawpoolservice.ready",{"_index":281,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements",{"_index":227,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{}}}],["this.elements.filter(isnotnull).length",{"_index":303,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.length).fill(null",{"_index":447,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.elementspaces",{"_index":297,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspaces.map((space",{"_index":299,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementssubject.asobservable",{"_index":263,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.allelements",{"_index":357,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.elements",{"_index":300,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":991,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitpilestate",{"_index":1442,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.emitstate",{"_index":909,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.emptyelementspaces",{"_index":445,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.errormessage.set('login",{"_index":1357,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.errormessage.set('sign",{"_index":1518,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.faction",{"_index":383,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.id",{"_index":392,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.name",{"_index":393,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.factionassignment",{"_index":913,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":919,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":914,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":920,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionregistryservice.factionassignment$.subscribe((factionassignments",{"_index":502,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.get(factionid",{"_index":517,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistrysvc.factionassignment$.subscribe((factionassignments",{"_index":767,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factionregistrysvc.get(factionassignment.id",{"_index":771,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions",{"_index":770,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions.find",{"_index":773,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.formbuilder.group",{"_index":1348,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.gameelementstatesvc.register(elements",{"_index":979,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementsvc.creategame",{"_index":765,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestarted",{"_index":776,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestateclient.gsp$.pipe(filter((gsp",{"_index":1158,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":1170,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateservice.committransaction",{"_index":1036,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.gamestateservice.starttransaction",{"_index":1034,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.gamestatestore.area",{"_index":1174,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":1169,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":1177,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.gamestate",{"_index":1168,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":1180,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":1176,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":1179,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":1182,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":1171,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":1175,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":1178,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate(updatedstate",{"_index":1163,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":1181,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":1164,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":1165,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":1283,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":1285,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":1308,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":664,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":787,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":928,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":1478,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":665,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":929,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":1479,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":666,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":930,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":1480,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":777,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getanimal(this.faction",{"_index":433,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":994,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":1318,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gspservice.apply(this.gamestatestore.gamestate",{"_index":1162,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gspservice.create",{"_index":1167,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.id",{"_index":606,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this.initialize",{"_index":70,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.kind",{"_index":800,"title":{},"body":{"components/ElementComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.length",{"_index":1424,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject",{"_index":1422,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":1425,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.next(this.length",{"_index":1429,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.loginform",{"_index":1347,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":1351,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":1352,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginservice.login(username",{"_index":1353,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.owner",{"_index":145,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.piececounts.get(key",{"_index":1430,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.piecefactory",{"_index":1421,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pile.length",{"_index":1447,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pile.pullmany(count",{"_index":1448,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pile.put(pieces",{"_index":1449,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.pileregistryservice.get(actionpawnpileid",{"_index":535,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.get(speciespileid",{"_index":537,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistrysvc.get(pileidenum.element",{"_index":863,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.register(piles",{"_index":1057,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":859,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.players[0",{"_index":1488,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.playerservice.currentplayer.id",{"_index":775,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.playerservice.players.foreach((player",{"_index":1048,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.processedfactionids",{"_index":515,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pullmany(1)[0",{"_index":1443,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["this.ready",{"_index":61,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.asobservable",{"_index":67,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(allready",{"_index":84,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.readysubject.next(this.ready",{"_index":864,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(true",{"_index":301,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":637,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":978,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":974,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":972,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":993,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":997,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":1321,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":1324,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":1327,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.replenish",{"_index":302,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.router.navigate(['/game",{"_index":1356,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1517,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.router.navigate(['/sign",{"_index":1531,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.setactionpawnforheader(this.faction",{"_index":432,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.setentitystate(state",{"_index":999,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":1320,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":1323,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":1326,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.setup",{"_index":1035,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.signupconfirmform",{"_index":1512,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.valid",{"_index":1513,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.value",{"_index":1514,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupform",{"_index":1523,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.valid",{"_index":1528,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.value",{"_index":1529,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupservice.confirmsignup(username",{"_index":1515,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupservice.signup(username",{"_index":1530,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.spaces",{"_index":594,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.foreach((space",{"_index":599,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.length",{"_index":609,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":614,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacessubject",{"_index":595,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacessubject.asobservable",{"_index":597,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacessubject.next(this.spaces",{"_index":603,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate",{"_index":598,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate[index",{"_index":601,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.speciespile",{"_index":387,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.speciespilelength",{"_index":452,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.state",{"_index":949,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject",{"_index":947,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.asobservable",{"_index":950,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.next(this.state",{"_index":602,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.transactionstate",{"_index":1301,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["those",{"_index":1204,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":305,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":1741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":1731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["times",{"_index":506,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["timestamp",{"_index":1080,"title":{},"body":{"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{}}}],["title",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":427,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["top",{"_index":1200,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tort",{"_index":1863,"title":{},"body":{"license.html":{}}}],["total",{"_index":1408,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["track",{"_index":228,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["tracks",{"_index":1414,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["transaction",{"_index":1136,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":1245,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":103,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["true",{"_index":114,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":709,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["tsc",{"_index":1432,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["tslib",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1230,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["two",{"_index":1213,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1873,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1294,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["typically",{"_index":1223,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["unchanged",{"_index":1735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":125,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"miscellaneous/functions.html":{}}}],["undefined)).subscribe((gsp",{"_index":1159,"title":{},"body":{"injectables/GameStateService.html":{}}}],["unique",{"_index":590,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["unit",{"_index":1789,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1434,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{}}}],["up",{"_index":176,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["up.service",{"_index":1510,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["up.service.ts",{"_index":1547,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["up.service.ts:10",{"_index":1550,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:14",{"_index":1549,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:7",{"_index":1548,"title":{},"body":{"injectables/SignUpService.html":{}}}],["update",{"_index":1269,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updated",{"_index":1209,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updatedstate",{"_index":1161,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updateon",{"_index":1526,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["updates",{"_index":1139,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updating",{"_index":1291,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["use",{"_index":1389,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":1224,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["user_password_auth",{"_index":703,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["userattributes",{"_index":717,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["username",{"_index":678,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/LoginService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["using",{"_index":1193,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["util/misc",{"_index":968,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{}}}],["util/predicate",{"_index":1030,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["v",{"_index":1749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":1541,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["validators",{"_index":1336,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.email",{"_index":1524,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.minlength(6",{"_index":1525,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.required",{"_index":1349,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["value",{"_index":94,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1222,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["variable",{"_index":1589,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1875,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1107,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["version",{"_index":1767,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":1215,"title":{},"body":{"injectables/GameStateStoreService.html":{},"index.html":{}}}],["void",{"_index":38,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["vpa",{"_index":1534,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["warranties",{"_index":1849,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1845,"title":{},"body":{"license.html":{}}}],["water",{"_index":1691,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":1214,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whenever",{"_index":1208,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whether",{"_index":1861,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["without",{"_index":1822,"title":{},"body":{"license.html":{}}}],["yes",{"_index":578,"title":{},"body":{"classes/Area.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Action {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionDisplayManagerService.html":{"url":"injectables/ActionDisplayManagerService.html","title":"injectable - ActionDisplayManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionDisplayManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionDisplaySetupManager\n                            \n                            \n                                ready$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionDisplaySetupManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionDisplayServiceWithSetup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\nimport { ActionDisplayServiceWithSetup } from '../../model/action-display.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private actionDisplaySetupManager: ActionDisplayServiceWithSetup;\n  ready$: Observable;\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.actionDisplaySetupManager = new ActionDisplaySetupManager([adaptionActionDisplayService]);\n    this.ready$ = this.actionDisplaySetupManager.ready$;\n  }\n\n  setup(): void {\n    this.actionDisplaySetupManager.setup();\n  }\n}\n\nexport class ActionDisplaySetupManager {\n  private actionServicesWithSetup: ActionDisplayServiceWithSetup[];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[]) {\n    this.actionServicesWithSetup = actionServicesWithSetup;\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const readyObs = this.actionServicesWithSetup.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n\n  setup(): void {\n    this.actionServicesWithSetup.forEach((service) => {\n      service.setup();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionDisplayServiceWithSetup.html":{"url":"interfaces/ActionDisplayServiceWithSetup.html","title":"interface - ActionDisplayServiceWithSetup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionDisplayServiceWithSetup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-display.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ready$\n                                        \n                                \n                                \n                                        \n                                            setup\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ready$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ready$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setup:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface ActionDisplayServiceWithSetup {\n  ready$: Observable;\n  setup: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionDisplaySetupManager.html":{"url":"classes/ActionDisplaySetupManager.html","title":"class - ActionDisplaySetupManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionDisplaySetupManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionServicesWithSetup\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[])\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actionServicesWithSetup\n                                                  \n                                                        \n                                                                    ActionDisplayServiceWithSetup[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionServicesWithSetup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionDisplayServiceWithSetup[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\nimport { ActionDisplayServiceWithSetup } from '../../model/action-display.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private actionDisplaySetupManager: ActionDisplayServiceWithSetup;\n  ready$: Observable;\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.actionDisplaySetupManager = new ActionDisplaySetupManager([adaptionActionDisplayService]);\n    this.ready$ = this.actionDisplaySetupManager.ready$;\n  }\n\n  setup(): void {\n    this.actionDisplaySetupManager.setup();\n  }\n}\n\nexport class ActionDisplaySetupManager {\n  private actionServicesWithSetup: ActionDisplayServiceWithSetup[];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[]) {\n    this.actionServicesWithSetup = actionServicesWithSetup;\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const readyObs = this.actionServicesWithSetup.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n\n  setup(): void {\n    this.actionServicesWithSetup.forEach((service) => {\n      service.setup();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnComponent.html":{"url":"components/ActionPawnComponent.html","title":"component - ActionPawnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-pawn/action-pawn.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./action-pawn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    owner\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        owner\n                    \n                \n\n                \n                    \n                        getowner()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-action-pawn',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './action-pawn.component.html',\n  styleUrl: './action-pawn.component.scss',\n})\nexport class ActionPawnComponent {\n  @Input() actionPawn: ActionPawnPiece | undefined = undefined;\n\n  get owner(): string | null | undefined {\n    return this.actionPawn?.owner;\n  }\n\n  get name(): string | undefined {\n    return this.actionPawn?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.owner) {\n      return getOrThrow(imgPathByKind, this.owner);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionPawnPiece.html":{"url":"interfaces/ActionPawnPiece.html","title":"interface - ActionPawnPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionPawnPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-pawn.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\nimport { AnimalKind } from '../constant/animal.constant';\n\nexport interface ActionPawnPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnSpaceComponent.html":{"url":"components/ActionPawnSpaceComponent.html","title":"component - ActionPawnSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                                ActionPawnComponent\n                                EyeballComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./action-pawn-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../../../model/action-pawn.model';\nimport { ElementComponent } from '../../../element/element.component';\nimport { ActionPawnComponent } from '../../../action-pawn/action-pawn.component';\nimport { EyeballComponent } from '../eyeball/eyeball.component';\n\n@Component({\n  selector: 'app-action-pawn-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent, ActionPawnComponent, EyeballComponent],\n  templateUrl: './action-pawn-space.component.html',\n  styleUrl: './action-pawn-space.component.scss',\n})\nexport class ActionPawnSpaceComponent {\n  @Input() actionPawn: ActionPawnPiece | null = null;\n}\n\n    \n\n    \n        \n  \n    @if (actionPawn) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (actionPawn) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdaptionActionDisplayCardComponent.html":{"url":"components/AdaptionActionDisplayCardComponent.html","title":"component - AdaptionActionDisplayCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdaptionActionDisplayCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adaption-action-display-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                                ElementSpaceComponent\n                                EyeballComponent\n                                ActionPawnSpaceComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adaption-action-display-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adaption-action-display-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ActionPawnPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ElementPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatCard } from '@angular/material/card';\nimport { ElementSpaceComponent } from '../space/element-space/element-space.component';\nimport { EyeballComponent } from '../space/eyeball/eyeball.component';\nimport { ActionPawnSpaceComponent } from '../space/action-pawn-space/action-pawn-space.component';\nimport { ElementPiece } from '../../../model/element.model';\nimport { ActionPawnPiece } from '../../../model/action-pawn.model';\nimport { AdaptionActionDisplayService } from '../../../service/action-display/adaption-action-display.service';\nimport { filter, first } from 'rxjs';\nimport { isTrue } from '../../../../engine/util/predicate';\n\n@Component({\n  selector: 'app-adaption-action-display-card',\n  standalone: true,\n  imports: [MatCard, ElementSpaceComponent, EyeballComponent, ActionPawnSpaceComponent],\n  templateUrl: './adaption-action-display-card.component.html',\n  styleUrl: './adaption-action-display-card.component.scss',\n})\nexport class AdaptionActionDisplayCardComponent implements OnInit {\n  actionPawns: (ActionPawnPiece | null)[] = [];\n  elements: (ElementPiece | null)[] = [];\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {}\n\n  ngOnInit() {\n    this.adaptionActionDisplayService.ready$.pipe(filter(isTrue), first()).subscribe(() => {\n      this.adaptionActionDisplayService.actionPawns$.subscribe((actionPawns) => {\n        this.actionPawns = actionPawns;\n      });\n      this.adaptionActionDisplayService.elements$.subscribe((elements) => {\n        this.elements = elements;\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Adaption\n    \n      \n        @for (element of elements; track $index) {\n          \n        }\n      \n      \n        @for (actionPawn of actionPawns; track $index) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Adaption                  @for (element of elements; track $index) {                  }                    @for (actionPawn of actionPawns; track $index) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdaptionActionDisplayCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdaptionActionDisplayService.html":{"url":"injectables/AdaptionActionDisplayService.html","title":"injectable - AdaptionActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdaptionActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/adaption-action-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                actionPawns$\n                            \n                            \n                                actionPawnSpaces\n                            \n                            \n                                    Private\n                                actionPawnsSubject\n                            \n                            \n                                area\n                            \n                            \n                                elements\n                            \n                            \n                                elements$\n                            \n                            \n                                elementSpaces\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActionPawn\n                            \n                            \n                                initialize\n                            \n                            \n                                removeActionPawn\n                            \n                            \n                                removeElement\n                            \n                            \n                                removeRemainingElements\n                            \n                            \n                                replenish\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistryService: AreaRegistryService, elementDrawPoolService: ElementDrawPoolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActionPawn\n                        \n                    \n                \n            \n            \n                \naddActionPawn(index: number, actionPawn: ActionPawnPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionPawn\n                                            \n                                                            ActionPawnPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActionPawn\n                        \n                    \n                \n            \n            \n                \nremoveActionPawn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ElementPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRemainingElements\n                        \n                    \n                \n            \n            \n                \nremoveRemainingElements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ElementPiece[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replenish\n                        \n                    \n                \n            \n            \n                \nreplenish()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ActionPawnPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.actionPawnsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionPawnsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.actionPawns)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ElementPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.elements)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { ElementDrawPoolService } from '../element-draw-pool.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { ElementPiece } from '../../model/element.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaIdEnum, SpaceKindEnum } from '../../constant/area.constant';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { Piece } from '../../../engine/model/piece.model';\nimport { Space } from '../../../engine/model/space.model';\nimport { isNotNull } from '../../../engine/util/predicate';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdaptionActionDisplayService {\n  area: Area | undefined = undefined;\n  actionPawnSpaces: Space[] = [];\n  actionPawns: (ActionPawnPiece | null)[] = [];\n  private actionPawnsSubject = new BehaviorSubject(this.actionPawns);\n  actionPawns$ = this.actionPawnsSubject.asObservable();\n  elementSpaces: Space[] = [];\n  elements: (ElementPiece | null)[] = [];\n  private elementsSubject = new BehaviorSubject(this.elements);\n  elements$ = this.elementsSubject.asObservable();\n  private readySubject = new BehaviorSubject(false);\n  ready$ = this.readySubject.asObservable();\n\n  constructor(\n    private areaRegistryService: AreaRegistryService,\n    private elementDrawPoolService: ElementDrawPoolService,\n  ) {\n    this.initialize();\n  }\n\n  initialize() {\n    this.elementDrawPoolService.ready$\n      .pipe(\n        combineLatestWith(this.areaRegistryService.registeredIds$),\n        filter(\n          ([isReady, registeredAreaIds]) =>\n            isReady && registeredAreaIds.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        this.area = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n\n        this.area.spaces$.subscribe((spaces) => {\n          this.actionPawnSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ACTION_PAWN,\n          );\n          this.actionPawns = this.actionPawnSpaces.map(\n            (space) => space.piece,\n          ) as (ActionPawnPiece | null)[];\n          this.actionPawnsSubject.next(this.actionPawns);\n\n          this.elementSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ELEMENT,\n          );\n          this.elements = this.elementSpaces.map((space) => space.piece) as (ElementPiece | null)[];\n          this.elementsSubject.next(this.elements);\n          this.readySubject.next(true);\n        });\n      });\n  }\n\n  setup(): void {\n    this.replenish();\n  }\n\n  replenish(): void {\n    if (this.elements.filter(isNotNull).length > 0) {\n      throw new Error('Element spaces must be cleared before replenish');\n    }\n\n    this.elementDrawPoolService.pull(4).forEach((element) => {\n      const nextSpace = ensureDefined(this.area).nextAvailableSpace(SpaceKindEnum.ELEMENT);\n      if (nextSpace) {\n        nextSpace.addPiece(element as Piece);\n      } else {\n        throw new Error('No Spaces available');\n      }\n    });\n    this.elementsSubject.next(this.elements);\n  }\n\n  removeElement(index: number): ElementPiece {\n    return ensureDefined(this.elementSpaces)[index].removePiece() as ElementPiece;\n  }\n\n  removeRemainingElements(): ElementPiece[] {\n    return ensureDefined(this.elementSpaces)\n      .filter((space) => space.piece)\n      .map((space) => space.removePiece() as ElementPiece);\n  }\n\n  addActionPawn(index: number, actionPawn: ActionPawnPiece): void {\n    ensureDefined(this.actionPawnSpaces)[index].addPiece(actionPawn);\n  }\n\n  removeActionPawn(index: number): ActionPawnPiece {\n    return ensureDefined(this.actionPawnSpaces)[index].removePiece() as ActionPawnPiece;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                actionPawnPile\n                            \n                            \n                                    Private\n                                    Readonly\n                                animalElements\n                            \n                            \n                                    Private\n                                    Readonly\n                                faction\n                            \n                            \n                                    Private\n                                    Readonly\n                                speciesPile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    actionPawn\n                                \n                                \n                                    elements\n                                \n                                \n                                    species\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AnimalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        actionPawnPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimalElements\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        speciesPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n\n                \n                    \n                        getactionPawn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        species\n                    \n                \n\n                \n                    \n                        getspecies()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:107\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimalCardComponent.html":{"url":"components/AnimalCardComponent.html","title":"component - AnimalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/animal-card/animal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animal-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardTitle\n                                ActionPawnComponent\n                            MatGridList\n                            MatGridTile\n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnForHeader\n                            \n                            \n                                actionPawnPileLength\n                            \n                            \n                                animal\n                            \n                            \n                                elements\n                            \n                            \n                                emptyElementSpaces\n                            \n                            \n                                speciesPileLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAnimal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setActionPawnForHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                faction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(animalProviderService: AnimalProviderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        faction\n                    \n                \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/animal-card/animal-card.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setActionPawnForHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    setActionPawnForHeader(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnForHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Animal | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementPiece[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyElementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :     undefined[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speciesPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { MatCard, MatCardTitle } from '@angular/material/card';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { MatGridList, MatGridTile } from '@angular/material/grid-list';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { filter, first, map } from 'rxjs';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementComponent } from '../element/element.component';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { Animal } from '../../model/animal.model';\nimport { isNotUndefined } from '../../../engine/util/predicate';\n\n// Todo: change to OnPush\n@Component({\n  selector: 'app-animal-card',\n  standalone: true,\n  imports: [MatCard, MatCardTitle, ActionPawnComponent, MatGridList, MatGridTile, ElementComponent],\n  templateUrl: './animal-card.component.html',\n  styleUrl: './animal-card.component.scss',\n})\nexport class AnimalCardComponent implements OnInit {\n  @Input() faction: Faction | undefined = undefined;\n  animal: Animal | undefined = undefined;\n  elements: ElementPiece[] = [];\n  emptyElementSpaces: null[] = [];\n  actionPawnPileLength = 0;\n  speciesPileLength = 0;\n  actionPawnForHeader: ActionPawnPiece | undefined = undefined;\n\n  constructor(private animalProviderService: AnimalProviderService) {}\n\n  ngOnInit() {\n    if (!this.faction) {\n      throw new Error('faction not set');\n    }\n    this.setActionPawnForHeader(this.faction);\n    this.getAnimal(this.faction);\n  }\n\n  private getAnimal(faction: Faction): void {\n    this.animalProviderService.animals$\n      .pipe(\n        // filter((animals) => animals.some((animal) => animal.id === faction.id)),\n        map((animals) => animals.find((animal) => animal.id === faction.id)),\n        filter(isNotUndefined),\n        first(),\n      )\n      .subscribe((animal) => {\n        this.animal = animal;\n        animal.elements.elements$.subscribe((elements) => {\n          this.elements = elements;\n          this.emptyElementSpaces = Array(6 - this.elements.length).fill(null) as null[];\n        });\n        animal.actionPawn.length$.subscribe((length) => {\n          this.actionPawnPileLength = length;\n        });\n        animal.species.length$.subscribe((length) => {\n          this.speciesPileLength = length;\n        });\n      });\n  }\n\n  private setActionPawnForHeader(faction: Faction): void {\n    this.actionPawnForHeader = defaultPieceFactory(\n      PieceKindEnum.ACTION_PAWN,\n      faction.id,\n    ) as ActionPawnPiece;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{ faction?.name }}\n      \n    \n    \n      \n        @for (element of elements; track $index) {\n          \n        }\n        @for (emptyElementSpace of emptyElementSpaces; track $index) {\n          \n        }\n      \n    \n    \n      \n        Action Pawns\n      \n      Species\n      \n        {{ actionPawnPileLength }}\n      \n      {{ speciesPileLength }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{ faction?.name }}                            @for (element of elements; track $index) {                  }        @for (emptyElementSpace of emptyElementSpaces; track $index) {                  }                            Action Pawns            Species              {{ actionPawnPileLength }}            {{ speciesPileLength }}            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalConfig.html":{"url":"interfaces/AnimalConfig.html","title":"interface - AnimalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnimalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawnPile\n                                        \n                                \n                                \n                                        \n                                            elementArea\n                                        \n                                \n                                \n                                        \n                                            elementConfig\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            speciesPile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawnPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawnPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementArea\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementArea:         Area\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Area\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementConfig:         ElementConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         Faction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Faction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speciesPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speciesPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalElements.html":{"url":"classes/AnimalElements.html","title":"class - AnimalElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elements$\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    allElements\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementArea: Area, elementConfig: ElementConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementArea\n                                                  \n                                                        \n                                                                        Area\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementConfig\n                                                  \n                                                        \n                                                                        ElementConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allElements\n                    \n                \n\n                \n                    \n                        getallElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:73\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalProviderService.html":{"url":"injectables/AnimalProviderService.html","title":"injectable - AnimalProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal-provider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animalById\n                            \n                            \n                                animals$\n                            \n                            \n                                    Private\n                                animalsSubject\n                            \n                            \n                                    Private\n                                processedFactionIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalFactory\n                            \n                            \n                                    Private\n                                buildAnimal\n                            \n                            \n                                    Private\n                                buildAnimals\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalFactory(animalConfig: AnimalConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animalConfig\n                                            \n                                                            AnimalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimals\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animals$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.animalsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processedFactionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../engine/model/faction.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport { FactionRegistryService } from '../../engine/service/game-element/faction-registry.service';\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { getOrThrow, setDifference } from '../../engine/util/misc';\nimport { Animal, AnimalConfig } from '../model/animal.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalProviderService {\n  private processedFactionIds: Set = new Set();\n  private readonly animalById = new Map();\n  private animalsSubject = new BehaviorSubject([]);\n  animals$ = this.animalsSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {\n    this.buildAnimals();\n  }\n  private buildAnimals(): void {\n    this.factionRegistryService.factionAssignment$.subscribe((factionAssignments) => {\n      // To minimize any building an animal several times, we add the animal id to processedFactionIds as quickly as possible /\n      const factionIds = new Set(\n        factionAssignments.map((factionAssignment) => factionAssignment.id),\n      );\n      const factionIdsToProcess = setDifference(factionIds, this.processedFactionIds);\n      this.processedFactionIds = new Set([\n        ...factionIdsToProcess,\n        ...this.processedFactionIds,\n      ]);\n      factionIdsToProcess.forEach((factionId) => {\n        const faction = this.factionRegistryService.get(factionId);\n        this.buildAnimal(faction);\n      });\n    });\n  }\n\n  private animalFactory(animalConfig: AnimalConfig): Animal {\n    return new Animal(animalConfig);\n  }\n\n  private buildAnimal(faction: Faction): void {\n    const elementAreaId = getOrThrow(elementConfigByAnimal, faction.id).areaId;\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id).actionPawn;\n    const speciesPileId = getOrThrow(pileIdsByAnimal, faction.id).species;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        combineLatestWith(this.pileRegistryService.registeredIds$),\n        filter(\n          ([areaIds, pileIds]) =>\n            areaIds.has(elementAreaId) &&\n            pileIds.has(actionPawnPileId) &&\n            pileIds.has(speciesPileId),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        const animalConfig: AnimalConfig = {\n          faction: faction,\n          actionPawnPile: this.pileRegistryService.get(actionPawnPileId),\n          elementArea: this.areaRegistrySvc.get(elementAreaId),\n          elementConfig: getOrThrow(elementConfigByAnimal, faction.id),\n          speciesPile: this.pileRegistryService.get(speciesPileId),\n        };\n        this.animalById.set(faction.id, this.animalFactory(animalConfig));\n        this.animalsSubject.next(Array.from(this.animalById.values()));\n      });\n  }\n\n  get(id: string): Animal {\n    return getOrThrow(this.animalById, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                spaces$\n                            \n                            \n                                    Private\n                                spacesSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, spaces: Space[])\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spaces\n                                                  \n                                                        \n                                                                        Space[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace(kind?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Space | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AreaState.html":{"url":"interfaces/AreaState.html","title":"interface - AreaState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AreaState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n            \n                Description\n            \n            \n                AreaState does not extend GameStateElement as each Area is unique with a unique ID\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            space\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        space\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        space:         SpaceState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpaceState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CognitoClientService.html":{"url":"injectables/CognitoClientService.html","title":"injectable - CognitoClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CognitoClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/cognito-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cognitoClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cognitoClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CognitoIdentityProviderClient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AuthenticationResultType,\n  CognitoIdentityProviderClient,\n  ConfirmSignUpCommand,\n  InitiateAuthCommand,\n  InitiateAuthCommandInput,\n  SignUpCommand,\n} from '@aws-sdk/client-cognito-identity-provider';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CognitoClientService {\n  private cognitoClient: CognitoIdentityProviderClient;\n\n  constructor() {\n    this.cognitoClient = new CognitoIdentityProviderClient({\n      region: environment.cognito.region,\n    });\n  }\n\n  async login(username: string, password: string): Promise {\n    const input = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: environment.cognito.clientId,\n      AuthParameters: {\n        USERNAME: username,\n        PASSWORD: password,\n      },\n    } as InitiateAuthCommandInput;\n    const command = new InitiateAuthCommand(input);\n    try {\n      const { AuthenticationResult } = await this.cognitoClient.send(command);\n      if (AuthenticationResult) {\n        return AuthenticationResult;\n      } else {\n        console.error('Unexpected AuthenticationResult');\n        return null;\n      }\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  async signUp(username: string, email: string, password: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: [\n        {\n          Name: 'email',\n          Value: email,\n        },\n      ],\n    };\n    try {\n      const command = new SignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      ConfirmationCode: code,\n    };\n    try {\n      const command = new ConfirmSignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (error) {\n      console.error('Error confirming sign up: ', error);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                                ElementComponent\n                                ActionPawnComponent\n                                AnimalCardComponent\n                                EyeballComponent\n                                ElementSpaceComponent\n                                AdaptionActionDisplayCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adaptionArea\n                            \n                            \n                                currentPlayerFaction\n                            \n                            \n                                factions\n                            \n                            \n                                gameStarted\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                startGame\n                            \n                            \n                                takeAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameManagementSvc: GameManagementService, gameStateSvc: GameStateService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, areaRegistryService: AreaRegistryService, animalProviderService: AnimalProviderService, adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameManagementSvc\n                                                  \n                                                        \n                                                                        GameManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startGame\n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeAction\n                        \n                    \n                \n            \n            \n                \ntakeAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adaptionArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerFaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameManagementService } from '../../../engine/service/game-management.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter, first } from 'rxjs';\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\nimport { ElementComponent } from '../element/element.component';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { AnimalCardComponent } from '../animal-card/animal-card.component';\nimport { PlayerService } from '../../../engine/service/player.service';\nimport { EyeballComponent } from '../action-display/space/eyeball/eyeball.component';\nimport { ElementSpaceComponent } from '../action-display/space/element-space/element-space.component';\nimport { AdaptionActionDisplayCardComponent } from '../action-display/adaption-action-display-card/adaption-action-display-card.component';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { AreaIdEnum } from '../../constant/area.constant';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { AdaptionActionDisplayService } from '../../service/action-display/adaption-action-display.service';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [\n    MatButton,\n    MatTooltip,\n    ElementComponent,\n    ActionPawnComponent,\n    AnimalCardComponent,\n    EyeballComponent,\n    ElementSpaceComponent,\n    AdaptionActionDisplayCardComponent,\n  ],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent {\n  gameStarted = false;\n  currentPlayerFaction: Faction | undefined = undefined;\n  factions: Faction[] = [];\n  adaptionArea: Area | undefined = undefined;\n  log: string[] = [];\n\n  constructor(\n    private gameManagementSvc: GameManagementService,\n    private gameStateSvc: GameStateService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private areaRegistryService: AreaRegistryService,\n    private animalProviderService: AnimalProviderService,\n    private adaptionActionDisplayService: AdaptionActionDisplayService,\n  ) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.areaRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION)),\n        first(),\n      )\n      .subscribe(() => {\n        this.adaptionArea = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n      });\n  }\n\n  startGame(): void {\n    this.gameManagementSvc.createGame();\n    console.log('Create Game');\n    this.factionRegistrySvc.factionAssignment$.subscribe((factionAssignments) => {\n      const factionAssignment = factionAssignments[0];\n      this.factions = [this.factionRegistrySvc.get(factionAssignment.id)];\n\n      // this.factions = factionAssignments.map((factionAssignment) =>\n      //   this.factionRegistrySvc.get(factionAssignment.id),\n      // );\n      this.currentPlayerFaction = this.factions.find(\n        (faction) => faction.ownerId === this.playerService.currentPlayer.id,\n      );\n    });\n    this.gameStarted = true;\n  }\n\n  takeAction(): void {\n    this.gameStateSvc.startTransaction();\n    const animal = this.animalProviderService.get(ensureDefined(this.currentPlayerFaction).id);\n    const actionPawn = animal.actionPawn.pullOne();\n    if (actionPawn) {\n      const nextActionPawnSpaceIndex = this.adaptionActionDisplayService.actionPawns.findIndex(\n        (value) => value === null,\n      );\n      const nextElementSpaceIndex = this.adaptionActionDisplayService.elements.findIndex(\n        (value) => value !== null,\n      );\n      this.adaptionActionDisplayService.addActionPawn(nextActionPawnSpaceIndex, actionPawn);\n      const element = this.adaptionActionDisplayService.removeElement(nextElementSpaceIndex);\n      animal.elements.addElement(element);\n    }\n    this.gameStateSvc.commitTransaction();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Start Game\n      Take Action\n    \n    @if (gameStarted) {\n      \n        \n        \n          @for (faction of factions; track faction.id) {\n            \n          }\n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Start Game      Take Action        @if (gameStarted) {                                @for (faction of factions; track faction.id) {                      }                  }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementComponent.html":{"url":"components/ElementComponent.html","title":"component - ElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/element/element.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    kind\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :     ElementPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/element/element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        kind\n                    \n                \n\n                \n                    \n                        getkind()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../model/element.model';\n\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-element',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './element.component.html',\n  styleUrl: './element.component.scss',\n})\nexport class ElementComponent {\n  @Input() element: ElementPiece | undefined = undefined;\n\n  get kind(): string | undefined {\n    return this.element?.kind;\n  }\n\n  get name(): string | undefined {\n    return this.element?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.kind) {\n      return getOrThrow(imgPathByKind, this.kind);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/element-config.constant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementEnum, ElementKind } from './element.constant';\nimport { AreaId, AreaIdEnum } from './area.constant';\nimport { AnimalEnum } from './animal.constant';\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                    Private\n                                ready\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: ElementPiece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        ElementPiece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ready\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.ready)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:44\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, first, Observable, of } from 'rxjs';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { PileIdEnum } from '../constant/pile.constant';\nimport { ElementPiece } from '../model/element.model';\nimport { Piece } from '../../engine/model/piece.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | undefined = undefined;\n  private ready = false;\n  private readySubject: BehaviorSubject = new BehaviorSubject(this.ready);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.pileRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(PileIdEnum.ELEMENT)),\n        first(),\n      )\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PileIdEnum.ELEMENT);\n        this.ready = true;\n        this.readySubject.next(this.ready);\n      });\n  }\n\n  private get drawPool(): Pile {\n    if (this._drawPool) {\n      return this._drawPool;\n    } else {\n      throw new Error('Pile not ready');\n    }\n  }\n\n  get length$(): Observable {\n    if (this._drawPool) {\n      return this.drawPool.length$;\n    } else {\n      return of(0);\n    }\n  }\n\n  pull(count = 1): (ElementPiece | null)[] {\n    return this.drawPool.pullMany(count) as ElementPiece[];\n  }\n\n  put(pieces: ElementPiece[]): void {\n    this.drawPool.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/element.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\n\nimport { ElementKind } from '../constant/element.constant';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementSpaceComponent.html":{"url":"components/ElementSpaceComponent.html","title":"component - ElementSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/element-space/element-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./element-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :     ElementPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../../../model/element.model';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\nimport { ElementComponent } from '../../../element/element.component';\n\n@Component({\n  selector: 'app-element-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent],\n  templateUrl: './element-space.component.html',\n  styleUrl: './element-space.component.scss',\n})\nexport class ElementSpaceComponent {\n  @Input() element: ElementPiece | null = null;\n\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'elementSpace');\n  }\n}\n\n    \n\n    \n        \n  \n    @if (element) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (element) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EyeballComponent.html":{"url":"components/EyeballComponent.html","title":"component - EyeballComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EyeballComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-eyeball\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./eyeball.component.html\n            \n\n\n\n            \n                styleUrl\n                ./eyeball.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/eyeball/eyeball.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\n\n@Component({\n  selector: 'app-eyeball',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  templateUrl: './eyeball.component.html',\n  styleUrl: './eyeball.component.scss',\n})\nexport class EyeballComponent {\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'eyeball');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EyeballComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:14\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  name: string;\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionState.html":{"url":"interfaces/FactionState.html","title":"interface - FactionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  name: string;\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:31\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  get(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(elements: TgameElement[]): void {\n    elements.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elements);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameElementState.html":{"url":"interfaces/GameElementState.html","title":"interface - GameElementState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameElementState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:21\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  protected abstract get elementState$(): Observable;\n  protected abstract registerEntityState(element: TgameElement): void;\n  protected abstract setEntityState(state: GameElementState): void;\n\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  private getEntity(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementService.html":{"url":"injectables/GameManagementService.html","title":"injectable - GameManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createArea\n                            \n                            \n                                    Private\n                                createDrawPoolPile\n                            \n                            \n                                    Private\n                                createFactions\n                            \n                            \n                                createGame\n                            \n                            \n                                    Private\n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, pileRegistrySvc: PileRegistryService, gameStateService: GameStateService, actionDisplayManagerService: ActionDisplayManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateService\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionDisplayManagerService\n                                                  \n                                                        \n                                                                        ActionDisplayManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDrawPoolPile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDrawPoolPile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createFactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFactions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGame\n                        \n                    \n                \n            \n            \n                \ncreateGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setup\n                        \n                    \n                \n            \n            \n                \n                        \n                    setup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../model/pile.model';\nimport { Space } from '../model/space.model';\nimport { Area } from '../model/area.model';\nimport { shuffle, startCase } from 'lodash';\nimport { Faction } from '../model/faction.model';\nimport { PlayerService } from './player.service';\nimport { getOrThrow } from '../util/misc';\nimport { AreaRegistryService } from './game-element/area-registry.service';\nimport { FactionRegistryService } from './game-element/faction-registry.service';\nimport { PileRegistryService } from './game-element/pile-registry.service';\nimport { baseGameState } from '../../game/constant/game-state.constant';\nimport { AnimalEnum } from '../../game/constant/animal.constant';\nimport { SpaceKindEnum } from '../../game/constant/area.constant';\nimport { elementConfigByAnimal } from '../../game/constant/element-config.constant';\nimport { PieceKindEnum } from '../../game/constant/piece.constant';\nimport { defaultPieceFactory } from '../model/piece.model';\nimport { pileIdsByAnimal } from '../../game/constant/pile-config';\nimport { GameStateService } from './game-state/game-state.service';\nimport { ActionDisplayManagerService } from '../../game/service/action-display/action-display-manager.service';\nimport { filter } from 'rxjs';\nimport { isTrue } from '../util/predicate';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementService {\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private pileRegistrySvc: PileRegistryService,\n    private gameStateService: GameStateService,\n    private actionDisplayManagerService: ActionDisplayManagerService,\n  ) {}\n\n  createGame(): void {\n    this.createArea();\n    this.createFactions();\n    this.createDrawPoolPile();\n    this.gameStateService.startTransaction();\n    this.setup();\n    this.gameStateService.commitTransaction();\n  }\n\n  private createArea(): void {\n    const areas: Area[] = [];\n    baseGameState.area.forEach((areaState) => {\n      const spaces: Space[] = [];\n      areaState.space.forEach((spaceState) => {\n        spaces.push(new Space(spaceState.kind));\n      });\n      areas.push(new Area(areaState.id, spaces));\n    });\n    this.areaRegistrySvc.register(areas);\n  }\n\n  private createFactions() {\n    const factions: Faction[] = [];\n    const areas: Area[] = [];\n    const piles: Pile[] = [];\n    const shuffledAnimals = shuffle(Object.values(AnimalEnum));\n    this.playerService.players.forEach((player, index) => {\n      const assignedAnimal = shuffledAnimals[index];\n      const elementConfig = getOrThrow(elementConfigByAnimal, assignedAnimal);\n\n      factions.push(\n        new Faction({\n          id: assignedAnimal,\n          name: startCase(assignedAnimal),\n          ownerId: player.id,\n          score: 0,\n        }),\n      );\n\n      const spaces: Space[] = [];\n      // inherent element spaces\n      for (let i = 0; i  {\n      piles.push(new Pile(pileState));\n    });\n    this.pileRegistrySvc.register(piles);\n  }\n\n  private setup(): void {\n    this.actionDisplayManagerService.ready$.pipe(filter(isTrue)).subscribe(() => {\n      this.actionDisplayManagerService.setup();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Defining the GameState object managed by GameStateStoreService\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            area\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            pile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        area\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        area:         AreaState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         FactionState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FactionState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pile:         PileState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PileState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FactionState } from './faction.model';\nimport { PileState } from './pile.model';\nimport { AreaState } from './area.model';\n\n/**\n * Defining the GameState object managed by GameStateStoreService\n */\nexport interface GameState {\n  area: AreaState[];\n  faction: FactionState[];\n  pile: PileState[];\n}\n\nexport const emptyGameState: GameState = {\n  area: [],\n  faction: [],\n  pile: [],\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gsp$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gsp$\n                    \n                \n\n                \n                    \n                        getgsp$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-client.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { of, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n  }\n\n  get gsp$(): Observable {\n    return of(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameStatePatch.html":{"url":"interfaces/GameStatePatch.html","title":"interface - GameStatePatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameStatePatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state-patch.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            patch\n                                        \n                                \n                                \n                                        \n                                            timeStamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        patch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        patch:     Operation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Operation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeStamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Operation } from 'fast-json-patch';\n\nexport interface GameStatePatch {\n  timeStamp: number;\n  patch: Operation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(gameState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameState } from '../../model/game-state.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { applyPatch, compare } from 'fast-json-patch';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      timeStamp: Date.now(),\n      patch: compare(oldState, newState),\n    };\n  }\n\n  apply(gameState: GameState, gsp: GameStatePatch): GameState {\n    return applyPatch(gameState, gsp.patch, undefined, false).newDocument;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:87\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { filter, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { PileState } from '../../model/pile.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { AreaState } from '../../model/area.model';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.pipe(filter((gsp) => gsp != undefined)).subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    const updatedState = this.gspService.apply(this.gameStateStore.gameState, gsp);\n    this.gameStateStore.setGameState(updatedState);\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        this.gameStateStore.gameState,\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\nusing the register method of the state element management service such as PileService or AreaService.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : deepClone(emptyGameState) as GameState\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:151\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:163\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:175\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PileState } from '../../model/pile.model';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { emptyGameState, GameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\nimport { AreaState } from '../../model/area.model';\nimport { GameElementState } from '../../model/game-element.model';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\n * using the register method of the state element management service such as PileService or AreaService.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState = deepClone(emptyGameState) as GameState;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      map((gameState) => {\n        return selector(gameState);\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = this._gameState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState {\n    return deepClone(this._gameState) as GameState;\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginFormData.html":{"url":"interfaces/LoginFormData.html","title":"interface - LoginFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/login-page/login-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { LoginService } from '../../service/auth/login.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.loginService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/game']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatCard\n                            MatCardContent\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, loginService: LoginService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/login-page/login-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { LoginService } from '../../service/auth/login.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.loginService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/game']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n          \n          Confirm\n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n        \n          \n          \n            Sign Up Here\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                            Username:                                    Password:                          .                            Confirm                                                @if (errorMessage()) {              {{ errorMessage() }}            }                                                          Sign Up Here                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/login.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/login.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private cognitoClientService: CognitoClientService) {}\n\n  async login(username: string, password: string): Promise {\n    const authResult = await this.cognitoClientService.login(username, password);\n    if (authResult) {\n      console.log(JSON.stringify(authResult));\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Piece.html":{"url":"interfaces/Piece.html","title":"interface - Piece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Piece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/piece.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { startCase } from 'lodash';\n\nexport interface Piece {\n  kind: string;\n  owner: string | null;\n  name: string;\n}\n\nexport type PieceFactory = (kind: string, owner?: string | null, name?: string | null) => Piece;\n\nexport function defaultPieceFactory(\n  kind: string,\n  owner: string | null = null,\n  name: string | null = null,\n): Piece {\n  return { kind: kind, owner: owner, name: name ? name : startCase(kind) };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                owner\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:20\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:56\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Piece | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:86\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:39\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PileAdapter.html":{"url":"classes/PileAdapter.html","title":"class - PileAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PileAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pile: Pile)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pile\n                                                  \n                                                        \n                                                                        Pile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:103\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileConfig.html":{"url":"interfaces/PileConfig.html","title":"interface - PileConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/pile-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawn\n                                        \n                                \n                                \n                                        \n                                            species\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        species\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        species:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalEnum } from './animal.constant';\nimport { PileIdEnum } from './pile.constant';\n\nexport interface PileConfig {\n  actionPawn: string;\n  species: string;\n}\n\nexport const pileIdsByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n]);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:26\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileState.html":{"url":"interfaces/PileState.html","title":"interface - PileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inventory\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inventory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inventory:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  owner: string | null;\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:25\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Player.html":{"url":"classes/Player.html","title":"class - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/player.model.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement } from './game-element.model';\n\nexport interface PlayerState {\n  id: string;\n  name: string;\n}\n\nexport class Player extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                    Readonly\n                                players\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player\n\n                    \n                \n                \n                    \n                        Default value : this.players[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Player({ id: 'test1', name: 'Test Player1' }),\n    new Player({ id: 'test2', name: 'Test Player2' }),\n    new Player({ id: 'test3', name: 'Test Player3' }),\n    new Player({ id: 'test4', name: 'Test Player4' }),\n    new Player({ id: 'test5', name: 'Test Player5' }),\n    new Player({ id: 'test6', name: 'Test Player6' }),\n  ] as const\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/player.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from '../model/player.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  readonly players: Player[] = [\n    new Player({ id: 'test1', name: 'Test Player1' }),\n    new Player({ id: 'test2', name: 'Test Player2' }),\n    new Player({ id: 'test3', name: 'Test Player3' }),\n    new Player({ id: 'test4', name: 'Test Player4' }),\n    new Player({ id: 'test5', name: 'Test Player5' }),\n    new Player({ id: 'test6', name: 'Test Player6' }),\n  ] as const;\n  readonly currentPlayer: Player = this.players[0];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerState.html":{"url":"interfaces/PlayerState.html","title":"interface - PlayerState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameElement } from './game-element.model';\n\nexport interface PlayerState {\n  id: string;\n  name: string;\n}\n\nexport class Player extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpConfirmFormData.html":{"url":"interfaces/SignUpConfirmFormData.html","title":"interface - SignUpConfirmFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpConfirmFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpConfirmPageComponent.html":{"url":"components/SignUpConfirmPageComponent.html","title":"component - SignUpConfirmPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpConfirmPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-confirm-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-confirm-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-confirm-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpConfirmForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Confirm Sign Up\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Code:\n          \n        \n        .\n        \n          \n          \n            Confirm\n          \n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm Sign Up                            Username:                                    Code:                          .                                        Confirm                                                          @if (errorMessage()) {              {{ errorMessage() }}            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpConfirmPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpFormData.html":{"url":"interfaces/SignUpFormData.html","title":"interface - SignUpFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-page/sign-up-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpPageComponent.html":{"url":"components/SignUpPageComponent.html","title":"component - SignUpPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-page/sign-up-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardHeader\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up for VPA Games\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Email:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n        \n          \n          Sign Up\n        \n\n        \n\n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n            @if (signUpForm.invalid && signUpForm.dirty) {\n              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {\n                Please enter a valid email.\n              }\n              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {\n                Password must be at least 6 characters long.\n              }\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up for VPA Games                            Username:                                    Email:                                    Password:                          .                                    Sign Up                                                        @if (errorMessage()) {              {{ errorMessage() }}            }            @if (signUpForm.invalid && signUpForm.dirty) {              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {                Please enter a valid email.              }              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {                Password must be at least 6 characters long.              }            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignUpService.html":{"url":"injectables/SignUpService.html","title":"injectable - SignUpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignUpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/sign-up.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/sign-up.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignUpService {\n  constructor(private cognitoClientService: CognitoClientService) {}\n\n  async signUp(username: string, email: string, password: string): Promise {\n    return this.cognitoClientService.signUp(username, email, password);\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    return this.cognitoClientService.confirmSignUp(username, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _action\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                removePiece\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    action\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kind: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kind\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                            Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Piece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n\n                \n                    \n                        getaction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpaceState.html":{"url":"interfaces/SpaceState.html","title":"interface - SpaceState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpaceState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            piece\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        piece\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        piece:         Piece | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Piece | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeciesPiece.html":{"url":"interfaces/SpeciesPiece.html","title":"interface - SpeciesPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeciesPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/species.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Piece } from '../../engine/model/piece.model';\nimport { AnimalKind } from '../constant/animal.constant';\n\nexport interface SpeciesPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            interface\n            LoginFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            component\n            SignUpConfirmPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            interface\n            SignUpConfirmFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            component\n            SignUpPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            interface\n            SignUpFormData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            interface\n            AreaState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            interface\n            FactionState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            interface\n            GameElementState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state-patch.model.ts\n            \n            interface\n            GameStatePatch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            interface\n            GameState\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/piece.model.ts\n            \n            interface\n            Piece\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            PileAdapter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            interface\n            PileState\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            class\n            Player\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            interface\n            SpaceState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/cognito-client.service.ts\n            \n            injectable\n            CognitoClientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/sign-up.service.ts\n            \n            injectable\n            SignUpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management.service.ts\n            \n            injectable\n            GameManagementService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/engine/service/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/util/misc.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/misc.ts\n            \n            function\n            ensureDefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/misc.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/misc.ts\n            \n            function\n            setDifference\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/util/predicate.ts\n            \n            function\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n            \n            component\n            AdaptionActionDisplayCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n            \n            component\n            ActionPawnSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/element-space/element-space.component.ts\n            \n            component\n            ElementSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n            \n            component\n            EyeballComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-pawn/action-pawn.component.ts\n            \n            component\n            ActionPawnComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/animal-card/animal-card.component.ts\n            \n            component\n            AnimalCardComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/component/element/element.component.ts\n            \n            component\n            ElementComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/constant/area.constant.ts\n            \n            variable\n            elementAreaIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/game-state.constant.ts\n            \n            variable\n            baseGameState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/image.constant.ts\n            \n            variable\n            imgPathByKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            interface\n            PileConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            variable\n            pileIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/action-display.model.ts\n            \n            interface\n            ActionDisplayServiceWithSetup\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/action-pawn.model.ts\n            \n            interface\n            ActionPawnPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            AnimalElements\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            interface\n            AnimalConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/element.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/species.model.ts\n            \n            interface\n            SpeciesPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            class\n            ActionDisplaySetupManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            injectable\n            ActionDisplayManagerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/adaption-action-display.service.ts\n            \n            injectable\n            AdaptionActionDisplayService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/game/service/animal-provider.service.ts\n            \n            injectable\n            AnimalProviderService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @aws-sdk/client-cognito-identity-provider : ^3.670.0\n        \n            fast-json-patch : ^3.1.1\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalEnum   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../area.constant.ts)\n                        \n                        \n                            ElementEnum   (src/.../element.constant.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../piece.constant.ts)\n                        \n                        \n                            PileIdEnum   (src/.../pile.constant.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../area.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n\n    src/app/game/constant/area.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n    src/app/game/constant/element.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grass\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grub\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meat\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seed\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sun\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : water\n                            \n                        \n            \n        \n\n    src/app/game/constant/piece.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 SPECIES\n                            \n                        \n                        \n                            \n                                Value : species\n                            \n                        \n            \n        \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PileIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deepCompare   (src/.../misc.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            ensureDefined   (src/.../misc.ts)\n                        \n                        \n                            getOrThrow   (src/.../misc.ts)\n                        \n                        \n                            isFalse   (src/.../predicate.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                        \n                            isTrue   (src/.../predicate.ts)\n                        \n                        \n                            setDifference   (src/.../misc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/util/misc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureDefined\n                        \n                    \n                \n            \n            \n                \nensureDefined(value)\n                \n            \n\n\n\n\n            \n                \n                        Ensures that a given value is defined (i.e., not undefined).\nTypically used for values that start as undefined and then are set during initialization by a subscription.\nIf the value is undefined, this function throws an error with a message\nindicating that the value is not defined. If the value is defined, it is\nreturned unchanged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be checked.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \nThe value itself if it is defined.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDifference\n                        \n                    \n                \n            \n            \n                \nsetDifference(setA: Set, setB: Set)\n                \n            \n\n\n\n\n            \n                \n                        Returns the items that are in setA, but not in setB\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                setA\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setB\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Set\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner, name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFalse\n                        \n                    \n                \n            \n            \n                \nisFalse(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTrue\n                        \n                    \n                \n            \n            \n                \nisTrue(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDominantSpecies\nThis project was generated with Angular CLI version 18.2.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Joe K.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalKind   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaId   (src/.../area.constant.ts)\n                        \n                        \n                            ElementKind   (src/.../element.constant.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/area.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/element.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            baseGameState   (src/.../game-state.constant.ts)\n                        \n                        \n                            elementAreaIdsByAnimal   (src/.../area.constant.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../element-config.constant.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            imgPathByKind   (src/.../image.constant.ts)\n                        \n                        \n                            pileIdsByAnimal   (src/.../pile-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideAnimationsAsync('noop'),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/game-state.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [\n    {\n      id: AreaIdEnum.ACTION_DISPLAY_ADAPTION,\n      space: [\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n      ],\n    },\n  ],\n  faction: [],\n  pile: [\n    {\n      id: PileIdEnum.ELEMENT,\n      owner: null,\n      inventory: {\n        // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n        [ElementEnum.GRASS]: 18,\n        [ElementEnum.GRUB]: 18,\n        [ElementEnum.MEAT]: 18,\n        [ElementEnum.SEED]: 18,\n        [ElementEnum.SUN]: 18,\n        [ElementEnum.WATER]: 18,\n      },\n    },\n  ],\n}\n                    \n                \n\n            \n                \n                    GameState defining the static elements of the DS game\n\n                \n            \n\n        \n    \n\n    src/app/game/constant/area.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementAreaIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [AnimalEnum.AMPHIBIAN, AreaIdEnum.AMPHIBIAN_ELEMENT],\n  [AnimalEnum.ARACHNID, AreaIdEnum.ARACHNID_ELEMENT],\n  [AnimalEnum.BIRD, AreaIdEnum.BIRD_ELEMENT],\n  [AnimalEnum.INSECT, AreaIdEnum.INSECT_ELEMENT],\n  [AnimalEnum.MAMMAL, AreaIdEnum.MAMMAL_ELEMENT],\n  [AnimalEnum.REPTILE, AreaIdEnum.REPTILE_ELEMENT],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/element-config.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [],\n  faction: [],\n  pile: [],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/image.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imgPathByKind\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  // elements /\n  ['grass', 'dominant-species/element/noun-grass-7195612.svg'],\n  ['grub', 'dominant-species/element/noun-grub-3386143.svg'],\n  ['meat', 'dominant-species/element/noun-cow-skull-151117.svg'],\n  ['seed', 'dominant-species/element/noun-seed-6850047.svg'],\n  ['sun', 'dominant-species/element/noun-sun-7300296.svg'],\n  ['water', 'dominant-species/element/noun-water-water-1235535.svg'],\n  // animals /\n  ['amphibian', 'dominant-species/animal/noun-gecko-367390.svg'],\n  ['arachnid', 'dominant-species/animal/noun-spider-7144060.svg'],\n  ['bird', 'dominant-species/animal/noun-eagle-6606521.svg'],\n  ['insect', 'dominant-species/animal/noun-grasshopper-7049525.svg'],\n  ['mammal', 'dominant-species/animal/noun-monkey-2997582.svg'],\n  ['reptile', 'dominant-species/animal/noun-snake-4412103.svg'],\n  // others /\n  ['eyeball', 'dominant-species/other/noun-eye-2037742.svg'],\n  ['elementSpace', 'dominant-species/other/noun-leaf-7290921.svg'],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/pile-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pileIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
