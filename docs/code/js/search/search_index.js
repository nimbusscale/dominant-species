var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.732,1,1.02]],["body/interfaces/Action.html",[0,1.143,1,1.85,2,2.501,3,0.215,4,0.215,5,0.191,6,5.396,7,0.098,8,0.693,9,2.602,10,0.695,11,0.144,12,0.014,13,0.215,14,0.012,15,0.012]],["title/injectables/ActionDisplayManagerService.html",[16,0.306,17,2.859]],["body/injectables/ActionDisplayManagerService.html",[1,1.249,3,0.169,4,0.169,5,0.15,7,0.077,8,0.598,11,0.159,12,0.014,13,0.169,14,0.011,15,0.011,16,0.479,17,4.474,18,1.249,19,5.846,20,5.846,21,2.57,22,4.235,23,4.824,24,0.995,25,4.93,26,0.795,27,6.279,28,0.678,29,4.235,30,4.771,31,0.624,32,6.222,33,0.569,34,0.398,35,0.569,36,4.872,37,0.595,38,0.795,39,2.033,40,1.145,41,1.02,42,4.474,43,2.36,44,1.145,45,4.874,46,4.872,47,0.292,48,0.569,49,1.812,50,3.816,51,4.235,52,2.448,53,3.127,54,1.812,55,1.12,56,1.249,57,1.205,58,0.15,59,2.573,60,4.235,61,1.02,62,4.872,63,4.872,64,4.235,65,4.872,66,4.872,67,4.235,68,2.712,69,4.235,70,3.254,71,4.235,72,4.235,73,4.235,74,4.235,75,4.235]],["title/interfaces/ActionDisplayService.html",[0,0.732,76,3.114]],["body/interfaces/ActionDisplayService.html",[0,1.128,2,2.469,3,0.212,4,0.212,5,0.188,7,0.097,8,0.688,11,0.142,12,0.014,13,0.212,14,0.012,15,0.012,23,5.22,39,2.318,47,0.261,55,1.409,76,5.608,77,4.8,78,5.327]],["title/components/ActionPawnComponent.html",[79,0.732,80,1.422]],["body/components/ActionPawnComponent.html",[1,1.965,3,0.141,4,0.141,5,0.125,7,0.064,10,0.573,11,0.094,12,0.014,13,0.141,14,0.009,15,0.009,21,1.404,31,0.582,34,0.575,40,0.751,41,0.668,47,0.287,48,0.476,49,1.517,58,0.125,79,1.156,80,2.41,81,2.058,82,1.578,83,1.578,84,1.578,85,4.403,86,4.703,87,3.545,88,1.578,89,2.426,90,2.426,91,2.688,92,2.791,93,2.337,94,1.905,95,1.583,96,1.905,97,5.534,98,1.905,99,5.534,100,3.696,101,3.011,102,1.905,103,3.496,104,4.517,105,3.011,106,3.313,107,4.078,108,4.078,109,4.078,110,2.932,111,4.078,112,2.932,113,4.078,114,1.787,115,3.257,116,2.723,117,2.27,118,2.549,119,2.932,120,2.049,121,1.868,122,1.404,123,1.404,124,1.104,125,4.078,126,4.078,127,4.335,128,2.932,129,1.578,130,2.142,131,1.201,132,1.578,133,2.607,134,1.578,135,1.578,136,1.459,137,2.142,138,1.459,139,2.142,140,1.459,141,1.21,142,1.459,143,1.578,144,1.459,145,1.459,146,0.751,147,2.726,148,1.459,149,1.459,150,1.21,151,2.142,152,1.459,153,1.255,154,1.404,155,1.459,156,1.578,157,1.459,158,1.459,159,1.578,160,1.459,161,1.578,162,1.404,163,1.404,164,1.459,165,1.517,166,1.404,167,1.905,168,1.767,169,1.404,170,1.404,171,1.404,172,1.578,173,1.578]],["title/interfaces/ActionPawnPiece.html",[0,0.732,105,1.906]],["body/interfaces/ActionPawnPiece.html",[0,1.102,2,2.413,3,0.207,4,0.207,5,0.184,7,0.095,8,0.679,11,0.139,12,0.014,13,0.207,14,0.012,15,0.012,47,0.3,77,4.69,103,4.318,105,3.385,174,5.205,175,2.846,176,3.775,177,5.579,178,4.69,179,1.233,180,1.377,181,1.328]],["title/components/ActionPawnSpaceComponent.html",[79,0.732,136,1.422]],["body/components/ActionPawnSpaceComponent.html",[1,1.998,3,0.146,4,0.146,5,0.129,7,0.067,11,0.098,12,0.014,13,0.146,14,0.01,15,0.01,21,1.449,31,0.363,34,0.461,40,0.775,41,0.69,47,0.303,48,0.491,49,1.566,58,0.129,79,1.175,80,2.442,81,2.103,82,1.629,83,1.629,84,1.629,85,3.534,86,2.811,88,1.629,89,2.478,90,2.478,91,2.697,92,2.801,93,2.924,94,1.947,95,1.617,96,1.947,98,1.947,100,3.776,101,3.412,105,3.06,114,1.845,115,3.327,116,2.811,117,2.343,122,1.947,123,2.35,129,1.629,130,2.188,131,1.22,132,1.629,133,2.641,134,1.629,135,1.629,136,2.442,137,2.188,138,1.506,139,2.188,140,1.506,141,1.249,142,1.506,143,1.629,144,1.506,145,1.506,146,0.775,147,2.755,148,1.506,149,1.506,150,1.249,151,2.188,152,1.506,153,1.295,154,1.449,155,2.442,156,1.629,157,1.506,158,2.442,159,1.629,160,1.506,161,1.629,162,1.449,163,1.449,164,1.506,165,1.566,166,1.449,167,1.947,168,1.806,169,1.449,170,1.449,171,1.449,172,1.629,173,1.629,182,4.915,183,4.429,184,3.297,185,2.589,186,4.915,187,4.915,188,3.659,189,3.027,190,3.297,191,4.209]],["title/components/AdaptionActionDisplayCardComponent.html",[79,0.732,138,1.422]],["body/components/AdaptionActionDisplayCardComponent.html",[1,2.059,3,0.122,4,0.122,5,0.108,7,0.106,8,0.48,11,0.082,12,0.014,13,0.122,14,0.009,15,0.009,21,2.732,26,0.639,28,0.491,29,3.063,30,4.338,31,0.546,33,0.411,34,0.474,35,0.411,37,0.431,38,0.45,40,0.92,41,0.819,47,0.32,48,0.411,49,2.759,50,2.76,52,1.771,53,1.771,55,0.81,58,0.108,59,1.861,79,1.07,80,1.261,81,1.86,82,1.364,83,1.364,84,1.364,85,4.176,88,1.364,89,2.192,90,2.192,91,2.642,92,2.744,93,2.162,94,1.722,95,1.43,96,1.722,98,1.722,101,2.397,105,1.689,114,1.544,116,2.353,117,1.961,122,1.722,129,1.364,130,1.935,131,1.277,132,1.364,133,2.448,134,1.364,135,1.364,136,2.263,137,1.935,138,2.263,139,1.935,140,1.261,141,1.045,142,1.261,143,1.364,144,1.261,145,1.261,146,0.649,147,2.585,148,1.261,149,1.261,150,1.045,151,1.935,152,1.261,153,1.084,154,1.213,155,1.261,156,1.364,157,2.263,158,2.263,159,1.364,160,1.261,161,1.364,162,1.213,163,1.213,164,1.261,165,1.311,166,1.213,167,1.722,168,1.597,169,1.213,170,1.213,171,1.213,172,1.364,173,1.364,183,3.917,192,4.99,193,5.233,194,2.76,195,2.943,196,3.633,197,4.347,198,3.07,199,4.347,200,4.347,201,5.807,202,2.928,203,3.954,204,5,205,3.523,206,3.357,207,3.523,208,1.861,209,3.596,210,4.347,211,3.523,212,1.614,213,2.203,214,3.063,215,2.76,216,2.203,217,3.523,218,3.523,219,3.523,220,3.523,221,3.523,222,3.063,223,4.224]],["title/injectables/AdaptionActionDisplayService.html",[16,0.306,30,2.485]],["body/injectables/AdaptionActionDisplayService.html",[1,1.997,3,0.099,4,0.099,5,0.088,7,0.091,8,0.413,11,0.163,12,0.015,13,0.099,14,0.007,15,0.007,16,0.331,18,0.735,19,6.1,23,3.447,24,1.057,25,3.712,26,0.549,28,0.599,30,2.689,31,0.669,33,0.67,34,0.468,35,0.67,37,0.789,38,0.785,40,1.34,41,1.193,42,3.093,43,0.987,44,1.267,45,3.369,47,0.314,48,0.335,52,2.162,53,2.162,55,0.659,56,0.735,57,0.709,58,0.088,61,0.47,68,1.596,101,2.474,105,3.437,106,2.514,116,1.915,117,1.596,121,1.313,123,2.222,124,0.846,131,0.822,153,0.882,176,2.162,179,0.591,180,0.659,181,0.636,185,3.153,192,5.599,201,5.611,202,2.829,212,3.284,213,1.792,216,1.792,224,2.492,225,5.162,226,5.162,227,2.498,228,3.712,229,3.712,230,4.301,231,3.029,232,4.301,233,3.739,234,5.736,235,6.146,236,2.867,237,3.798,238,4.47,239,4.301,240,4.301,241,3.919,242,2.867,243,2.867,244,4.301,245,2.867,246,4.301,247,2.867,248,2.867,249,2.867,250,2.867,251,4.301,252,2.867,253,2.867,254,4.301,255,2.867,256,2.867,257,2.867,258,3.093,259,2.867,260,2.867,261,4.301,262,2.867,263,2.867,264,1.687,265,1.687,266,1.514,267,2.492,268,1.792,269,2.492,270,1.915,271,3.227,272,1.792,273,1.204,274,1.915,275,1.792,276,2.062,277,2.492,278,2.867,279,3.739,280,2.867,281,2.867,282,1.792,283,2.867,284,2.492,285,2.867,286,2.867,287,4.301,288,3.739,289,2.492,290,2.867,291,2.867,292,3.447,293,2.867,294,2.867,295,1.915,296,2.867,297,2.867,298,2.867,299,2.867,300,2.867,301,1.596,302,1.539,303,2.867,304,2.689,305,2.867,306,2.246,307,2.867,308,3.739,309,2.867,310,2.492,311,1.514,312,1.915,313,2.867,314,2.867,315,2.492,316,2.062,317,2.867,318,2.867,319,2.867]],["title/classes/Animal.html",[58,0.122,141,1.179]],["body/classes/Animal.html",[0,0.656,1,0.914,3,0.123,4,0.123,5,0.11,7,0.056,8,0.484,9,1.939,10,0.459,11,0.155,12,0.015,13,0.202,14,0.009,15,0.009,24,1.148,28,0.702,31,0.651,33,0.416,34,0.519,35,0.416,38,0.644,43,1.735,44,1.282,47,0.328,55,0.819,58,0.155,61,1.042,101,2.803,102,1.735,105,1.708,110,2.562,117,1.983,121,1.632,124,1.219,131,0.963,141,1.495,150,1.735,185,2.678,202,2.786,212,3.189,216,2.227,227,2.263,228,2.562,229,2.562,258,2.562,268,2.227,271,2.227,272,2.227,273,1.497,274,2.379,275,2.227,292,4.245,295,2.379,302,1.803,304,2.227,311,1.882,312,2.379,316,2.562,320,1.79,321,2.562,322,3.234,323,4.571,324,4.781,325,2.72,326,4.571,327,3.948,328,3.974,329,5.039,330,2.791,331,4.213,332,3.563,333,3.563,334,3.563,335,3.097,336,3.563,337,3.563,338,3.563,339,3.563,340,3.563,341,3.563,342,3.563,343,3.563,344,2.227,345,2.263,346,2.379,347,3.876,348,2.379,349,2.379,350,2.227,351,2.791,352,1.882,353,3.624,354,2.791,355,2.791,356,2.791,357,2.791,358,2.791,359,2.791,360,2.791,361,2.791,362,2.791,363,3.948,364,2.791,365,2.791,366,2.791,367,3.366,368,2.791,369,2.791,370,2.791,371,2.791,372,2.791,373,2.562,374,2.791,375,2.791,376,2.791,377,2.791,378,2.791,379,2.791,380,2.791,381,2.791,382,2.791,383,3.948,384,2.791,385,3.948,386,2.791,387,3.948,388,2.791,389,2.791,390,2.791,391,2.791]],["title/components/AnimalCardComponent.html",[79,0.732,140,1.422]],["body/components/AnimalCardComponent.html",[1,1.657,3,0.1,4,0.1,5,0.089,7,0.097,8,0.415,11,0.067,12,0.014,13,0.1,14,0.007,15,0.007,21,0.991,24,1.001,26,0.551,28,0.601,31,0.637,33,0.336,34,0.422,35,0.336,37,0.632,38,0.661,40,1.19,41,1.059,47,0.326,48,0.336,49,1.071,52,1.447,53,2.168,54,1.071,55,0.662,58,0.089,68,1.602,79,0.953,80,2.056,81,1.605,82,1.114,83,1.114,84,1.114,86,1.922,88,1.114,89,1.891,90,1.891,91,2.569,92,2.669,93,1.071,94,1.485,95,1.48,96,1.485,98,1.485,100,2.881,105,2.755,114,1.262,115,1.694,116,1.922,117,1.602,121,1.318,122,1.485,123,0.991,124,0.472,129,1.114,130,1.67,131,1.177,132,1.114,133,2.224,134,1.114,135,1.114,136,1.03,137,1.67,138,1.03,139,1.67,140,2.056,141,1.988,142,1.03,143,1.114,144,1.03,145,1.03,146,0.53,147,2.383,148,1.03,149,1.03,150,1.535,151,1.67,152,1.03,153,0.886,154,0.991,155,2.056,156,1.114,157,1.03,158,1.03,159,1.114,160,1.03,161,1.114,162,0.991,163,0.991,164,1.03,165,1.071,166,0.991,167,1.485,168,1.378,169,0.991,170,0.991,171,0.991,172,1.114,173,1.114,189,2.07,190,2.255,194,2.255,195,2.539,196,3.235,197,3.751,198,2.733,199,3.751,200,3.751,202,2.698,203,3.593,206,3.094,208,1.52,212,1.318,213,1.799,216,1.799,222,2.502,223,3.838,264,1.694,273,1.209,325,2.404,344,1.799,392,6.489,393,5.847,394,5.174,395,5.174,396,5.174,397,5.174,398,5.174,399,6.156,400,5.174,401,6.156,402,6.156,403,5.747,404,5.747,405,2.878,406,4.04,407,3.73,408,2.878,409,2.878,410,4.314,411,2.878,412,2.878,413,2.878,414,6.156,415,4.314,416,2.878,417,5.747,418,2.878,419,4.314,420,4.314,421,2.878,422,2.878,423,2.878,424,2.878,425,1.799,426,2.502,427,2.255,428,2.502,429,2.878,430,2.878,431,2.502,432,2.255,433,2.07,434,1.922,435,2.255,436,2.878,437,2.878,438,2.878,439,2.878,440,2.878,441,2.878,442,2.878,443,2.878,444,2.878,445,4.314,446,2.878,447,2.878,448,2.878,449,2.878,450,2.878,451,2.878,452,2.878,453,2.878,454,2.878,455,2.878,456,4.314,457,4.314,458,4.314]],["title/interfaces/AnimalConfig.html",[0,0.732,328,2.485]],["body/interfaces/AnimalConfig.html",[0,0.697,1,0.971,2,1.527,3,0.131,4,0.131,5,0.116,7,0.06,8,0.505,9,1.256,10,0.48,11,0.159,12,0.015,13,0.209,14,0.009,15,0.009,24,1.078,28,0.527,34,0.309,38,0.672,43,1.811,44,1.307,47,0.331,55,0.871,58,0.162,61,1.07,101,1.816,105,1.816,117,2.108,121,1.735,124,1.236,131,1.006,141,1.124,150,1.124,185,2.768,202,2.306,212,3.252,216,2.368,227,2.655,228,2.724,229,2.724,258,2.724,268,2.368,271,2.368,272,2.368,273,1.591,274,2.53,275,2.368,292,4.361,295,2.53,302,1.882,304,2.368,311,2.001,312,2.53,316,2.724,321,2.724,322,2.743,323,4.934,324,4.361,325,2.84,326,4.934,327,2.967,328,3.778,331,4.038,344,2.368,345,2.819,346,2.53,347,4.294,348,2.53,349,2.53,350,2.368,351,2.967,352,2.001,353,4.934,354,2.967,355,2.967,356,2.967,357,2.967,358,2.967,359,2.967,360,2.967,361,2.967,362,2.967,363,4.121,364,2.967,365,2.967,366,2.967,367,3.513,368,2.967,369,2.967,370,2.967,371,2.967,372,2.967,373,2.724,374,2.967,375,2.967,376,2.967,377,2.967,378,2.967,379,2.967,380,2.967,381,2.967,382,2.967,383,4.121,384,2.967,385,4.121,386,2.967,387,4.121,388,2.967,389,2.967,390,2.967,391,2.967]],["title/classes/AnimalElements.html",[58,0.122,324,2.655]],["body/classes/AnimalElements.html",[0,0.653,1,0.91,3,0.123,4,0.123,5,0.109,7,0.056,8,0.483,9,1.177,10,0.458,11,0.135,12,0.015,13,0.202,14,0.009,15,0.009,24,1.094,26,0.642,28,0.7,31,0.631,33,0.681,34,0.518,35,0.681,37,0.614,38,0.811,40,0.925,41,0.824,43,2.009,44,1.316,47,0.327,55,0.816,58,0.155,61,1.04,101,1.701,102,1.731,105,1.701,117,1.976,121,1.626,124,1.218,131,1.213,141,1.053,150,1.053,185,2.673,202,2.782,212,3.45,216,2.219,227,2.592,228,2.553,229,4.197,233,4.37,258,3.615,268,2.219,271,2.219,272,2.219,273,1.491,274,2.371,275,2.219,292,4.238,295,2.371,302,1.798,304,2.219,311,1.875,312,2.371,316,2.553,320,1.784,321,2.553,322,2.666,323,3.615,324,4.473,325,2.492,326,3.615,327,2.781,328,3.142,331,3.942,344,2.219,345,2.258,346,2.371,347,4.193,348,2.371,349,2.371,350,2.219,351,2.781,352,1.875,353,4.197,354,2.781,355,2.781,356,4.571,357,2.781,358,2.781,359,2.781,360,2.781,361,2.781,362,3.937,363,3.937,364,2.781,365,2.781,366,3.937,367,3.357,368,2.781,369,2.781,370,2.781,371,2.781,372,2.781,373,2.553,374,2.781,375,4.571,376,2.781,377,2.781,378,4.571,379,2.781,380,2.781,381,2.781,382,2.781,383,3.937,384,2.781,385,3.937,386,2.781,387,3.937,388,2.781,389,2.781,390,2.781,391,2.781,459,5.026,460,3.549,461,5.026,462,3.549,463,3.549,464,3.549,465,3.549,466,3.549,467,3.549,468,3.549,469,3.549,470,3.549]],["title/injectables/AnimalProviderService.html",[16,0.306,406,2.485]],["body/injectables/AnimalProviderService.html",[3,0.121,4,0.121,5,0.108,7,0.055,8,0.478,9,1.919,10,0.528,11,0.154,12,0.014,13,0.121,14,0.009,15,0.009,16,0.383,18,0.897,24,1.168,26,0.635,28,0.693,31,0.639,33,0.736,34,0.515,35,0.736,37,0.77,38,0.805,40,1.161,41,1.033,43,1.993,44,1.363,47,0.32,48,0.408,52,2.5,53,2.5,54,1.85,55,0.804,56,0.897,57,0.865,58,0.108,61,1.167,68,1.947,120,1.758,121,1.602,124,0.815,141,2.112,237,3.711,264,3.407,265,2.059,266,3.057,269,3.041,282,2.187,322,2.431,323,2.515,325,2.707,326,2.515,328,4.452,330,2.74,344,2.187,347,1.947,348,2.336,349,2.336,353,2.515,406,3.11,471,6.529,472,3.041,473,5.788,474,5.032,475,5.788,476,6.304,477,4.974,478,4.974,479,6.304,480,3.498,481,4.191,482,4.452,483,4.974,484,4.974,485,4.974,486,3.498,487,4.974,488,3.498,489,3.498,490,3.322,491,3.498,492,3.498,493,4.974,494,3.498,495,2.79,496,3.498,497,2.336,498,3.041,499,2.336,500,2.059,501,2.187,502,2.74,503,3.498,504,3.498,505,3.498,506,3.498,507,3.498,508,3.041,509,3.498,510,2.515,511,3.498,512,3.498,513,3.498,514,3.041,515,3.498,516,4.974,517,3.498,518,5.788,519,3.498,520,3.498,521,3.498,522,3.498,523,3.498,524,4.324,525,3.498,526,3.498,527,4.974,528,3.498,529,3.498,530,3.498,531,3.498,532,3.498,533,3.498,534,3.498,535,3.498,536,3.498,537,3.498,538,3.498,539,3.498,540,2.515,541,3.498,542,3.498,543,3.498,544,3.498,545,3.498]],["title/components/AppComponent.html",[79,0.732,142,1.422]],["body/components/AppComponent.html",[1,1.705,3,0.158,4,0.158,5,0.141,7,0.072,8,0.574,10,0.417,11,0.106,12,0.014,13,0.158,14,0.01,15,0.01,21,1.574,31,0.395,34,0.487,40,0.841,41,0.749,47,0.283,48,0.534,49,1.7,57,1.477,58,0.141,79,1.224,80,1.635,81,2.221,82,1.769,83,1.769,84,1.769,88,1.769,91,2.72,92,2.825,93,1.7,94,2.056,95,1.707,96,2.056,98,2.056,122,2.056,129,1.769,130,2.311,131,1.271,132,1.769,133,2.729,134,1.769,135,1.769,136,1.635,137,2.311,138,1.635,139,2.311,140,1.635,141,1.356,142,2.522,143,1.769,144,1.635,145,1.635,146,0.841,147,2.831,148,1.635,149,2.379,150,1.972,151,2.311,152,2.522,153,1.406,154,2.289,155,1.635,156,1.769,157,1.635,158,1.635,159,1.769,160,1.635,161,1.769,162,1.574,163,1.574,164,1.635,165,1.7,166,1.574,167,2.056,168,1.907,169,1.574,170,1.574,171,1.574,172,1.769,173,1.769,546,3.973,547,6.649,548,5.97,549,5.97,550,6.649,551,4.57,552,2.857,553,4.57,554,3.286,555,3.973]],["title/classes/Area.html",[58,0.122,227,1.539]],["body/classes/Area.html",[1,0.933,3,0.126,4,0.126,5,0.112,7,0.094,8,0.492,9,1.207,10,0.539,11,0.175,12,0.014,13,0.126,14,0.009,15,0.009,24,1.085,26,0.654,28,0.507,31,0.667,33,0.691,34,0.483,35,0.691,37,0.784,38,0.756,39,1.904,43,2.21,44,1.245,47,0.273,55,0.837,58,0.112,61,0.596,123,2.21,124,0.596,146,0.67,175,2.062,179,0.75,180,0.837,181,1.679,185,3.423,227,2.714,231,3.389,276,2.617,288,3.164,292,2.431,301,2.026,302,1.83,304,4.503,315,4.447,320,1.829,322,2.945,352,1.922,495,1.467,556,3.164,557,2.963,558,5.915,559,5.76,560,3.703,561,3.679,562,3.416,563,5.115,564,4.515,565,4.254,566,3.416,567,4.503,568,5.115,569,3.639,570,3.639,571,3.639,572,2.142,573,3.571,574,2.851,575,2.851,576,2.851,577,3.639,578,5.115,579,3.639,580,2.973,581,3.164,582,3.198,583,3.639,584,2.026,585,2.851,586,3.639,587,2.851,588,5.915,589,3.639,590,3.639,591,3.639,592,3.639,593,3.639,594,3.639,595,3.639,596,3.639,597,3.639,598,5.115,599,2.851,600,5.115,601,2.431,602,3.164,603,3.164,604,3.164,605,4.007,606,3.639,607,3.639,608,3.639,609,2.275,610,3.639,611,3.164,612,5.115,613,3.639,614,2.617,615,3.416,616,2.851,617,2.275,618,5.115,619,2.851,620,2.431,621,3.164,622,5.143,623,2.142,624,2.617,625,2.275,626,3.639,627,3.639,628,3.164,629,5.115,630,2.851,631,3.639,632,3.639,633,3.639,634,3.639]],["title/injectables/AreaRegistryService.html",[16,0.306,237,2.34]],["body/injectables/AreaRegistryService.html",[3,0.152,4,0.152,5,0.135,7,0.07,8,0.56,9,2.304,10,0.531,11,0.172,12,0.014,13,0.152,14,0.01,15,0.01,16,0.448,18,1.129,24,1.078,26,0.744,28,0.613,31,0.654,33,0.762,34,0.533,35,0.762,37,0.712,38,0.562,39,1.306,40,1.279,41,1.139,44,1.202,47,0.307,48,0.514,54,2.167,56,1.129,57,1.089,58,0.135,131,0.842,146,0.81,175,2.348,179,0.907,180,1.012,181,1.292,202,2.553,227,2.254,237,3.428,265,3.428,266,2.325,490,2.94,495,2.8,557,3.052,567,2.752,573,3.921,615,2.94,635,2.006,636,2.752,637,4.58,638,3.242,639,4.189,640,3.867,641,3.448,642,4.402,643,4.996,644,3.827,645,5.825,646,3.449,647,2.325,648,3.076,649,2.553,650,2.325,651,4.022,652,2.325,653,2.11,654,2.94,655,3.827,656,3.428,657,2.212,658,1.704,659,3.842,660,2.45,661,2.45,662,2.591,663,2.591,664,2.591,665,3.166,666,3.449,667,2.325,668,3.166,669,2.94,670,3.449,671,3.166,672,3.449,673,3.449,674,3.166,675,3.449,676,3.449,677,2.016,678,2.752,679,4.402]],["title/injectables/AreaStateService.html",[16,0.306,643,2.859]],["body/injectables/AreaStateService.html",[3,0.143,4,0.143,5,0.127,7,0.065,8,0.536,9,2.245,10,0.509,11,0.169,12,0.014,13,0.143,14,0.01,15,0.01,16,0.43,18,1.059,24,1.1,26,0.713,31,0.655,33,0.791,34,0.553,35,0.791,37,0.864,38,0.865,39,1.225,40,1.028,41,0.915,44,1.028,47,0.288,48,0.482,54,2.076,56,1.059,57,1.022,58,0.127,102,1.922,124,0.677,131,0.79,146,1.164,175,2.25,179,0.851,180,0.95,181,1.653,227,2.738,231,3.339,265,3.285,495,2.25,557,3.055,560,3.936,567,4.234,573,3.936,617,2.582,625,2.582,635,1.922,638,3.107,640,3.107,641,3.339,643,4.014,647,2.181,648,2.948,649,2.447,650,2.181,651,3.519,652,2.181,653,1.98,656,3.285,657,2.076,658,1.599,659,3.721,660,3.107,661,3.107,662,2.431,663,2.431,664,2.431,667,4.101,676,3.236,677,1.892,680,2.582,681,4.014,682,4.014,683,4.014,684,4.547,685,5.582,686,3.236,687,4.014,688,3.236,689,2.97,690,3.236,691,3.236,692,2.97,693,2.97,694,4.523,695,2.97,696,2.431,697,3.728,698,2.759,699,2.97,700,3.236,701,1.98,702,2.97,703,2.97,704,3.236,705,3.236,706,2.97,707,3.236,708,4.13,709,4.13,710,4.13]],["title/injectables/AuthService.html",[16,0.306,711,1.998]],["body/injectables/AuthService.html",[3,0.132,4,0.132,5,0.117,7,0.06,8,0.507,10,0.665,11,0.165,12,0.014,13,0.132,14,0.009,15,0.009,16,0.406,18,0.977,24,1.121,26,0.674,28,0.735,31,0.66,33,0.764,34,0.534,35,0.764,37,0.84,38,0.674,39,1.798,43,2.087,44,0.972,47,0.316,48,0.445,55,0.876,56,0.977,57,0.942,58,0.117,61,0.993,70,4.048,95,1.089,102,1.818,106,2.314,124,1.195,163,1.818,165,2.435,273,1.6,302,1.362,311,2.011,322,2.988,619,2.983,711,2.653,712,3.311,713,5.269,714,6.061,715,5.28,716,6.061,717,3.046,718,5.28,719,4.936,720,6.061,721,3.311,722,4.75,723,5.245,724,5.28,725,5.28,726,5.69,727,3.808,728,6.061,729,3.808,730,4.59,731,3.852,732,3.808,733,2.314,734,2.653,735,3.808,736,5.28,737,3.808,738,3.808,739,3.808,740,3.808,741,3.808,742,3.808,743,3.797,744,2.543,745,3.808,746,2.983,747,2.983,748,2.983,749,2.983,750,3.808,751,2.119,752,3.311,753,3.808,754,3.808,755,3.808,756,3.808,757,3.808,758,3.808,759,2.983,760,3.808,761,3.808,762,3.311,763,3.808,764,3.311,765,3.808,766,3.311,767,3.808,768,2.011,769,3.808,770,3.808,771,3.808,772,3.808,773,3.808,774,3.808,775,2.381,776,5.28,777,3.808,778,3.808,779,3.808,780,3.808,781,3.808,782,3.311,783,3.808,784,3.808]],["title/injectables/CognitoClientService.html",[16,0.306,722,2.655]],["body/injectables/CognitoClientService.html",[3,0.131,4,0.131,5,0.116,7,0.06,10,0.745,11,0.159,12,0.014,13,0.131,14,0.009,15,0.009,16,0.404,18,0.969,26,0.671,28,0.526,31,0.592,33,0.8,34,0.579,35,0.8,37,0.797,38,0.671,41,0.619,44,1.111,47,0.292,48,0.441,56,0.969,57,0.934,58,0.116,59,1.995,61,1.193,95,1.502,115,3.552,123,1.808,124,1.216,163,1.808,167,1.301,168,1.207,179,0.778,717,3.788,722,3.507,726,3.284,730,4.565,731,4.492,733,3.303,734,3.566,743,2.717,746,2.96,747,2.96,748,2.96,749,2.96,759,2.96,768,3.188,775,3.283,785,6.169,786,2.717,787,4.565,788,5.251,789,4.565,790,3.778,791,5.671,792,3.284,793,5.251,794,4.565,795,4.691,796,3.778,797,5.251,798,3.778,799,3.778,800,6.035,801,3.778,802,4.565,803,4.929,804,3.778,805,3.778,806,3.778,807,5.251,808,3.778,809,3.284,810,3.284,811,3.778,812,3.284,813,3.778,814,3.778,815,3.778,816,6.035,817,6.035,818,3.778,819,6.035,820,3.778,821,5.247,822,6.522,823,6.035,824,3.778,825,5.247,826,5.251,827,5.251,828,3.778,829,3.778,830,3.778,831,3.778,832,3.778,833,3.507,834,3.778,835,3.778]],["title/components/CreateGamePageComponent.html",[79,0.732,144,1.422]],["body/components/CreateGamePageComponent.html",[1,0.951,3,0.06,4,0.06,5,0.053,7,0.082,8,0.277,10,0.673,11,0.16,12,0.015,13,0.06,14,0.005,15,0.005,21,0.597,24,0.974,26,0.369,28,0.402,31,0.634,33,0.642,34,0.488,35,0.642,37,0.806,38,0.702,40,1.012,41,0.901,44,0.884,47,0.303,48,0.202,49,0.645,52,0.871,55,0.399,58,0.053,61,1.06,70,4.116,79,0.682,80,0.62,81,1.074,82,0.671,83,0.671,84,0.671,88,0.671,91,2.338,92,2.429,93,0.645,94,0.994,95,1.373,96,0.994,98,0.994,106,1.265,115,2.825,122,0.994,123,1.653,124,0.901,129,0.671,130,1.117,131,0.709,132,0.671,133,1.673,134,0.671,135,0.671,136,0.62,137,1.117,138,0.62,139,1.117,140,0.62,141,0.514,142,0.62,143,0.671,144,1.547,145,2.138,146,1.485,147,1.858,148,0.62,149,0.62,150,0.514,151,1.117,152,0.62,153,0.534,154,0.597,155,0.62,156,0.671,157,0.62,158,0.62,159,0.671,160,0.62,161,0.671,162,0.597,163,0.597,164,0.62,165,0.645,166,0.597,167,0.994,168,0.922,169,0.597,170,0.597,171,1.277,172,0.671,173,0.671,179,0.357,195,1.699,196,2.318,198,1.958,203,2.702,208,0.916,241,3.601,273,0.728,322,1.557,407,3.058,433,1.247,434,1.158,435,1.358,495,2.214,510,3.109,609,1.804,620,4.48,717,3.545,733,1.625,734,3.251,751,0.965,768,2.737,775,4.123,821,3.223,825,3.223,833,3.206,836,6.422,837,6.422,838,0.871,839,3.223,840,3.707,841,3.707,842,3.707,843,3.707,844,3.707,845,3.707,846,1.958,847,3.707,848,3.707,849,3.707,850,2.182,851,3.223,852,3.707,853,3.223,854,2.904,855,1.524,856,1.524,857,3.707,858,3.707,859,3.707,860,3.707,861,3.707,862,3.707,863,3.223,864,3.707,865,4.322,866,2.509,867,2.886,868,3.109,869,2.886,870,4.322,871,4.322,872,2.886,873,4.322,874,3.758,875,2.886,876,2.886,877,4.322,878,1.734,879,2.544,880,1.777,881,1.816,882,3.707,883,4.322,884,3.435,885,2.886,886,2.886,887,2.886,888,1.734,889,3.758,890,2.886,891,1.734,892,1.734,893,2.886,894,1.734,895,1.734,896,1.734,897,2.886,898,1.734,899,1.734,900,1.507,901,1.734,902,2.886,903,1.734,904,2.886,905,1.734,906,1.734,907,1.734,908,1.734,909,1.734,910,1.734,911,2.509,912,1.734,913,4.322,914,1.734,915,2.666,916,1.734,917,3.707,918,2.666,919,2.886,920,1.734,921,2.261,922,1.247,923,1.358,924,1.734,925,1.734,926,1.734,927,0.965,928,1.734,929,0.916,930,1.734,931,1.734,932,1.507,933,1.507,934,1.358,935,1.734,936,1.734,937,0.916,938,1.734,939,1.734,940,1.734,941,1.084,942,1.734,943,1.734,944,1.734,945,1.734,946,1.734,947,1.734,948,3.707,949,1.734,950,1.507,951,1.507,952,3.707,953,2.886,954,5.182,955,2.886,956,3.707,957,4.506,958,1.734,959,3.707,960,3.707,961,2.886,962,2.261,963,2.886,964,1.734,965,1.734,966,1.734,967,1.734,968,2.886,969,4.322,970,1.734,971,3.707,972,1.734,973,2.886,974,1.734,975,1.507,976,1.734,977,2.886,978,2.886,979,4.322,980,1.734,981,1.02,982,1.734,983,1.734,984,1.734,985,1.734,986,1.084,987,1.158,988,1.734,989,1.734,990,2.886,991,1.734,992,2.886,993,1.734,994,1.734,995,1.734,996,1.734,997,1.734,998,1.734,999,4.8,1000,1.734,1001,2.886,1002,2.886,1003,2.886,1004,1.734,1005,1.734,1006,2.886,1007,2.886,1008,2.509,1009,1.734,1010,1.507,1011,1.734,1012,1.247,1013,1.734,1014,1.734,1015,2.886,1016,2.886,1017,2.509]],["title/components/DominantSpeciesGameComponent.html",[79,0.732,148,1.422]],["body/components/DominantSpeciesGameComponent.html",[1,1.481,3,0.121,4,0.121,5,0.107,7,0.055,8,0.476,10,0.526,11,0.115,12,0.014,13,0.121,14,0.008,15,0.008,21,1.199,24,1.032,26,0.633,28,0.69,31,0.574,33,0.579,34,0.513,35,0.579,37,0.705,38,0.849,40,0.641,41,0.57,47,0.309,48,0.406,49,1.295,52,1.749,53,2.491,55,0.801,58,0.107,61,0.57,68,1.937,79,1.063,80,1.245,81,1.844,82,1.347,83,1.347,84,1.347,88,1.347,91,2.638,92,2.739,93,1.295,94,1.707,95,1.418,96,1.707,98,1.707,122,1.707,129,1.347,130,1.918,131,1.104,132,1.347,133,2.435,134,1.347,135,1.347,136,1.245,137,1.918,138,1.245,139,1.918,140,1.245,141,1.033,142,1.245,143,1.347,144,1.245,145,1.245,146,1.063,147,2.573,148,2.251,149,2.544,150,2.369,151,1.918,152,2.251,153,1.525,154,1.988,155,1.245,156,1.347,157,1.245,158,1.245,159,1.347,160,1.245,161,1.347,162,1.199,163,1.199,164,1.245,165,1.295,166,1.199,167,1.707,168,1.583,169,1.199,170,1.199,171,1.199,172,1.347,173,1.347,195,2.918,196,3.609,203,3.933,206,1.749,264,2.049,279,3.026,282,2.176,552,2.176,554,2.503,555,3.026,717,2.901,734,2.491,768,1.838,839,5.019,874,5.469,880,2.767,881,2.642,884,4.445,921,2.727,923,2.727,1012,2.503,1018,6.008,1019,6.008,1020,2.727,1021,5.773,1022,4.31,1023,4.31,1024,6.648,1025,4.31,1026,3.481,1027,6.291,1028,5.114,1029,4.957,1030,4.957,1031,4.31,1032,3.481,1033,2.767,1034,3.481,1035,3.481,1036,4.957,1037,3.481,1038,3.481,1039,3.481,1040,3.481,1041,3.481,1042,3.481,1043,3.481,1044,3.481,1045,3.481,1046,3.481,1047,3.481]],["title/components/DrawPoolGameComponent.html",[79,0.732,152,1.422]],["body/components/DrawPoolGameComponent.html",[1,1.885,3,0.098,4,0.098,5,0.087,7,0.045,8,0.408,10,0.387,11,0.141,12,0.014,13,0.098,14,0.007,15,0.007,21,1.76,24,0.931,26,0.543,28,0.591,30,4.16,31,0.575,33,0.329,34,0.417,35,0.329,37,0.519,38,0.653,40,1.047,41,1.123,47,0.332,48,0.329,49,1.049,50,2.208,52,1.417,53,2.134,55,0.648,58,0.087,61,1,68,1.569,79,0.941,80,2.035,81,1.58,82,1.091,83,1.091,84,1.091,86,1.883,88,1.091,91,2.561,92,2.66,93,1.049,94,1.462,95,1.215,96,1.462,98,1.462,101,2.449,106,3.002,121,1.291,122,1.462,123,1.462,129,1.091,130,1.644,131,1.087,132,1.091,133,2.201,134,1.091,135,1.091,136,1.009,137,1.644,138,2.035,139,1.644,140,2.035,141,1.516,142,1.009,143,1.091,144,1.009,145,1.009,146,0.941,147,2.361,148,1.009,149,1.009,150,0.836,151,1.644,152,2.035,153,2.048,154,2.721,155,2.035,156,1.091,157,2.035,158,2.035,159,1.091,160,1.009,161,1.091,162,0.971,163,0.971,164,1.009,165,1.049,166,0.971,167,1.462,168,1.356,169,0.971,170,0.971,171,0.971,172,1.091,173,1.091,189,2.027,190,2.208,192,3.054,193,2.208,195,2.5,196,3.194,203,3.556,209,2.027,210,2.451,214,2.451,223,2.836,227,1.978,237,3.917,264,3.348,265,1.659,266,2.243,268,1.762,270,1.883,272,1.762,273,1.184,282,1.762,284,2.451,325,2.548,344,1.762,393,2.208,406,4.16,407,3.704,431,2.451,432,2.208,434,1.883,481,3.348,500,1.659,514,2.451,540,3.054,554,4.926,677,1.291,701,2.726,846,2.699,854,4.003,929,1.489,934,2.208,1020,2.208,1022,3.692,1023,3.692,1048,5.955,1049,5.11,1050,5.11,1051,6.101,1052,5.11,1053,5.687,1054,2.451,1055,5.11,1056,4.247,1057,3.692,1058,2.819,1059,2.819,1060,2.819,1061,2.819,1062,2.819,1063,1.351,1064,4.247,1065,2.819,1066,2.208,1067,2.819,1068,2.819,1069,2.819,1070,2.819,1071,2.819,1072,2.208,1073,2.819,1074,2.819,1075,2.819,1076,2.819,1077,2.819,1078,2.819,1079,2.819,1080,2.819,1081,2.819,1082,2.819,1083,2.819,1084,2.819,1085,2.819,1086,2.819,1087,2.819,1088,2.819,1089,4.247]],["title/components/ElementComponent.html",[79,0.732,155,1.422]],["body/components/ElementComponent.html",[1,1.633,3,0.145,4,0.145,5,0.129,7,0.066,10,0.581,11,0.097,12,0.014,13,0.145,14,0.01,15,0.01,21,1.443,31,0.588,34,0.58,40,0.771,41,0.687,47,0.29,48,0.489,49,1.559,58,0.129,79,1.173,80,1.499,81,2.097,82,1.622,83,1.622,84,1.622,88,1.622,89,2.471,90,2.471,91,2.696,92,2.8,93,1.559,94,1.941,95,1.612,96,1.941,98,1.941,100,3.764,102,1.941,104,4.58,106,3.333,110,3.014,112,3.014,114,1.837,115,3.318,118,2.62,119,3.014,120,2.106,121,1.919,122,1.443,124,1.116,128,3.014,129,1.622,130,2.182,131,1.454,132,1.622,133,2.636,134,1.622,135,1.622,136,1.499,137,2.182,138,1.499,139,2.182,140,1.499,141,1.243,142,1.499,143,1.622,144,1.499,145,1.499,146,0.771,147,2.751,148,1.499,149,1.499,150,1.243,151,2.182,152,1.499,153,1.29,154,1.443,155,2.437,156,1.622,157,1.499,158,1.499,159,1.622,160,1.499,161,1.622,162,1.443,163,1.443,164,1.499,165,1.559,166,1.443,167,1.941,168,1.8,169,1.443,170,1.443,171,1.443,172,1.622,173,1.622,212,2.917,213,2.62,580,3.201,1090,3.643,1091,5.637,1092,5.637,1093,4.19,1094,4.19,1095,4.19,1096,4.19,1097,4.19,1098,4.19,1099,4.19,1100,4.9]],["title/interfaces/ElementConfig.html",[0,0.732,347,2.213]],["body/interfaces/ElementConfig.html",[0,0.925,2,2.025,3,0.174,4,0.174,5,0.155,7,0.079,8,0.61,11,0.161,12,0.014,13,0.22,14,0.011,15,0.011,44,0.925,47,0.296,54,1.869,61,1.04,241,3.871,270,3.356,347,3.532,499,3.356,580,4.038,1101,3.936,1102,3.936,1103,5.89,1104,6.985,1105,5.253,1106,3.936,1107,5.025,1108,5.025,1109,3.356,1110,4.369,1111,3.936,1112,3.936,1113,4.369,1114,4.369,1115,4.369,1116,3.936,1117,4.369,1118,5.901,1119,4.369,1120,3.936,1121,4.369,1122,4.369,1123,3.936,1124,4.369,1125,4.369,1126,3.936,1127,4.369,1128,4.369,1129,3.936,1130,4.369,1131,4.369]],["title/injectables/ElementDrawPoolService.html",[16,0.306,238,2.655]],["body/injectables/ElementDrawPoolService.html",[3,0.134,4,0.134,5,0.119,7,0.061,8,0.514,11,0.166,12,0.014,13,0.134,14,0.009,15,0.009,16,0.412,18,0.996,23,4.898,24,1.143,25,4.405,26,0.684,28,0.541,31,0.663,33,0.715,34,0.5,35,0.715,37,0.748,38,0.843,39,1.958,40,1.275,41,1.135,42,3.85,43,2.109,44,1.128,47,0.312,48,0.454,52,1.952,53,2.69,55,0.894,56,0.996,57,0.961,58,0.119,59,2.052,68,2.162,95,1.111,102,1.843,106,2.893,123,1.338,124,1.082,153,2.385,176,2.69,179,0.8,180,0.894,181,0.861,212,3.278,213,2.429,231,3.486,238,3.575,241,2.98,264,2.287,266,2.052,276,2.794,282,2.429,302,1.39,345,2.555,346,2.595,482,4.127,501,2.429,775,3.347,918,4.405,941,3.347,1132,6.738,1133,3.378,1134,6.125,1135,4.194,1136,4.194,1137,5.325,1138,3.885,1139,5.353,1140,5.353,1141,3.885,1142,5.353,1143,3.885,1144,3.043,1145,4.194,1146,3.885,1147,3.043,1148,3.885,1149,3.885,1150,5.353,1151,3.885,1152,3.885,1153,3.885,1154,3.043,1155,3.885,1156,3.043,1157,3.885,1158,3.885,1159,3.885,1160,3.885,1161,6.601,1162,3.885,1163,3.885,1164,3.885,1165,3.885,1166,3.885,1167,3.885,1168,3.885,1169,3.885]],["title/interfaces/ElementPiece.html",[0,0.732,212,1.821]],["body/interfaces/ElementPiece.html",[0,1.093,2,2.393,3,0.206,4,0.206,5,0.183,7,0.094,8,0.675,11,0.138,12,0.014,13,0.206,14,0.012,15,0.012,47,0.299,103,4.306,123,2.044,175,2.832,176,3.762,179,1.223,180,1.366,181,1.317,212,3.218,580,3.888,1105,5.564,1170,5.162,1171,5.937]],["title/components/ElementSpaceComponent.html",[79,0.732,157,1.422]],["body/components/ElementSpaceComponent.html",[1,1.637,3,0.146,4,0.146,5,0.129,7,0.067,10,0.384,11,0.098,12,0.014,13,0.146,14,0.01,15,0.01,21,1.449,31,0.488,34,0.461,40,0.775,41,0.69,47,0.303,48,0.491,49,1.566,58,0.129,79,1.175,80,1.506,81,2.103,82,1.629,83,1.629,84,1.629,85,3.991,88,1.629,89,2.478,90,2.478,91,2.697,92,2.801,93,1.566,94,1.947,95,1.617,96,1.947,98,1.947,100,3.776,102,1.947,104,4.591,112,3.027,114,1.845,115,3.327,118,2.631,119,3.027,120,2.115,121,1.928,122,1.947,123,2.35,124,0.69,128,3.027,129,1.629,130,2.188,131,1.531,132,1.629,133,2.641,134,1.629,135,1.629,136,1.506,137,2.188,138,1.506,139,2.188,140,1.506,141,1.249,142,1.506,143,1.629,144,1.506,145,1.506,146,0.775,147,2.755,148,1.506,149,1.506,150,1.249,151,2.188,152,1.506,153,1.295,154,1.449,155,2.442,156,1.629,157,2.442,158,1.506,159,1.629,160,1.506,161,1.629,162,1.449,163,1.449,164,1.506,165,1.566,166,1.449,167,1.947,168,1.806,169,1.449,170,1.449,171,1.449,172,1.629,173,1.629,184,3.297,185,2.589,186,4.915,187,4.915,188,3.659,189,3.027,209,4.591,212,2.924,213,2.631,367,2.811,1066,5.001,1172,4.209]],["title/components/EyeballComponent.html",[79,0.732,158,1.422]],["body/components/EyeballComponent.html",[1,1.71,3,0.159,4,0.159,5,0.141,7,0.073,10,0.419,12,0.014,13,0.159,14,0.01,15,0.01,21,1.584,31,0.397,34,0.489,47,0.284,48,0.537,49,1.711,58,0.141,79,1.228,80,1.646,81,2.23,82,1.78,83,1.78,84,1.78,85,3.748,88,1.78,89,2.628,90,2.628,91,2.722,92,2.827,93,1.711,94,2.064,95,1.714,96,2.064,98,2.064,102,2.064,104,4.796,112,3.308,114,2.016,118,2.875,119,3.308,120,2.311,121,2.106,122,1.584,124,0.754,128,3.308,129,1.78,130,2.32,131,1.275,132,1.78,133,2.735,134,1.78,135,1.78,136,1.646,137,2.32,138,1.646,139,2.32,140,1.646,141,1.364,142,1.646,143,1.78,144,1.646,145,1.646,146,0.847,147,2.837,148,1.646,149,1.646,150,1.364,151,2.32,152,1.646,153,1.415,154,1.584,155,1.646,156,1.78,157,1.646,158,2.529,159,1.78,160,1.646,161,1.78,162,1.584,163,1.584,164,1.646,165,1.711,166,1.584,167,2.064,168,1.915,169,1.584,170,1.584,171,1.584,172,1.78,173,1.78,1173,3.999,1174,5.798,1175,5.995,1176,5.995,1177,4.599]],["title/classes/Faction.html",[58,0.122,325,1.479]],["body/classes/Faction.html",[3,0.152,4,0.152,5,0.135,7,0.069,8,0.559,10,0.53,11,0.175,12,0.014,13,0.152,14,0.01,15,0.01,26,0.743,31,0.683,33,0.81,34,0.618,35,0.81,37,0.882,38,0.982,39,1.302,43,1.511,47,0.247,58,0.135,102,2.002,110,3.156,124,1.068,146,0.808,175,2.343,179,0.904,180,1.009,181,1.601,241,4.37,320,2.206,325,2.162,352,2.318,495,1.769,557,3.097,560,3.918,561,4.181,562,3.882,564,3.882,565,4.688,572,3.837,573,3.813,574,3.438,575,3.438,576,3.438,582,2.744,584,2.443,585,3.438,614,3.156,623,2.583,624,3.156,981,2.583,1178,3.816,1179,5.813,1180,5.813,1181,5.813,1182,4.688,1183,5.667,1184,5.813,1185,4.389,1186,7.418,1187,5.813,1188,4.389,1189,5.813,1190,4.389,1191,4.389,1192,3.816,1193,3.438,1194,3.816,1195,2.104,1196,4.389,1197,4.389,1198,4.389,1199,4.389,1200,4.389,1201,2.744,1202,4.389,1203,4.389,1204,6.939,1205,5.106]],["title/interfaces/FactionAssignment.html",[0,0.732,1206,2.859]],["body/interfaces/FactionAssignment.html",[0,0.927,2,2.029,3,0.174,4,0.174,5,0.155,7,0.08,8,0.61,10,0.702,11,0.147,12,0.014,13,0.22,14,0.011,15,0.011,16,0.489,24,0.922,38,0.643,39,1.884,43,2.187,44,0.927,47,0.327,48,0.588,55,1.158,56,1.291,57,1.245,58,0.155,61,0.825,131,0.962,146,0.927,175,2.029,179,1.037,180,1.158,181,1.116,202,2.784,266,2.659,325,2.719,481,2.963,500,2.963,540,3.62,601,3.362,635,1.733,636,3.147,637,3.739,654,3.362,677,2.305,678,3.147,1072,3.943,1182,5.42,1201,3.147,1206,5.42,1207,6.552,1208,3.62,1209,4.242,1210,4.376,1211,4.376,1212,4.376,1213,4.376,1214,4.376,1215,3.943,1216,3.943,1217,4.376,1218,4.376,1219,4.376,1220,4.376]],["title/injectables/FactionRegistryService.html",[16,0.306,481,2.34]],["body/injectables/FactionRegistryService.html",[0,0.728,3,0.137,4,0.137,5,0.122,7,0.063,8,0.521,9,2.205,10,0.606,11,0.174,12,0.014,13,0.188,14,0.009,15,0.009,16,0.417,18,1.014,24,1.138,26,0.692,28,0.551,31,0.665,33,0.722,34,0.505,35,0.722,37,0.662,38,0.692,39,1.973,40,1.356,41,1.208,43,2.129,44,1.283,47,0.306,48,0.462,54,2.016,55,0.909,56,1.014,57,0.978,58,0.122,61,0.648,131,0.756,146,0.728,175,2.184,179,0.815,180,0.909,181,0.877,202,2.71,266,2.089,325,2.791,481,3.19,490,2.641,495,2.492,500,4.101,540,2.844,557,2.492,573,3.8,601,2.641,635,2.399,636,2.472,637,4.48,638,3.016,639,3.897,640,3.702,641,2.862,646,3.098,647,2.089,648,2.089,649,1.733,650,2.089,651,2.201,652,2.089,653,1.895,654,3.619,670,3.098,671,2.844,672,3.098,673,3.098,674,2.844,675,3.098,677,1.811,678,2.472,1072,3.098,1182,3.897,1201,2.472,1206,5.474,1207,4.711,1208,2.844,1209,4.442,1210,5.375,1211,4.711,1212,4.711,1213,4.711,1214,3.438,1215,3.098,1216,3.098,1217,3.438,1218,3.438,1219,3.438,1220,3.438,1221,3.954,1222,3.954,1223,3.954,1224,3.954,1225,3.954,1226,3.954]],["title/injectables/FactionStateService.html",[16,0.306,1209,2.655]],["body/injectables/FactionStateService.html",[3,0.143,4,0.143,5,0.127,7,0.065,8,0.536,9,2.245,10,0.509,11,0.169,12,0.014,13,0.143,14,0.01,15,0.01,16,0.43,18,1.059,24,1.1,26,0.713,31,0.655,33,0.791,34,0.553,35,0.791,37,0.864,38,0.865,39,1.225,40,1.028,41,0.915,44,1.028,47,0.288,48,0.482,54,2.076,56,1.059,57,1.022,58,0.127,102,1.922,124,0.677,131,0.79,146,1.164,175,2.25,179,0.851,180,0.95,181,1.653,231,3.339,325,2.631,495,2.25,500,3.285,557,3.055,560,3.936,573,3.936,617,2.582,625,2.582,635,1.922,638,3.107,640,3.107,641,3.339,647,2.181,648,2.948,649,2.447,650,2.181,651,3.519,652,2.181,653,1.98,656,3.285,657,2.076,658,1.599,659,3.721,660,3.107,661,3.107,662,2.431,663,2.431,664,2.431,667,4.101,677,1.892,680,2.582,681,4.014,682,4.014,683,4.014,684,4.547,686,3.236,687,4.014,688,3.236,689,2.97,690,3.236,691,3.236,692,2.97,693,2.97,694,4.523,695,2.97,696,2.431,697,3.728,698,2.759,699,2.97,700,3.236,701,1.98,702,2.97,703,2.97,704,3.236,705,3.236,706,2.97,707,3.236,1201,4.234,1208,2.97,1209,3.728,1227,5.582,1228,4.13,1229,4.13,1230,4.13]],["title/classes/GameElement.html",[58,0.122,557,1.602]],["body/classes/GameElement.html",[3,0.153,4,0.153,5,0.136,7,0.07,8,0.561,9,2.308,10,0.403,11,0.168,12,0.014,13,0.153,14,0.01,15,0.01,26,0.746,28,0.616,31,0.665,33,0.682,34,0.477,35,0.682,37,0.714,38,0.836,39,1.941,43,2.253,44,1.076,47,0.278,55,1.017,58,0.136,102,2.012,124,0.958,179,0.911,180,1.017,181,1.779,302,1.582,320,2.223,335,3.845,495,2.355,557,2.355,560,4.113,561,4.705,562,4.37,564,3.902,565,5.006,566,3.902,572,4.628,582,3.653,584,3.642,599,3.465,602,3.845,603,3.845,605,3.465,614,4.202,623,3.439,624,4.202,696,2.603,981,3.439,1192,5.08,1193,4.577,1194,5.08,1195,2.8,1231,4.869,1232,3.845,1233,5.843,1234,4.422,1235,4.422,1236,4.422,1237,4.422,1238,4.422,1239,3.845,1240,4.422,1241,2.765,1242,2.603,1243,2.603,1244,2.603,1245,5.843,1246,3.845,1247,4.422,1248,3.845,1249,3.845,1250,4.422,1251,4.422,1252,2.765,1253,4.422,1254,4.422,1255,3.845]],["title/injectables/GameElementRegistryService.html",[16,0.306,637,2.34]],["body/injectables/GameElementRegistryService.html",[3,0.108,4,0.108,5,0.096,7,0.049,8,0.439,9,2.533,10,0.494,11,0.163,12,0.014,13,0.108,14,0.008,15,0.008,16,0.352,18,0.797,24,1.044,26,0.762,28,0.433,31,0.593,33,0.632,34,0.442,35,0.632,37,0.662,38,0.583,39,1.606,40,1.099,41,0.978,43,1.07,44,1.265,47,0.283,48,0.363,54,2.22,55,0.715,56,0.797,57,0.769,58,0.166,61,0.509,120,1.562,124,0.509,131,1.398,146,0.572,175,1.253,179,0.64,180,0.715,181,1.323,202,2.914,223,3.05,302,1.112,352,1.642,490,3.05,495,2.947,557,3.248,560,2.412,615,3.05,635,2.427,636,1.943,637,2.688,638,3.014,639,3.894,640,3.7,641,3.152,647,2.412,648,3.916,649,2.373,650,3.152,651,4.004,652,2.412,653,2.595,654,3.05,656,3.512,657,2.295,658,1.768,659,4.304,660,3.322,661,2.542,662,2.688,663,2.688,664,2.688,665,3.285,666,4.675,667,3.629,668,4.572,669,3.05,671,3.285,674,3.285,677,1.424,678,1.943,694,3.05,696,2.688,697,3.05,701,2.189,751,1.73,981,2.688,986,2.855,1215,2.435,1216,2.435,1252,2.855,1256,5.522,1257,4.707,1258,3.971,1259,3.971,1260,3.971,1261,4.567,1262,4.567,1263,3.578,1264,4.567,1265,4.567,1266,4.567,1267,4.567,1268,3.971,1269,3.578,1270,5.527,1271,4.567,1272,4.567,1273,3.971,1274,3.108,1275,6.357,1276,4.567,1277,4.567,1278,3.108,1279,3.108,1280,3.108,1281,3.108,1282,3.108,1283,2.235,1284,4.707,1285,2.703,1286,3.971,1287,3.971,1288,1.943,1289,3.578,1290,2.703,1291,2.435,1292,3.108,1293,2.703,1294,2.703,1295,2.703,1296,3.108,1297,2.703,1298,3.108,1299,3.108]],["title/injectables/GameElementStateService.html",[16,0.306,667,2.1]],["body/injectables/GameElementStateService.html",[3,0.086,4,0.086,5,0.077,7,0.039,8,0.371,9,2.369,10,0.432,11,0.163,12,0.014,13,0.086,14,0.007,15,0.007,16,0.297,18,0.639,24,1.037,26,0.681,28,0.347,31,0.584,33,0.674,34,0.471,35,0.674,37,0.779,38,0.841,39,2.006,40,0.711,41,0.633,44,1.173,47,0.26,48,0.291,54,1.984,55,0.573,56,0.639,57,0.616,58,0.146,61,0.408,102,1.331,120,1.252,124,0.408,131,1.4,146,1.333,179,0.513,180,0.573,181,1.783,231,2.817,276,1.792,302,0.892,352,1.316,495,2.15,510,2.779,557,3.277,560,3.366,617,3.335,625,3.335,635,2.38,638,2.635,640,2.635,641,3.226,647,2.041,648,3.366,649,2.531,650,2.041,651,3.846,652,2.041,653,2.269,656,3.595,657,1.942,658,1.496,659,4.392,660,3.4,661,3.666,662,2.275,663,2.275,664,2.275,665,3.836,667,2.041,668,2.779,677,1.141,678,1.558,680,1.558,681,2.779,682,2.779,683,2.779,684,3.405,687,2.779,689,2.779,692,2.779,693,3.836,694,5.215,695,1.792,696,4.142,697,4.615,698,4.08,699,2.779,701,3.51,702,2.779,703,2.779,706,1.792,751,1.387,981,2.275,986,2.416,1054,2.166,1057,3.36,1063,1.194,1252,3.335,1256,5.414,1257,6.008,1258,3.36,1259,3.36,1260,3.36,1268,5.726,1269,3.028,1270,5.311,1273,3.36,1283,1.792,1284,3.36,1285,2.166,1286,3.36,1287,3.36,1289,3.028,1290,2.166,1291,1.952,1293,2.166,1294,2.166,1295,2.166,1297,2.166,1300,3.865,1301,5.334,1302,3.865,1303,3.865,1304,4.638,1305,6.108,1306,3.36,1307,3.865,1308,2.492,1309,2.492,1310,2.492,1311,3.865,1312,2.492,1313,2.492,1314,2.492,1315,2.492,1316,2.492,1317,3.865,1318,3.865,1319,2.492,1320,2.492,1321,2.492,1322,2.492,1323,2.492,1324,2.492,1325,2.492,1326,2.492,1327,2.492,1328,2.492,1329,2.492,1330,2.492,1331,2.492]],["title/classes/GameElementStatesFactoryService.html",[58,0.122,1332,2.655]],["body/classes/GameElementStatesFactoryService.html",[3,0.124,4,0.124,5,0.11,7,0.08,8,0.485,9,1.186,10,0.653,11,0.148,12,0.014,13,0.124,14,0.009,15,0.009,16,0.275,24,1.118,26,0.645,28,0.816,31,0.632,33,0.59,34,0.478,35,0.59,37,0.821,38,0.813,44,1.172,47,0.335,58,0.11,61,1.143,120,1.797,121,1.638,124,0.96,131,1.459,178,2.801,179,0.737,180,0.822,181,1.12,185,1.638,195,2.974,227,2.464,231,1.889,268,2.236,271,2.236,272,2.236,274,2.388,301,2.812,302,1.808,304,3.663,308,4.393,310,3.109,311,1.889,312,2.388,320,1.797,322,2.461,330,2.801,345,2.6,346,2.388,347,1.99,348,2.388,349,2.388,425,2.236,426,3.109,427,2.801,428,3.109,497,2.388,498,3.109,499,2.388,510,2.572,524,3.109,559,3.958,567,3.159,614,2.572,616,2.801,889,3.109,986,4.653,987,2.388,1109,2.388,1137,3.109,1182,2.572,1183,3.109,1241,2.236,1242,2.105,1243,2.105,1244,2.105,1332,3.374,1333,5.831,1334,3.109,1335,4.214,1336,5.859,1337,5.426,1338,3.374,1339,6.367,1340,6.367,1341,6.367,1342,5.052,1343,5.052,1344,3.576,1345,4.393,1346,3.576,1347,2.669,1348,3.576,1349,3.576,1350,3.576,1351,5.052,1352,3.576,1353,2.974,1354,3.576,1355,3.576,1356,3.109,1357,2.572,1358,3.576,1359,2.801,1360,2.801,1361,2.801,1362,2.801,1363,3.576,1364,3.576,1365,3.576,1366,2.388,1367,5.052,1368,3.109,1369,3.576,1370,3.576,1371,3.576,1372,3.576,1373,3.576,1374,3.576,1375,3.576,1376,5.052,1377,3.576,1378,3.576,1379,3.576,1380,3.576,1381,3.109,1382,3.576,1383,3.576,1384,3.576,1385,3.576,1386,5.859,1387,3.576,1388,3.576,1389,3.576,1390,3.576,1391,3.576,1392,3.576]],["title/injectables/GameManagementClientService.html",[16,0.306,1393,2.655]],["body/injectables/GameManagementClientService.html",[3,0.122,4,0.122,5,0.109,7,0.056,10,0.701,11,0.169,12,0.014,13,0.122,14,0.009,15,0.009,16,0.386,18,0.906,24,0.727,26,0.64,28,0.697,31,0.65,33,0.852,34,0.595,35,0.852,37,0.907,47,0.304,48,0.412,55,0.812,56,0.906,57,0.874,58,0.109,61,0.821,95,1.01,124,1.096,146,1.278,179,1.199,180,1.152,181,0.783,620,4.465,635,2.621,711,3.589,717,4.107,733,2.93,734,4.006,768,3.92,786,2.54,868,3.602,922,2.54,1017,3.071,1033,2.401,1195,3.328,1393,3.345,1394,6.618,1395,5.084,1396,3.924,1397,4.355,1398,5.505,1399,5.009,1400,5.505,1401,5.009,1402,5.009,1403,5.009,1404,3.532,1405,6.332,1406,3.532,1407,5.009,1408,3.924,1409,3.532,1410,5.009,1411,3.532,1412,4.355,1413,3.532,1414,3.532,1415,5.009,1416,3.532,1417,3.532,1418,5.009,1419,3.532,1420,5.009,1421,3.532,1422,5.009,1423,3.532,1424,3.532,1425,2.54,1426,5.009,1427,5.819,1428,4.355,1429,3.532,1430,3.532,1431,5.009,1432,3.071,1433,3.532,1434,3.532,1435,3.532,1436,3.532,1437,3.532,1438,3.532,1439,3.532,1440,3.532,1441,3.532,1442,3.532,1443,3.532]],["title/injectables/GameReadyService.html",[16,0.306,1028,2.859]],["body/injectables/GameReadyService.html",[1,0.994,3,0.134,4,0.134,5,0.119,7,0.061,8,0.513,11,0.153,12,0.014,13,0.134,14,0.009,15,0.009,16,0.411,17,5.27,18,0.994,20,3.035,21,1.334,23,4.403,24,1.178,25,4.399,26,0.683,27,5.732,28,0.744,31,0.633,33,0.452,34,0.316,35,0.452,37,0.747,38,0.683,39,2.174,40,1.126,41,1.002,42,3.843,43,2.106,44,1.214,45,5.165,47,0.312,48,0.452,51,3.369,52,1.947,53,2.685,54,1.441,55,0.891,56,0.994,57,0.958,58,0.119,60,3.369,61,1.134,64,3.369,67,3.369,68,2.157,69,3.369,70,2.588,71,3.369,72,3.369,73,3.369,74,3.369,75,3.369,124,0.876,131,0.741,141,1.149,153,1.192,238,4.894,264,3.145,267,3.369,277,3.369,406,4.581,407,4.079,432,3.035,434,2.588,677,1.775,701,3.428,863,5.318,915,4.399,950,3.369,951,3.369,1028,3.843,1063,1.857,1333,5.849,1444,3.369,1445,6.593,1446,6.593,1447,3.874,1448,5.343,1449,3.874,1450,3.874,1451,3.874,1452,3.874,1453,3.874,1454,3.874,1455,3.369,1456,3.874,1457,3.874,1458,4.186,1459,3.874,1460,3.874,1461,3.874,1462,3.874,1463,3.874,1464,3.874,1465,3.874,1466,3.874,1467,3.874,1468,3.874,1469,3.874,1470,3.874,1471,3.874,1472,3.874,1473,3.874]],["title/injectables/GameService.html",[16,0.306,884,2.485]],["body/injectables/GameService.html",[3,0.123,4,0.123,5,0.109,7,0.056,9,1.177,10,0.701,11,0.155,12,0.014,13,0.123,14,0.009,15,0.009,16,0.387,18,0.91,24,1.061,26,0.642,28,0.7,31,0.617,33,0.782,34,0.547,35,0.782,37,0.85,38,0.642,47,0.334,48,0.414,56,0.91,57,0.878,58,0.109,61,1.04,124,0.582,146,1.345,179,0.731,180,0.816,181,0.787,227,1.374,237,4.209,265,2.089,266,3.082,325,1.32,345,1.374,481,4.209,482,4.471,500,2.089,501,2.219,635,2.516,676,2.781,677,1.626,701,3.428,711,3.594,717,3.95,734,3.786,744,2.371,768,3.673,868,3.615,880,2.409,881,2.666,884,3.142,1010,4.37,1025,4.37,1031,4.37,1033,3.502,1063,2.409,1195,1.701,1208,2.553,1347,3.352,1362,2.781,1366,4.776,1393,4.776,1395,2.371,1396,3.937,1398,5.517,1408,3.937,1425,2.553,1432,4.37,1474,3.086,1475,6.346,1476,4.37,1477,3.549,1478,3.549,1479,3.549,1480,3.549,1481,5.026,1482,3.549,1483,3.549,1484,3.549,1485,4.37,1486,3.549,1487,5.026,1488,3.086,1489,3.549,1490,2.553,1491,3.086,1492,2.781,1493,3.549,1494,3.549,1495,3.086,1496,3.549,1497,3.549,1498,2.781,1499,3.549,1500,3.549,1501,3.549,1502,3.549,1503,3.549,1504,3.549,1505,3.549,1506,3.549,1507,3.549,1508,3.549,1509,3.549,1510,3.549,1511,3.549,1512,3.549,1513,3.549,1514,3.549,1515,3.549]],["title/injectables/GameStateClientService.html",[16,0.306,1516,2.859]],["body/injectables/GameStateClientService.html",[3,0.14,4,0.14,5,0.125,7,0.064,8,0.53,10,0.571,11,0.163,12,0.014,13,0.14,14,0.009,15,0.009,16,0.424,18,1.04,24,1.111,26,0.704,28,0.565,31,0.652,33,0.731,34,0.511,35,0.731,37,0.765,38,0.898,40,1.237,41,1.101,44,1.153,47,0.321,48,0.473,53,2.038,55,0.933,56,1.04,57,1.003,58,0.125,59,2.142,61,0.665,106,3.308,179,0.835,180,0.933,181,1.716,273,1.703,302,1.451,623,3.956,635,2.635,711,3.644,719,2.535,751,2.257,786,2.916,792,4.793,809,3.525,810,3.525,915,4.504,1008,3.525,1033,1.943,1063,3.668,1425,2.916,1516,3.964,1517,6.263,1518,7.25,1519,6.263,1520,6.263,1521,6.72,1522,5.512,1523,3.176,1524,5.512,1525,4.055,1526,4.055,1527,5.512,1528,5.265,1529,4.055,1530,5.512,1531,5.445,1532,4.055,1533,4.055,1534,4.055,1535,4.055,1536,4.055,1537,5.512,1538,4.055,1539,4.055,1540,5.512,1541,4.055,1542,4.055,1543,4.055,1544,3.525,1545,4.055,1546,4.055,1547,4.055,1548,4.055,1549,4.055,1550,4.055,1551,4.055,1552,4.055,1553,4.055,1554,3.525]],["title/injectables/GameStateInitializationService.html",[16,0.306,1366,2.655]],["body/injectables/GameStateInitializationService.html",[3,0.159,4,0.159,5,0.141,7,0.073,8,0.576,10,0.715,11,0.155,12,0.014,13,0.159,14,0.01,15,0.01,16,0.461,18,1.18,24,0.968,26,0.766,28,0.835,31,0.576,33,0.7,34,0.489,35,0.825,37,0.562,44,1.228,47,0.312,48,0.537,54,2.796,56,1.18,57,1.138,58,0.141,61,1.158,123,2.297,124,0.754,131,0.879,179,0.947,180,1.058,181,1.666,302,1.646,322,2.802,635,2.433,986,2.875,1033,3.197,1063,3.387,1195,3.513,1283,3.308,1332,4.004,1338,4.454,1347,3.733,1359,3.603,1362,3.603,1366,4.004,1490,4.796,1491,3.999,1498,3.603,1555,3.603,1556,6.669,1557,4.599,1558,5.995,1559,6.669,1560,5.995,1561,4.599,1562,4.599,1563,3.308,1564,3.308,1565,4.599,1566,4.599,1567,4.696,1568,4.599,1569,4.599,1570,3.603,1571,6.669,1572,4.599,1573,4.599,1574,4.599,1575,4.599,1576,4.599,1577,3.999]],["title/injectables/GameStatePatchService.html",[16,0.306,1578,2.859]],["body/injectables/GameStatePatchService.html",[3,0.171,4,0.171,5,0.152,7,0.078,11,0.145,12,0.014,13,0.171,14,0.011,15,0.011,16,0.483,18,1.264,26,0.801,31,0.541,33,0.732,34,0.512,35,0.732,37,0.766,47,0.293,48,0.576,56,1.264,57,1.219,58,0.152,61,0.808,106,2.161,124,1.028,145,2.243,179,1.016,180,1.134,181,1.609,584,4.169,623,4.057,635,2.374,649,2.161,775,3.082,941,3.082,1033,2.363,1063,3.304,1195,3.902,1241,3.082,1242,2.902,1243,2.902,1244,3.69,1528,5.997,1578,4.508,1579,4.286,1580,5.45,1581,6.269,1582,6.269,1583,6.269,1584,6.269,1585,4.93,1586,6.269,1587,6.269,1588,4.93,1589,6.269,1590,4.93,1591,4.93,1592,3.862,1593,4.93,1594,4.93,1595,6.269,1596,4.93,1597,4.93,1598,4.93,1599,4.93,1600,4.93,1601,4.93]],["title/injectables/GameStateService.html",[16,0.306,701,1.906]],["body/injectables/GameStateService.html",[0,0.822,3,0.104,4,0.104,5,0.093,7,0.048,10,0.275,11,0.165,12,0.014,13,0.104,14,0.008,15,0.008,16,0.344,18,0.773,24,0.954,26,0.57,28,0.622,31,0.674,33,0.833,34,0.582,35,0.833,37,0.92,38,1.026,39,1.744,44,0.822,47,0.289,48,0.352,55,0.693,56,0.773,57,0.745,58,0.093,61,0.494,102,1.537,106,1.321,124,0.964,146,0.979,179,0.621,180,0.693,181,1.549,227,2.058,273,1.266,302,2.104,306,3.498,311,1.592,325,1.978,345,2.058,567,4.253,584,3.659,617,2.791,623,3.13,635,2.7,649,1.321,680,1.884,701,2.818,744,2.013,751,1.678,833,2.982,1063,3.758,1195,3.261,1201,4.253,1263,3.498,1306,3.882,1347,2.809,1353,4.004,1516,4.228,1528,4.606,1578,4.228,1602,4.464,1603,4.464,1604,4.464,1605,3.882,1606,4.464,1607,4.464,1608,4.464,1609,5.112,1610,5.879,1611,3.882,1612,3.882,1613,3.882,1614,3.882,1615,5.879,1616,5.112,1617,3.882,1618,3.882,1619,3.882,1620,5.112,1621,3.014,1622,4.228,1623,5.318,1624,5.318,1625,3.014,1626,4.464,1627,4.464,1628,3.014,1629,3.014,1630,3.014,1631,3.882,1632,3.014,1633,3.882,1634,3.014,1635,3.882,1636,3.014,1637,3.882,1638,3.014,1639,3.014,1640,5.457,1641,4.623,1642,4.464,1643,4.464,1644,3.014,1645,3.882,1646,3.014,1647,3.882,1648,3.014,1649,3.882,1650,3.014,1651,3.014,1652,2.62,1653,3.014,1654,2.62,1655,3.014,1656,2.62,1657,3.014,1658,2.62,1659,3.014,1660,3.014,1661,3.014,1662,3.014,1663,3.014,1664,3.014,1665,3.014,1666,3.014,1667,3.014,1668,3.014,1669,3.014,1670,5.318,1671,2.62,1672,3.014,1673,3.014,1674,3.014,1675,3.014,1676,3.014,1677,3.014,1678,2.62,1679,3.014,1680,3.014,1681,3.014,1682,3.014,1683,3.014,1684,3.014,1685,3.014,1686,3.014,1687,3.014,1688,3.014]],["title/injectables/GameStateStoreService.html",[16,0.306,1622,2.859]],["body/injectables/GameStateStoreService.html",[3,0.061,4,0.061,5,0.054,7,0.076,8,0.28,10,0.16,11,0.16,12,0.014,13,0.061,14,0.005,15,0.005,16,0.224,18,0.449,24,1.068,26,0.556,28,0.52,31,0.643,33,0.772,34,0.53,35,0.758,37,0.834,38,0.96,39,1.835,40,0.323,41,0.612,43,1.287,44,1.288,47,0.222,48,0.205,55,0.403,56,0.449,57,0.433,58,0.054,61,0.713,91,0.581,102,1.003,106,2.42,123,1.991,124,1.064,131,0.832,179,0.361,180,0.403,181,1.721,202,0.768,227,1.446,273,0.736,282,1.821,302,2.068,306,1.373,311,1.538,325,1.39,345,2.137,373,2.094,495,1.506,508,2.532,567,3.452,572,2.199,580,2.187,584,3.8,609,1.821,611,2.532,615,4.419,616,2.281,619,2.281,621,2.532,622,2.532,623,1.714,624,2.094,625,3.019,628,2.532,630,2.281,635,2.576,641,3.169,648,2.299,649,1.638,657,2.427,658,1.684,660,1.621,661,3.218,696,3.25,751,0.976,941,3.019,975,2.532,981,2.561,987,1.945,1063,3.586,1118,2.281,1193,2.281,1195,3.851,1201,3.452,1241,1.096,1242,1.032,1243,1.032,1244,1.032,1252,2.721,1255,2.532,1263,2.281,1283,1.26,1288,3.257,1291,2.281,1304,1.524,1337,2.687,1347,1.973,1353,3.25,1359,1.373,1395,1.945,1554,1.524,1563,1.26,1580,2.532,1605,2.532,1609,4.53,1611,2.532,1612,2.532,1613,2.532,1614,2.532,1616,4.53,1617,2.532,1618,2.532,1619,3.784,1620,4.53,1622,4.157,1631,2.532,1633,2.532,1635,2.532,1637,2.532,1640,5.644,1641,3.784,1645,2.532,1647,2.532,1649,2.532,1652,1.524,1654,1.524,1656,1.524,1658,1.524,1671,1.524,1678,3.784,1689,1.524,1690,2.912,1691,2.912,1692,2.912,1693,2.912,1694,2.532,1695,2.912,1696,2.912,1697,4.352,1698,2.912,1699,2.912,1700,2.912,1701,2.912,1702,4.352,1703,5.21,1704,3.13,1705,2.912,1706,2.912,1707,4.619,1708,2.912,1709,2.912,1710,2.912,1711,2.532,1712,2.912,1713,5.781,1714,4.352,1715,2.912,1716,4.758,1717,2.912,1718,2.912,1719,4.352,1720,3.13,1721,3.784,1722,2.912,1723,2.532,1724,2.912,1725,3.248,1726,2.912,1727,4.352,1728,2.912,1729,4.352,1730,3.736,1731,3.736,1732,3.736,1733,2.912,1734,2.912,1735,3.736,1736,3.736,1737,3.736,1738,2.912,1739,2.912,1740,1.753,1741,1.753,1742,2.912,1743,1.753,1744,1.032,1745,1.753,1746,1.753,1747,1.753,1748,1.753,1749,1.753,1750,6.349,1751,1.753,1752,7.137,1753,2.912,1754,4.352,1755,1.753,1756,1.753,1757,1.753,1758,2.912,1759,1.753,1760,1.753,1761,1.753,1762,1.753,1763,2.912,1764,2.912,1765,1.753,1766,1.753,1767,1.753,1768,1.753,1769,1.753,1770,1.753,1771,1.753,1772,1.753,1773,1.753,1774,1.753,1775,1.753,1776,1.753,1777,1.753,1778,1.753,1779,4.352,1780,1.753,1781,1.753,1782,1.753,1783,1.753,1784,1.753,1785,2.912,1786,6,1787,2.532,1788,2.912,1789,1.753,1790,2.912,1791,2.912,1792,2.912,1793,2.912,1794,1.753,1795,2.912,1796,2.912,1797,1.753,1798,1.753,1799,1.753,1800,1.753,1801,2.912,1802,1.753,1803,1.753,1804,1.753,1805,1.753,1806,1.753,1807,1.753,1808,1.753,1809,1.524,1810,1.753,1811,1.753,1812,1.753,1813,1.753,1814,1.753,1815,3.736,1816,1.753,1817,1.753,1818,1.753,1819,1.753,1820,1.753,1821,1.753,1822,1.753,1823,1.753,1824,1.753]],["title/interfaces/InitialGameElementStatesFactory.html",[0,0.732,1335,2.859]],["body/interfaces/InitialGameElementStatesFactory.html",[0,0.947,2,2.072,3,0.178,4,0.178,5,0.158,7,0.081,10,0.691,11,0.149,12,0.014,13,0.263,14,0.011,15,0.011,26,0.822,31,0.444,33,0.6,34,0.42,35,0.6,37,0.628,44,0.947,47,0.274,61,1.055,124,0.843,146,1.185,179,1.059,180,1.183,181,1.427,227,1.99,231,2.716,301,3.583,325,1.913,345,1.99,609,3.214,782,4.47,1033,3.369,1195,3.369,1231,4.024,1241,3.214,1242,3.026,1243,3.026,1244,3.026,1288,3.214,1335,5.054,1337,5.454,1338,4.299,1345,5.597,1347,4.006,1357,4.63,1368,4.47,1564,3.698,1570,4.028,1577,4.47,1592,5.043,1744,3.026,1825,3.434,1826,5.141,1827,5.141,1828,5.141,1829,5.141,1830,4.028,1831,4.47,1832,5.597]],["title/components/LobbyPageComponent.html",[79,0.732,160,1.422]],["body/components/LobbyPageComponent.html",[1,1.341,3,0.101,4,0.101,5,0.09,7,0.083,8,0.42,9,1.449,10,0.657,11,0.144,12,0.014,13,0.101,14,0.007,15,0.007,21,1.008,24,0.759,26,0.558,28,0.608,31,0.611,33,0.677,34,0.531,35,0.677,37,0.758,38,0.374,40,0.962,41,0.857,47,0.311,48,0.342,49,1.089,58,0.09,79,0.962,80,1.048,81,1.625,82,1.133,83,1.133,84,1.133,88,1.133,91,2.576,92,2.675,93,1.089,94,1.505,95,1.25,96,1.505,98,1.505,122,1.505,124,0.48,129,1.133,130,1.691,131,0.999,132,1.133,133,2.243,134,1.133,135,1.133,136,1.048,137,1.691,138,1.048,139,1.691,140,1.048,141,0.869,142,1.048,143,1.133,144,1.048,145,1.048,146,1.197,147,2.4,148,1.048,149,1.048,150,0.869,151,1.691,152,1.048,153,0.901,154,1.008,155,1.048,156,1.133,157,1.048,158,1.048,159,1.133,160,2.074,161,2.608,162,1.008,163,1.8,164,1.048,165,1.089,166,1.008,167,1.505,168,1.396,169,1.008,170,1.008,171,1.8,172,1.133,173,1.133,179,0.9,180,0.673,206,2.627,223,2.918,322,2.196,407,3.751,434,1.956,620,4.344,717,3.724,734,3.482,768,3.061,838,1.472,846,2.761,851,4.545,853,4.545,854,4.095,855,2.308,856,2.308,868,4.169,880,2.506,881,2.435,884,4.066,900,2.546,921,3.423,922,2.106,923,2.294,929,1.547,932,2.546,933,2.546,934,2.294,937,1.547,957,3.799,1033,2.778,1347,2.308,1396,3.423,1408,3.423,1458,4.095,1476,3.799,1485,3.799,1495,5.039,1723,3.799,1833,6.267,1834,6.267,1835,5.227,1836,5.227,1837,5.227,1838,5.227,1839,5.227,1840,5.227,1841,5.227,1842,5.227,1843,5.227,1844,5.227,1845,5.227,1846,5.227,1847,4.545,1848,5.227,1849,5.796,1850,4.37,1851,2.928,1852,4.37,1853,2.928,1854,2.928,1855,2.928,1856,5.796,1857,2.928,1858,4.37,1859,2.928,1860,2.928,1861,2.928,1862,2.928,1863,2.928,1864,4.37,1865,2.928,1866,2.928,1867,6.201,1868,2.928,1869,2.928,1870,2.928,1871,2.928,1872,2.928,1873,2.928,1874,2.928,1875,4.37,1876,4.37,1877,4.37,1878,4.37,1879,4.37]],["title/injectables/LocalStorageService.html",[16,0.306,723,2.859]],["body/injectables/LocalStorageService.html",[3,0.183,4,0.183,5,0.162,7,0.083,10,0.751,11,0.165,12,0.014,13,0.183,14,0.011,15,0.011,16,0.503,18,1.352,26,0.835,31,0.614,33,0.83,34,0.58,35,0.83,37,0.869,38,0.949,41,1.218,47,0.224,48,0.616,56,1.352,57,1.304,58,0.162,123,2.252,124,0.864,723,4.703,1707,4.748,1880,6.462,1881,4.585,1882,6.54,1883,6.54,1884,6.54,1885,6.54,1886,5.273,1887,6.54,1888,5.273,1889,6.54,1890,5.273,1891,5.273,1892,5.273,1893,5.273]],["title/interfaces/LoginFormData.html",[0,0.732,1894,2.859]],["body/interfaces/LoginFormData.html",[0,0.878,2,1.921,3,0.165,4,0.165,5,0.147,7,0.075,8,0.59,10,0.692,11,0.142,12,0.014,13,0.165,14,0.01,15,0.01,24,0.985,28,0.664,38,0.867,47,0.328,48,0.557,58,0.147,61,0.781,79,1.129,89,2.089,90,2.089,91,1.58,92,1.641,94,1.641,95,1.363,96,1.641,98,1.641,114,2.089,122,1.641,162,1.641,163,2.336,171,1.641,198,3.24,206,3.084,208,2.518,552,2.98,658,1.845,711,3.41,731,4.466,733,3.326,838,2.396,846,3.24,850,3.611,855,2.518,856,2.518,879,3.993,880,2.285,881,2.577,927,2.653,929,2.518,937,2.518,1012,3.428,1894,4.879,1895,3.734,1896,3.734,1897,3.836,1898,2.98,1899,5.334,1900,3.734,1901,3.836,1902,4.144,1903,2.806,1904,4.144,1905,2.98,1906,3.836,1907,2.98,1908,4.144,1909,4.144,1910,4.144,1911,3.428,1912,2.98,1913,4.144,1914,2.98,1915,2.98,1916,2.98,1917,2.98]],["title/components/LoginPageComponent.html",[79,0.732,162,1.369]],["body/components/LoginPageComponent.html",[0,0.657,1,1.502,3,0.124,4,0.124,5,0.11,7,0.056,8,0.485,10,0.46,11,0.117,12,0.014,13,0.124,14,0.009,15,0.009,21,1.23,24,0.85,26,0.645,28,0.703,31,0.55,33,0.417,34,0.478,35,0.417,37,0.436,38,0.813,40,0.657,41,0.585,47,0.305,48,0.417,49,1.329,58,0.11,61,0.585,79,1.078,80,1.278,81,1.878,82,1.382,83,1.382,84,1.382,88,1.382,89,2.213,90,2.213,91,2.646,92,2.748,93,1.329,94,1.738,95,1.444,96,1.738,98,1.738,114,1.566,122,1.738,129,1.382,130,1.954,131,1.119,132,1.382,133,2.463,134,1.382,135,1.382,136,1.278,137,1.954,138,1.278,139,1.954,140,1.278,141,1.059,142,1.278,143,1.382,144,1.278,145,1.278,146,0.657,147,2.598,148,1.278,149,1.278,150,1.059,151,1.954,152,1.278,153,1.099,154,1.23,155,1.278,156,1.382,157,1.278,158,1.278,159,1.382,160,1.278,161,1.382,162,2.191,163,2.562,164,1.278,165,1.329,166,1.23,167,2.191,168,2.032,169,2.016,170,1.23,171,2.016,172,1.382,173,1.382,198,3.092,206,2.943,208,1.886,552,2.233,658,1.382,711,3.6,731,3.952,733,2.943,838,1.795,846,3.092,850,3.446,855,2.666,856,2.666,879,4.102,880,2.806,881,2.673,927,1.988,929,1.886,937,1.886,1012,2.568,1894,3.63,1895,5.259,1896,5.259,1897,3.66,1898,2.233,1899,5.09,1900,2.798,1901,3.66,1902,5.09,1903,4.216,1904,3.105,1905,2.233,1906,3.156,1907,3.978,1908,3.105,1909,3.105,1910,3.105,1911,2.568,1912,2.233,1913,3.105,1914,2.233,1915,2.233,1916,2.233,1917,2.233,1918,2.798,1919,4.389,1920,3.571,1921,2.798,1922,5.048]],["title/components/LogoutPageComponent.html",[79,0.732,164,1.422]],["body/components/LogoutPageComponent.html",[1,1.658,3,0.149,4,0.149,5,0.133,7,0.068,11,0.1,12,0.014,13,0.149,14,0.01,15,0.01,21,1.486,24,0.835,26,0.734,28,0.801,31,0.496,33,0.504,34,0.528,35,0.504,37,0.527,38,0.734,47,0.275,48,0.504,49,1.606,58,0.133,79,1.19,80,1.544,81,2.139,82,1.671,83,1.671,84,1.671,88,1.671,91,2.704,92,2.808,93,1.606,94,1.98,95,1.644,96,1.98,98,1.98,122,1.486,129,1.671,130,2.225,131,1.236,132,1.671,133,2.668,134,1.671,135,1.671,136,1.544,137,2.225,138,1.544,139,2.225,140,1.544,141,1.28,142,1.544,143,1.671,144,1.544,145,1.544,146,0.795,147,2.779,148,1.544,149,1.544,150,1.28,151,2.225,152,1.544,153,1.328,154,1.486,155,1.544,156,1.671,157,1.544,158,1.544,159,1.671,160,1.544,161,1.671,162,1.486,163,1.486,164,2.466,165,2.883,166,1.486,167,1.98,168,1.836,169,1.486,170,1.486,171,2.472,172,1.671,173,1.671,195,3.384,196,4.041,203,4.31,711,3.711,838,2.169,855,3.036,856,3.036,880,3.099,881,2.896,937,2.28,1523,3.381,1900,3.381,1923,5.62,1924,5.62,1925,4.316,1926,4.316,1927,4.316,1928,3.381,1929,5.749]],["title/injectables/NavigateService.html",[16,0.306,881,1.67]],["body/injectables/NavigateService.html",[3,0.167,4,0.167,5,0.149,7,0.076,10,0.694,11,0.143,12,0.014,13,0.167,14,0.011,15,0.011,16,0.476,18,1.239,26,0.791,28,0.673,31,0.658,33,0.723,34,0.505,35,0.723,37,0.91,47,0.263,48,0.564,56,1.239,57,1.195,58,0.149,59,2.551,146,0.889,168,1.543,169,1.663,552,3.02,717,4.111,734,4.012,768,3.931,881,2.599,1033,3.568,1490,4.45,1930,4.2,1931,7.2,1932,6.188,1933,7.2,1934,7.2,1935,7.2,1936,4.831,1937,7.615,1938,4.831,1939,4.831,1940,6.188,1941,4.831,1942,4.831,1943,4.831,1944,4.831,1945,4.831,1946,4.831,1947,4.831,1948,4.831,1949,4.831,1950,4.831]],["title/classes/Pile.html",[58,0.122,345,1.539]],["body/classes/Pile.html",[3,0.092,4,0.092,5,0.081,7,0.042,8,0.389,10,0.369,11,0.166,12,0.014,13,0.14,14,0.007,15,0.007,24,1.087,26,0.517,28,0.369,31,0.661,33,0.643,34,0.45,35,0.643,37,0.873,38,0.88,39,1.761,40,0.487,41,0.664,43,1.897,44,0.487,47,0.234,55,0.609,58,0.125,59,1.398,61,1.026,102,1.394,103,2.737,123,2.419,124,1.128,127,3.173,146,0.487,153,1.246,154,1.897,175,1.632,176,3.792,179,0.545,180,0.609,181,1.316,241,3.977,301,3.739,320,1.331,322,2.629,331,1.558,345,3.066,352,1.398,425,2.532,557,2.707,560,3.306,561,2.912,562,2.705,564,2.705,565,3.537,566,2.705,572,3.684,573,3.135,574,2.074,575,2.074,576,2.074,580,3.591,582,2.532,584,1.474,585,2.074,587,2.074,601,1.768,609,1.655,649,2.414,653,2.64,657,2.035,658,1.567,669,2.705,918,4.831,941,4.072,962,3.173,987,2.705,1135,3.173,1136,4.315,1144,4.903,1145,3.853,1147,6.205,1154,2.074,1205,2.074,1252,3.443,1288,2.532,1338,2.705,1353,3.833,1704,3.537,1707,3.679,1716,2.912,1720,4.268,1744,2.384,1951,2.074,1952,4.789,1953,4.275,1954,5.332,1955,4.789,1956,4.789,1957,3.521,1958,5.16,1959,4.05,1960,4.275,1961,3.521,1962,3.521,1963,3.521,1964,3.521,1965,3.521,1966,2.648,1967,2.648,1968,2.648,1969,2.648,1970,2.648,1971,4.275,1972,2.648,1973,3.521,1974,4.315,1975,3.521,1976,3.521,1977,2.648,1978,2.648,1979,3.521,1980,2.648,1981,2.648,1982,3.521,1983,2.302,1984,2.074,1985,2.302,1986,2.302,1987,2.302,1988,2.302,1989,2.302,1990,2.302,1991,2.302,1992,3.521,1993,3.521,1994,2.302,1995,3.521,1996,2.302,1997,2.302,1998,2.302,1999,2.302,2000,2.302,2001,2.074,2002,3.521,2003,3.521,2004,2.302,2005,3.521,2006,3.521,2007,2.302,2008,2.302,2009,3.521,2010,3.521,2011,2.302,2012,2.074,2013,3.521,2014,3.521,2015,3.521,2016,2.302,2017,2.302]],["title/classes/PileAdapter.html",[58,0.122,331,2.34]],["body/classes/PileAdapter.html",[3,0.114,4,0.114,5,0.101,7,0.052,10,0.3,11,0.13,12,0.015,13,0.165,14,0.008,15,0.008,24,0.944,26,0.608,28,0.458,31,0.604,33,0.653,34,0.456,35,0.653,37,0.794,38,0.831,39,1.658,40,0.605,41,0.78,43,1.638,44,0.605,47,0.261,55,0.756,58,0.146,59,1.736,61,1.111,102,1.638,103,1.829,123,2.465,124,1.196,127,3.726,146,0.605,153,1.011,154,1.638,175,1.324,176,3.723,179,0.677,180,0.756,181,1.055,241,3.89,301,3.984,320,1.651,322,1.998,331,2.799,345,3.025,352,1.736,425,2.973,557,1.917,566,2.195,572,4.213,580,3.267,582,2.054,587,2.574,601,2.195,609,2.054,653,2.28,657,1.651,658,1.272,669,2.195,918,5.148,941,4.237,962,2.574,987,2.195,1135,2.574,1136,4.379,1144,4.8,1145,4.379,1147,6.085,1154,3.726,1205,2.574,1252,3.83,1288,2.054,1338,2.195,1353,3.29,1704,2.363,1707,3.176,1716,2.363,1720,3.42,1744,1.934,1951,2.574,1952,4.135,1953,2.857,1954,5.027,1955,2.857,1956,2.857,1957,4.135,1958,5.652,1960,2.857,1961,2.857,1962,2.857,1963,2.857,1964,2.857,1965,2.857,1971,4.86,1973,2.857,1974,3.726,1975,2.857,1976,2.857,1979,2.857,1982,2.857,1983,2.857,1984,2.574,1985,2.857,1986,2.857,1987,2.857,1988,2.857,1989,2.857,1990,2.857,1991,2.857,1992,4.135,1993,4.135,1994,2.857,1995,4.135,1996,2.857,1997,2.857,1998,2.857,1999,2.857,2000,2.857,2001,2.574,2002,4.135,2003,4.135,2004,2.857,2005,4.135,2006,4.135,2007,2.857,2008,2.857,2009,4.135,2010,4.135,2011,2.857,2012,2.574,2013,4.135,2014,4.135,2015,4.135,2016,2.857,2017,2.857,2018,3.286,2019,3.286,2020,3.286,2021,3.286,2022,3.286,2023,3.286,2024,3.286]],["title/interfaces/PileConfig.html",[0,0.732,2025,3.114]],["body/interfaces/PileConfig.html",[0,0.974,2,2.133,3,0.183,4,0.183,5,0.163,7,0.084,8,0.63,10,0.711,11,0.152,12,0.014,13,0.227,14,0.011,15,0.011,44,0.974,47,0.279,54,1.969,61,0.868,101,3.882,150,2.403,497,3.535,1109,3.535,1110,4.602,1111,4.146,1112,4.146,1116,4.146,1120,4.146,1123,4.146,1126,4.146,1129,4.146,1156,4.146,2025,5.135,2026,4.146,2027,4.146,2028,5.293,2029,4.602,2030,4.602,2031,4.602,2032,4.602,2033,4.602,2034,4.602,2035,4.602,2036,4.602,2037,4.602,2038,4.602,2039,4.602,2040,4.602]],["title/injectables/PileRegistryService.html",[16,0.306,482,2.485]],["body/injectables/PileRegistryService.html",[3,0.152,4,0.152,5,0.135,7,0.07,8,0.56,9,2.304,10,0.531,11,0.172,12,0.014,13,0.152,14,0.01,15,0.01,16,0.448,18,1.129,24,1.078,26,0.744,28,0.613,31,0.654,33,0.762,34,0.533,35,0.762,37,0.712,38,0.562,39,1.306,40,1.279,41,1.139,44,1.202,47,0.307,48,0.514,54,2.167,56,1.129,57,1.089,58,0.135,131,0.842,146,0.81,175,2.348,179,0.907,180,1.012,181,1.292,202,2.553,266,2.325,345,2.254,482,3.641,490,2.94,495,2.8,501,3.641,557,3.052,573,3.921,615,2.94,635,2.006,636,2.752,637,4.58,638,3.242,639,4.189,640,3.867,641,3.448,644,3.827,646,3.449,647,2.325,648,3.076,649,2.553,650,2.325,651,4.022,652,2.325,653,2.11,654,2.94,655,3.827,656,3.428,657,2.212,658,1.704,659,3.842,660,2.45,661,2.45,662,2.591,663,2.591,664,2.591,665,3.166,666,3.449,667,2.325,668,3.166,669,2.94,670,3.449,671,3.166,672,3.449,673,3.449,674,3.166,675,3.449,677,2.016,678,2.752,1353,2.591,1492,3.449,2041,4.402,2042,4.996,2043,5.825,2044,4.402]],["title/injectables/PileStateService.html",[16,0.306,2042,2.859]],["body/injectables/PileStateService.html",[3,0.143,4,0.143,5,0.127,7,0.065,8,0.536,9,2.245,10,0.509,11,0.169,12,0.014,13,0.143,14,0.01,15,0.01,16,0.43,18,1.059,24,1.1,26,0.713,31,0.655,33,0.791,34,0.553,35,0.791,37,0.864,38,0.865,39,1.225,40,1.028,41,0.915,44,1.028,47,0.288,48,0.482,54,2.076,56,1.059,57,1.022,58,0.127,102,1.922,124,0.677,131,0.79,146,1.164,175,2.25,179,0.851,180,0.95,181,1.653,231,3.339,345,2.738,495,2.25,501,3.49,557,3.055,560,3.936,573,3.936,617,2.582,625,2.582,635,1.922,638,3.107,640,3.107,641,3.339,647,2.181,648,2.948,649,2.447,650,2.181,651,3.519,652,2.181,653,1.98,656,3.285,657,2.076,658,1.599,659,3.721,660,3.107,661,3.107,662,2.431,663,2.431,664,2.431,667,4.101,677,1.892,680,2.582,681,4.014,682,4.014,683,4.014,684,4.547,686,3.236,687,4.014,688,3.236,689,2.97,690,3.236,691,3.236,692,2.97,693,2.97,694,4.523,695,2.97,696,2.431,697,3.728,698,2.759,699,2.97,700,3.236,701,1.98,702,2.97,703,2.97,704,3.236,705,3.236,706,2.97,707,3.236,1353,3.986,1492,3.236,2042,4.014,2045,5.582,2046,4.13,2047,4.13,2048,4.13]],["title/interfaces/PlayerAuthData.html",[0,0.732,719,2.485]],["body/interfaces/PlayerAuthData.html",[0,1.08,2,2.364,3,0.203,4,0.203,5,0.18,7,0.093,8,0.67,10,0.746,11,0.179,12,0.014,13,0.203,14,0.012,15,0.012,241,4.144,719,4.361,733,3.378,762,6.7,764,6.7,766,6.7,2049,5.099]],["title/injectables/PlayerService.html",[16,0.306,407,2.213]],["body/injectables/PlayerService.html",[3,0.141,4,0.141,5,0.126,7,0.065,8,0.532,10,0.699,11,0.168,12,0.014,13,0.141,14,0.009,15,0.009,16,0.426,18,1.047,24,1.023,26,0.708,28,0.771,31,0.642,33,0.787,34,0.55,35,0.787,37,0.768,40,1.157,41,1.03,43,2.164,44,1.02,47,0.309,48,0.477,55,0.939,56,1.047,57,1.01,58,0.126,61,0.669,106,3.088,124,0.669,146,0.752,179,0.841,273,1.715,302,1.461,407,3.083,620,4.501,635,2.603,711,3.651,713,3.55,717,3.851,733,2.954,734,3.651,744,2.727,751,2.273,768,3.32,833,2.727,866,4.816,922,2.937,1393,4.963,1395,2.727,1397,4.816,1400,3.55,1412,4.816,1425,2.937,1428,3.55,1455,5.465,1458,5.692,1523,3.199,2001,3.199,2050,3.55,2051,5.539,2052,5.539,2053,5.539,2054,4.083,2055,4.083,2056,5.539,2057,4.083,2058,4.083,2059,5.539,2060,5.539,2061,4.083,2062,4.083,2063,4.083,2064,4.083,2065,5.539,2066,6.74,2067,4.083,2068,4.083,2069,4.083,2070,4.083,2071,4.083,2072,5.539,2073,4.083,2074,4.083,2075,5.539]],["title/interfaces/SignUpConfirmFormData.html",[0,0.732,2076,2.859]],["body/interfaces/SignUpConfirmFormData.html",[0,0.867,2,1.899,3,0.163,4,0.163,5,0.145,7,0.075,8,0.585,10,0.69,11,0.141,12,0.014,13,0.163,14,0.01,15,0.01,24,0.98,28,0.656,38,0.862,47,0.322,48,0.55,58,0.145,61,0.772,79,1.121,89,2.065,90,2.065,91,1.562,92,1.623,94,1.623,95,1.348,96,1.623,98,1.623,114,2.065,122,1.623,166,1.623,167,2.323,168,2.416,169,2.543,171,1.623,198,3.216,206,3.061,208,2.489,658,1.824,733,3.316,795,5.44,838,2.368,846,3.216,850,3.584,855,2.489,856,2.489,879,3.972,880,2.259,881,2.558,927,2.623,929,2.489,937,2.489,1897,3.807,1898,2.946,1901,3.807,1903,2.773,1905,2.946,1906,3.807,1907,2.946,1912,2.946,1914,2.946,1915,2.946,1916,2.946,1917,2.946,1928,3.691,2076,4.853,2077,3.147,2078,3.147,2079,3.972,2080,3.389,2081,3.389,2082,4.097,2083,4.097,2084,4.097,2085,4.097,2086,4.097,2087,4.097,2088,3.389,2089,4.097]],["title/components/SignUpConfirmPageComponent.html",[79,0.732,166,1.369]],["body/components/SignUpConfirmPageComponent.html",[0,0.637,1,1.476,3,0.12,4,0.12,5,0.106,7,0.055,8,0.474,10,0.45,11,0.114,12,0.014,13,0.12,14,0.008,15,0.008,21,1.191,24,0.835,26,0.631,28,0.687,31,0.542,33,0.404,34,0.47,35,0.404,37,0.423,38,0.801,40,0.637,41,0.567,47,0.293,48,0.404,49,1.287,58,0.106,61,0.567,79,1.059,80,1.238,81,1.836,82,1.339,83,1.339,84,1.339,88,1.339,89,2.163,90,2.163,91,2.636,92,2.737,93,1.287,94,1.699,95,1.412,96,1.699,98,1.699,114,1.517,122,1.699,129,1.339,130,1.91,131,1.1,132,1.339,133,2.428,134,1.339,135,1.339,136,1.238,137,1.91,138,1.238,139,1.91,140,1.238,141,1.026,142,1.238,143,1.339,144,1.238,145,1.238,146,0.637,147,2.567,148,1.238,149,1.238,150,1.026,151,1.91,152,1.238,153,1.065,154,1.191,155,1.238,156,1.339,157,1.238,158,1.238,159,1.339,160,1.238,161,1.339,162,1.191,163,1.191,164,1.238,165,1.287,166,2.16,167,2.58,168,2.567,169,2.768,170,1.191,171,1.981,172,1.339,173,1.339,198,3.039,206,2.892,208,1.827,658,1.339,733,2.908,795,4.77,838,1.739,846,3.039,850,3.386,855,2.607,856,2.607,879,4.059,880,2.758,881,2.635,927,1.926,929,1.827,937,1.827,1897,3.597,1898,2.163,1901,3.597,1903,4.178,1905,2.163,1906,3.086,1907,3.922,1912,2.163,1914,2.163,1915,2.163,1916,2.163,1917,2.163,1918,2.71,1921,3.867,1928,2.71,2076,3.549,2077,4.43,2078,4.43,2079,4.178,2080,2.488,2081,2.488,2082,5.002,2083,3.008,2084,3.008,2085,3.008,2086,3.008,2087,3.008,2088,2.488,2089,3.008,2090,3.46,2091,3.46]],["title/interfaces/SignUpFormData.html",[0,0.732,2092,2.859]],["body/interfaces/SignUpFormData.html",[0,0.843,2,1.845,3,0.158,4,0.158,5,0.141,7,0.072,8,0.574,10,0.715,11,0.154,12,0.014,13,0.158,14,0.01,15,0.01,24,0.966,28,0.637,38,0.85,47,0.319,48,0.534,58,0.141,61,0.75,79,1.1,89,2.006,90,2.006,91,1.518,92,1.576,94,1.576,95,1.309,96,1.576,98,1.576,114,2.006,122,1.576,167,2.291,168,2.397,170,1.576,171,1.576,198,3.156,206,3.003,208,2.417,658,1.772,731,4.418,733,3.29,803,5.498,838,2.3,846,3.156,850,3.517,855,2.417,856,2.417,879,3.916,880,2.194,881,2.51,927,2.548,929,2.417,937,2.417,1897,3.736,1898,2.861,1901,3.736,1903,2.694,1905,2.861,1906,4.16,1907,2.861,1911,3.292,1912,2.861,1914,2.861,1915,2.861,1916,2.861,1917,2.861,2077,3.057,2078,3.057,2079,3.916,2080,3.292,2081,3.292,2088,3.292,2092,4.785,2093,5.196,2094,3.979,2095,3.979,2096,3.979,2097,3.979,2098,3.979,2099,3.979,2100,3.979,2101,3.979,2102,3.979,2103,3.979]],["title/components/SignUpPageComponent.html",[79,0.732,170,1.369]],["body/components/SignUpPageComponent.html",[0,0.604,1,1.433,3,0.114,4,0.114,5,0.101,7,0.052,8,0.457,10,0.509,11,0.11,12,0.014,13,0.114,14,0.008,15,0.008,21,1.13,24,0.811,26,0.607,28,0.662,31,0.529,33,0.383,34,0.456,35,0.383,37,0.401,38,0.782,40,0.604,41,0.538,47,0.288,48,0.383,49,1.221,58,0.101,61,0.538,79,1.028,80,1.174,81,1.768,82,1.27,83,1.27,84,1.27,88,1.27,89,2.083,90,2.083,91,2.618,92,2.719,93,1.221,94,1.636,95,1.359,96,1.636,98,1.636,114,1.439,122,1.636,129,1.27,130,1.839,131,1.068,132,1.27,133,2.37,134,1.27,135,1.27,136,1.174,137,1.839,138,1.174,139,1.839,140,1.174,141,0.974,142,1.174,143,1.27,144,1.174,145,1.174,146,0.604,147,2.515,148,1.174,149,1.174,150,0.974,151,1.839,152,1.174,153,1.01,154,1.13,155,1.174,156,1.27,157,1.174,158,1.174,159,1.27,160,1.174,161,1.27,162,1.13,163,1.13,164,1.174,165,1.221,166,1.13,167,2.611,168,2.568,169,1.13,170,2.108,171,1.923,172,1.27,173,1.27,198,2.95,206,2.807,208,1.734,658,1.27,731,4.113,733,2.848,803,5.146,838,1.65,846,2.95,850,3.288,855,2.51,856,2.51,879,3.988,880,2.678,881,2.572,911,4.132,927,1.827,929,1.734,937,1.734,1847,4.132,1897,3.492,1898,2.052,1901,3.492,1903,4.113,1905,2.052,1906,3.492,1907,3.828,1911,2.36,1912,2.052,1914,2.052,1915,2.052,1916,2.052,1917,2.052,1918,2.571,1919,4.132,1921,2.571,2077,4.34,2078,4.34,2079,4.113,2080,2.36,2081,2.36,2088,2.36,2092,3.418,2093,4.857,2094,4.857,2095,2.854,2096,2.854,2097,2.854,2098,2.854,2099,2.854,2100,2.854,2101,2.854,2102,2.854,2103,2.854,2104,3.282,2105,4.752,2106,4.752,2107,4.752,2108,4.752,2109,4.752,2110,4.752,2111,4.752,2112,4.752,2113,4.752,2114,4.752]],["title/injectables/SignUpService.html",[16,0.306,2079,2.34]],["body/injectables/SignUpService.html",[3,0.177,4,0.177,5,0.157,7,0.081,10,0.751,11,0.162,12,0.014,13,0.177,14,0.011,15,0.011,16,0.494,18,1.312,26,0.82,28,0.712,31,0.605,33,0.819,34,0.572,35,0.819,37,0.784,47,0.273,48,0.597,56,1.312,57,1.265,58,0.157,59,2.701,124,1.052,717,3.883,721,4.446,722,5.161,731,4.327,733,2.812,734,3.695,743,3.678,744,3.416,787,5.578,789,5.578,794,5.578,795,5.287,802,5.578,803,5.287,2079,3.776,2115,6.391,2116,4.446,2117,5.114,2118,5.114,2119,5.114,2120,5.114,2121,5.114]],["title/classes/Space.html",[58,0.122,185,1.821]],["body/classes/Space.html",[1,1.887,3,0.136,4,0.136,5,0.121,7,0.062,8,0.519,10,0.492,11,0.174,12,0.014,13,0.136,14,0.009,15,0.009,24,1.104,26,0.69,28,0.548,31,0.676,33,0.72,34,0.503,35,0.72,37,0.753,38,0.788,39,1.829,40,0.994,41,0.885,44,1.221,47,0.282,55,0.905,58,0.121,61,0.645,102,1.859,123,2.474,124,1.088,176,4.043,179,0.81,180,0.905,181,1.662,185,3.039,302,2.206,311,2.077,320,1.976,322,2.59,559,5.956,562,4.117,564,3.606,566,3.606,580,3.495,582,3.375,584,2.189,599,4.229,604,3.419,605,3.081,981,2.315,1100,5.359,1239,3.419,1241,3.375,1242,2.315,1243,2.315,1244,2.315,1246,3.419,1248,3.419,1249,3.419,1531,5.769,2122,3.419,2123,6.164,2124,6.164,2125,5.399,2126,6.635,2127,5.399,2128,3.933,2129,3.933,2130,3.933,2131,3.933,2132,5.399,2133,3.933,2134,3.933,2135,3.933,2136,3.933,2137,3.933,2138,3.933,2139,3.933,2140,3.933,2141,3.933,2142,3.933,2143,7.603,2144,3.933,2145,3.933,2146,3.933,2147,5.399,2148,3.933,2149,3.933,2150,3.933]],["title/interfaces/SpeciesPiece.html",[0,0.732,350,2.485]],["body/interfaces/SpeciesPiece.html",[0,1.104,2,2.418,3,0.208,4,0.208,5,0.184,7,0.095,8,0.679,11,0.139,12,0.014,13,0.208,14,0.012,15,0.012,47,0.301,103,4.321,175,2.849,176,3.778,177,5.583,178,4.7,179,1.236,180,1.38,181,1.33,350,4.42,2151,5.216]],["title/coverage.html",[2152,4.728]],["body/coverage.html",[0,1.346,1,1.362,5,0.076,6,2.148,11,0.141,12,0.014,14,0.007,15,0.007,16,0.605,17,1.777,19,3.008,20,1.935,21,1.621,22,2.148,30,1.544,44,0.455,58,0.207,76,1.935,77,3.008,78,2.148,79,1.371,80,0.884,85,3.595,86,1.65,87,2.148,93,1.428,105,1.184,118,1.544,120,1.242,131,0.9,136,0.884,138,0.884,140,0.884,141,0.733,142,0.884,144,0.884,146,0.707,148,0.884,150,1.139,152,0.884,153,0.76,154,1.322,155,0.884,157,0.884,158,0.884,160,0.884,162,0.851,164,0.884,166,0.851,168,2.098,169,1.828,170,0.851,174,2.148,177,1.777,181,1.275,182,2.148,183,1.935,184,3.008,185,1.132,192,2.761,193,1.935,194,3.008,209,1.777,212,1.132,215,1.935,224,2.148,227,0.956,237,1.454,238,1.65,265,2.26,273,1.038,275,1.544,301,4.641,321,3.386,324,1.65,325,0.919,328,1.544,331,1.454,345,0.956,347,1.375,350,1.544,392,2.148,393,1.935,406,1.544,407,1.375,425,1.544,433,1.777,471,2.148,472,2.148,481,1.454,482,1.544,497,1.65,499,1.65,500,2.771,501,2.4,502,1.935,546,2.148,554,1.777,556,2.148,557,0.996,635,2.604,636,3.595,637,1.454,643,1.777,667,1.305,680,3.595,701,1.184,711,1.242,712,2.148,719,1.544,722,1.65,723,1.777,785,2.148,786,3.386,836,2.148,837,2.148,838,3.39,881,1.038,884,1.544,986,1.544,1018,2.148,1019,2.148,1020,3.008,1028,1.777,1048,2.148,1063,2.918,1066,1.935,1090,2.148,1101,3.008,1102,3.008,1103,1.777,1105,1.777,1132,2.148,1133,2.148,1170,2.148,1173,2.148,1178,2.148,1206,1.777,1209,1.65,1231,3.805,1232,2.148,1256,3.008,1332,1.65,1333,3.008,1334,2.148,1335,1.777,1357,1.777,1360,1.935,1361,1.935,1366,1.65,1393,1.65,1394,2.148,1395,1.65,1444,2.148,1474,2.148,1516,1.777,1555,3.008,1563,1.777,1564,1.777,1567,1.935,1578,1.777,1579,2.148,1622,1.777,1689,2.148,1744,4.346,1825,3.84,1830,1.935,1833,2.148,1834,2.148,1880,2.148,1881,2.148,1894,1.777,1895,3.008,1896,3.008,1923,2.148,1924,2.148,1930,2.148,1951,3.008,1954,1.777,2025,1.935,2026,3.008,2027,3.008,2042,1.777,2049,2.148,2050,2.148,2076,1.777,2077,3.546,2078,3.546,2079,1.454,2092,1.777,2115,2.148,2116,2.148,2122,2.148,2151,2.148,2152,2.148,2153,2.47,2154,2.47,2155,2.47,2156,6.894,2157,2.148,2158,7.021,2159,2.148,2160,7.881,2161,2.47,2162,4.708,2163,6.352,2164,6.087,2165,5.75,2166,2.148,2167,2.148,2168,2.148,2169,2.148,2170,2.148,2171,2.148,2172,1.935,2173,2.148,2174,2.148,2175,1.935,2176,3.839,2177,2.47,2178,2.47,2179,2.148,2180,2.47,2181,5.75,2182,3.008,2183,4.708,2184,2.47,2185,5.31,2186,5.75,2187,3.839,2188,5.31,2189,5.31,2190,2.148,2191,2.47,2192,2.47,2193,2.47,2194,2.47,2195,5.31,2196,2.47,2197,2.47,2198,2.47,2199,2.47,2200,2.47,2201,2.47,2202,2.47,2203,4.999,2204,2.148,2205,5.75,2206,5.75,2207,1.935,2208,4.999,2209,2.148,2210,2.148,2211,1.935,2212,2.761,2213,2.148,2214,1.935,2215,3.338,2216,3.338,2217,2.148,2218,2.47,2219,2.47,2220,2.47]],["title/dependencies.html",[2221,2.881,2222,4.16]],["body/dependencies.html",[9,1.883,12,0.014,14,0.012,15,0.012,48,0.663,55,1.306,435,4.449,552,3.551,743,4.084,746,4.449,747,4.449,748,4.449,749,4.449,759,4.449,812,4.938,927,3.161,1242,3.343,1243,3.343,1244,3.343,1356,4.938,1488,4.938,2222,4.938,2223,5.679,2224,8.086,2225,5.679,2226,6.843,2227,5.679,2228,5.679,2229,6.843,2230,6.843,2231,5.679,2232,5.679,2233,5.679,2234,5.679,2235,5.679,2236,5.679,2237,5.679,2238,5.679,2239,5.679,2240,5.679,2241,5.679]],["title/miscellaneous/enumerations.html",[2242,1.844,2243,4.16]],["body/miscellaneous/enumerations.html",[7,0.072,12,0.014,14,0.01,15,0.01,41,1.379,101,2.844,131,1.343,149,1.62,150,1.963,270,3.962,271,3.709,427,4.648,719,2.83,752,5.158,1106,4.648,1109,3.962,1156,4.648,1490,4.267,2211,3.546,2212,3.255,2214,3.546,2242,2.52,2243,3.936,2244,3.936,2245,4.648,2246,3.936,2247,3.255,2248,5.933,2249,4.527,2250,5.933,2251,4.527,2252,4.527,2253,5.158,2254,5.158,2255,5.158,2256,5.158,2257,5.158,2258,5.158,2259,4.527,2260,4.527,2261,4.527,2262,4.527,2263,4.527,2264,4.527,2265,4.527,2266,4.527,2267,4.527,2268,4.527,2269,4.527,2270,4.527,2271,4.527,2272,4.527,2273,4.527,2274,4.527,2275,5.933,2276,5.158,2277,5.158,2278,5.158,2279,4.648,2280,5.158,2281,5.158,2282,4.527,2283,4.527,2284,4.527,2285,4.527,2286,4.527,2287,4.527,2288,4.527,2289,4.527,2290,4.527,2291,4.527,2292,4.527,2293,4.527,2294,4.527,2295,4.527,2296,4.527,2297,4.527,2298,4.527,2299,4.527,2300,4.527,2301,4.527,2302,4.527,2303,4.527,2304,4.527,2305,4.527,2306,4.527,2307,4.527,2308,4.527,2309,4.527,2310,4.527,2311,4.527]],["title/miscellaneous/functions.html",[2242,1.844,2312,4.16]],["body/miscellaneous/functions.html",[7,0.058,10,0.642,11,0.171,12,0.014,14,0.009,15,0.009,31,0.557,33,0.923,34,0.651,35,0.927,37,0.966,39,1.093,40,0.95,41,1.308,54,2.4,70,2.462,103,2.873,106,2.611,120,2.594,123,1.777,145,1.319,176,1.852,215,4.043,273,2.168,275,3.227,302,1.319,322,1.548,425,3.227,433,3.712,495,2.837,502,4.043,572,4.411,580,1.852,581,3.205,630,4.043,647,1.947,649,2.262,650,1.947,652,1.947,653,1.767,698,2.462,833,3.978,915,2.651,1033,1.767,1195,1.767,1231,2.304,1288,4.401,1289,2.888,1347,2.726,1381,3.205,1544,5.178,1563,3.712,1570,2.888,1707,4.827,1711,3.205,1716,3.712,1720,2.651,1721,3.205,1725,3.205,1744,2.169,1787,3.205,1809,3.205,1825,3.447,1903,3.038,1974,2.888,1984,2.888,2168,3.205,2169,4.487,2170,4.487,2171,3.205,2172,4.043,2173,3.205,2174,4.487,2175,4.043,2182,2.888,2203,3.205,2204,4.487,2207,4.043,2208,3.205,2209,4.487,2210,4.487,2242,2.052,2247,2.651,2279,2.888,2312,3.205,2313,3.686,2314,3.686,2315,6.793,2316,3.205,2317,3.686,2318,6.793,2319,3.686,2320,7.04,2321,7.04,2322,7.04,2323,5.956,2324,3.686,2325,3.686,2326,5.161,2327,3.686,2328,3.686,2329,3.686,2330,3.686,2331,3.205,2332,3.686,2333,3.686,2334,3.686,2335,3.686,2336,3.686,2337,3.686,2338,3.686,2339,5.161,2340,3.686,2341,3.686,2342,3.686,2343,3.686,2344,5.161,2345,3.686,2346,3.686,2347,3.686,2348,3.686,2349,3.686,2350,3.686,2351,3.686,2352,3.686,2353,5.956,2354,3.686,2355,5.161,2356,3.686,2357,3.686,2358,3.686,2359,3.686,2360,3.686,2361,3.686,2362,3.686]],["title/index.html",[7,0.063,2363,3.456]],["body/index.html",[2,2.579,12,0.013,14,0.013,15,0.013,18,1.641,81,2.381,320,3.216,2179,5.564,2190,5.564,2363,5.564,2364,6.399,2365,6.399]],["title/modules.html",[2366,4.728]],["body/modules.html",[12,0.013,14,0.013,15,0.013,2366,5.665]],["title/properties.html",[8,0.46,2221,2.881]],["body/properties.html",[8,0.622,12,0.013,14,0.013,15,0.013,2331,5.626,2367,6.471]],["title/miscellaneous/typealiases.html",[2242,1.844,2368,4.785]],["body/miscellaneous/typealiases.html",[7,0.097,11,0.142,12,0.012,14,0.012,15,0.012,177,5.141,270,4.083,1103,5.141,1105,5.141,1106,4.79,1109,4.083,1231,3.822,1564,5.141,1744,3.599,1825,4.775,1954,5.141,2182,4.79,2211,4.79,2212,4.397,2214,4.79,2242,3.403,2244,5.316,2245,4.79,2246,5.316,2247,4.397,2316,5.316,2369,6.114]],["title/miscellaneous/variables.html",[2242,1.844,2370,4.16]],["body/miscellaneous/variables.html",[7,0.049,9,1.512,11,0.163,12,0.015,14,0.008,15,0.008,38,0.396,40,1.364,41,1.215,44,1.223,54,2.363,61,0.508,95,0.887,101,3.184,103,1.726,118,2.851,123,2.425,124,0.747,149,2.733,150,1.97,176,3.451,181,1.011,185,1.421,202,1.999,227,1.2,289,4.701,295,3.981,301,1.726,325,1.154,345,1.2,367,2.072,474,2.697,497,3.046,499,3.046,580,3.806,635,1.068,775,1.939,791,3.965,1033,1.487,1063,1.487,1101,2.43,1102,3.572,1103,4.777,1104,5.775,1111,4.67,1112,4.236,1113,3.965,1114,2.697,1115,3.965,1116,4.236,1117,3.965,1118,5.203,1119,3.965,1120,4.236,1121,3.965,1122,3.965,1123,4.236,1124,3.965,1125,3.965,1126,4.236,1127,3.965,1128,3.965,1129,4.236,1130,3.965,1131,3.965,1174,2.697,1195,1.487,1231,1.939,1269,2.43,1332,2.072,1337,2.231,1347,1.638,1357,3.889,1360,3.572,1361,3.572,1498,2.43,1555,3.572,1567,3.572,1592,2.43,1694,2.697,1704,2.231,1825,3.612,1830,3.572,1831,2.697,1832,2.697,2012,2.43,2026,2.43,2027,3.572,2029,2.697,2030,2.697,2031,2.697,2032,2.697,2033,2.697,2034,2.697,2035,2.697,2036,2.697,2037,2.697,2038,2.697,2039,2.697,2040,2.697,2157,2.697,2159,3.965,2166,2.697,2167,3.965,2172,2.43,2175,2.43,2207,3.572,2212,2.231,2213,3.965,2215,2.697,2216,4.701,2217,2.697,2242,1.726,2245,2.43,2247,4.568,2253,2.697,2254,2.697,2255,2.697,2256,2.697,2257,2.697,2258,2.697,2276,3.965,2277,3.965,2278,2.697,2279,3.572,2280,3.965,2281,4.701,2370,2.697,2371,3.102,2372,3.102,2373,3.102,2374,3.102,2375,3.102,2376,3.102,2377,3.102,2378,3.102,2379,3.102,2380,3.102,2381,3.102,2382,3.102,2383,6.866,2384,3.102,2385,3.102,2386,3.102,2387,3.102,2388,3.102,2389,3.102,2390,3.102,2391,3.102,2392,3.102,2393,3.102,2394,3.102,2395,3.102,2396,3.102,2397,3.102,2398,4.56,2399,3.102,2400,6.642,2401,3.102,2402,3.102,2403,3.102,2404,3.102,2405,3.102,2406,3.102,2407,3.102,2408,3.102,2409,6.642,2410,3.102,2411,3.102,2412,3.102,2413,3.102,2414,3.102,2415,3.102,2416,3.102,2417,3.102,2418,3.102,2419,3.102,2420,3.102,2421,3.102,2422,4.56,2423,3.102,2424,3.102,2425,3.102,2426,3.102]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":301,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2367,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2194,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2218,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2186,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2202,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2195,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2185,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":941,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["1/1",{"_index":2206,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2191,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2197,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2180,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2178,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2177,"title":{},"body":{"coverage.html":{}}}],["1235535.svg",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":2200,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2179,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["15",{"_index":2198,"title":{},"body":{"coverage.html":{}}}],["151117.svg",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":2364,"title":{},"body":{"index.html":{}}}],["18",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["18.2.7",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1118,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["2/15",{"_index":2201,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":2187,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2037742.svg",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2183,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":2365,"title":{},"body":{"index.html":{}}}],["2997582.svg",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1114,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":2233,"title":{},"body":{"dependencies.html":{}}}],["3.670.0",{"_index":2232,"title":{},"body":{"dependencies.html":{}}}],["3/20",{"_index":2199,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":2189,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":1008,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameStateClientService.html":{}}}],["33",{"_index":2196,"title":{},"body":{"coverage.html":{}}}],["3386143.svg",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["367390.svg",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37",{"_index":2188,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["4/16",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["4412103.svg",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":919,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["6",{"_index":911,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["6/9",{"_index":2193,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["6606521.svg",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6850047.svg",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["7049525.svg",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7144060.svg",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7195612.svg",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7290921.svg",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7300296.svg",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":2190,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["_action",{"_index":2123,"title":{},"body":{"classes/Space.html":{}}}],["_drawpool",{"_index":1134,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":1730,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":2124,"title":{},"body":{"classes/Space.html":{}}}],["_setgamestate",{"_index":1733,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":1739,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":561,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["_transactionstate",{"_index":1731,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["abstract",{"_index":1257,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":1693,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":102,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{}}}],["accesstoken",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["accesstokenexpire",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"coverage.html":{}}}],["action.model",{"_index":2141,"title":{},"body":{"classes/Space.html":{}}}],["action_display_abundance",{"_index":2259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":2261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption_state",{"_index":1360,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["action_pawn",{"_index":2275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":2288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":2290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":2292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":2294,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":2296,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":2298,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayabundance",{"_index":2260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":2262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplaymanagerservice",{"_index":17,"title":{"injectables/ActionDisplayManagerService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["actiondisplayservice",{"_index":76,"title":{"interfaces/ActionDisplayService.html":{}},"body":{"interfaces/ActionDisplayService.html":{},"coverage.html":{}}}],["actiondisplayservices",{"_index":62,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["actiondisplayservices.map((service",{"_index":65,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["actionpawn",{"_index":101,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actionpawnamphibian",{"_index":2289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":2291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":2293,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawncomponent",{"_index":80,"title":{"components/ActionPawnComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnforheader",{"_index":398,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawninsect",{"_index":2295,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnmammal",{"_index":2297,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnpiece",{"_index":105,"title":{"interfaces/ActionPawnPiece.html":{}},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["actionpawnpile",{"_index":323,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["actionpawnpileid",{"_index":526,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["actionpawnpilelength",{"_index":399,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnreptile",{"_index":2299,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawns",{"_index":201,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnspacecomponent",{"_index":136,"title":{"components/ActionPawnSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnspaces",{"_index":225,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnssubject",{"_index":226,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actions",{"_index":1723,"title":{},"body":{"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{}}}],["activatedroute",{"_index":1027,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["acts",{"_index":1961,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["actual_component",{"_index":173,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaption",{"_index":49,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaptionactiondisplayarea",{"_index":1376,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["adaptionactiondisplayarea.nextavailablespace(spacekindenum.element",{"_index":1379,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["adaptionactiondisplaycardcomponent",{"_index":138,"title":{"components/AdaptionActionDisplayCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["adaptionactiondisplayservice",{"_index":30,"title":{"injectables/AdaptionActionDisplayService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["adaptionarea",{"_index":1049,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["add",{"_index":510,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["add_circle",{"_index":1876,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["addactionpawn",{"_index":230,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["addactionpawn(index",{"_index":240,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["added",{"_index":373,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameStateStoreService.html":{}}}],["addedelements",{"_index":378,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addedelementspaces",{"_index":356,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addelement",{"_index":459,"title":{},"body":{"classes/AnimalElements.html":{}}}],["addelement(element",{"_index":362,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addfriend",{"_index":866,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/PlayerService.html":{}}}],["addfriend(playerid",{"_index":887,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["addfriend(username",{"_index":2053,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfriendtogame",{"_index":867,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["addfriendtogame(playerid",{"_index":890,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["addpiece",{"_index":2125,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":2132,"title":{},"body":{"classes/Space.html":{}}}],["adds",{"_index":662,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["alias",{"_index":2181,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2369,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allelements",{"_index":375,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["already",{"_index":981,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["always",{"_index":1998,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["amount",{"_index":1186,"title":{},"body":{"classes/Faction.html":{}}}],["amphibian",{"_index":2253,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["amphibian_element",{"_index":2263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":2264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular/animations",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":435,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1424,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["angular/compiler",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":927,"title":{},"body":{"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":928,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/button",{"_index":929,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/card",{"_index":208,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/chips",{"_index":933,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/material/form",{"_index":924,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/grid",{"_index":429,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/icon",{"_index":932,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/material/input",{"_index":930,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/progress",{"_index":1038,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["angular/material/snack",{"_index":935,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/table",{"_index":1861,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/tooltip",{"_index":934,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/platform",{"_index":2229,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":552,"title":{},"body":{"components/AppComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/NavigateService.html":{},"dependencies.html":{}}}],["animal",{"_index":141,"title":{"classes/Animal.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animal(animalconfig",{"_index":522,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animal.actionpawn.length$.subscribe((length",{"_index":451,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.actionpawn.pullone",{"_index":1080,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.constant",{"_index":1110,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{}}}],["animal.elements.addelement(element",{"_index":1087,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.elements.elements$.subscribe((elements",{"_index":448,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.id",{"_index":444,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.species.length$.subscribe((length",{"_index":453,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalbyid",{"_index":473,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalcard",{"_index":1390,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["animalcardcomponent",{"_index":140,"title":{"components/AnimalCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animalconfig",{"_index":328,"title":{"interfaces/AnimalConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["animalelements",{"_index":324,"title":{"classes/AnimalElements.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["animalelements(config.elementarea",{"_index":388,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["animalenum",{"_index":1109,"title":{},"body":{"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":1112,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":1116,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":1120,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":1123,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":1126,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":1129,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalfactory",{"_index":477,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalfactory(animalconfig",{"_index":485,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalkind",{"_index":177,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["animalproviderservice",{"_index":406,"title":{"injectables/AnimalProviderService.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["animalreadysubject",{"_index":1462,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalreadysubject.asobservable",{"_index":1470,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalreadysubject.next(true",{"_index":1468,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animals",{"_index":474,"title":{},"body":{"injectables/AnimalProviderService.html":{},"miscellaneous/variables.html":{}}}],["animals.find((animal",{"_index":443,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animals.length",{"_index":1466,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalsready",{"_index":1445,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalssubject",{"_index":475,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalsubscription",{"_index":1463,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["anything",{"_index":627,"title":{},"body":{"classes/Area.html":{}}}],["api",{"_index":179,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["apiurlinterceptor",{"_index":2170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiurlinterceptor(req",{"_index":2319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":92,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["app.component.html",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":142,"title":{"components/AppComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":1581,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":1583,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(oldstate",{"_index":1584,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":1608,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":1627,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":1589,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":2254,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arachnid_element",{"_index":2265,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":2266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":227,"title":{"classes/Area.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area(areastate",{"_index":1508,"title":{},"body":{"injectables/GameService.html":{}}}],["area.constant",{"_index":1108,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["areaid",{"_index":1103,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":270,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":1115,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":1119,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":1122,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":1125,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":1128,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":1131,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaids",{"_index":533,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaids.has(elementareaid",{"_index":535,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["arearegistryservice",{"_index":237,"title":{"injectables/AreaRegistryService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":484,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaservice",{"_index":1699,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["areastate",{"_index":567,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["areastateservice",{"_index":643,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":645,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["array",{"_index":669,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{}}}],["array.from",{"_index":917,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["array.isarray(elements",{"_index":1216,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{}}}],["arrays",{"_index":1317,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["assignedanimal",{"_index":1386,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["associated",{"_index":652,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["assume",{"_index":2011,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["async",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/NavigateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["auth/auth.service",{"_index":1425,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/PlayerService.html":{}}}],["authenticationresult",{"_index":822,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authenticationresulttype",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["authflow",{"_index":814,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authguard",{"_index":2167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":2172,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor(req",{"_index":2324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authparameters",{"_index":818,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authresult",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth(authresult",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":711,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["available",{"_index":312,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["availablefriends",{"_index":857,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["availablespace",{"_index":363,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace.addpiece(element",{"_index":365,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespaces",{"_index":632,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces.length",{"_index":633,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces[0",{"_index":634,"title":{},"body":{"classes/Area.html":{}}}],["await",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/NavigateService.html":{},"injectables/PlayerService.html":{}}}],["aws",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["back",{"_index":1194,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{}}}],["bag",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":936,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["base",{"_index":1258,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["based",{"_index":1722,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["before",{"_index":306,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":43,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{}}}],["behaviorsubject(false",{"_index":45,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/GameReadyService.html":{}}}],["behaviorsubject(this._gamestate",{"_index":1778,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.actionpawns",{"_index":254,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.checkisloggedin",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.currentplayer",{"_index":2060,"title":{},"body":{"injectables/PlayerService.html":{}}}],["behaviorsubject(this.elements",{"_index":261,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.length",{"_index":1988,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["behaviorsubject(this.ready",{"_index":1150,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["behaviorsubject(this.spaces",{"_index":592,"title":{},"body":{"classes/Area.html":{}}}],["behaviorsubject(this.state",{"_index":1247,"title":{},"body":{"classes/GameElement.html":{}}}],["behaviorsubject>(new",{"_index":671,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":1300,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["bird",{"_index":2255,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bird_element",{"_index":2267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":2268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blur",{"_index":2099,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["boolean",{"_index":70,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":612,"title":{},"body":{"classes/Area.html":{}}}],["browser",{"_index":2230,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1338,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["build(gametitle",{"_index":1560,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["build(playerids",{"_index":1345,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["buildactiondisplay",{"_index":1339,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildadaptionactiondisplay",{"_index":1340,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildanimal",{"_index":478,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimal(faction",{"_index":487,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimals",{"_index":479,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildelementdrawpool",{"_index":1341,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildfactions",{"_index":1342,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildfactions(playerids",{"_index":1351,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["building",{"_index":507,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["built",{"_index":1364,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["call",{"_index":1642,"title":{},"body":{"injectables/GameStateService.html":{}}}],["called",{"_index":1728,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":1729,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["canactivatefn",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":197,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card'},{'name",{"_index":139,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["card.component",{"_index":1064,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["card.component.html",{"_index":199,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.scss",{"_index":200,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts",{"_index":194,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:21",{"_index":207,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:22",{"_index":204,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:26",{"_index":205,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:36",{"_index":410,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:37",{"_index":422,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:38",{"_index":423,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:39",{"_index":418,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:40",{"_index":424,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:41",{"_index":416,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:42",{"_index":421,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:44",{"_index":408,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:51",{"_index":413,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:55",{"_index":412,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:76",{"_index":411,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card/adaption",{"_index":193,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["card/animal",{"_index":393,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["case",{"_index":1727,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["catch",{"_index":825,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{}}}],["catch((error",{"_index":2067,"title":{},"body":{"injectables/PlayerService.html":{}}}],["central",{"_index":694,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["change",{"_index":437,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["changedetection",{"_index":89,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy",{"_index":114,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":90,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changes",{"_index":697,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["characters",{"_index":2113,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["checked",{"_index":2341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkisloggedin",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":58,"title":{"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"coverage.html":{}}}],["classes",{"_index":320,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"index.html":{}}}],["cleanupgame",{"_index":1475,"title":{},"body":{"injectables/GameService.html":{}}}],["clear",{"_index":984,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["cleared",{"_index":305,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["client.service",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["client.service.ts",{"_index":786,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:12",{"_index":1406,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:14",{"_index":1533,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:15",{"_index":1534,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:16",{"_index":1532,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:17",{"_index":792,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateClientService.html":{}}}],["client.service.ts:18",{"_index":1411,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:20",{"_index":801,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:21",{"_index":1525,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:22",{"_index":1414,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:31",{"_index":1409,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:32",{"_index":1526,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:35",{"_index":1423,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:38",{"_index":1529,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:39",{"_index":1416,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:43",{"_index":1419,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:44",{"_index":798,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:47",{"_index":1417,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:48",{"_index":804,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:51",{"_index":1413,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:60",{"_index":1421,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:70",{"_index":796,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["clientid",{"_index":816,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["close",{"_index":1006,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["code",{"_index":795,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"injectables/SignUpService.html":{}}}],["code).then((success",{"_index":2087,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["cognito",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["cognitoclient",{"_index":793,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoclientservice",{"_index":722,"title":{"injectables/CognitoClientService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["cognitoidentityproviderclient",{"_index":791,"title":{},"body":{"injectables/CognitoClientService.html":{},"miscellaneous/variables.html":{}}}],["cognitoidtokenjwt",{"_index":800,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["combinelatest",{"_index":51,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["combinelatest(readyobs",{"_index":67,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["combinelatestwith",{"_index":269,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{}}}],["combinelatestwith(this.arearegistryservice.registeredids",{"_index":278,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["combinelatestwith(this.pileregistryservice.registeredids",{"_index":532,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["command",{"_index":819,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["commit",{"_index":1671,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":1609,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":1590,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate.gameelements",{"_index":1594,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":2000,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["complete",{"_index":1435,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["completegame",{"_index":1396,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["completegame(gameid",{"_index":1408,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["component",{"_index":79,"title":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":134,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["components",{"_index":81,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"index.html":{}}}],["computed",{"_index":414,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["config",{"_index":330,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["config.constant",{"_index":349,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["config.constant.ts",{"_index":1102,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.elementconfig",{"_index":389,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.faction",{"_index":382,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.ts",{"_index":2027,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":169,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["confirmation",{"_index":2089,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["confirmationcode",{"_index":831,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirming",{"_index":835,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignup",{"_index":787,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignup(username",{"_index":794,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignupcommand",{"_index":805,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignupcommand(input",{"_index":832,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["connect",{"_index":1520,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["connect(gameid",{"_index":1524,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["console",{"_index":1916,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["console.error('error",{"_index":834,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error('failed",{"_index":1009,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["console.error('unexpected",{"_index":824,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(e",{"_index":827,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(error",{"_index":968,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["console.log(`created",{"_index":1500,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log(authresult",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(json.stringify(gsp",{"_index":1552,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":61,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["constant/animal.constant",{"_index":178,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/SpeciesPiece.html":{}}}],["constant/area.constant",{"_index":272,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/element",{"_index":348,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/element.constant",{"_index":1171,"title":{},"body":{"interfaces/ElementPiece.html":{}}}],["constant/game",{"_index":1362,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{}}}],["constant/image.constant",{"_index":119,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["constant/local",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["constant/piece.constant",{"_index":428,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/pile",{"_index":498,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/pile.constant",{"_index":1157,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["constructor(adaptionactiondisplayservice",{"_index":29,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{}}}],["constructor(animalproviderservice",{"_index":405,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constructor(arearegistryservice",{"_index":236,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["constructor(arearegistrysvc",{"_index":480,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constructor(areastatesvc",{"_index":642,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(authservice",{"_index":1523,"title":{},"body":{"injectables/GameStateClientService.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(cognitoclient",{"_index":790,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["constructor(cognitoclientservice",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignUpService.html":{}}}],["constructor(config",{"_index":327,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["constructor(elementarea",{"_index":460,"title":{},"body":{"classes/AnimalElements.html":{}}}],["constructor(factionstatesvc",{"_index":1221,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(factorymap",{"_index":1557,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["constructor(fb",{"_index":878,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["constructor(formbuilder",{"_index":1918,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["constructor(gameelementstatesvc",{"_index":1274,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gameservice",{"_index":1851,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["constructor(gamestateservice",{"_index":1447,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["constructor(gamestatestore",{"_index":1621,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":1054,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["constructor(http",{"_index":1404,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["constructor(navigate",{"_index":1477,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(pile",{"_index":2018,"title":{},"body":{"classes/PileAdapter.html":{}}}],["constructor(pileregistrysvc",{"_index":1138,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":2041,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateClientService.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/SignUpService.html":{}}}],["constructor(protected",{"_index":678,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(route",{"_index":1026,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["constructor(router",{"_index":1936,"title":{},"body":{"injectables/NavigateService.html":{}}}],["constructor(state",{"_index":566,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}}}],["control",{"_index":952,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.invalid",{"_index":1002,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.seterrors",{"_index":971,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.seterrors(null",{"_index":974,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.value",{"_index":954,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["copied",{"_index":2333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["corresponding",{"_index":698,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["count",{"_index":1144,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["coverage",{"_index":2152,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":145,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStatePatchService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["create(oldstate",{"_index":1587,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["creategame",{"_index":868,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["creategame(game",{"_index":1410,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["creategame(otherplayers",{"_index":1481,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamepagecomponent",{"_index":144,"title":{"components/CreateGamePageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["creates",{"_index":1580,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["creating",{"_index":1014,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["current",{"_index":609,"title":{},"body":{"classes/Area.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentcount",{"_index":2005,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentitemcount",{"_index":2013,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentplayer",{"_index":1458,"title":{},"body":{"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["currentplayer()?.username",{"_index":1878,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["currentplayeranimal",{"_index":400,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["currentplayerfaction",{"_index":1050,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["currentplayerready",{"_index":1446,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentplayersubject",{"_index":1455,"title":{},"body":{"injectables/GameReadyService.html":{},"injectables/PlayerService.html":{}}}],["currentplayersubject.asobservable",{"_index":1461,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentplayersubject.next(true",{"_index":1459,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentplayersubscription",{"_index":1456,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentuser",{"_index":858,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["custom",{"_index":2348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["decode",{"_index":812,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["decodejwttoken",{"_index":788,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decodejwttoken(token",{"_index":797,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decreasescore",{"_index":1179,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":1184,"title":{},"body":{"classes/Faction.html":{}}}],["deepclone",{"_index":1241,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Space.html":{}}}],["deepclone(action_display_adaption_state",{"_index":1377,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["deepclone(emptygameelementstates",{"_index":1368,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["deepclone(oldstate",{"_index":1596,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["deepclone(this._gamestate",{"_index":1801,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":1251,"title":{},"body":{"classes/GameElement.html":{}}}],["deepclone(this._transactionstate",{"_index":1802,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":2204,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":2325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deepfreeze",{"_index":2207,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deepfreeze(obj",{"_index":2330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":40,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":425,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":2356,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultpiecefactory(piecekindenum.action_pawn",{"_index":455,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["defaults",{"_index":1975,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["defined",{"_index":31,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["definition",{"_index":1962,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["delay",{"_index":1547,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["delete",{"_index":1879,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["deletedstoragekey",{"_index":1882,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deletedstoragekey(key",{"_index":1885,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["demand",{"_index":1365,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["dependencies",{"_index":2222,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depends",{"_index":1266,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["description",{"_index":649,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":1811,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":2327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["different",{"_index":1272,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["directive",{"_index":132,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["directives",{"_index":172,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["disconnect",{"_index":1521,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["disconnectfrombackend",{"_index":1610,"title":{},"body":{"injectables/GameStateService.html":{}}}],["display",{"_index":21,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["display.model.ts",{"_index":78,"title":{},"body":{"interfaces/ActionDisplayService.html":{},"coverage.html":{}}}],["display.service",{"_index":50,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["display.service.ts",{"_index":224,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:100",{"_index":245,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:18",{"_index":256,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:19",{"_index":253,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:20",{"_index":250,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:21",{"_index":255,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:22",{"_index":252,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:23",{"_index":260,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:24",{"_index":257,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:25",{"_index":262,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:26",{"_index":259,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:27",{"_index":263,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:28",{"_index":239,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:37",{"_index":243,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:69",{"_index":249,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:86",{"_index":247,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:90",{"_index":248,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:96",{"_index":242,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display/action",{"_index":20,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["display/adaption",{"_index":192,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["display/space/action",{"_index":182,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"coverage.html":{}}}],["display/space/element",{"_index":1066,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component",{"_index":1065,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["display/space/eyeball/eyeball.component.ts",{"_index":1173,"title":{},"body":{"components/EyeballComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component.ts:14",{"_index":1177,"title":{},"body":{"components/EyeballComponent.html":{}}}],["distinctuntilchanged",{"_index":1984,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1254,"title":{},"body":{"classes/GameElement.html":{}}}],["dom",{"_index":83,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["dominant",{"_index":149,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dominant_species",{"_index":2283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dominantspeciesgamecomponent",{"_index":148,"title":{"components/DominantSpeciesGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["done",{"_index":622,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":153,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["drawpool",{"_index":1137,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["drawpoolgamecomponent",{"_index":152,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["duplicate",{"_index":982,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["duration",{"_index":1007,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["during",{"_index":1725,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":2231,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":826,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["each",{"_index":1704,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["eagle",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":131,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element'},{'name",{"_index":156,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["element.component.html",{"_index":1091,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.component.scss",{"_index":1092,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.constant",{"_index":1107,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["element.id",{"_index":1297,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":370,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["element.model",{"_index":352,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["element.model.ts",{"_index":1232,"title":{},"body":{"classes/GameElement.html":{},"coverage.html":{}}}],["element.model.ts:16",{"_index":1238,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:20",{"_index":1240,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:28",{"_index":1237,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:36",{"_index":1236,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:6",{"_index":1234,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:7",{"_index":1235,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:8",{"_index":1233,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":1326,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":1329,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":265,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["element/element.component",{"_index":189,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["element/faction",{"_index":500,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["element/game",{"_index":1256,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":501,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["element_draw_pool_state",{"_index":1361,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementarea",{"_index":353,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["elementareaid",{"_index":523,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["elementareaidsbyanimal",{"_index":2213,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbyid",{"_index":638,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementcomponent",{"_index":155,"title":{"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementconfig",{"_index":347,"title":{"interfaces/ElementConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{}}}],["elementconfig.inherentcount",{"_index":360,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementconfigbyanimal",{"_index":499,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpool",{"_index":1336,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["elementdrawpoolservice",{"_index":238,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["elementenum",{"_index":1106,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":1124,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":1117,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":1127,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":1121,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":1130,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":1113,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":1105,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["elementpiece",{"_index":212,"title":{"interfaces/ElementPiece.html":{}},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["elementpiece).filter(isnotnull",{"_index":380,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elements",{"_index":202,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.length).fill(null",{"_index":450,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["elementsarray",{"_index":1215,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{}}}],["elementsarray.foreach((element",{"_index":1292,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elementsarray.foreach((faction",{"_index":1218,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elementspace",{"_index":367,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementSpaceComponent.html":{},"miscellaneous/variables.html":{}}}],["elementspace.removepiece",{"_index":371,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacecomponent",{"_index":157,"title":{"components/ElementSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementspaces",{"_index":228,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.length",{"_index":359,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.slice(elementconfig.inherentcount",{"_index":361,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacesstate",{"_index":1391,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["elementssubject",{"_index":229,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementstate",{"_index":684,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["email",{"_index":803,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["emit",{"_index":1719,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitlength",{"_index":1955,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emitpilestate",{"_index":1956,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emits",{"_index":665,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["emitstate",{"_index":565,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["emitted",{"_index":1193,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{}}}],["empty",{"_index":987,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emptycontrol",{"_index":990,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["emptycontrol.setvalue(playerid",{"_index":994,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["emptyelementspace",{"_index":457,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptyelementspaces",{"_index":401,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptygameelementstates",{"_index":1357,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptygamestate",{"_index":1830,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1373,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/area.model",{"_index":268,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/faction.model",{"_index":344,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/game",{"_index":1358,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/piece.model",{"_index":426,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/pile.model",{"_index":346,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/space.model",{"_index":274,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/service/game",{"_index":264,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["engine/service/navigate.service",{"_index":1040,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["engine/util/misc",{"_index":121,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/util/predicate",{"_index":216,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensure",{"_index":975,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["ensuredefined",{"_index":273,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensuredefined(authresult.idtoken",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(authresult.refreshtoken",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt.exp",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt['cognito:username",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(this._gamestate).gameelements",{"_index":1799,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].addpiece(actionpawn",{"_index":318,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].removepiece",{"_index":319,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.area).nextavailablespace(spacekindenum.element",{"_index":309,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.authservice.playerauthdata",{"_index":1539,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["ensuredefined(this.currentplayer).friends",{"_index":2073,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.filter",{"_index":2074,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.push(username",{"_index":2071,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentuser).friends.filter",{"_index":998,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ensuredefined(this.currentuser).friends.includes(playerid",{"_index":1003,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ensuredefined(this.elementarea",{"_index":376,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).nextavailablespace",{"_index":364,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).spaces",{"_index":357,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementconfig",{"_index":358,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementspaces",{"_index":314,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementspaces)[index].removepiece",{"_index":313,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.gamestatestore.gamestate",{"_index":1673,"title":{},"body":{"injectables/GameStateService.html":{}}}],["ensuredefined(this.playerservice.currentplayer).username",{"_index":420,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ensuredefined(value",{"_index":2336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensures",{"_index":1809,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["enter",{"_index":2110,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["entire",{"_index":1715,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":703,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":1327,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":1323,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enumerations",{"_index":2243,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":809,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateClientService.html":{}}}],["environment.cognito.clientid",{"_index":817,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.region",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.stateendpoint}/?token=${playerauthdata.accesstoken}&gameid=${gameid}&playerid=${playerauthdata.username",{"_index":1542,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["environments/environment",{"_index":810,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateClientService.html":{}}}],["equal",{"_index":2328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":833,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":1807,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":1253,"title":{},"body":{"classes/GameElement.html":{}}}],["error('can",{"_index":1798,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('drawpool",{"_index":1380,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["error('element",{"_index":303,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["error('gamestate",{"_index":1804,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":1554,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":311,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["error('number",{"_index":608,"title":{},"body":{"classes/Area.html":{}}}],["error('pile",{"_index":1165,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["error('space",{"_index":2146,"title":{},"body":{"classes/Space.html":{}}}],["error('state",{"_index":604,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["error('transaction",{"_index":1677,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":372,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["error(`element",{"_index":1296,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":1331,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":1795,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(`unable",{"_index":1576,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["errorhandlerinterceptor",{"_index":2175,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorhandlerinterceptor(req",{"_index":2357,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errormessage",{"_index":1903,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["errormessages",{"_index":859,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["errormessages[i",{"_index":1015,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["eventcoalescing",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":2346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":1255,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["extends",{"_index":175,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SpeciesPiece.html":{}}}],["eye",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeball",{"_index":1174,"title":{},"body":{"components/EyeballComponent.html":{},"miscellaneous/variables.html":{}}}],["eyeball'},{'name",{"_index":159,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["eyeball.component.html",{"_index":1175,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball.component.scss",{"_index":1176,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball/eyeball.component",{"_index":191,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["eyeballcomponent",{"_index":158,"title":{"components/EyeballComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["faction",{"_index":325,"title":{"classes/Faction.html":{}},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction().name",{"_index":456,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["faction(state",{"_index":1511,"title":{},"body":{"injectables/GameService.html":{}}}],["faction.id",{"_index":540,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.id).actionpawn",{"_index":528,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).areaid",{"_index":525,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).species",{"_index":530,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.ownerid",{"_index":1072,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionassignment",{"_index":1206,"title":{"interfaces/FactionAssignment.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.factionid",{"_index":515,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionassignments.map((factionassignment",{"_index":514,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["factionassignmentsubject",{"_index":1210,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionid",{"_index":1207,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionids",{"_index":513,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess",{"_index":516,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess.foreach((factionid",{"_index":519,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionregistryservice",{"_index":481,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":1055,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factions",{"_index":1051,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionstate",{"_index":1201,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["factionstateservice",{"_index":1209,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":1213,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":1964,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["factory.service",{"_index":1566,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["factory.service.ts",{"_index":1334,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{}}}],["factory.service.ts:25",{"_index":1344,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:26",{"_index":1343,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:33",{"_index":1346,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:42",{"_index":1350,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:46",{"_index":1349,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:65",{"_index":1348,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:69",{"_index":1352,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory_map",{"_index":1567,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["factorybygametitle",{"_index":1556,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["factorymap",{"_index":1559,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["failed",{"_index":1914,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["false",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1242,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["fb",{"_index":886,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetcherror",{"_index":972,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetchgames",{"_index":1849,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["fetching",{"_index":970,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetchplayers",{"_index":869,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetchplayers(index",{"_index":893,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["field",{"_index":925,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["filter",{"_index":52,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["filter((ids",{"_index":1075,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((isready",{"_index":1044,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["filter((player",{"_index":1866,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filter((registeredids",{"_index":1159,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["filter((serviceready",{"_index":72,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["filter((space",{"_index":315,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["filter(isnotundefined",{"_index":446,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["filteredplayers",{"_index":860,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["filterplayers",{"_index":1850,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filterplayers(game",{"_index":1856,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["findplayers",{"_index":1397,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["findplayers(username",{"_index":1412,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["first",{"_index":53,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{}}}],["first()).subscribe",{"_index":218,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["formarray",{"_index":913,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["formbuilder",{"_index":879,"title":{},"body":{"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formcontrol",{"_index":926,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["formgroup",{"_index":1897,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formsmodule",{"_index":842,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["found",{"_index":2349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["friend",{"_index":999,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["friends",{"_index":1017,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{}}}],["friendusername",{"_index":2075,"title":{},"body":{"injectables/PlayerService.html":{}}}],["function",{"_index":1744,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2312,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":146,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["game'},{'name",{"_index":151,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["game.component",{"_index":555,"title":{},"body":{"components/AppComponent.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["game.component.html",{"_index":1022,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":1023,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":1020,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:18",{"_index":1029,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["game.component.ts:26",{"_index":1035,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["game.component.ts:39",{"_index":1061,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:40",{"_index":1062,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:41",{"_index":1060,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:42",{"_index":1056,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:43",{"_index":1034,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["game.component.ts:47",{"_index":1032,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["game.component.ts:53",{"_index":1058,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:73",{"_index":1059,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.gameid",{"_index":1877,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.host",{"_index":1867,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.playerids",{"_index":1865,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game/component/draw",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["game/dominant",{"_index":1019,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"coverage.html":{}}}],["game/draw",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game/service/game",{"_index":1565,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gamecollection",{"_index":1426,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gamecollection.games",{"_index":1433,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gameelement",{"_index":557,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelement's",{"_index":1313,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["gameelement:28",{"_index":1191,"title":{},"body":{"classes/Faction.html":{}}}],["gameelement:31",{"_index":583,"title":{},"body":{"classes/Area.html":{}}}],["gameelement:36",{"_index":585,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:39",{"_index":1980,"title":{},"body":{"classes/Pile.html":{}}}],["gameelement:6",{"_index":574,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:7",{"_index":576,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:8",{"_index":575,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement`'s",{"_index":1320,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["gameelementregistryservice",{"_index":637,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:31",{"_index":1223,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelementregistryservice:35",{"_index":673,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:36",{"_index":670,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:37",{"_index":672,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:39",{"_index":675,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:50",{"_index":646,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:65",{"_index":655,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelements",{"_index":1832,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["gameelementsfactory",{"_index":1573,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementsfactory.build(playerids",{"_index":1575,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementsfactoryclass",{"_index":1571,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementstate",{"_index":696,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstates",{"_index":1337,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["gameelementstateservice",{"_index":667,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:103",{"_index":700,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:14",{"_index":686,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:18",{"_index":688,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:30",{"_index":705,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:31",{"_index":704,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:70",{"_index":691,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:88",{"_index":690,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesfactoryservice",{"_index":1332,"title":{"classes/GameElementStatesFactoryService.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gameelementstatesvc",{"_index":1277,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gameid",{"_index":1033,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/NavigateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamemanagementclientservice",{"_index":1393,"title":{"injectables/GameManagementClientService.html":{}},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["gameready",{"_index":1024,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["gamereadyservice",{"_index":1028,"title":{"injectables/GameReadyService.html":{}},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["games",{"_index":1847,"title":{},"body":{"components/LobbyPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["gameservice",{"_index":884,"title":{"injectables/GameService.html":{}},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["gamestate",{"_index":1195,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamestate.gameelements",{"_index":1574,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gamestate.gameelements.area",{"_index":1816,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.area.foreach((areastate",{"_index":1506,"title":{},"body":{"injectables/GameService.html":{}}}],["gamestate.gameelements.faction",{"_index":1819,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.faction.foreach((state",{"_index":1509,"title":{},"body":{"injectables/GameService.html":{}}}],["gamestate.gameelements.pile",{"_index":1822,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.pile.foreach((state",{"_index":1512,"title":{},"body":{"injectables/GameService.html":{}}}],["gamestate.playerids",{"_index":1781,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateclient",{"_index":1624,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":1516,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":1752,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateelements",{"_index":1696,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateinitializationservice",{"_index":1366,"title":{"injectables/GameStateInitializationService.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["gamestatepatch",{"_index":1528,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["gamestatepatches",{"_index":1582,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":1578,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":701,"title":{"injectables/GameStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gamestateservice's",{"_index":695,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["gamestateservice`'s",{"_index":1321,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["gamestatestore",{"_index":1626,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":1622,"title":{"injectables/GameStateStoreService.html":{}},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":1732,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":1057,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["gamestoreservice",{"_index":1827,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["gametablecolumns",{"_index":1848,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["gametitle",{"_index":1490,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/NavigateService.html":{},"miscellaneous/enumerations.html":{}}}],["gametitle.dominant_species",{"_index":1498,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"miscellaneous/variables.html":{}}}],["gecko",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(id",{"_index":490,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getaction",{"_index":2137,"title":{},"body":{"classes/Space.html":{}}}],["getactionpawn",{"_index":338,"title":{},"body":{"classes/Animal.html":{}}}],["getactionpawnforheader",{"_index":403,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getaddedelements",{"_index":469,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getaddedelementspaces",{"_index":465,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getallelements",{"_index":467,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getanimal",{"_index":404,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getarea",{"_index":1654,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":1152,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelements",{"_index":340,"title":{},"body":{"classes/Animal.html":{}}}],["getelementstate",{"_index":706,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getemptyinitialgamestate",{"_index":1563,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getemptyinitialgamestate(gameid",{"_index":1570,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/functions.html":{}}}],["getemptyinitialgamestate(gamestate.gameid",{"_index":1780,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getentity",{"_index":683,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":689,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":1656,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamesforloggedinplayer",{"_index":1398,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["getgamestate",{"_index":1768,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getid",{"_index":335,"title":{},"body":{"classes/Animal.html":{},"classes/GameElement.html":{}}}],["getimgpath",{"_index":112,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getkind",{"_index":1094,"title":{},"body":{"components/ElementComponent.html":{}}}],["getlatestgamestate",{"_index":1399,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getlatestgamestate(gameid",{"_index":1415,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getlength",{"_index":1154,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["getloggedinplayer",{"_index":1400,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["getloggedinusername",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["getname",{"_index":110,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{}}}],["getobservableforkey",{"_index":1734,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":1742,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":120,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":524,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["getorthrow(imgpathbykind",{"_index":128,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getorthrow(map",{"_index":2343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorthrow(pileidsbyanimal",{"_index":527,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.animalbyid",{"_index":545,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.elementbyid",{"_index":1290,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["getowner",{"_index":108,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["getownerid",{"_index":1197,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":2139,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":1658,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getplayer",{"_index":1401,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayer(username",{"_index":1418,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayerauthdata",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["getplayerids",{"_index":1652,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getscore",{"_index":1199,"title":{},"body":{"classes/Faction.html":{}}}],["getspecies",{"_index":342,"title":{},"body":{"classes/Animal.html":{}}}],["getstate",{"_index":1239,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["getstoragekey",{"_index":1883,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getstoragekey(key",{"_index":1887,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["gettransactionstate",{"_index":1770,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":653,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["grass",{"_index":2276,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grasshopper",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grub",{"_index":2277,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gsp",{"_index":623,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["gsp.patch",{"_index":1598,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gsp.patchid",{"_index":1601,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":1623,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gspsubject",{"_index":1517,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["handle",{"_index":1267,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["handler.interceptor.ts",{"_index":2174,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handles",{"_index":1302,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["happens",{"_index":1192,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{}}}],["hasinvalidplayer",{"_index":870,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["hasvalidplayers",{"_index":871,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["here",{"_index":1922,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["host",{"_index":1495,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["html",{"_index":130,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["http",{"_index":1407,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httpclient",{"_index":1405,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httphandlerfn",{"_index":2322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httprequest",{"_index":2320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["human",{"_index":1488,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["humanid",{"_index":1487,"title":{},"body":{"injectables/GameService.html":{}}}],["i.e",{"_index":2337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["ids",{"_index":666,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["ids.has(areaidenum.action_display_adaption",{"_index":1076,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["imgpath",{"_index":104,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["imgpathbykind",{"_index":118,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":1305,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["implementations",{"_index":1271,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["implements",{"_index":195,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"components/LogoutPageComponent.html":{}}}],["import",{"_index":47,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["imports",{"_index":122,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["included",{"_index":1960,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["increasescore",{"_index":1180,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":1187,"title":{},"body":{"classes/Faction.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":2338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["individual",{"_index":1301,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["information",{"_index":1917,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["inherent",{"_index":1392,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["inherentcount",{"_index":1104,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":573,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["initial",{"_index":1577,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["initialgameelementstatesfactory",{"_index":1335,"title":{"interfaces/InitialGameElementStatesFactory.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{}}}],["initialgameelementstatesfactoryconstructor",{"_index":1564,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["initialgamestate",{"_index":1496,"title":{},"body":{"injectables/GameService.html":{}}}],["initialization",{"_index":1381,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"miscellaneous/functions.html":{}}}],["initialization.service",{"_index":1489,"title":{},"body":{"injectables/GameService.html":{}}}],["initialization.service.ts",{"_index":1555,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization.service.ts:18",{"_index":1558,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["initialization.service.ts:28",{"_index":1561,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["initialize",{"_index":231,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"injectables/PileStateService.html":{}}}],["initializegame",{"_index":1025,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{}}}],["initializegame(gameid",{"_index":1031,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{}}}],["initializegamestate",{"_index":1611,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["initializegamestate(gamestate",{"_index":1631,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["initializes",{"_index":692,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["initiateauthcommand",{"_index":806,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommand(input",{"_index":820,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommandinput",{"_index":807,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["inject",{"_index":1562,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["inject('factory_map",{"_index":1568,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["inject(authservice).checkisloggedin",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(navigateservice).tologinpage",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":16,"title":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["injectables",{"_index":18,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"index.html":{}}}],["input",{"_index":115,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["input.required",{"_index":439,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["inputs",{"_index":100,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["insect",{"_index":2256,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["insect_element",{"_index":2269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":2270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instances",{"_index":659,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["instantiated",{"_index":1695,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["intended",{"_index":2332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interact",{"_index":1306,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{}}}],["interested",{"_index":628,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameStateService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{},"index.html":{}}}],["internal",{"_index":663,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["invalid",{"_index":978,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["inventory",{"_index":2012,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["isfalse",{"_index":2209,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfalse(value",{"_index":2358,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfriend",{"_index":872,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isfriend(playerid",{"_index":897,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isgamefullorinvalid",{"_index":873,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isloggedin",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlayerService.html":{}}}],["isloggedinsubject",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotnull",{"_index":275,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":2359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":433,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(value",{"_index":2360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":2210,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(value",{"_index":2361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isplayeralreadyadded",{"_index":992,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isready",{"_index":279,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["istrue",{"_index":215,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istrue(value",{"_index":2362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":614,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["item.id",{"_index":1792,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["items",{"_index":2354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["itself",{"_index":2342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["joingame",{"_index":1476,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["joingame(gameid",{"_index":1485,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["joins",{"_index":1829,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["json",{"_index":1243,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["json.parse(playerauthdata",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(element",{"_index":374,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["json.stringify(message",{"_index":1545,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["json.stringify(newgamestateelement",{"_index":1796,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["json.stringify(this.authresulttoplayerauth(authresult",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":811,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["jwtdecode(token",{"_index":828,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["k",{"_index":2344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["keeps",{"_index":1262,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["key",{"_index":1707,"title":{},"body":{"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":1785,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":1702,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":580,"title":{},"body":{"classes/Area.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":1427,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/game/${gameid}/state",{"_index":1437,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/player/${username",{"_index":1438,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/game/${gameid",{"_index":1434,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/player/${player.username",{"_index":1442,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post('/game",{"_index":1429,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post(`/game/${gamestate.gameid}/state",{"_index":1436,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["leaf",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaving",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":129,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["length",{"_index":918,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["lengthsubject",{"_index":1953,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["level",{"_index":1701,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["list",{"_index":430,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["listening",{"_index":1303,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["lobby",{"_index":161,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["lobbypagecomponent",{"_index":160,"title":{"components/LobbyPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["local",{"_index":619,"title":{},"body":{"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/GameStateStoreService.html":{}}}],["localstorage.getitem(key",{"_index":1892,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1891,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":1893,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstoragekey",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["localstoragekey.player_auth_data",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorageservice",{"_index":723,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["lodash",{"_index":1356,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"dependencies.html":{}}}],["log",{"_index":1052,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["logged",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedinusername",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":163,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["login(username",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["loginform",{"_index":1902,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["loginformdata",{"_index":1894,"title":{"interfaces/LoginFormData.html":{}},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecomponent",{"_index":162,"title":{"components/LoginPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["logout",{"_index":165,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["logoutpagecomponent",{"_index":164,"title":{"components/LogoutPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["long",{"_index":2114,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["maintain",{"_index":1691,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["making",{"_index":1692,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":2257,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mammal_element",{"_index":2271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":2272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["managed",{"_index":1286,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["management",{"_index":1395,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["management/game",{"_index":1394,"title":{},"body":{"injectables/GameManagementClientService.html":{},"coverage.html":{}}}],["management/game.service",{"_index":923,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["management/game.service.ts",{"_index":1474,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["management/game.service.ts:20",{"_index":1478,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:32",{"_index":1482,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:49",{"_index":1483,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:53",{"_index":1480,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:57",{"_index":1486,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:61",{"_index":1484,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:75",{"_index":1479,"title":{},"body":{"injectables/GameService.html":{}}}],["management/player.service",{"_index":434,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{}}}],["management/player.service.ts",{"_index":2050,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["management/player.service.ts:12",{"_index":2058,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:13",{"_index":2061,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:16",{"_index":2052,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:40",{"_index":2055,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:45",{"_index":2054,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:51",{"_index":2057,"title":{},"body":{"injectables/PlayerService.html":{}}}],["manager.service",{"_index":1454,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["manager.service.ts",{"_index":22,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"coverage.html":{}}}],["manager.service.ts:10",{"_index":32,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:16",{"_index":36,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:9",{"_index":46,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manages",{"_index":1259,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["map",{"_index":54,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateInitializationService.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((animals",{"_index":442,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["map((serviceready",{"_index":69,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["map((space",{"_index":316,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["matautocomplete",{"_index":844,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matautocompletetrigger",{"_index":843,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matbutton",{"_index":846,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcard",{"_index":198,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardcontent",{"_index":1901,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardheader",{"_index":2093,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardtitle",{"_index":394,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matcell",{"_index":1838,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcelldef",{"_index":1844,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["match",{"_index":605,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["matches",{"_index":1763,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchip",{"_index":853,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["matchipset",{"_index":1846,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcolumndef",{"_index":1836,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matformfield",{"_index":840,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matformfieldmodule",{"_index":841,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matgridlist",{"_index":395,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matgridtile",{"_index":396,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matheadercell",{"_index":1837,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheadercelldef",{"_index":1843,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrow",{"_index":1839,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrowdef",{"_index":1841,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["maticon",{"_index":851,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["maticonbutton",{"_index":852,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matinput",{"_index":847,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matminifabbutton",{"_index":1845,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matoption",{"_index":845,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matprogressspinner",{"_index":1021,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["matrow",{"_index":1840,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matrowdef",{"_index":1842,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matsnackbar",{"_index":883,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["mattable",{"_index":1835,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["mattooltip",{"_index":854,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["max_players",{"_index":861,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["meat",{"_index":2278,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":1544,"title":{},"body":{"injectables/GameStateClientService.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":88,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["method",{"_index":661,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["minimize",{"_index":506,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["miscellaneous",{"_index":2242,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model/action",{"_index":116,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{}}}],["model/animal.model",{"_index":503,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["model/area.model",{"_index":676,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameService.html":{}}}],["model/element.model",{"_index":213,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{}}}],["model/faction.model",{"_index":1208,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameService.html":{}}}],["model/game",{"_index":1283,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/pile.model",{"_index":1492,"title":{},"body":{"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules",{"_index":2366,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monkey",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":658,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":880,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["navigate.service",{"_index":1493,"title":{},"body":{"injectables/GameService.html":{}}}],["navigateservice",{"_index":881,"title":{"injectables/NavigateService.html":{}},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["need",{"_index":611,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{}}}],["needs",{"_index":629,"title":{},"body":{"classes/Area.html":{}}}],["new",{"_index":44,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newdocument",{"_index":1599,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newgamestateelement",{"_index":1750,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":1793,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":584,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["newstate.gameelements",{"_index":1595,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.id",{"_index":602,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["newstate.kind",{"_index":2149,"title":{},"body":{"classes/Space.html":{}}}],["newstate.patchid",{"_index":1600,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.piece",{"_index":2150,"title":{},"body":{"classes/Space.html":{}}}],["newstate.space.foreach((spacestate",{"_index":610,"title":{},"body":{"classes/Area.html":{}}}],["newstate.space.length",{"_index":607,"title":{},"body":{"classes/Area.html":{}}}],["next",{"_index":2321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextactionpawnspaceindex",{"_index":1081,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextavailablespace",{"_index":563,"title":{},"body":{"classes/Area.html":{}}}],["nextavailablespace(kind",{"_index":578,"title":{},"body":{"classes/Area.html":{}}}],["nextelementspaceindex",{"_index":1083,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextspace",{"_index":308,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["nextspace.addpiece(element",{"_index":310,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["ngclass",{"_index":397,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ngforof",{"_index":848,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ngif",{"_index":849,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ngondestroy",{"_index":874,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["ngoninit",{"_index":203,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LogoutPageComponent.html":{}}}],["notifications",{"_index":626,"title":{},"body":{"classes/Area.html":{}}}],["notifies",{"_index":1264,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["notify",{"_index":613,"title":{},"body":{"classes/Area.html":{}}}],["null",{"_index":123,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":241,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/CreateGamePageComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PlayerAuthData.html":{}}}],["obj",{"_index":2335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":1716,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":1991,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["object1",{"_index":2329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":2326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":630,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":39,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":1703,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["observers",{"_index":1265,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["of(0",{"_index":1167,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["of(selector(gamestate",{"_index":1784,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["oldstate",{"_index":1586,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameelements",{"_index":1597,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameid",{"_index":1591,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.patchid",{"_index":1593,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":1753,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ondestroy",{"_index":839,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["one",{"_index":657,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["oninit",{"_index":196,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LogoutPageComponent.html":{}}}],["onplayerblur",{"_index":875,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onplayerblur(index",{"_index":902,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onplayerinput",{"_index":876,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onplayerinput(index",{"_index":904,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onpush",{"_index":438,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["onsubmit",{"_index":1907,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":1604,"title":{},"body":{"injectables/GameStateService.html":{}}}],["otherplayers",{"_index":1010,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameService.html":{}}}],["others",{"_index":1694,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":601,"title":{},"body":{"classes/Area.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["overview",{"_index":2363,"title":{"index.html":{}},"body":{"index.html":{}}}],["overwrites",{"_index":1717,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":103,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ownerid",{"_index":1182,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["package",{"_index":2221,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":171,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page'},{'name",{"_index":147,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.html",{"_index":855,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.scss",{"_index":856,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts",{"_index":838,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:118",{"_index":905,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:12",{"_index":1925,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:122",{"_index":903,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:164",{"_index":899,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:170",{"_index":891,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:18",{"_index":1926,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:184",{"_index":906,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:191",{"_index":896,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:195",{"_index":895,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:199",{"_index":888,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:211",{"_index":898,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:215",{"_index":892,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:22",{"_index":2091,"title":{},"body":{"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:23",{"_index":1921,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts:24",{"_index":1919,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts:36",{"_index":2090,"title":{},"body":{"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:37",{"_index":1920,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:41",{"_index":2104,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:49",{"_index":1859,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:50",{"_index":1860,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:51",{"_index":1852,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:52",{"_index":912,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:53",{"_index":914,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:54",{"_index":916,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:55",{"_index":908,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:56",{"_index":910,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:57",{"_index":909,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:58",{"_index":920,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:59",{"_index":907,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:60",{"_index":885,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:64",{"_index":1857,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:71",{"_index":1855,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:74",{"_index":901,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:75",{"_index":1854,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:79",{"_index":1853,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:84",{"_index":900,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["page.component.ts:90",{"_index":894,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page/create",{"_index":837,"title":{},"body":{"components/CreateGamePageComponent.html":{},"coverage.html":{}}}],["page/lobby",{"_index":1834,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":1896,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/logout",{"_index":1924,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["page/sign",{"_index":2078,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":1252,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1431,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["particular",{"_index":1710,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["passed",{"_index":1764,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["password",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["password).then((success",{"_index":1911,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["patch",{"_index":1244,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["patch.service",{"_index":1661,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":1579,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:12",{"_index":1588,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":1585,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patchid",{"_index":1592,"title":{},"body":{"injectables/GameStatePatchService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["pawn",{"_index":93,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pawn'},{'name",{"_index":135,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["pawn.component",{"_index":190,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.component.html",{"_index":97,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.scss",{"_index":99,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts",{"_index":87,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["pawn.component.ts:15",{"_index":107,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:17",{"_index":109,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:21",{"_index":111,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:25",{"_index":113,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.model",{"_index":117,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pawn.model.ts",{"_index":174,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["pawn/action",{"_index":86,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["pawns",{"_index":458,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["person_add",{"_index":1016,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["piece",{"_index":176,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":1983,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piececount",{"_index":2002,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piecefactory",{"_index":1954,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":427,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"miscellaneous/enumerations.html":{}}}],["pieces",{"_index":1147,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(null",{"_index":2008,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":2007,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount.length",{"_index":2003,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":2004,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pile",{"_index":345,"title":{"classes/Pile.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile(deepclone(element_draw_pool_state",{"_index":1375,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["pile(state",{"_index":1514,"title":{},"body":{"injectables/GameService.html":{}}}],["pile.constant",{"_index":2028,"title":{},"body":{"interfaces/PileConfig.html":{}}}],["pileadapter",{"_index":331,"title":{"classes/PileAdapter.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["pileadapter(config.actionpawnpile",{"_index":384,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileadapter(config.speciespile",{"_index":386,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileconfig",{"_index":2025,"title":{"interfaces/PileConfig.html":{}},"body":{"interfaces/PileConfig.html":{},"coverage.html":{}}}],["pileidenum",{"_index":1156,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{}}}],["pileidenum.action_pawn_amphibian",{"_index":2029,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_arachnid",{"_index":2031,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_bird",{"_index":2033,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_insect",{"_index":2035,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_mammal",{"_index":2037,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_reptile",{"_index":2039,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.element",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_amphibian",{"_index":2030,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_arachnid",{"_index":2032,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_bird",{"_index":2034,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_insect",{"_index":2036,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_mammal",{"_index":2038,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_reptile",{"_index":2040,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileids",{"_index":534,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(actionpawnpileid",{"_index":536,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(speciespileid",{"_index":537,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileidsbyanimal",{"_index":497,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pileregistryservice",{"_index":482,"title":{"injectables/PileRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":1140,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pileservice",{"_index":1698,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["pilestate",{"_index":1353,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["pilestateservice",{"_index":2042,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":2043,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":68,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["pipe(filter(isnotundefined",{"_index":945,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["placeholder",{"_index":1831,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player",{"_index":620,"title":{},"body":{"classes/Area.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["player.friends",{"_index":1443,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["player.username",{"_index":2070,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player_auth_data",{"_index":2285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playerauthdata",{"_index":719,"title":{"interfaces/PlayerAuthData.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameStateClientService.html":{},"interfaces/PlayerAuthData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["playercollection",{"_index":1428,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["playercollection.map((player",{"_index":2069,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playercollection.players",{"_index":1441,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["playercontrols",{"_index":862,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["playerid",{"_index":889,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["playerids",{"_index":1347,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["playerids.foreach((playerid",{"_index":1385,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["players",{"_index":957,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["players.filter((player",{"_index":964,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["players.foreach((player",{"_index":966,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["playerservice",{"_index":407,"title":{"injectables/PlayerService.html":{}},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["playersubscription",{"_index":943,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["please",{"_index":2109,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["pool",{"_index":154,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pool.service",{"_index":267,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameReadyService.html":{}}}],["pool.service.ts",{"_index":1133,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:15",{"_index":1148,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":1149,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:17",{"_index":1151,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:18",{"_index":1139,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:24",{"_index":1141,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:37",{"_index":1153,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:45",{"_index":1155,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:53",{"_index":1143,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:57",{"_index":1146,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["populated",{"_index":976,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["possible",{"_index":512,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["previous",{"_index":1718,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":24,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{}}}],["processedfactionids",{"_index":476,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["progress",{"_index":1641,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["promise",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/NavigateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"properties.html":{}}}],["protected",{"_index":560,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{}}}],["provide",{"_index":1269,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync('animations",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":2350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providedin",{"_index":56,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["providehttpclient",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["provider.service",{"_index":432,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{}}}],["provider.service.ts",{"_index":472,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["provider.service.ts:16",{"_index":496,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:17",{"_index":492,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:18",{"_index":494,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:19",{"_index":483,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:28",{"_index":489,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:46",{"_index":486,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:50",{"_index":488,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:78",{"_index":491,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["providerouter(routes",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":1263,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pull",{"_index":1135,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pull(count",{"_index":1142,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pulled",{"_index":1976,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany",{"_index":1957,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany(count",{"_index":1971,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullone",{"_index":1958,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pulls",{"_index":1973,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put",{"_index":1136,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put(pieces",{"_index":1145,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["puts",{"_index":1979,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["queryparams",{"_index":1947,"title":{},"body":{"injectables/NavigateService.html":{}}}],["quickly",{"_index":511,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["random",{"_index":1952,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reactiveformsmodule",{"_index":850,"title":{},"body":{"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["read/write",{"_index":2334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":322,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["readonlymap",{"_index":1111,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["ready",{"_index":23,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["ready.service",{"_index":1037,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["ready.service.ts",{"_index":1444,"title":{},"body":{"injectables/GameReadyService.html":{},"coverage.html":{}}}],["ready.service.ts:13",{"_index":1453,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:14",{"_index":1452,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:15",{"_index":1448,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:27",{"_index":1450,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:40",{"_index":1449,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:54",{"_index":1451,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["readyobs",{"_index":64,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["readysubject",{"_index":25,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["received",{"_index":624,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{}}}],["refactored",{"_index":1828,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["refresh",{"_index":1875,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["refreshtoken",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["regardless",{"_index":1709,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["region",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":641,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(elements",{"_index":654,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":699,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":1612,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":1633,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":648,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredareaids",{"_index":280,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredareaids.has(areaidenum.action_display_adaption",{"_index":281,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredelementsubject",{"_index":639,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":640,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(pileidenum.element",{"_index":1160,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":681,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":685,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":1311,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":1227,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":2045,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":1613,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":1635,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":1614,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":1637,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registers",{"_index":656,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registertransactionstateelement",{"_index":1735,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":1749,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registration",{"_index":1260,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["registry",{"_index":664,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registry.service",{"_index":266,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":636,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:14",{"_index":644,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:21",{"_index":1224,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:22",{"_index":1226,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:25",{"_index":1225,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:26",{"_index":1222,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:35",{"_index":1282,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:36",{"_index":1280,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:37",{"_index":1281,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:39",{"_index":1276,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:50",{"_index":1278,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:65",{"_index":1279,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":1606,"title":{},"body":{"injectables/GameStateService.html":{}}}],["relevant",{"_index":1318,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["remove",{"_index":2148,"title":{},"body":{"classes/Space.html":{}}}],["removeactionpawn",{"_index":232,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removeactionpawn(index",{"_index":244,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removedpiece",{"_index":2147,"title":{},"body":{"classes/Space.html":{}}}],["removeelement",{"_index":233,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/AnimalElements.html":{}}}],["removeelement(element",{"_index":366,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["removeelement(index",{"_index":246,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removefriend",{"_index":2051,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removefriend(username",{"_index":2056,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removepiece",{"_index":2126,"title":{},"body":{"classes/Space.html":{}}}],["removeremainingelements",{"_index":234,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["replenish",{"_index":235,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["represents",{"_index":1963,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reptile",{"_index":2258,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reptile_element",{"_index":2273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":2274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["req",{"_index":2323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["require",{"_index":1643,"title":{},"body":{"injectables/GameStateService.html":{}}}],["required",{"_index":409,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["requiretransaction",{"_index":1615,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":1690,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":1602,"title":{},"body":{"injectables/GameStateService.html":{}}}],["results",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":1261,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["retrieve",{"_index":650,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["retrieves",{"_index":647,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["retry",{"_index":1535,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["return",{"_index":124,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":2339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rollback",{"_index":1813,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":1616,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":57,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/NavigateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["route",{"_index":1030,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["router",{"_index":1937,"title":{},"body":{"injectables/NavigateService.html":{}}}],["routerlink",{"_index":1899,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["routeroutlet",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":55,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["rxjs/internal/observable/dom/websocketsubject",{"_index":1536,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["rxjs/websocket",{"_index":1538,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["same",{"_index":1291,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["score",{"_index":1183,"title":{},"body":{"classes/Faction.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["sdk/client",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["see",{"_index":1915,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["seed",{"_index":2279,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":962,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["selectedplayers",{"_index":959,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.add(ensuredefined(this.currentuser).username",{"_index":963,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.has(friend",{"_index":1000,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.has(input",{"_index":980,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.has(player",{"_index":965,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selector",{"_index":91,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["sendgsptobackend",{"_index":1522,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":1527,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sent",{"_index":618,"title":{},"body":{"classes/Area.html":{}}}],["serializer",{"_index":1543,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["service",{"_index":660,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["service.ready",{"_index":66,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["service/action",{"_index":214,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/animal",{"_index":431,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/auth/auth.service",{"_index":1900,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{}}}],["service/auth/sign",{"_index":2080,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["service/game",{"_index":921,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["service/navigate.service",{"_index":937,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["serviceready",{"_index":73,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["serviceready.every((ready",{"_index":71,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["services",{"_index":1607,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":495,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["set(this.playercontrols.value.filter(boolean",{"_index":996,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["seta",{"_index":2355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setarea",{"_index":1617,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":1645,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setb",{"_index":2353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setdifference",{"_index":502,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdifference(factionids",{"_index":517,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["setdifference(seta",{"_index":2352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setentitystate",{"_index":682,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":687,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":1618,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":1647,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfriends",{"_index":1402,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setfriends(player",{"_index":1420,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setgamestate",{"_index":1714,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":1758,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setinitialgamestate",{"_index":1403,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setinitialgamestate(gamestate",{"_index":1422,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setpile",{"_index":1619,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":1649,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":1181,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":1189,"title":{},"body":{"classes/Faction.html":{}}}],["setstate",{"_index":564,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":582,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}}}],["setstoragekey",{"_index":1884,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setstoragekey(key",{"_index":1889,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settransactionstateelement",{"_index":1736,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":1761,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["several",{"_index":508,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameStateStoreService.html":{}}}],["shuffle",{"_index":1354,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffle(object.values(animalenum",{"_index":1384,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffledanimals",{"_index":1383,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffledanimals[index",{"_index":1387,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["sign",{"_index":167,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal",{"_index":206,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal(0",{"_index":417,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["signal(false",{"_index":1036,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["signal(undefined",{"_index":1858,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["signalready",{"_index":27,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["signup",{"_index":789,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signup(username",{"_index":802,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signupcommand",{"_index":808,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupcommand(input",{"_index":830,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupconfirmform",{"_index":2082,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["signupconfirmformdata",{"_index":2076,"title":{"interfaces/SignUpConfirmFormData.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"coverage.html":{}}}],["signupconfirmpagecomponent",{"_index":166,"title":{"components/SignUpConfirmPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupform",{"_index":2094,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signupform.dirty",{"_index":2107,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"email\")?.errors?.[\"email",{"_index":2108,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"password\")?.errors?.[\"minlength",{"_index":2112,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.invalid",{"_index":2106,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupformdata",{"_index":2092,"title":{"interfaces/SignUpFormData.html":{}},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signuppagecomponent",{"_index":170,"title":{"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupservice",{"_index":2079,"title":{"injectables/SignUpService.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["skip",{"_index":1319,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["skull",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":1868,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["snackbar",{"_index":882,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["snake",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["someone",{"_index":1706,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sort",{"_index":1869,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["space",{"_index":185,"title":{"classes/Space.html":{}},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"components/ElementSpaceComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space'},{'name",{"_index":137,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["space(spacestate",{"_index":590,"title":{},"body":{"classes/Area.html":{}}}],["space.component",{"_index":210,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["space.component.html",{"_index":186,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.scss",{"_index":187,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts",{"_index":184,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space.component.ts:16",{"_index":188,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts:18",{"_index":1172,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.kind",{"_index":288,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["space.model",{"_index":586,"title":{},"body":{"classes/Area.html":{}}}],["space.piece",{"_index":292,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{}}}],["space.piece.kind",{"_index":369,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["space.removepiece",{"_index":317,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["space.state$.subscribe((spacestate",{"_index":597,"title":{},"body":{"classes/Area.html":{}}}],["space/action",{"_index":183,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{}}}],["space/element",{"_index":209,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space/eyeball/eyeball.component",{"_index":211,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["spacekindenum",{"_index":271,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":289,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"miscellaneous/variables.html":{}}}],["spacekindenum.element",{"_index":295,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":304,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["spaces.filter",{"_index":287,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["spaces.filter((space",{"_index":377,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["spacessubject",{"_index":558,"title":{},"body":{"classes/Area.html":{}}}],["spacestate",{"_index":559,"title":{},"body":{"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Space.html":{}}}],["species",{"_index":150,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/PileConfig.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["species.model",{"_index":351,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["species/animal/noun",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/element/noun",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/other/noun",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":2300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":2302,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":2304,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":2306,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":2308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":2310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":2301,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":2303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":2305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":2307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":2309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciespiece",{"_index":350,"title":{"interfaces/SpeciesPiece.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["speciespile",{"_index":326,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["speciespileid",{"_index":529,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["speciespilelength",{"_index":402,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciesreptile",{"_index":2311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specific",{"_index":1270,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["specified",{"_index":1974,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["spider",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":1039,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["src/.../animal.constant.ts",{"_index":2244,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":2313,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area.constant.ts",{"_index":2245,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":2314,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../element",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../element.constant.ts",{"_index":2246,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../error",{"_index":2317,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../game",{"_index":2247,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../image.constant.ts",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":2249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../misc.ts",{"_index":2315,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../piece.constant.ts",{"_index":2251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../piece.model.ts",{"_index":2316,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pile",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pile.constant.ts",{"_index":2252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../predicate.ts",{"_index":2318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/component/create",{"_index":836,"title":{},"body":{"components/CreateGamePageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/lobby",{"_index":1833,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/login",{"_index":1895,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/logout",{"_index":1923,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/sign",{"_index":2077,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/constant/game",{"_index":2282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/constant/local",{"_index":2284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/gaurd/auth.guard.ts",{"_index":2166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/interceptor/api",{"_index":2168,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/auth.interceptor.ts",{"_index":2171,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/error",{"_index":2173,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":556,"title":{},"body":{"classes/Area.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:10",{"_index":568,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:21",{"_index":577,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:53",{"_index":579,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:7",{"_index":569,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:8",{"_index":571,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:9",{"_index":570,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":1178,"title":{},"body":{"classes/Faction.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:13",{"_index":1200,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:17",{"_index":1188,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":1185,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":1190,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:5",{"_index":1196,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:9",{"_index":1198,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":1231,"title":{},"body":{"classes/GameElement.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":2182,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":1951,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:10",{"_index":1967,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:101",{"_index":2023,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:105",{"_index":2024,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:109",{"_index":2020,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:11",{"_index":1968,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:113",{"_index":2021,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:117",{"_index":2022,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:12",{"_index":1966,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:13",{"_index":1959,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:32",{"_index":1981,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:44",{"_index":1969,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:48",{"_index":1970,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:58",{"_index":1972,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:80",{"_index":1977,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:88",{"_index":1978,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:98",{"_index":2019,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":2049,"title":{},"body":{"interfaces/PlayerAuthData.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":2122,"title":{},"body":{"classes/Space.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:10",{"_index":2131,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:11",{"_index":2127,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:20",{"_index":2136,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:27",{"_index":2138,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:31",{"_index":2140,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:35",{"_index":2133,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:44",{"_index":2134,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:55",{"_index":2135,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:7",{"_index":2130,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:8",{"_index":2128,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:9",{"_index":2129,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/service/auth/auth.service.ts",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/auth.service.ts:14",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:15",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:25",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:35",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:50",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:57",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:66",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:74",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:78",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/cognito",{"_index":785,"title":{},"body":{"injectables/CognitoClientService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/sign",{"_index":2115,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["src/app/engine/service/game",{"_index":635,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/service/local",{"_index":1880,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/engine/service/navigate.service.ts",{"_index":1930,"title":{},"body":{"injectables/NavigateService.html":{},"coverage.html":{}}}],["src/app/engine/service/navigate.service.ts:10",{"_index":1939,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:14",{"_index":1941,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:22",{"_index":1942,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:26",{"_index":1943,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:30",{"_index":1944,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/service/navigate.service.ts:7",{"_index":1938,"title":{},"body":{"injectables/NavigateService.html":{}}}],["src/app/engine/util/misc.ts",{"_index":2203,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/util/predicate.ts",{"_index":2208,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/action",{"_index":85,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["src/app/game/component/animal",{"_index":392,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["src/app/game/component/dominant",{"_index":1018,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/draw",{"_index":1048,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts",{"_index":1090,"title":{},"body":{"components/ElementComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts:16",{"_index":1093,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:18",{"_index":1095,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:22",{"_index":1096,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:26",{"_index":1097,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/constant/animal.constant.ts",{"_index":2211,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/area.constant.ts",{"_index":2212,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element",{"_index":1101,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element.constant.ts",{"_index":2214,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/game",{"_index":2215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/image.constant.ts",{"_index":2217,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/piece.constant.ts",{"_index":2286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/pile",{"_index":2026,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/pile.constant.ts",{"_index":2287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/model/action",{"_index":77,"title":{},"body":{"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts",{"_index":321,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts:103",{"_index":341,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:107",{"_index":343,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:23",{"_index":462,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:24",{"_index":461,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:35",{"_index":466,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:45",{"_index":463,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:56",{"_index":464,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:67",{"_index":468,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:73",{"_index":470,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:79",{"_index":333,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:80",{"_index":332,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:81",{"_index":334,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:82",{"_index":329,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:91",{"_index":336,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:95",{"_index":337,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:99",{"_index":339,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/element.model.ts",{"_index":1170,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["src/app/game/model/species.model.ts",{"_index":2151,"title":{},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["src/app/game/service/action",{"_index":19,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["src/app/game/service/animal",{"_index":471,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["src/app/game/service/element",{"_index":1132,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["src/app/game/service/game",{"_index":1333,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["standalone",{"_index":94,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["start",{"_index":1787,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["startcase",{"_index":1355,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["startcase(assignedanimal",{"_index":1389,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["started",{"_index":1678,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["starttransaction",{"_index":1620,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["state",{"_index":181,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.constant",{"_index":1363,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["state.constant.ts",{"_index":2216,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.kind",{"_index":2142,"title":{},"body":{"classes/Space.html":{}}}],["state.model",{"_index":1359,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":1825,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.model.ts:28",{"_index":1826,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["state.owner",{"_index":1985,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["state.piece",{"_index":2144,"title":{},"body":{"classes/Space.html":{}}}],["state.service",{"_index":677,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":680,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":707,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:101",{"_index":1636,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:103",{"_index":1310,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:105",{"_index":1659,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:109",{"_index":1650,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:113",{"_index":1638,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:22",{"_index":1625,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:30",{"_index":1315,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:31",{"_index":1307,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:33",{"_index":1632,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:38",{"_index":1630,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:42",{"_index":1628,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:43",{"_index":1316,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:48",{"_index":1651,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:52",{"_index":1629,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:53",{"_index":1312,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:63",{"_index":1314,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:65",{"_index":1644,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:70",{"_index":1309,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:72",{"_index":1639,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:78",{"_index":1653,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:82",{"_index":1655,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:86",{"_index":1646,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:88",{"_index":1308,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:90",{"_index":1634,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:94",{"_index":1657,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:98",{"_index":1648,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.space",{"_index":595,"title":{},"body":{"classes/Area.html":{}}}],["state.space.map((spacestate",{"_index":589,"title":{},"body":{"classes/Area.html":{}}}],["state/game",{"_index":1063,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":986,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["statesubject",{"_index":562,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["storage.constant",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.constant.ts",{"_index":2250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["storage.service",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service.ts",{"_index":1881,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1888,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:15",{"_index":1890,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:7",{"_index":1886,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store.service",{"_index":1660,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":1689,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:116",{"_index":1769,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:124",{"_index":1771,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:132",{"_index":1740,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:137",{"_index":1759,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:145",{"_index":1765,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:154",{"_index":1741,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:163",{"_index":1755,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:173",{"_index":1772,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:181",{"_index":1773,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:185",{"_index":1756,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:189",{"_index":1746,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:193",{"_index":1774,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:197",{"_index":1757,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:201",{"_index":1747,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:205",{"_index":1775,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:209",{"_index":1760,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:213",{"_index":1748,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:40",{"_index":1766,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:41",{"_index":1767,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:42",{"_index":1738,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:48",{"_index":1745,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:52",{"_index":1743,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:71",{"_index":1762,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:97",{"_index":1751,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stores",{"_index":1754,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":98,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["sub.unsubscribe",{"_index":951,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{}}}],["subclass",{"_index":1287,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["subclasses",{"_index":1268,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["subject",{"_index":1531,"title":{},"body":{"injectables/GameStateClientService.html":{},"classes/Space.html":{}}}],["subscribe",{"_index":282,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((allready",{"_index":74,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["subscribe((animal",{"_index":447,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["subscribe((gsp",{"_index":1548,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["subscribe((player",{"_index":946,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["subscribers",{"_index":1810,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["subscribes",{"_index":702,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["subscribing",{"_index":693,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["subscription",{"_index":915,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":863,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{}}}],["substatearray",{"_index":1788,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":1791,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":1800,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":1794,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["success",{"_index":1912,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["such",{"_index":1697,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sum",{"_index":1992,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["sun",{"_index":2280,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super(areastatesvc",{"_index":679,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":1214,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":2044,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":587,"title":{},"body":{"classes/Area.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["super.register(elementsarray",{"_index":1217,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super.setstate(newstate",{"_index":1994,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["switchmap",{"_index":1776,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["switchmap((gamestate",{"_index":1783,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["synchronization",{"_index":668,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["system",{"_index":1603,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":572,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":2220,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2219,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1089,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["takeaction",{"_index":1053,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["taken",{"_index":1724,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":621,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{}}}],["template",{"_index":82,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["templateurl",{"_index":96,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["tgameelement",{"_index":651,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstate",{"_index":1285,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["tgameelementstatesvc",{"_index":1275,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["then((player",{"_index":2064,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this._action",{"_index":2145,"title":{},"body":{"classes/Space.html":{}}}],["this._drawpool",{"_index":1161,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":1779,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate.playerids",{"_index":1814,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":2143,"title":{},"body":{"classes/Space.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":1812,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":1805,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":1808,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":1245,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.id",{"_index":1250,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.inventory[key",{"_index":1993,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[kind",{"_index":2006,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[piece.kind",{"_index":2014,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.name",{"_index":1202,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.ownerid",{"_index":1203,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.score",{"_index":1204,"title":{},"body":{"classes/Faction.html":{}}}],["this._transactionstate",{"_index":1786,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate.gameelements",{"_index":1789,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate.patchid",{"_index":1806,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.actiondisplaymanagerservice.ready",{"_index":1473,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.actionpawn?.name",{"_index":126,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawn?.owner",{"_index":125,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawnpile",{"_index":383,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.actionpawnpilelength.set(length",{"_index":452,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawns",{"_index":290,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawns.set(actionpawns",{"_index":220,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.actionpawnspaces",{"_index":286,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces.map",{"_index":291,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.asobservable",{"_index":251,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.next(this.actionpawns",{"_index":293,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.adaptionactiondisplayservice",{"_index":63,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["this.adaptionactiondisplayservice.actionpawns$.subscribe((actionpawns",{"_index":219,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.actionpawns.findindex",{"_index":1082,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.addactionpawn(nextactionpawnspaceindex",{"_index":1085,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.elements$.subscribe((elements",{"_index":221,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.elements.findindex",{"_index":1084,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.ready$.pipe(filter(istrue",{"_index":217,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.removeelement(nextelementspaceindex",{"_index":1086,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionarea",{"_index":1077,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.addedelementspaces.find",{"_index":368,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.addedelementspaces.map((space",{"_index":379,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalbyid.set(faction.id",{"_index":542,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalelements",{"_index":387,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalfactory(animalconfig",{"_index":543,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalproviderservice.animals",{"_index":441,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalproviderservice.animals$.subscribe((animals",{"_index":1464,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.animalproviderservice.get(ensuredefined(this.currentplayerfaction).id",{"_index":1079,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.animalsready",{"_index":1472,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.animalssubject.asobservable",{"_index":493,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalssubject.next(array.from(this.animalbyid.values",{"_index":544,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.applygsp(gsp",{"_index":1663,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.area",{"_index":283,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.area.spaces$.subscribe((spaces",{"_index":285,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.arearegistryservice.get(areaidenum.action_display_adaption",{"_index":284,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["this.arearegistryservice.register(new",{"_index":1507,"title":{},"body":{"injectables/GameService.html":{}}}],["this.arearegistryservice.registeredids",{"_index":1074,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.arearegistrysvc.get(elementareaid",{"_index":539,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":531,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.authservice.isloggedin$.pipe().subscribe((isloggedin",{"_index":2062,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.authservice.loggedinusername",{"_index":1432,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["this.authservice.login(username",{"_index":1910,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.authservice.logout",{"_index":1927,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["this.availablefriends",{"_index":997,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.buildactiondisplay",{"_index":1372,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.buildanimal(faction",{"_index":521,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimals",{"_index":504,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildelementdrawpool",{"_index":1370,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.buildfactions(playerids",{"_index":1371,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.cognitoclient.send(command",{"_index":823,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclientservice.confirmsignup(username",{"_index":2121,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.cognitoclientservice.decodejwttoken(ensuredefined(authresult.idtoken",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.login(username",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.signup(username",{"_index":2120,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.currentplayer",{"_index":2065,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayer.set(player",{"_index":1863,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.currentplayerfaction",{"_index":1070,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.currentplayerready",{"_index":1471,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.currentplayersubject.asobservable",{"_index":2059,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayersubject.next(this.currentplayer",{"_index":2066,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentuser",{"_index":947,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.drawpool.length",{"_index":1166,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.pullmany(count",{"_index":1168,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.put(pieces",{"_index":1169,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.element?.kind",{"_index":1098,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.element?.name",{"_index":1099,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.elementarea.spaces$.subscribe",{"_index":354,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementbyid.set(element.id",{"_index":1294,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementdrawpool",{"_index":1369,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.elementdrawpool.pullmany(4).foreach((element",{"_index":1378,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.elementdrawpoolservice.pull(4).foreach((element",{"_index":307,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementdrawpoolservice.ready",{"_index":277,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameReadyService.html":{}}}],["this.elements",{"_index":296,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.filter(isnotnull).length",{"_index":300,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.set(elements",{"_index":222,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["this.elementspaces",{"_index":294,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspaces.map((space",{"_index":297,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementssubject.asobservable",{"_index":258,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.allelements",{"_index":355,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.elements",{"_index":298,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":1322,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitlength",{"_index":1995,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emitpilestate",{"_index":2009,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emitstate",{"_index":1205,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emptyelementspaces.set(array(6",{"_index":449,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.errormessage.set('login",{"_index":1913,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.errormessage.set('sign",{"_index":2088,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.errormessages[index",{"_index":969,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.faction",{"_index":381,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction().id",{"_index":445,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction().ownerid",{"_index":419,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction.id",{"_index":390,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.name",{"_index":391,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.factionassignment",{"_index":1211,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":1219,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":1212,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":1220,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionregistryservice.factionassignment$.subscribe((factionassignments",{"_index":505,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.get(factionid",{"_index":520,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.register(new",{"_index":1510,"title":{},"body":{"injectables/GameService.html":{}}}],["this.factionregistrysvc.factionassignment$.subscribe((factionassignments",{"_index":1067,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factionregistrysvc.get(factionassignment.factionid",{"_index":1069,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions",{"_index":1068,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions.find",{"_index":1071,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factorybygametitle",{"_index":1569,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["this.factorybygametitle.get(gametitle",{"_index":1572,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["this.fb.array",{"_index":939,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.fb.control",{"_index":942,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.fetchgames",{"_index":1864,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.fetchplayers(index",{"_index":973,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.filteredplayers[index",{"_index":956,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.formbuilder.group",{"_index":1905,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.gameelementstates",{"_index":1367,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstates.area.push(this.buildadaptionactiondisplay().state",{"_index":1382,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstates.faction.push",{"_index":1388,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstates.pile.push(this.elementdrawpool.state",{"_index":1374,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstatesvc.register(elementsarray",{"_index":1299,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementclientservice",{"_index":2063,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.completegame(gameid",{"_index":1502,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.creategame",{"_index":1494,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.findplayers(username",{"_index":2068,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.getgamesforloggedinplayer",{"_index":1501,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.getlatestgamestate(gameid",{"_index":1504,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.setfriends(ensuredefined(this.currentplayer",{"_index":2072,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.setinitialgamestate(initialgamestate",{"_index":1499,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gameready.set(true",{"_index":1045,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.gamereadyservice.ready",{"_index":1043,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.games.set(await",{"_index":1870,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.cleanupgame",{"_index":1046,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.gameservice.completegame(gameid",{"_index":1873,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.creategame(otherplayers",{"_index":1011,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.gameservice.getgamesforloggedinplayer",{"_index":1871,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.initializegame(gameid",{"_index":1047,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.gameservice.joingame(gameid",{"_index":1874,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gamestateclient.connect(gamestate.gameid",{"_index":1665,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.disconnect",{"_index":1666,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.gsp$.subscribe((gsp",{"_index":1662,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":1675,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateinitializationservice.build",{"_index":1497,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamestateservice.disconnectfrombackend",{"_index":1515,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamestateservice.initializegamestate(gamestate",{"_index":1505,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamestateservice.playerids",{"_index":1465,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.gamestateservice.playerids.length",{"_index":1467,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.gamestatestore.area",{"_index":1680,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":1674,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":1683,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.initializegamestate(gamestate",{"_index":1664,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":1686,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.playerids",{"_index":1679,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":1682,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":1685,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":1688,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":1676,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":1681,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":1684,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate",{"_index":1667,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":1687,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":1669,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":1670,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":1777,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":1782,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":1803,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":708,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":1088,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":1228,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":2046,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":709,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":1229,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":2047,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":710,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":1230,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":2048,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":1078,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getactionpawnforheader",{"_index":415,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getanimal",{"_index":440,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":1325,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":1815,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.getplayer(this.authservice.loggedinusername",{"_index":1439,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.gspservice.apply(ensuredefined(this.gamestatestore.gamestate",{"_index":1668,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gspservice.create",{"_index":1672,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gspsubject.asobservable",{"_index":1530,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.gspsubject.next(gsp",{"_index":1549,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.hasinvalidplayer",{"_index":988,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.http.get('/game",{"_index":1430,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.http.get('/player",{"_index":1440,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.id",{"_index":603,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["this.initialize",{"_index":276,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.initializegame(gameid",{"_index":1042,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.isfriend(input",{"_index":983,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.isloggedin",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.asobservable",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(false",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(true",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.kind",{"_index":1100,"title":{},"body":{"components/ElementComponent.html":{},"classes/Space.html":{}}}],["this.length",{"_index":1989,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject",{"_index":1987,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":1990,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.next(this.length",{"_index":1996,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.localstorageservice.deletedstoragekey(localstoragekey.player_auth_data",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.getstoragekey(localstoragekey.player_auth_data",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.setstoragekey",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1904,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":1908,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":1909,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.max_players",{"_index":940,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.navigate.tocreategamepage",{"_index":1872,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.navigate.togamepage(gametitle.dominant_species",{"_index":1503,"title":{},"body":{"injectables/GameService.html":{}}}],["this.navigate.tolobbypage",{"_index":1012,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.navigate.tologinpage",{"_index":1928,"title":{},"body":{"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.navigate.tosignupconfirmpage",{"_index":2103,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.onplayerinput(this.playercontrols.controls.indexof(emptycontrol",{"_index":995,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.owner",{"_index":127,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piececounts.get(key",{"_index":1997,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piecefactory",{"_index":1986,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.length",{"_index":2015,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.pullmany(count",{"_index":2016,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.put(pieces",{"_index":2017,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pileregistryservice.get(actionpawnpileid",{"_index":538,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.get(speciespileid",{"_index":541,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.register(new",{"_index":1513,"title":{},"body":{"injectables/GameService.html":{}}}],["this.pileregistrysvc.get(pileidenum.element",{"_index":1162,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":1158,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.playerauthdata",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playerauthdata.username",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playercontrols",{"_index":938,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.at(index",{"_index":953,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.every((control",{"_index":989,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.find((control",{"_index":991,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.some",{"_index":993,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.some((control",{"_index":1001,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.value.filter",{"_index":960,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playerservice.addfriend(playerid",{"_index":1004,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playerservice.currentplayer",{"_index":944,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playerservice.currentplayer$.subscribe",{"_index":1457,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.playerservice.currentplayer$.subscribe((player",{"_index":1862,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.playerservice.currentplayer?.username",{"_index":1073,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.playerservice.findplayers(input",{"_index":958,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.processedfactionids",{"_index":518,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pullmany(1)[0",{"_index":2010,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.ready",{"_index":1163,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.asobservable",{"_index":42,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["this.readysubject.next(allready",{"_index":75,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["this.readysubject.next(this.ready",{"_index":1164,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(true",{"_index":299,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":674,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":1298,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":1295,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":1293,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":1324,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":1328,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":1818,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":1821,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":1824,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.route.snapshot.queryparammap.get('gameid",{"_index":1041,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.router.navigate(['/create",{"_index":1945,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.router.navigate(['/lobby",{"_index":1948,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.router.navigate(['/login",{"_index":1949,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.router.navigate(['/sign",{"_index":1950,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.router.navigate(['game",{"_index":1946,"title":{},"body":{"injectables/NavigateService.html":{}}}],["this.setentitystate(state",{"_index":1330,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":1817,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":1820,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":1823,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.signalready",{"_index":60,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["this.signupconfirmform",{"_index":2083,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.valid",{"_index":2084,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.value",{"_index":2085,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupform",{"_index":2095,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.valid",{"_index":2100,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.value",{"_index":2101,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupservice.confirmsignup(username",{"_index":2086,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupservice.signup(username",{"_index":2102,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.snackbar.open('error",{"_index":1013,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.snackbar.open('failed",{"_index":1005,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.spaces",{"_index":588,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.foreach((space",{"_index":596,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.length",{"_index":606,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":631,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject",{"_index":591,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.asobservable",{"_index":593,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.next(this.spaces",{"_index":600,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate",{"_index":594,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate[index",{"_index":598,"title":{},"body":{"classes/Area.html":{}}}],["this.speciespile",{"_index":385,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.speciespilelength.set(length",{"_index":454,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.state",{"_index":1248,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject",{"_index":1246,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject.asobservable",{"_index":1249,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject.next(this.state",{"_index":599,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.subscriptions.foreach((sub",{"_index":950,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{}}}],["this.subscriptions.push(animalsubscription",{"_index":1469,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.subscriptions.push(currentplayersubscription",{"_index":1460,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.subscriptions.push(playersubscription",{"_index":949,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.transactionstate",{"_index":1797,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.updateavailablefriends",{"_index":948,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validinputstates[index",{"_index":979,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validplayers[index].add(player",{"_index":967,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validplayers[index].clear",{"_index":955,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validplayers[index].has(input",{"_index":977,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.websocketsubject",{"_index":1540,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.websocketsubject.next(gsp",{"_index":1553,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.websocketsubject.pipe(retry",{"_index":1546,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.websocketsubscription",{"_index":1550,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["this.websocketsubscription.unsubscribe",{"_index":1551,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["those",{"_index":1705,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":302,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":2345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":1289,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"miscellaneous/functions.html":{}}}],["times",{"_index":509,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["title",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["title.constant",{"_index":1491,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{}}}],["title.constant.ts",{"_index":2248,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tocreategamepage",{"_index":1931,"title":{},"body":{"injectables/NavigateService.html":{}}}],["todo",{"_index":436,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["togamepage",{"_index":1932,"title":{},"body":{"injectables/NavigateService.html":{}}}],["togamepage(gametitle",{"_index":1940,"title":{},"body":{"injectables/NavigateService.html":{}}}],["token",{"_index":799,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["tolobbypage",{"_index":1933,"title":{},"body":{"injectables/NavigateService.html":{}}}],["tologinpage",{"_index":1934,"title":{},"body":{"injectables/NavigateService.html":{}}}],["top",{"_index":1700,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tosignupconfirmpage",{"_index":1935,"title":{},"body":{"injectables/NavigateService.html":{}}}],["total",{"_index":1982,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["track",{"_index":223,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameElementRegistryService.html":{},"components/LobbyPageComponent.html":{}}}],["transaction",{"_index":1640,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":1737,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":84,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["true",{"_index":95,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":821,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{}}}],["tsc",{"_index":1999,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["tslib",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1726,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["two",{"_index":1711,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2368,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1790,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["typeparam",{"_index":1284,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["types",{"_index":1273,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["types/src/auth",{"_index":813,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["types/src/game",{"_index":180,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["types/src/player",{"_index":922,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["typically",{"_index":1721,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["unchanged",{"_index":2340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":106,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["unknown",{"_index":2001,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{}}}],["up",{"_index":168,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/NavigateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["up.service",{"_index":2081,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["up.service.ts",{"_index":2116,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["up.service.ts:10",{"_index":2119,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:14",{"_index":2118,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:7",{"_index":2117,"title":{},"body":{"injectables/SignUpService.html":{}}}],["update",{"_index":625,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileStateService.html":{}}}],["updateavailablefriends",{"_index":877,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["updated",{"_index":615,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{}}}],["updateon",{"_index":2098,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["updates",{"_index":617,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{}}}],["updating",{"_index":1304,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["url",{"_index":1541,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["url.interceptor.ts",{"_index":2169,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":1965,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["used",{"_index":1288,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["user's",{"_index":961,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["user_password_auth",{"_index":815,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["userattributes",{"_index":829,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["username",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["using",{"_index":616,"title":{},"body":{"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateStoreService.html":{}}}],["util/misc",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{}}}],["util/predicate",{"_index":931,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["v",{"_index":2351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":2111,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["validateplayerauthdata",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateplayerauthdata(playerauthdata",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":985,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["validators",{"_index":1898,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.email",{"_index":2096,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.minlength(6",{"_index":2097,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.required",{"_index":1906,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validinputstates",{"_index":864,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["validplayers",{"_index":865,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["value",{"_index":41,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1720,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":133,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["variable",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2370,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1605,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["version",{"_index":2331,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["via",{"_index":1713,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["void",{"_index":38,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["vpa",{"_index":2105,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["water",{"_index":2281,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":1712,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["websocket",{"_index":1537,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["websocketsubject",{"_index":1518,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["websocketsubscription",{"_index":1519,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["whenever",{"_index":1708,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whose",{"_index":2347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["withfetch",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([apiurlinterceptor",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":1929,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["yes",{"_index":581,"title":{},"body":{"classes/Area.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Action {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionDisplayManagerService.html":{"url":"injectables/ActionDisplayManagerService.html","title":"injectable - ActionDisplayManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionDisplayManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signalReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signalReady\n                        \n                    \n                \n            \n            \n                \nsignalReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.signalReady();\n  }\n\n  signalReady(): void {\n    const actionDisplayServices = [this.adaptionActionDisplayService];\n    const readyObs = actionDisplayServices.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionDisplayService.html":{"url":"interfaces/ActionDisplayService.html","title":"interface - ActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-display.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ready$\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ready$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ready$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface ActionDisplayService {\n  ready$: Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnComponent.html":{"url":"components/ActionPawnComponent.html","title":"component - ActionPawnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-pawn/action-pawn.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./action-pawn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    owner\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        owner\n                    \n                \n\n                \n                    \n                        getowner()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-action-pawn',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './action-pawn.component.html',\n  styleUrl: './action-pawn.component.scss',\n})\nexport class ActionPawnComponent {\n  @Input() actionPawn: ActionPawnPiece | undefined = undefined;\n\n  get owner(): string | null | undefined {\n    return this.actionPawn?.owner;\n  }\n\n  get name(): string | undefined {\n    return this.actionPawn?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.owner) {\n      return getOrThrow(imgPathByKind, this.owner);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionPawnPiece.html":{"url":"interfaces/ActionPawnPiece.html","title":"interface - ActionPawnPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionPawnPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-pawn.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ActionPawnPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnSpaceComponent.html":{"url":"components/ActionPawnSpaceComponent.html","title":"component - ActionPawnSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                                ActionPawnComponent\n                                EyeballComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./action-pawn-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../../../model/action-pawn.model';\nimport { ElementComponent } from '../../../element/element.component';\nimport { ActionPawnComponent } from '../../../action-pawn/action-pawn.component';\nimport { EyeballComponent } from '../eyeball/eyeball.component';\n\n@Component({\n  selector: 'app-action-pawn-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent, ActionPawnComponent, EyeballComponent],\n  templateUrl: './action-pawn-space.component.html',\n  styleUrl: './action-pawn-space.component.scss',\n})\nexport class ActionPawnSpaceComponent {\n  @Input() actionPawn: ActionPawnPiece | null = null;\n}\n\n    \n\n    \n        \n  \n    @if (actionPawn) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (actionPawn) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdaptionActionDisplayCardComponent.html":{"url":"components/AdaptionActionDisplayCardComponent.html","title":"component - AdaptionActionDisplayCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdaptionActionDisplayCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adaption-action-display-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                                ElementSpaceComponent\n                                EyeballComponent\n                                ActionPawnSpaceComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adaption-action-display-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adaption-action-display-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, signal } from '@angular/core';\nimport { MatCard } from '@angular/material/card';\nimport { ElementSpaceComponent } from '../space/element-space/element-space.component';\nimport { EyeballComponent } from '../space/eyeball/eyeball.component';\nimport { ActionPawnSpaceComponent } from '../space/action-pawn-space/action-pawn-space.component';\nimport { ElementPiece } from '../../../model/element.model';\nimport { ActionPawnPiece } from '../../../model/action-pawn.model';\nimport { AdaptionActionDisplayService } from '../../../service/action-display/adaption-action-display.service';\nimport { filter, first } from 'rxjs';\nimport { isTrue } from '../../../../engine/util/predicate';\n\n@Component({\n  selector: 'app-adaption-action-display-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatCard, ElementSpaceComponent, EyeballComponent, ActionPawnSpaceComponent],\n  templateUrl: './adaption-action-display-card.component.html',\n  styleUrl: './adaption-action-display-card.component.scss',\n})\nexport class AdaptionActionDisplayCardComponent implements OnInit {\n  actionPawns = signal([]);\n  elements = signal([]);\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {}\n\n  ngOnInit() {\n    this.adaptionActionDisplayService.ready$.pipe(filter(isTrue), first()).subscribe(() => {\n      this.adaptionActionDisplayService.actionPawns$.subscribe((actionPawns) => {\n        this.actionPawns.set(actionPawns);\n      });\n      this.adaptionActionDisplayService.elements$.subscribe((elements) => {\n        this.elements.set(elements);\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Adaption\n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n      \n      \n        @for (actionPawn of actionPawns(); track $index) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Adaption                  @for (element of elements(); track $index) {                  }                    @for (actionPawn of actionPawns(); track $index) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdaptionActionDisplayCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdaptionActionDisplayService.html":{"url":"injectables/AdaptionActionDisplayService.html","title":"injectable - AdaptionActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdaptionActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/adaption-action-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                actionPawns$\n                            \n                            \n                                actionPawnSpaces\n                            \n                            \n                                    Private\n                                actionPawnsSubject\n                            \n                            \n                                area\n                            \n                            \n                                elements\n                            \n                            \n                                elements$\n                            \n                            \n                                elementSpaces\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActionPawn\n                            \n                            \n                                initialize\n                            \n                            \n                                removeActionPawn\n                            \n                            \n                                removeElement\n                            \n                            \n                                removeRemainingElements\n                            \n                            \n                                replenish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistryService: AreaRegistryService, elementDrawPoolService: ElementDrawPoolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActionPawn\n                        \n                    \n                \n            \n            \n                \naddActionPawn(index: number, actionPawn: ActionPawnPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionPawn\n                                            \n                                                            ActionPawnPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActionPawn\n                        \n                    \n                \n            \n            \n                \nremoveActionPawn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ElementPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRemainingElements\n                        \n                    \n                \n            \n            \n                \nremoveRemainingElements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ElementPiece[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replenish\n                        \n                    \n                \n            \n            \n                \nreplenish()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ActionPawnPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.actionPawnsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionPawnsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.actionPawns)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         (ElementPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.elements)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { ElementDrawPoolService } from '../element-draw-pool.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { ElementPiece } from '../../model/element.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaIdEnum, SpaceKindEnum } from '../../constant/area.constant';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { Space } from '../../../engine/model/space.model';\nimport { isNotNull } from '../../../engine/util/predicate';\nimport { Piece } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdaptionActionDisplayService {\n  area: Area | undefined = undefined;\n  actionPawnSpaces: Space[] = [];\n  actionPawns: (ActionPawnPiece | null)[] = [];\n  private actionPawnsSubject = new BehaviorSubject(this.actionPawns);\n  actionPawns$ = this.actionPawnsSubject.asObservable();\n  elementSpaces: Space[] = [];\n  elements: (ElementPiece | null)[] = [];\n  private elementsSubject = new BehaviorSubject(this.elements);\n  elements$ = this.elementsSubject.asObservable();\n  private readySubject = new BehaviorSubject(false);\n  ready$ = this.readySubject.asObservable();\n\n  constructor(\n    private areaRegistryService: AreaRegistryService,\n    private elementDrawPoolService: ElementDrawPoolService,\n  ) {\n    this.initialize();\n  }\n\n  initialize() {\n    this.elementDrawPoolService.ready$\n      .pipe(\n        combineLatestWith(this.areaRegistryService.registeredIds$),\n        filter(\n          ([isReady, registeredAreaIds]) =>\n            isReady && registeredAreaIds.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        this.area = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n\n        this.area.spaces$.subscribe((spaces) => {\n          this.actionPawnSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ACTION_PAWN,\n          );\n          this.actionPawns = this.actionPawnSpaces.map(\n            (space) => space.piece,\n          ) as (ActionPawnPiece | null)[];\n          this.actionPawnsSubject.next(this.actionPawns);\n\n          this.elementSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ELEMENT,\n          );\n          this.elements = this.elementSpaces.map((space) => space.piece) as (ElementPiece | null)[];\n          this.elementsSubject.next(this.elements);\n          this.readySubject.next(true);\n        });\n      });\n  }\n\n  replenish(): void {\n    if (this.elements.filter(isNotNull).length > 0) {\n      throw new Error('Element spaces must be cleared before replenish');\n    }\n\n    this.elementDrawPoolService.pull(4).forEach((element) => {\n      if (element) {\n        const nextSpace = ensureDefined(this.area).nextAvailableSpace(SpaceKindEnum.ELEMENT);\n        if (nextSpace) {\n          nextSpace.addPiece(element as Piece);\n        } else {\n          throw new Error('No Spaces available');\n        }\n      }\n    });\n  }\n\n  removeElement(index: number): ElementPiece {\n    return ensureDefined(this.elementSpaces)[index].removePiece() as ElementPiece;\n  }\n\n  removeRemainingElements(): ElementPiece[] {\n    return ensureDefined(this.elementSpaces)\n      .filter((space) => space.piece)\n      .map((space) => space.removePiece() as ElementPiece);\n  }\n\n  addActionPawn(index: number, actionPawn: ActionPawnPiece): void {\n    ensureDefined(this.actionPawnSpaces)[index].addPiece(actionPawn);\n  }\n\n  removeActionPawn(index: number): ActionPawnPiece {\n    return ensureDefined(this.actionPawnSpaces)[index].removePiece() as ActionPawnPiece;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                actionPawnPile\n                            \n                            \n                                    Private\n                                    Readonly\n                                animalElements\n                            \n                            \n                                    Private\n                                    Readonly\n                                faction\n                            \n                            \n                                    Private\n                                    Readonly\n                                speciesPile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    actionPawn\n                                \n                                \n                                    elements\n                                \n                                \n                                    species\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AnimalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        actionPawnPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimalElements\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        speciesPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n\n                \n                    \n                        getactionPawn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        species\n                    \n                \n\n                \n                    \n                        getspecies()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:107\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementArea.spaces$.subscribe(() => {\n      this.elementsSubject.next(this.allElements);\n    });\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimalCardComponent.html":{"url":"components/AnimalCardComponent.html","title":"component - AnimalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/animal-card/animal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animal-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardTitle\n                                ActionPawnComponent\n                            MatGridList\n                            MatGridTile\n                                ElementComponent\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnForHeader\n                            \n                            \n                                actionPawnPileLength\n                            \n                            \n                                currentPlayerAnimal\n                            \n                            \n                                elements\n                            \n                            \n                                emptyElementSpaces\n                            \n                            \n                                faction\n                            \n                            \n                                speciesPileLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActionPawnForHeader\n                            \n                            \n                                    Private\n                                getAnimal\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                faction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(animalProviderService: AnimalProviderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        faction\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getActionPawnForHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActionPawnForHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnimal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnForHeader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getActionPawnForHeader())\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyElementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faction\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speciesPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, input, OnInit, signal } from '@angular/core';\nimport { MatCard, MatCardTitle } from '@angular/material/card';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { MatGridList, MatGridTile } from '@angular/material/grid-list';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { filter, first, map } from 'rxjs';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementComponent } from '../element/element.component';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { isNotUndefined } from '../../../engine/util/predicate';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { NgClass } from '@angular/common';\nimport { ensureDefined } from '../../../engine/util/misc';\n\n// Todo: change to OnPush\n@Component({\n  selector: 'app-animal-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatCard,\n    MatCardTitle,\n    ActionPawnComponent,\n    MatGridList,\n    MatGridTile,\n    ElementComponent,\n    NgClass,\n  ],\n  templateUrl: './animal-card.component.html',\n  styleUrl: './animal-card.component.scss',\n})\nexport class AnimalCardComponent implements OnInit {\n  faction = input.required();\n  elements = signal([]);\n  emptyElementSpaces = signal([]);\n  actionPawnPileLength = signal(0);\n  speciesPileLength = signal(0);\n  actionPawnForHeader = computed(() => this.getActionPawnForHeader());\n  currentPlayerAnimal = computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  );\n\n  constructor(\n    private animalProviderService: AnimalProviderService,\n    private playerService: PlayerService,\n  ) {}\n\n  ngOnInit() {\n    this.getAnimal();\n  }\n\n  private getAnimal(): void {\n    this.animalProviderService.animals$\n      .pipe(\n        map((animals) => animals.find((animal) => animal.id === this.faction().id)),\n        filter(isNotUndefined),\n        first(),\n      )\n      .subscribe((animal) => {\n        animal.elements.elements$.subscribe((elements) => {\n          this.elements.set(elements);\n          this.emptyElementSpaces.set(Array(6 - elements.length).fill(null) as null[]);\n        });\n        animal.actionPawn.length$.subscribe((length) => {\n          this.actionPawnPileLength.set(length);\n        });\n        animal.species.length$.subscribe((length) => {\n          this.speciesPileLength.set(length);\n        });\n      });\n  }\n\n  private getActionPawnForHeader(): ActionPawnPiece {\n    return defaultPieceFactory(PieceKindEnum.ACTION_PAWN, this.faction().id) as ActionPawnPiece;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{\n          faction().name\n        }}\n      \n    \n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n        @for (emptyElementSpace of emptyElementSpaces(); track $index) {\n          \n        }\n      \n    \n    \n      \n        Action Pawns\n      \n      Species\n      \n        {{ actionPawnPileLength() }}\n      \n      {{ speciesPileLength() }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{          faction().name        }}                            @for (element of elements(); track $index) {                  }        @for (emptyElementSpace of emptyElementSpaces(); track $index) {                  }                            Action Pawns            Species              {{ actionPawnPileLength() }}            {{ speciesPileLength() }}            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalConfig.html":{"url":"interfaces/AnimalConfig.html","title":"interface - AnimalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnimalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawnPile\n                                        \n                                \n                                \n                                        \n                                            elementArea\n                                        \n                                \n                                \n                                        \n                                            elementConfig\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            speciesPile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawnPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawnPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementArea\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementArea:         Area\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Area\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementConfig:         ElementConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         Faction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Faction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speciesPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speciesPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementArea.spaces$.subscribe(() => {\n      this.elementsSubject.next(this.allElements);\n    });\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalElements.html":{"url":"classes/AnimalElements.html","title":"class - AnimalElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elements$\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    allElements\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementArea: Area, elementConfig: ElementConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementArea\n                                                  \n                                                        \n                                                                        Area\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementConfig\n                                                  \n                                                        \n                                                                        ElementConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allElements\n                    \n                \n\n                \n                    \n                        getallElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:73\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementArea.spaces$.subscribe(() => {\n      this.elementsSubject.next(this.allElements);\n    });\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalProviderService.html":{"url":"injectables/AnimalProviderService.html","title":"injectable - AnimalProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal-provider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animalById\n                            \n                            \n                                animals$\n                            \n                            \n                                    Private\n                                animalsSubject\n                            \n                            \n                                    Private\n                                processedFactionIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalFactory\n                            \n                            \n                                    Private\n                                buildAnimal\n                            \n                            \n                                    Private\n                                buildAnimals\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalFactory(animalConfig: AnimalConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animalConfig\n                                            \n                                                            AnimalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimals\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animals$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.animalsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processedFactionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../engine/model/faction.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport { FactionRegistryService } from '../../engine/service/game-element/faction-registry.service';\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { getOrThrow, setDifference } from '../../engine/util/misc';\nimport { Animal, AnimalConfig } from '../model/animal.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalProviderService {\n  private processedFactionIds: Set = new Set();\n  private readonly animalById = new Map();\n  private animalsSubject = new BehaviorSubject([]);\n  animals$ = this.animalsSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {\n    this.buildAnimals();\n  }\n  private buildAnimals(): void {\n    this.factionRegistryService.factionAssignment$.subscribe((factionAssignments) => {\n      // To minimize any building an animal several times, we add the animal id to processedFactionIds as quickly as possible /\n      const factionIds = new Set(\n        factionAssignments.map((factionAssignment) => factionAssignment.factionId),\n      );\n      const factionIdsToProcess = setDifference(factionIds, this.processedFactionIds);\n      this.processedFactionIds = new Set([\n        ...factionIdsToProcess,\n        ...this.processedFactionIds,\n      ]);\n      factionIdsToProcess.forEach((factionId) => {\n        const faction = this.factionRegistryService.get(factionId);\n        this.buildAnimal(faction);\n      });\n    });\n  }\n\n  private animalFactory(animalConfig: AnimalConfig): Animal {\n    return new Animal(animalConfig);\n  }\n\n  private buildAnimal(faction: Faction): void {\n    const elementAreaId = getOrThrow(elementConfigByAnimal, faction.id).areaId;\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id).actionPawn;\n    const speciesPileId = getOrThrow(pileIdsByAnimal, faction.id).species;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        combineLatestWith(this.pileRegistryService.registeredIds$),\n        filter(\n          ([areaIds, pileIds]) =>\n            areaIds.has(elementAreaId) &&\n            pileIds.has(actionPawnPileId) &&\n            pileIds.has(speciesPileId),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        const animalConfig: AnimalConfig = {\n          faction: faction,\n          actionPawnPile: this.pileRegistryService.get(actionPawnPileId),\n          elementArea: this.areaRegistrySvc.get(elementAreaId),\n          elementConfig: getOrThrow(elementConfigByAnimal, faction.id),\n          speciesPile: this.pileRegistryService.get(speciesPileId),\n        };\n        this.animalById.set(faction.id, this.animalFactory(animalConfig));\n        this.animalsSubject.next(Array.from(this.animalById.values()));\n      });\n  }\n\n  get(id: string): Animal {\n    return getOrThrow(this.animalById, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                spaces$\n                            \n                            \n                                    Private\n                                spacesSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: AreaState)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        AreaState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace(kind?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Space | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space } from './space.model';\nimport { GameElement } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AreaState, SpaceState } from 'api-types/src/game-state';\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(state: AreaState) {\n    super(state);\n    this.spaces = state.space.map((spaceState) => new Space(spaceState));\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = state.space;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      /* We need to set the state of the space in both the Area and the Space as the Space does not notify the Area when it's\n         updated using setState. State updates are only sent when the local player takes an action. However, since setState is done\n         when a GSP is received, there are no state update notifications sent, so anything interested in the state needs to be updated\n         when the setState is done. So it needs to be done both at the Space and Area objects.\n       */\n      this.spaceState[index] = spaceState;\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:50\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement | TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:65\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nEmits the updated set of registered IDs.\nRegisters the elements with the GameElementStateService for state synchronization.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement | TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement or array of GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:39\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:88\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:70\n\n                        \n                    \n\n\n            \n                \n                        Initializes the service by subscribing to the central GameStateService's observable\nof GameElementState. When the state of a registered GameElement changes in the\ncentral game state, this method updates the corresponding GameElement.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:103\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nRegisters their state with the central GameStateService.\nSubscribes to their state changes to update the central game state.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:30\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoggedIn$\n                            \n                            \n                                    Private\n                                    Readonly\n                                isLoggedInSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authResultToPlayerAuth\n                            \n                            \n                                checkIsLoggedIn\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                validatePlayerAuthData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerAuthData\n                                \n                                \n                                    loggedInUsername\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authResultToPlayerAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    authResultToPlayerAuth(authResult: AuthenticationResultType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authResult\n                                            \n                                                        AuthenticationResultType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerAuthData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIsLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validatePlayerAuthData\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePlayerAuthData(playerAuthData: PlayerAuthData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerAuthData\n                                            \n                                                            PlayerAuthData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        isLoggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerAuthData\n                    \n                \n\n                \n                    \n                        getplayerAuthData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loggedInUsername\n                    \n                \n\n                \n                    \n                        getloggedInUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:66\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\nimport { LocalStorageService } from '../local-storage.service';\nimport { AuthenticationResultType } from '@aws-sdk/client-cognito-identity-provider';\nimport { PlayerAuthData } from '../../model/player.model';\nimport { ensureDefined } from '../../util/misc';\nimport { LocalStorageKey } from '../../constant/local-storage.constant';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private readonly isLoggedInSubject: BehaviorSubject;\n  readonly isLoggedIn$: Observable;\n\n  constructor(\n    private cognitoClientService: CognitoClientService,\n    private localStorageService: LocalStorageService,\n  ) {\n    this.isLoggedInSubject = new BehaviorSubject(this.checkIsLoggedIn());\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n  }\n\n  private authResultToPlayerAuth(authResult: AuthenticationResultType): PlayerAuthData {\n    const jwt = this.cognitoClientService.decodeJwtToken(ensureDefined(authResult.IdToken));\n    return {\n      username: ensureDefined(jwt['cognito:username']),\n      accessToken: ensureDefined(authResult.IdToken),\n      accessTokenExpire: ensureDefined(jwt.exp),\n      refreshToken: ensureDefined(authResult.RefreshToken),\n    };\n  }\n\n  async login(username: string, password: string): Promise {\n    const authResult = await this.cognitoClientService.login(username, password);\n    console.log(authResult);\n    if (authResult) {\n      this.localStorageService.setStorageKey(\n        LocalStorageKey.PLAYER_AUTH_DATA,\n        JSON.stringify(this.authResultToPlayerAuth(authResult)),\n      );\n      this.isLoggedInSubject.next(true);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout(): void {\n    if (this.playerAuthData) {\n      this.localStorageService.deletedStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    }\n    this.isLoggedInSubject.next(false);\n  }\n\n  get playerAuthData(): PlayerAuthData | undefined {\n    const playerAuthData = this.localStorageService.getStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    if (playerAuthData) {\n      return JSON.parse(playerAuthData) as PlayerAuthData;\n    } else {\n      return undefined;\n    }\n  }\n\n  get loggedInUsername(): string {\n    if (this.playerAuthData) {\n      return this.playerAuthData.username;\n    } else {\n      throw new Error('No user logged in');\n    }\n  }\n\n  private validatePlayerAuthData(playerAuthData: PlayerAuthData): boolean {\n    return Date.now() \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CognitoClientService.html":{"url":"injectables/CognitoClientService.html","title":"injectable - CognitoClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CognitoClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/cognito-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                decodeJwtToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClient: CognitoIdentityProviderClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClient\n                                                  \n                                                        \n                                                                    CognitoIdentityProviderClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeJwtToken\n                        \n                    \n                \n            \n            \n                \ndecodeJwtToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CognitoIdTokenJwt\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AuthenticationResultType,\n  CognitoIdentityProviderClient,\n  ConfirmSignUpCommand,\n  InitiateAuthCommand,\n  InitiateAuthCommandInput,\n  SignUpCommand,\n} from '@aws-sdk/client-cognito-identity-provider';\nimport { environment } from '../../../../environments/environment';\nimport { jwtDecode } from 'jwt-decode';\nimport { CognitoIdTokenJwt } from 'api-types/src/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CognitoClientService {\n  constructor(private cognitoClient: CognitoIdentityProviderClient) {}\n\n  async login(username: string, password: string): Promise {\n    const input = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: environment.cognito.clientId,\n      AuthParameters: {\n        USERNAME: username,\n        PASSWORD: password,\n      },\n    } as InitiateAuthCommandInput;\n    const command = new InitiateAuthCommand(input);\n    try {\n      const { AuthenticationResult } = await this.cognitoClient.send(command);\n      if (AuthenticationResult) {\n        return AuthenticationResult;\n      } else {\n        console.error('Unexpected AuthenticationResult');\n        return null;\n      }\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  decodeJwtToken(token: string): CognitoIdTokenJwt {\n    return jwtDecode(token);\n  }\n\n  async signUp(username: string, email: string, password: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: [\n        {\n          Name: 'email',\n          Value: email,\n        },\n      ],\n    };\n    try {\n      const command = new SignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      ConfirmationCode: code,\n    };\n    try {\n      const command = new ConfirmSignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (error) {\n      console.error('Error confirming sign up: ', error);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateGamePageComponent.html":{"url":"components/CreateGamePageComponent.html","title":"component - CreateGamePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateGamePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/create-game-page/create-game-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-game-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatFormField\n                            MatFormFieldModule\n                            FormsModule\n                            MatAutocompleteTrigger\n                            MatAutocomplete\n                            MatOption\n                            MatButton\n                            MatInput\n                            NgForOf\n                            NgIf\n                            ReactiveFormsModule\n                            MatIcon\n                            MatIconButton\n                            MatChip\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-game-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-game-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableFriends\n                            \n                            \n                                currentUser\n                            \n                            \n                                errorMessages\n                            \n                            \n                                filteredPlayers\n                            \n                            \n                                    Private\n                                    Readonly\n                                MAX_PLAYERS\n                            \n                            \n                                playerControls\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                validInputStates\n                            \n                            \n                                validPlayers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFriend\n                            \n                            \n                                    Async\n                                addFriendToGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Private\n                                    Async\n                                fetchPlayers\n                            \n                            \n                                hasInvalidPlayer\n                            \n                            \n                                hasValidPlayers\n                            \n                            \n                                isFriend\n                            \n                            \n                                isGameFullOrInvalid\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onPlayerBlur\n                            \n                            \n                                    Async\n                                onPlayerInput\n                            \n                            \n                                updateAvailableFriends\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, navigate: NavigateService, snackBar: MatSnackBar, playerService: PlayerService, gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFriend(playerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFriendToGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFriendToGame(playerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        fetchPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchPlayers(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasInvalidPlayer\n                        \n                    \n                \n            \n            \n                \nhasInvalidPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValidPlayers\n                        \n                    \n                \n            \n            \n                \nhasValidPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFriend\n                        \n                    \n                \n            \n            \n                \nisFriend(playerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGameFullOrInvalid\n                        \n                    \n                \n            \n            \n                \nisGameFullOrInvalid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onPlayerBlur\n                        \n                    \n                \n            \n            \n                \n                        \n                    onPlayerBlur(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onPlayerInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onPlayerInput(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAvailableFriends\n                        \n                    \n                \n            \n            \n                \nupdateAvailableFriends()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableFriends\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Player | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['', '', '', '', '']\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                \n                    \n                        Default value : [[], [], [], [], []]\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MAX_PLAYERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validInputStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean[]\n\n                    \n                \n                \n                    \n                        Default value : [false, false, false, false, false]\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set[]\n\n                    \n                \n                \n                    \n                        Default value : Array.from({ length: 5 }, () => new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PlayerService } from '../../service/game-management/player.service';\nimport { Player } from 'api-types/src/player';\nimport { GameService } from '../../service/game-management/game.service';\nimport { MatCard } from '@angular/material/card';\nimport { MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteTrigger, MatOption } from '@angular/material/autocomplete';\nimport { MatButton, MatIconButton } from '@angular/material/button';\nimport { MatInput } from '@angular/material/input';\nimport { NgForOf, NgIf } from '@angular/common';\nimport { filter, Subscription } from 'rxjs';\nimport { isNotUndefined } from '../../util/predicate';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatChip } from '@angular/material/chips';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { ensureDefined } from '../../util/misc';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { NavigateService } from '../../service/navigate.service';\n\n@Component({\n  selector: 'app-create-game-page',\n  standalone: true,\n  imports: [\n    MatCard,\n    MatFormField,\n    MatFormFieldModule,\n    FormsModule,\n    MatAutocompleteTrigger,\n    MatAutocomplete,\n    MatOption,\n    MatButton,\n    MatInput,\n    NgForOf,\n    NgIf,\n    ReactiveFormsModule,\n    MatIcon,\n    MatIconButton,\n    MatChip,\n    MatTooltip,\n  ],\n  templateUrl: './create-game-page.component.html',\n  styleUrl: './create-game-page.component.scss',\n})\nexport class CreateGamePageComponent implements OnInit, OnDestroy {\n  private readonly MAX_PLAYERS = 6;\n  playerControls: FormArray;\n  private subscriptions: Subscription[] = [];\n  currentUser: Player | undefined;\n  filteredPlayers: string[][] = [[], [], [], [], []];\n  errorMessages: string[] = ['', '', '', '', ''];\n  validPlayers: Set[] = Array.from({ length: 5 }, () => new Set());\n  availableFriends: string[] = [];\n  validInputStates: boolean[] = [false, false, false, false, false];\n\n  constructor(\n    private fb: FormBuilder,\n    private navigate: NavigateService,\n    private snackBar: MatSnackBar,\n    private playerService: PlayerService,\n    private gameService: GameService,\n  ) {\n    this.playerControls = this.fb.array(\n      Array.from({ length: this.MAX_PLAYERS - 1 }, () => this.fb.control('')),\n    ) as FormArray;\n  }\n\n  ngOnInit(): void {\n    const playerSubscription = this.playerService.currentPlayer$\n      .pipe(filter(isNotUndefined))\n      .subscribe((player) => {\n        this.currentUser = player;\n        this.updateAvailableFriends();\n      });\n    this.subscriptions.push(playerSubscription);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  private async fetchPlayers(index: number): Promise {\n    const control = this.playerControls.at(index);\n    const input = control.value as string | null;\n    this.validPlayers[index].clear();\n    this.filteredPlayers[index] = [];\n\n    if (input) {\n      try {\n        const players = await this.playerService.findPlayers(input);\n        const selectedPlayers = new Set(\n          this.playerControls.value.filter(\n            (player: string | null, i: number) => player && i !== index,\n          ) as string[],\n        );\n\n        // Add the current user's username to the selected players\n        selectedPlayers.add(ensureDefined(this.currentUser).username);\n\n        this.filteredPlayers[index] = players.filter((player) => !selectedPlayers.has(player));\n        players.forEach((player) => this.validPlayers[index].add(player));\n      } catch (error) {\n        console.error(error);\n        this.errorMessages[index] = 'Error fetching players';\n        control.setErrors({ fetchError: true });\n      }\n    }\n  }\n\n  async onPlayerInput(index: number): Promise {\n    await this.fetchPlayers(index);\n  }\n\n  async onPlayerBlur(index: number): Promise {\n    const control = this.playerControls.at(index);\n    const input = control.value as string | null;\n    const selectedPlayers = new Set(\n      this.playerControls.value.filter(\n        (player: string | null, i: number) => player && i !== index,\n      ) as string[],\n    );\n\n    // Add the current user's username to the selected players\n    selectedPlayers.add(ensureDefined(this.currentUser).username);\n\n    this.errorMessages[index] = '';\n    control.setErrors(null);\n\n    if (input) {\n      // Ensure the validPlayers set is populated\n      if (!this.validPlayers[index].has(input)) {\n        await this.fetchPlayers(index);\n      }\n\n      if (!this.validPlayers[index].has(input)) {\n        this.errorMessages[index] = 'Invalid username';\n        control.setErrors({ invalid: true });\n        this.validInputStates[index] = false;\n      } else if (selectedPlayers.has(input)) {\n        this.errorMessages[index] = 'Player already in the game';\n        control.setErrors({ duplicate: true });\n        this.validInputStates[index] = false;\n      } else {\n        this.validInputStates[index] = !this.isFriend(input);\n      }\n\n      this.updateAvailableFriends();\n    } else {\n      // Clear validation states if input is empty\n      this.validPlayers[index].clear();\n      this.validInputStates[index] = false;\n      this.filteredPlayers[index] = [];\n    }\n  }\n\n  isGameFullOrInvalid(): boolean {\n    return (\n      this.hasInvalidPlayer() || this.playerControls.controls.every((control) => control.value)\n    );\n  }\n\n  async addFriendToGame(playerId: string): Promise {\n    const emptyControl = this.playerControls.controls.find((control) => !control.value);\n    if (!emptyControl) return;\n\n    const isPlayerAlreadyAdded = this.playerControls.controls.some(\n      (control) => control.value === playerId,\n    );\n    if (isPlayerAlreadyAdded) return;\n\n    emptyControl.setValue(playerId);\n    this.updateAvailableFriends();\n    await this.onPlayerInput(this.playerControls.controls.indexOf(emptyControl));\n  }\n\n  updateAvailableFriends(): void {\n    const selectedPlayers = new Set(this.playerControls.value.filter(Boolean) as string[]);\n    this.availableFriends = ensureDefined(this.currentUser).friends.filter(\n      (friend) => !selectedPlayers.has(friend),\n    );\n  }\n\n  hasValidPlayers(): boolean {\n    return this.playerControls.controls.some((control) => control.value && !control.invalid);\n  }\n\n  hasInvalidPlayer(): boolean {\n    return this.playerControls.controls.some((control) => control.invalid);\n  }\n\n  async addFriend(playerId: string): Promise {\n    if (ensureDefined(this.currentUser).friends.includes(playerId)) return;\n    try {\n      await this.playerService.addFriend(playerId);\n    } catch (error) {\n      this.snackBar.open('Failed to add friend', 'Close', {\n        duration: 3000,\n      });\n      console.error('Failed to add friend', error);\n    }\n  }\n\n  isFriend(playerId: string): boolean {\n    return ensureDefined(this.currentUser).friends.includes(playerId);\n  }\n\n  async createGame(): Promise {\n    const otherPlayers = this.playerControls.value.filter(\n      (player: string | null): player is string => !!player,\n    );\n    try {\n      await this.gameService.createGame(otherPlayers);\n      void this.navigate.toLobbyPage();\n    } catch (error) {\n      this.snackBar.open('Error creating game', 'Close', {\n        duration: 3000,\n      });\n      console.error(error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Players\n        \n          \n        \n\n        \n          \n            \n              \n              \n                \n                  {{ player }}\n                \n              \n\n              {{ errorMessages[i] }}\n            \n\n            \n              person_add\n            \n          \n        \n\n        \n          Create Game\n        \n      \n\n      \n        Friends\n        \n          \n            {{ friend }}\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Players                                                                                                                      {{ player }}                                            {{ errorMessages[i] }}                                      person_add                                                Create Game                            Friends                              {{ friend }}                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateGamePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DominantSpeciesGameComponent.html":{"url":"components/DominantSpeciesGameComponent.html","title":"component - DominantSpeciesGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DominantSpeciesGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/dominant-species-game/dominant-species-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dominant-species-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                DrawPoolGameComponent\n                            MatProgressSpinner\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dominant-species-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dominant-species-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gameReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                initializeGame\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, navigate: NavigateService, gameService: GameService, gameReadyService: GameReadyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameReadyService\n                                                  \n                                                        \n                                                                        GameReadyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        initializeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gameReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, signal } from '@angular/core';\nimport { DrawPoolGameComponent } from '../draw-pool-game/draw-pool-game.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { GameService } from '../../../engine/service/game-management/game.service';\nimport { GameReadyService } from '../../service/game-ready.service';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { filter, first } from 'rxjs';\nimport { NavigateService } from '../../../engine/service/navigate.service';\n\n@Component({\n  selector: 'app-dominant-species-game',\n  standalone: true,\n  imports: [DrawPoolGameComponent, MatProgressSpinner],\n  templateUrl: './dominant-species-game.component.html',\n  styleUrl: './dominant-species-game.component.scss',\n})\nexport class DominantSpeciesGameComponent implements OnInit, OnDestroy {\n  gameReady = signal(false);\n  constructor(\n    private route: ActivatedRoute,\n    private navigate: NavigateService,\n    private gameService: GameService,\n    private gameReadyService: GameReadyService,\n  ) {}\n\n  ngOnInit(): void {\n    const gameId = this.route.snapshot.queryParamMap.get('gameId');\n    if (!gameId) {\n      void this.navigate.toLobbyPage();\n    } else {\n      void this.initializeGame(gameId);\n    }\n    this.gameReadyService.ready$\n      .pipe(\n        filter((isReady) => isReady),\n        first(),\n      )\n      .subscribe(() => {\n        this.gameReady.set(true);\n      });\n  }\n\n  ngOnDestroy() {\n    this.gameService.cleanupGame();\n  }\n\n  private async initializeGame(gameId: string): Promise {\n    await this.gameService.initializeGame(gameId);\n  }\n}\n\n    \n\n    \n        @if (gameReady()) {\n  \n} @else {\n  \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (gameReady()) {  } @else {        }'\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DominantSpeciesGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                                ElementComponent\n                                ActionPawnComponent\n                                AnimalCardComponent\n                                EyeballComponent\n                                ElementSpaceComponent\n                                AdaptionActionDisplayCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adaptionArea\n                            \n                            \n                                currentPlayerFaction\n                            \n                            \n                                factions\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                takeAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService, areaRegistryService: AreaRegistryService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, animalProviderService: AnimalProviderService, adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeAction\n                        \n                    \n                \n            \n            \n                \ntakeAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adaptionArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerFaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter, first } from 'rxjs';\nimport { ElementComponent } from '../element/element.component';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { AnimalCardComponent } from '../animal-card/animal-card.component';\nimport { EyeballComponent } from '../action-display/space/eyeball/eyeball.component';\nimport { ElementSpaceComponent } from '../action-display/space/element-space/element-space.component';\nimport { AdaptionActionDisplayCardComponent } from '../action-display/adaption-action-display-card/adaption-action-display-card.component';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { AreaIdEnum } from '../../constant/area.constant';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { AdaptionActionDisplayService } from '../../service/action-display/adaption-action-display.service';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [\n    MatButton,\n    MatTooltip,\n    ElementComponent,\n    ActionPawnComponent,\n    AnimalCardComponent,\n    EyeballComponent,\n    ElementSpaceComponent,\n    AdaptionActionDisplayCardComponent,\n  ],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent implements OnInit {\n  currentPlayerFaction: Faction | undefined = undefined;\n  factions: Faction[] = [];\n  adaptionArea: Area | undefined = undefined;\n  log: string[] = [];\n\n  constructor(\n    private gameStateSvc: GameStateService,\n    private areaRegistryService: AreaRegistryService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private animalProviderService: AnimalProviderService,\n    private adaptionActionDisplayService: AdaptionActionDisplayService,\n  ) {}\n\n  ngOnInit() {\n    this.factionRegistrySvc.factionAssignment$.subscribe((factionAssignments) => {\n      this.factions = factionAssignments.map((factionAssignment) =>\n        this.factionRegistrySvc.get(factionAssignment.factionId),\n      );\n      this.currentPlayerFaction = this.factions.find(\n        (faction) => faction.ownerId === this.playerService.currentPlayer?.username,\n      );\n    });\n\n    this.areaRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION)),\n        first(),\n      )\n      .subscribe(() => {\n        this.adaptionArea = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n      });\n  }\n\n  takeAction(): void {\n    this.gameStateSvc.startTransaction();\n    const animal = this.animalProviderService.get(ensureDefined(this.currentPlayerFaction).id);\n    const actionPawn = animal.actionPawn.pullOne();\n    if (actionPawn) {\n      const nextActionPawnSpaceIndex = this.adaptionActionDisplayService.actionPawns.findIndex(\n        (value) => value === null,\n      );\n      const nextElementSpaceIndex = this.adaptionActionDisplayService.elements.findIndex(\n        (value) => value !== null,\n      );\n      this.adaptionActionDisplayService.addActionPawn(nextActionPawnSpaceIndex, actionPawn);\n      const element = this.adaptionActionDisplayService.removeElement(nextElementSpaceIndex);\n      animal.elements.addElement(element);\n    }\n    this.gameStateSvc.commitTransaction();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Take Action\n    \n    \n      \n      \n        @for (faction of factions; track faction.id) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Take Action                            @for (faction of factions; track faction.id) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementComponent.html":{"url":"components/ElementComponent.html","title":"component - ElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/element/element.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    kind\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         ElementPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/element/element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        kind\n                    \n                \n\n                \n                    \n                        getkind()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../model/element.model';\n\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-element',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './element.component.html',\n  styleUrl: './element.component.scss',\n})\nexport class ElementComponent {\n  @Input() element: ElementPiece | undefined = undefined;\n\n  get kind(): string | undefined {\n    return this.element?.kind;\n  }\n\n  get name(): string | undefined {\n    return this.element?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.kind) {\n      return getOrThrow(imgPathByKind, this.kind);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/element-config.constant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementEnum, ElementKind } from './element.constant';\nimport { AreaId, AreaIdEnum } from './area.constant';\nimport { AnimalEnum } from './animal.constant';\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                    Private\n                                ready\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: ElementPiece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            ElementPiece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ready\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.ready)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, first, Observable, of } from 'rxjs';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { PileIdEnum } from '../constant/pile.constant';\nimport { ElementPiece } from '../model/element.model';\n\nimport { Piece } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | undefined = undefined;\n  private ready = false;\n  private readySubject: BehaviorSubject = new BehaviorSubject(this.ready);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.pileRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(PileIdEnum.ELEMENT)),\n        first(),\n      )\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PileIdEnum.ELEMENT);\n        this.ready = true;\n        this.readySubject.next(this.ready);\n      });\n  }\n\n  private get drawPool(): Pile {\n    if (this._drawPool) {\n      return this._drawPool;\n    } else {\n      throw new Error('Pile not ready');\n    }\n  }\n\n  get length$(): Observable {\n    if (this._drawPool) {\n      return this.drawPool.length$;\n    } else {\n      return of(0);\n    }\n  }\n\n  pull(count = 1): (ElementPiece | null)[] {\n    return this.drawPool.pullMany(count) as ElementPiece[];\n  }\n\n  put(pieces: ElementPiece[]): void {\n    this.drawPool.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/element.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementKind } from '../constant/element.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementSpaceComponent.html":{"url":"components/ElementSpaceComponent.html","title":"component - ElementSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/element-space/element-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./element-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         ElementPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../../../model/element.model';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\nimport { ElementComponent } from '../../../element/element.component';\n\n@Component({\n  selector: 'app-element-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent],\n  templateUrl: './element-space.component.html',\n  styleUrl: './element-space.component.scss',\n})\nexport class ElementSpaceComponent {\n  @Input() element: ElementPiece | null = null;\n\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'elementSpace');\n  }\n}\n\n    \n\n    \n        \n  \n    @if (element) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (element) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EyeballComponent.html":{"url":"components/EyeballComponent.html","title":"component - EyeballComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EyeballComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-eyeball\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./eyeball.component.html\n            \n\n\n\n            \n                styleUrl\n                ./eyeball.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/eyeball/eyeball.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\n\n@Component({\n  selector: 'app-eyeball',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  templateUrl: './eyeball.component.html',\n  styleUrl: './eyeball.component.scss',\n})\nexport class EyeballComponent {\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'eyeball');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EyeballComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:28\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:5\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement } from './game-element.model';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            factionId\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        factionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        factionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  factionId: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction | Faction[]): void {\n    const elementsArray = Array.isArray(elements) ? elements : [elements];\n    super.register(elementsArray);\n    elementsArray.forEach((faction) => {\n      this.factionAssignment.push({\n        factionId: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction | Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction | Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:50\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:39\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  factionId: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction | Faction[]): void {\n    const elementsArray = Array.isArray(elements) ? elements : [elements];\n    super.register(elementsArray);\n    elementsArray.forEach((faction) => {\n      this.factionAssignment.push({\n        factionId: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:88\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:70\n\n                        \n                    \n\n\n            \n                \n                        Initializes the service by subscribing to the central GameStateService's observable\nof GameElementState. When the state of a registered GameElement changes in the\ncentral game state, this method updates the corresponding GameElement.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:103\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nRegisters their state with the central GameStateService.\nSubscribes to their state changes to update the central game state.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:30\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { FactionState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:28\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\nimport { GameElementState } from 'api-types/src/game-state';\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class that manages the registration and retrieval\nof GameElement instances.\nThis service:\n\nKeeps track of registered GameElement instances.\nProvides methods to retrieve them by ID.\nNotifies observers when the set of registered IDs changes.\n\nIt depends on a GameElementStateService to handle synchronization\nof GameElement states with the central GameStateService.\nSubclasses should provide specific implementations for different\ntypes of GameElement.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:50\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement | TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nEmits the updated set of registered IDs.\nRegisters the elements with the GameElementStateService for state synchronization.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement | TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement or array of GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n/**\n * Abstract base class that manages the registration and retrieval\n * of `GameElement` instances.\n *\n * This service:\n * - Keeps track of registered `GameElement` instances.\n * - Provides methods to retrieve them by ID.\n * - Notifies observers when the set of registered IDs changes.\n *\n * It depends on a `GameElementStateService` to handle synchronization\n * of `GameElement` states with the central `GameStateService`.\n *\n * Subclasses should provide specific implementations for different\n * types of `GameElement`.\n *\n * @typeParam TgameElementState - The specific type of `GameElementState` managed by the subclass.\n * @typeParam TgameElement - The specific type of `GameElement` managed by the subclass.\n * @typeParam TgameElementStateSvc - The specific `GameElementStateService` used for state synchronization.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  protected constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  /**\n   * Retrieves a registered `GameElement` by its ID.\n   *\n   * @param id - The ID of the `GameElement` to retrieve.\n   * @returns The `GameElement` associated with the given ID.\n   * @throws If no `GameElement` with the given ID is registered.\n   */\n  get(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  /**\n   * Registers one or more `GameElement` instances with the service.\n   *\n   * This method:\n   * - Adds the `GameElement` instances to the internal registry.\n   * - Emits the updated set of registered IDs.\n   * - Registers the elements with the `GameElementStateService` for state synchronization.\n   *\n   * @param elements - The `GameElement` or array of `GameElement` instances to register.\n   * @throws If a `GameElement` with the same ID is already registered.\n   */\n  register(elements: TgameElement | TgameElement[]): void {\n    const elementsArray = Array.isArray(elements) ? elements : [elements];\n\n    elementsArray.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elementsArray);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class that manages the synchronization between individual\nGameElement instances and the central GameStateService.\nThis service handles:\n\nRegistration of GameElement instances.\nListening to state changes in individual GameElement instances and updating the central game state.\nSubscribing to changes in the central game state and updating the corresponding GameElement instances.\n\nSubclasses must implement methods to interact with specific types of GameElement\nand their corresponding states.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Initializes the service by subscribing to the central GameStateService's observable\nof GameElementState. When the state of a registered GameElement changes in the\ncentral game state, this method updates the corresponding GameElement.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nRegisters their state with the central GameStateService.\nSubscribes to their state changes to update the central game state.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Registers the state of a GameElement with the central GameStateService.\nSubclasses must implement this method to add the GameElement's state\nto the central game state.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Updates the state of a GameElement in the central GameStateService.\nSubclasses must implement this method to update the state of a GameElement\nin the central game state when its state changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new state of the GameElement.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:43\n                                \n                            \n                    \n                        \n                                Observable that emits arrays of GameElementState from the central GameStateService.\nSubclasses must provide an observable that emits the relevant GameElementState\ninstances for their specific type of GameElement.\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n/**\n * Abstract base class that manages the synchronization between individual\n * `GameElement` instances and the central `GameStateService`.\n *\n * This service handles:\n * - Registration of `GameElement` instances.\n * - Listening to state changes in individual `GameElement` instances and updating the central game state.\n * - Subscribing to changes in the central game state and updating the corresponding `GameElement` instances.\n *\n * Subclasses must implement methods to interact with specific types of `GameElement`\n * and their corresponding states.\n *\n * @typeParam TgameElementState - The specific type of `GameElementState` managed by the subclass.\n * @typeParam TgameElement - The specific type of `GameElement` managed by the subclass.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  /**\n   * Observable that emits arrays of `GameElementState` from the central `GameStateService`.\n   *\n   * Subclasses must provide an observable that emits the relevant `GameElementState`\n   * instances for their specific type of `GameElement`.\n   */\n  protected abstract get elementState$(): Observable;\n\n  /**\n   * Registers the state of a `GameElement` with the central `GameStateService`.\n   *\n   * Subclasses must implement this method to add the `GameElement`'s state\n   * to the central game state.\n   *\n   * @param element - The `GameElement` to register.\n   */\n  protected abstract registerEntityState(element: TgameElement): void;\n\n  /**\n   * Updates the state of a `GameElement` in the central `GameStateService`.\n   *\n   * Subclasses must implement this method to update the state of a `GameElement`\n   * in the central game state when its state changes.\n   *\n   * @param state - The new state of the `GameElement`.\n   */\n  protected abstract setEntityState(state: GameElementState): void;\n\n  /**\n   * Initializes the service by subscribing to the central `GameStateService`'s observable\n   * of `GameElementState`. When the state of a registered `GameElement` changes in the\n   * central game state, this method updates the corresponding `GameElement`.\n   */\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  /**\n   * Retrieves a registered `GameElement` by its ID.\n   *\n   * @param id - The ID of the `GameElement` to retrieve.\n   * @returns The `GameElement` associated with the given ID.\n   * @throws If no `GameElement` with the given ID is registered.\n   */\n  private getEntity(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  /**\n   * Registers one or more `GameElement` instances with the service.\n   *\n   * This method:\n   * - Adds the `GameElement` instances to the internal registry.\n   * - Registers their state with the central `GameStateService`.\n   * - Subscribes to their state changes to update the central game state.\n   *\n   * @param entities - The `GameElement` instances to register.\n   * @throws If a `GameElement` with the same ID is already registered.\n   */\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElementStatesFactoryService.html":{"url":"classes/GameElementStatesFactoryService.html","title":"class - GameElementStatesFactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElementStatesFactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/game-element-states-factory.service.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            InitialGameElementStatesFactory\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementDrawPool\n                            \n                            \n                                    Private\n                                    Readonly\n                                gameElementStates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                            \n                                    Private\n                                buildActionDisplay\n                            \n                            \n                                buildAdaptionActionDisplay\n                            \n                            \n                                buildElementDrawPool\n                            \n                            \n                                    Private\n                                buildFactions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/game-element-states-factory.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementDrawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-element-states-factory.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gameElementStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameElementStates\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-element-states-factory.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameElementStates\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildActionDisplay\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildActionDisplay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAdaptionActionDisplay\n                        \n                    \n                \n            \n            \n                \nbuildAdaptionActionDisplay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Area\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildElementDrawPool\n                        \n                    \n                \n            \n            \n                \nbuildElementDrawPool()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Pile\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildFactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildFactions(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AreaState, GameElementStates, PileState, SpaceState } from 'api-types/src/game-state';\nimport { shuffle, startCase } from 'lodash';\nimport { AnimalEnum } from '../constant/animal.constant';\nimport { getOrThrow } from '../../engine/util/misc';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { deepClone } from 'fast-json-patch';\nimport { Space } from '../../engine/model/space.model';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { defaultPieceFactory } from '../../engine/model/piece.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { PieceKindEnum } from '../constant/piece.constant';\nimport {\n  emptyGameElementStates,\n  InitialGameElementStatesFactory,\n} from '../../engine/model/game-state.model';\nimport { Area } from '../../engine/model/area.model';\nimport { Pile } from '../../engine/model/pile.model';\nimport {\n  ACTION_DISPLAY_ADAPTION_STATE,\n  ELEMENT_DRAW_POOL_STATE,\n} from '../constant/game-state.constant';\n\n// Not injectable as it's built on-demand by GameStateInitializationService\nexport class GameElementStatesFactoryService implements InitialGameElementStatesFactory {\n  private readonly gameElementStates: GameElementStates;\n  private elementDrawPool: Pile;\n\n  constructor() {\n    this.gameElementStates = deepClone(emptyGameElementStates) as GameElementStates;\n    this.elementDrawPool = this.buildElementDrawPool();\n  }\n\n  build(playerIds: string[]): GameElementStates {\n    this.buildFactions(playerIds);\n    this.buildActionDisplay();\n\n    // add DrawPool state at the end after using it to initialize the other GameElementStates\n    this.gameElementStates.pile.push(this.elementDrawPool.state);\n    return this.gameElementStates;\n  }\n\n  buildElementDrawPool(): Pile {\n    return new Pile(deepClone(ELEMENT_DRAW_POOL_STATE) as PileState);\n  }\n\n  buildAdaptionActionDisplay(): Area {\n    const adaptionActionDisplayArea = new Area(\n      deepClone(ACTION_DISPLAY_ADAPTION_STATE) as AreaState,\n    );\n    this.elementDrawPool.pullMany(4).forEach((element) => {\n      if (element) {\n        const nextSpace = adaptionActionDisplayArea.nextAvailableSpace(SpaceKindEnum.ELEMENT);\n        if (nextSpace) {\n          nextSpace.addPiece(element);\n        } else {\n          throw new Error('No Spaces available');\n        }\n      } else {\n        throw new Error('Drawpool empty for initialization');\n      }\n    });\n    return adaptionActionDisplayArea;\n  }\n\n  private buildActionDisplay(): void {\n    this.gameElementStates.area.push(this.buildAdaptionActionDisplay().state);\n  }\n\n  private buildFactions(playerIds: string[]): void {\n    const shuffledAnimals = shuffle(Object.values(AnimalEnum));\n    playerIds.forEach((playerId: string, index) => {\n      const assignedAnimal = shuffledAnimals[index];\n      const elementConfig = getOrThrow(elementConfigByAnimal, assignedAnimal);\n\n      this.gameElementStates.faction.push({\n        id: assignedAnimal,\n        name: startCase(assignedAnimal),\n        ownerId: playerId,\n        score: 0,\n      });\n\n      // AnimalCard Spaces\n      const elementSpacesState: SpaceState[] = [];\n      // inherent element spaces\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementClientService.html":{"url":"injectables/GameManagementClientService.html","title":"injectable - GameManagementClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game-management-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                getLatestGameState\n                            \n                            \n                                    Async\n                                getLoggedInPlayer\n                            \n                            \n                                    Async\n                                getPlayer\n                            \n                            \n                                    Async\n                                setFriends\n                            \n                            \n                                    Async\n                                setInitialGameState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game-management-client.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLatestGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatestGameState(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayer(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setFriends\n                        \n                    \n                \n            \n            \n                \n                        \n                    setFriends(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                        Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setInitialGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setInitialGameState(gameState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { Game, GameCollection } from 'api-types/src/game';\nimport { lastValueFrom } from 'rxjs';\nimport { Player, PlayerCollection } from 'api-types/src/player';\nimport { GameState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementClientService {\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {}\n\n  async createGame(game: Game): Promise {\n    await lastValueFrom(this.http.post('/game', game));\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    const gameCollection = await lastValueFrom(\n      this.http.get('/game', {\n        params: { username: this.authService.loggedInUsername },\n      }),\n    );\n    return gameCollection.games;\n  }\n\n  async completeGame(gameId: string): Promise {\n    await lastValueFrom(this.http.patch(`/game/${gameId}`, { complete: true }));\n  }\n\n  async setInitialGameState(gameState: GameState): Promise {\n    await lastValueFrom(this.http.post(`/game/${gameState.gameId}/state`, gameState));\n  }\n\n  async getLatestGameState(gameId: string): Promise {\n    return await lastValueFrom(this.http.get(`/game/${gameId}/state`));\n  }\n\n  async getPlayer(username: string): Promise {\n    return await lastValueFrom(this.http.get(`/player/${username}`));\n  }\n\n  async getLoggedInPlayer(): Promise {\n    return await this.getPlayer(this.authService.loggedInUsername);\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await lastValueFrom(\n      this.http.get('/player', {\n        params: { username: username },\n      }),\n    );\n    return playerCollection.players;\n  }\n\n  async setFriends(player: Player): Promise {\n    await lastValueFrom(this.http.patch(`/player/${player.username}`, { friends: player.friends }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameReadyService.html":{"url":"injectables/GameReadyService.html","title":"injectable - GameReadyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameReadyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/game-ready.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalsReady\n                            \n                            \n                                    Private\n                                currentPlayerReady\n                            \n                            \n                                    Private\n                                signalReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateService: GameStateService, playerService: PlayerService, elementDrawPoolService: ElementDrawPoolService, animalProviderService: AnimalProviderService, actionDisplayManagerService: ActionDisplayManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/game-ready.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateService\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionDisplayManagerService\n                                                  \n                                                        \n                                                                        ActionDisplayManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalsReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-ready.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayerReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    currentPlayerReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-ready.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        signalReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    signalReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-ready.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-ready.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-ready.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-ready.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ElementDrawPoolService } from './element-draw-pool.service';\nimport { AnimalProviderService } from './animal-provider.service';\nimport { ActionDisplayManagerService } from './action-display/action-display-manager.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable, Subscription } from 'rxjs';\nimport { GameStateService } from '../../engine/service/game-state/game-state.service';\nimport { PlayerService } from '../../engine/service/game-management/player.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameReadyService {\n  private subscriptions: Subscription[] = [];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(\n    private gameStateService: GameStateService,\n    private playerService: PlayerService,\n    private elementDrawPoolService: ElementDrawPoolService,\n    private animalProviderService: AnimalProviderService,\n    private actionDisplayManagerService: ActionDisplayManagerService,\n  ) {\n    this.signalReady();\n  }\n\n  private currentPlayerReady(): Observable {\n    const currentPlayerSubject = new BehaviorSubject(false);\n    const currentPlayerSubscription = this.playerService.currentPlayer$.subscribe(\n      (currentPlayer) => {\n        if (currentPlayer) {\n          currentPlayerSubject.next(true);\n        }\n      },\n    );\n    this.subscriptions.push(currentPlayerSubscription);\n    return currentPlayerSubject.asObservable();\n  }\n\n  private animalsReady(): Observable {\n    const animalReadySubject = new BehaviorSubject(false);\n    const animalSubscription = this.animalProviderService.animals$.subscribe((animals) => {\n      if (\n        this.gameStateService.playerIds &&\n        animals.length === this.gameStateService.playerIds.length\n      ) {\n        animalReadySubject.next(true);\n      }\n    });\n    this.subscriptions.push(animalSubscription);\n    return animalReadySubject.asObservable();\n  }\n\n  private signalReady(): void {\n    const readyObs = [\n      this.currentPlayerReady(),\n      this.animalsReady(),\n      this.elementDrawPoolService.ready$,\n      this.actionDisplayManagerService.ready$,\n    ];\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n        this.subscriptions.forEach((sub) => {\n          sub.unsubscribe();\n        });\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanupGame\n                            \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                initializeGame\n                            \n                            \n                                    Async\n                                joinGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(navigate: NavigateService, authService: AuthService, gameManagementClientService: GameManagementClientService, gameStateService: GameStateService, gameStateInitializationService: GameStateInitializationService, areaRegistryService: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateService\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateInitializationService\n                                                  \n                                                        \n                                                                        GameStateInitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cleanupGame\n                        \n                    \n                \n            \n            \n                \ncleanupGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(otherPlayers: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otherPlayers\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initializeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        joinGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { humanId } from 'human-id';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Game } from 'api-types/src/game';\nimport { GameStateInitializationService } from '../game-state/game-state-initialization.service';\nimport { GameTitle } from '../../constant/game-title.constant';\nimport { FactionRegistryService } from '../game-element/faction-registry.service';\nimport { AreaRegistryService } from '../game-element/area-registry.service';\nimport { PileRegistryService } from '../game-element/pile-registry.service';\nimport { Area } from '../../model/area.model';\nimport { Faction } from '../../model/faction.model';\nimport { Pile } from '../../model/pile.model';\nimport { NavigateService } from '../navigate.service';\nimport { GameStateService } from '../game-state/game-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameService {\n  constructor(\n    private navigate: NavigateService,\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n    private gameStateService: GameStateService,\n    private gameStateInitializationService: GameStateInitializationService,\n    private areaRegistryService: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {}\n\n  async createGame(otherPlayers: string[]): Promise {\n    const gameId = humanId();\n    const playerIds = [this.authService.loggedInUsername, ...otherPlayers];\n    await this.gameManagementClientService.createGame({\n      gameId,\n      host: this.authService.loggedInUsername,\n      playerIds: playerIds,\n    });\n    const initialGameState = this.gameStateInitializationService.build(\n      GameTitle.DOMINANT_SPECIES,\n      gameId,\n      playerIds,\n    );\n    await this.gameManagementClientService.setInitialGameState(initialGameState);\n    console.log(`created game: ${gameId}`);\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    return await this.gameManagementClientService.getGamesForLoggedInPlayer();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameManagementClientService.completeGame(gameId);\n  }\n\n  async joinGame(gameId: string): Promise {\n    await this.navigate.toGamePage(GameTitle.DOMINANT_SPECIES, gameId);\n  }\n\n  async initializeGame(gameId: string): Promise {\n    const gameState = await this.gameManagementClientService.getLatestGameState(gameId);\n    this.gameStateService.initializeGameState(gameState);\n    gameState.gameElements.area.forEach((areaState) => {\n      this.areaRegistryService.register(new Area(areaState));\n    });\n    gameState.gameElements.faction.forEach((state) => {\n      this.factionRegistryService.register(new Faction(state));\n    });\n    gameState.gameElements.pile.forEach((state) => {\n      this.pileRegistryService.register(new Pile(state));\n    });\n  }\n\n  cleanupGame(): void {\n    this.gameStateService.disconnectFromBackend();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gsp$\n                            \n                            \n                                    Private\n                                gspSubject\n                            \n                            \n                                    Private\n                                websocketSubject\n                            \n                            \n                                    Private\n                                websocketSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gsp$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.gspSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gspSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        websocketSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebSocketSubject | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        websocketSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-client.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { retry, Subject, Subscription } from 'rxjs';\nimport { GameStatePatch } from 'api-types/src/game-state';\nimport { AuthService } from '../auth/auth.service';\nimport { ensureDefined } from '../../util/misc';\nimport { WebSocketSubject } from 'rxjs/internal/observable/dom/WebSocketSubject';\nimport { webSocket } from 'rxjs/webSocket';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  private websocketSubject: WebSocketSubject | undefined = undefined;\n  private websocketSubscription: Subscription | undefined = undefined;\n  private gspSubject = new Subject();\n  gsp$ = this.gspSubject.asObservable();\n\n  constructor(private authService: AuthService) {}\n\n  connect(gameId: string) {\n    const playerAuthData = ensureDefined(this.authService.playerAuthData);\n    this.websocketSubject = webSocket({\n      url: `${environment.stateEndpoint}/?token=${playerAuthData.accessToken}&gameId=${gameId}&playerId=${playerAuthData.username}`,\n      serializer: (message) => JSON.stringify(message),\n    });\n    this.websocketSubject.pipe(retry({ delay: 3000 })).subscribe((gsp) => {\n      this.gspSubject.next(gsp);\n    });\n  }\n\n  disconnect(): void {\n    if (this.websocketSubscription) {\n      this.websocketSubscription.unsubscribe();\n    }\n  }\n\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n    if (this.websocketSubject) {\n      this.websocketSubject.next(gsp);\n    } else {\n      throw new Error('Must connect first');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateInitializationService.html":{"url":"injectables/GameStateInitializationService.html","title":"injectable - GameStateInitializationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateInitializationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-initialization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                factoryByGameTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factoryMap: Map | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryMap\n                                                  \n                                                        \n                                                                        Map | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(gameTitle: string, gameId: string, playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameTitle\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        factoryByGameTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  getEmptyInitialGameState,\n  InitialGameElementStatesFactoryConstructor,\n} from '../../model/game-state.model';\nimport { GameTitle } from '../../constant/game-title.constant';\nimport { GameElementStatesFactoryService } from '../../../game/service/game-element-states-factory.service';\nimport { GameState } from 'api-types/src/game-state';\n\nconst FACTORY_MAP = new Map([\n  [GameTitle.DOMINANT_SPECIES, GameElementStatesFactoryService],\n]);\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateInitializationService {\n  private readonly factoryByGameTitle: Map;\n\n  constructor(\n    @Optional()\n    @Inject('FACTORY_MAP')\n    factoryMap: Map | null,\n  ) {\n    this.factoryByGameTitle = factoryMap ?? FACTORY_MAP;\n  }\n\n  build(gameTitle: string, gameId: string, playerIds: string[]): GameState {\n    const gameState = getEmptyInitialGameState(gameId, playerIds);\n    const gameElementsFactoryClass = this.factoryByGameTitle.get(gameTitle);\n    if (gameElementsFactoryClass) {\n      const gameElementsFactory = new gameElementsFactoryClass();\n      gameState.gameElements = gameElementsFactory.build(playerIds);\n      return gameState;\n    } else {\n      throw new Error(`Unable to build initial state for ${gameTitle}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(oldState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { applyPatch, compare, deepClone } from 'fast-json-patch';\nimport { GameState, GameStatePatch } from 'api-types/src/game-state';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      gameId: oldState.gameId,\n      patchId: oldState.patchId + 1,\n      patch: compare(oldState.gameElements, newState.gameElements),\n    };\n  }\n\n  apply(oldState: GameState, gsp: GameStatePatch): GameState {\n    const newState = deepClone(oldState) as GameState;\n    newState.gameElements = applyPatch(\n      oldState.gameElements,\n      gsp.patch,\n      undefined,\n      false,\n    ).newDocument;\n    newState.patchId = gsp.patchId;\n    return newState;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                disconnectFromBackend\n                            \n                            \n                                initializeGameState\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerIds\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnectFromBackend\n                        \n                    \n                \n            \n            \n                \ndisconnectFromBackend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeGameState\n                        \n                    \n                \n            \n            \n                \ninitializeGameState(gameState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerIds\n                    \n                \n\n                \n                    \n                        getplayerIds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:94\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:105\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { Observable } from 'rxjs';\nimport {\n  AreaState,\n  FactionState,\n  GameState,\n  GameStatePatch,\n  PileState,\n} from 'api-types/src/game-state';\nimport { ensureDefined } from '../../util/misc';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  initializeGameState(gameState: GameState): void {\n    this.gameStateStore.initializeGameState(gameState);\n    this.gameStateClient.connect(gameState.gameId);\n  }\n\n  disconnectFromBackend(): void {\n    this.gameStateClient.disconnect();\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    this.gameStateStore.setGameState(\n      this.gspService.apply(ensureDefined(this.gameStateStore.gameState), gsp),\n    );\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        ensureDefined(this.gameStateStore.gameState),\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get playerIds(): string[] | undefined {\n    return this.gameStateStore.playerIds;\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\nusing the register method of the state element management service such as PileService or AreaService.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                initializeGameState\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    playerIds\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:42\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:52\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeGameState\n                        \n                    \n                \n            \n            \n                \ninitializeGameState(gameState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:189\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:201\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:209\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:116\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:124\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        playerIds\n                    \n                \n\n                \n                    \n                        getplayerIds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:173\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:181\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:193\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:205\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable, of, switchMap } from 'rxjs';\nimport { getEmptyInitialGameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\n\nimport {\n  AreaState,\n  FactionState,\n  GameElementState,\n  GameElementStates,\n  GameState,\n  PileState,\n} from 'api-types/src/game-state';\nimport { ensureDefined } from '../../util/misc';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\n * using the register method of the state element management service such as PileService or AreaService.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState | undefined;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  initializeGameState(gameState: GameState): void {\n    this._gameState = getEmptyInitialGameState(gameState.gameId, gameState.playerIds);\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T[]): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      switchMap((gameState) => {\n        if (gameState === undefined) {\n          return of([] as T[]);\n        }\n        return of(selector(gameState));\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState.gameElements[\n      key\n    ] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = ensureDefined(this._gameState).gameElements[\n      key\n    ] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState | undefined {\n    if (this._gameState) {\n      return deepClone(this._gameState) as GameState;\n    } else {\n      return undefined;\n    }\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n      this._transactionState.patchId += 1;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get playerIds(): string[] | undefined {\n    if (this._gameState) {\n      return this._gameState.playerIds;\n    } else {\n      return undefined;\n    }\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitialGameElementStatesFactory.html":{"url":"interfaces/InitialGameElementStatesFactory.html","title":"interface - InitialGameElementStatesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InitialGameElementStatesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        build\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-state.model.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameElementStates\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GameElementStates, GameState } from 'api-types/src/game-state';\nimport { deepClone } from 'fast-json-patch';\n\nexport const emptyGameElementStates: GameElementStates = {\n  area: [],\n  faction: [],\n  pile: [],\n};\n\n// current used to initialize GameStoreService, but should be refactored to get the Initial Game State when user joins the game.\nexport const emptyGameState: GameState = {\n  gameId: 'placeholder',\n  patchId: 0,\n  playerIds: [],\n  gameElements: emptyGameElementStates,\n};\n\nexport function getEmptyInitialGameState(gameId: string, playerIds: string[]): GameState {\n  return {\n    gameId: gameId,\n    patchId: 0,\n    playerIds: playerIds,\n    gameElements: deepClone(emptyGameElementStates) as GameElementStates,\n  };\n}\n\nexport interface InitialGameElementStatesFactory {\n  build(playerIds: string[]): GameElementStates;\n}\n\nexport type InitialGameElementStatesFactoryConstructor = new () => InitialGameElementStatesFactory;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LobbyPageComponent.html":{"url":"components/LobbyPageComponent.html","title":"component - LobbyPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LobbyPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/lobby-page/lobby-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lobby-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTable\n                            MatColumnDef\n                            MatHeaderCell\n                            MatCell\n                            MatHeaderRow\n                            MatRow\n                            MatHeaderRowDef\n                            MatRowDef\n                            MatHeaderCellDef\n                            MatCellDef\n                            MatButton\n                            MatIcon\n                            MatMiniFabButton\n                            MatChipSet\n                            MatChip\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lobby-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./lobby-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                games\n                            \n                            \n                                gameTableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                fetchGames\n                            \n                            \n                                filterPlayers\n                            \n                            \n                                    Async\n                                joinGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, playerService: PlayerService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterPlayers\n                        \n                    \n                \n            \n            \n                \nfilterPlayers(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        joinGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameTableColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['gameId', 'host', 'playerIds', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { Game } from 'api-types/src/game';\nimport { GameService } from '../../service/game-management/game.service';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatHeaderCell,\n  MatHeaderCellDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef,\n  MatTable,\n} from '@angular/material/table';\nimport { MatButton, MatMiniFabButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatChip, MatChipSet } from '@angular/material/chips';\nimport { PlayerService } from '../../service/game-management/player.service';\nimport { Player } from 'api-types/src/player';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { NavigateService } from '../../service/navigate.service';\n\n@Component({\n  selector: 'app-lobby-page',\n  standalone: true,\n  imports: [\n    MatTable,\n    MatColumnDef,\n    MatHeaderCell,\n    MatCell,\n    MatHeaderRow,\n    MatRow,\n    MatHeaderRowDef,\n    MatRowDef,\n    MatHeaderCellDef,\n    MatCellDef,\n    MatButton,\n    MatIcon,\n    MatMiniFabButton,\n    MatChipSet,\n    MatChip,\n    MatTooltip,\n  ],\n  templateUrl: './lobby-page.component.html',\n  styleUrl: './lobby-page.component.scss',\n})\nexport class LobbyPageComponent {\n  games = signal([]);\n  gameTableColumns: string[] = ['gameId', 'host', 'playerIds', 'actions'];\n  readonly currentPlayer = signal(undefined);\n\n  constructor(\n    private gameService: GameService,\n    private playerService: PlayerService,\n    private navigate: NavigateService,\n  ) {\n    this.playerService.currentPlayer$.subscribe((player) => {\n      this.currentPlayer.set(player);\n      void this.fetchGames();\n    });\n  }\n\n  filterPlayers(game: Game): string[] {\n    return game.playerIds\n      .filter((player) => player !== game.host)\n      .slice()\n      .sort();\n  }\n\n  async fetchGames(): Promise {\n    this.games.set(await this.gameService.getGamesForLoggedInPlayer());\n  }\n\n  async createGame(): Promise {\n    await this.navigate.toCreateGamePage();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameService.completeGame(gameId);\n    await this.fetchGames();\n  }\n\n  async joinGame(gameId: string): Promise {\n    await this.gameService.joinGame(gameId);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      refresh\n    \n    \n      add_circle\n    \n  \n  \n    \n      \n        Id\n        {{ game.gameId }}\n      \n      \n        Host\n        \n          \n            {{ game.host }}\n          \n        \n      \n      \n        Players\n        \n          \n            @for (player of filterPlayers(game); track $index) {\n              {{ player }}\n            }\n          \n        \n      \n      \n        \n        \n          \n            @if (game.host === currentPlayer()?.username) {\n              \n                delete\n              \n            }\n            \n              login\n            \n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            refresh              add_circle                          Id        {{ game.gameId }}                    Host                              {{ game.host }}                                      Players                              @for (player of filterPlayers(game); track $index) {              {{ player }}            }                                                                    @if (game.host === currentPlayer()?.username) {                              delete                          }                          login                                                      '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LobbyPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletedStorageKey\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                setStorageKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletedStorageKey\n                        \n                    \n                \n            \n            \n                \ndeletedStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageKey\n                        \n                    \n                \n            \n            \n                \ngetStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageKey\n                        \n                    \n                \n            \n            \n                \nsetStorageKey(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  deletedStorageKey(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  getStorageKey(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  setStorageKey(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginFormData.html":{"url":"interfaces/LoginFormData.html","title":"interface - LoginFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/login-page/login-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private navigate: NavigateService,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.navigate.toLobbyPage();\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatCard\n                            MatCardContent\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/login-page/login-page.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private navigate: NavigateService,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.navigate.toLobbyPage();\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n          \n          Confirm\n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n        \n          \n          \n            Sign Up Here\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                            Username:                                    Password:                          .                            Confirm                                                @if (errorMessage()) {              {{ errorMessage() }}            }                                                          Sign Up Here                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutPageComponent.html":{"url":"components/LogoutPageComponent.html","title":"component - LogoutPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/logout-page/logout-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-page\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logout-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logout-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/logout-page/logout-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/logout-page/logout-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { NavigateService } from '../../service/navigate.service';\n\n@Component({\n  selector: 'app-logout-page',\n  standalone: true,\n  imports: [],\n  templateUrl: './logout-page.component.html',\n  styleUrl: './logout-page.component.scss',\n})\nexport class LogoutPageComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private navigate: NavigateService,\n  ) {}\n\n  ngOnInit() {\n    this.authService.logout();\n    void this.navigate.toLoginPage();\n  }\n}\n\n    \n\n    \n        logout-page works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout-page works!'\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NavigateService.html":{"url":"injectables/NavigateService.html","title":"injectable - NavigateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NavigateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/navigate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                toCreateGamePage\n                            \n                            \n                                    Async\n                                toGamePage\n                            \n                            \n                                    Async\n                                toLobbyPage\n                            \n                            \n                                    Async\n                                toLoginPage\n                            \n                            \n                                    Async\n                                toSignUpConfirmPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/navigate.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toCreateGamePage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toCreateGamePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toGamePage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toGamePage(gameTitle: string, gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameTitle\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toLobbyPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toLobbyPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toLoginPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toLoginPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toSignUpConfirmPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    toSignUpConfirmPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/navigate.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigateService {\n  constructor(private router: Router) {}\n\n  async toCreateGamePage(): Promise {\n    await this.router.navigate(['/create-game']);\n  }\n\n  async toGamePage(gameTitle: string, gameId: string): Promise {\n    await this.router.navigate(['game', gameTitle], {\n      queryParams: {\n        gameId: gameId,\n      },\n    });\n  }\n\n  async toLobbyPage(): Promise {\n    await this.router.navigate(['/lobby']);\n  }\n\n  async toLoginPage(): Promise {\n    await this.router.navigate(['/login']);\n  }\n\n  async toSignUpConfirmPage(): Promise {\n    await this.router.navigate(['/sign-up-confirm']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                owner\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitLength\n                            \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:13\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitLength\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitLength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:58\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:88\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:32\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  override setState(newState: PileState) {\n    super.setState(newState);\n    this.emitLength();\n  }\n\n  private emitLength(): void {\n    this.lengthSubject.next(this.length);\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.emitLength();\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PileAdapter.html":{"url":"classes/PileAdapter.html","title":"class - PileAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PileAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pile: Pile)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pile\n                                                  \n                                                        \n                                                                        Pile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:101\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:105\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  override setState(newState: PileState) {\n    super.setState(newState);\n    this.emitLength();\n  }\n\n  private emitLength(): void {\n    this.lengthSubject.next(this.length);\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.emitLength();\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileConfig.html":{"url":"interfaces/PileConfig.html","title":"interface - PileConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/pile-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawn\n                                        \n                                \n                                \n                                        \n                                            species\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        species\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        species:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalEnum } from './animal.constant';\nimport { PileIdEnum } from './pile.constant';\n\nexport interface PileConfig {\n  actionPawn: string;\n  species: string;\n}\n\nexport const pileIdsByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n]);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:50\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement | TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:65\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nEmits the updated set of registered IDs.\nRegisters the elements with the GameElementStateService for state synchronization.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement | TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement or array of GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:39\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:88\n\n                        \n                    \n\n\n            \n                \n                        Retrieves a registered GameElement by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the GameElement to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                The GameElement associated with the given ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:70\n\n                        \n                    \n\n\n            \n                \n                        Initializes the service by subscribing to the central GameStateService's observable\nof GameElementState. When the state of a registered GameElement changes in the\ncentral game state, this method updates the corresponding GameElement.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:103\n\n                        \n                    \n\n\n            \n                \n                        Registers one or more GameElement instances with the service.\nThis method:\n\nAdds the GameElement instances to the internal registry.\nRegisters their state with the central GameStateService.\nSubscribes to their state changes to update the central game state.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe GameElement instances to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:30\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerAuthData.html":{"url":"interfaces/PlayerAuthData.html","title":"interface - PlayerAuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerAuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            accessTokenExpire\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenExpire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenExpire:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PlayerAuthData {\n  username: string;\n  accessToken: string;\n  accessTokenExpire: number;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlayer\n                            \n                            \n                                currentPlayer$\n                            \n                            \n                                    Private\n                                currentPlayerSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFriend\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                removeFriend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameManagementClientService: GameManagementClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Player | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentPlayerSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayerSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.currentPlayer)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from 'api-types/src/player';\nimport { AuthService } from '../auth/auth.service';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { ensureDefined } from '../../util/misc';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  currentPlayer: Player | undefined = undefined;\n  private currentPlayerSubject: BehaviorSubject = new BehaviorSubject(this.currentPlayer);\n  currentPlayer$ = this.currentPlayerSubject.asObservable();\n\n  constructor(\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n  ) {\n    this.authService.isLoggedIn$.pipe().subscribe((isLoggedIn) => {\n      if (isLoggedIn) {\n        this.gameManagementClientService\n          .getLoggedInPlayer()\n          .then((player) => {\n            this.currentPlayer = player;\n            this.currentPlayerSubject.next(this.currentPlayer);\n          })\n          .catch((error: unknown) => {\n            throw error;\n          });\n      } else {\n        this.currentPlayer = undefined;\n        this.currentPlayerSubject.next(this.currentPlayer);\n      }\n    });\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await this.gameManagementClientService.findPlayers(username);\n    return playerCollection.map((player) => player.username);\n  }\n\n  async addFriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends.push(username);\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n    this.currentPlayerSubject.next(this.currentPlayer);\n  }\n\n  async removeFriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends = ensureDefined(this.currentPlayer).friends.filter(\n      (friendUsername) => friendUsername !== username,\n    );\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n    this.currentPlayerSubject.next(this.currentPlayer);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpConfirmFormData.html":{"url":"interfaces/SignUpConfirmFormData.html","title":"interface - SignUpConfirmFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpConfirmFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private navigate: NavigateService,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.navigate.toLoginPage();\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpConfirmPageComponent.html":{"url":"components/SignUpConfirmPageComponent.html","title":"component - SignUpConfirmPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpConfirmPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-confirm-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-confirm-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-confirm-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpConfirmForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private navigate: NavigateService,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.navigate.toLoginPage();\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Confirm Sign Up\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Code:\n          \n        \n        .\n        \n          \n          \n            Confirm\n          \n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm Sign Up                            Username:                                    Code:                          .                                        Confirm                                                          @if (errorMessage()) {              {{ errorMessage() }}            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpConfirmPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpFormData.html":{"url":"interfaces/SignUpFormData.html","title":"interface - SignUpFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-page/sign-up-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private navigate: NavigateService,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.navigate.toSignUpConfirmPage();\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpPageComponent.html":{"url":"components/SignUpPageComponent.html","title":"component - SignUpPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-page/sign-up-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardHeader\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, navigate: NavigateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigate\n                                                  \n                                                        \n                                                                        NavigateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { NavigateService } from '../../service/navigate.service';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private navigate: NavigateService,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.navigate.toSignUpConfirmPage();\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up for VPA Games\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Email:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n        \n          \n          Sign Up\n        \n\n        \n\n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n            @if (signUpForm.invalid && signUpForm.dirty) {\n              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {\n                Please enter a valid email.\n              }\n              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {\n                Password must be at least 6 characters long.\n              }\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up for VPA Games                            Username:                                    Email:                                    Password:                          .                                    Sign Up                                                        @if (errorMessage()) {              {{ errorMessage() }}            }            @if (signUpForm.invalid && signUpForm.dirty) {              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {                Please enter a valid email.              }              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {                Password must be at least 6 characters long.              }            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignUpService.html":{"url":"injectables/SignUpService.html","title":"injectable - SignUpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignUpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/sign-up.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/sign-up.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignUpService {\n  constructor(private cognitoClientService: CognitoClientService) {}\n\n  async signUp(username: string, email: string, password: string): Promise {\n    return this.cognitoClientService.signUp(username, email, password);\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    return this.cognitoClientService.confirmSignUp(username, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _action\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                removePiece\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    action\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: SpaceState)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        SpaceState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                        Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n\n                \n                    \n                        getaction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:31\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action } from './action.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\nimport { Piece, SpaceState } from 'api-types/src/game-state';\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(state: SpaceState) {\n    this.kind = state.kind;\n    this._piece = state.piece;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeciesPiece.html":{"url":"interfaces/SpeciesPiece.html","title":"interface - SpeciesPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeciesPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/species.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface SpeciesPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/component/create-game-page/create-game-page.component.ts\n            \n            component\n            CreateGamePageComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/engine/component/lobby-page/lobby-page.component.ts\n            \n            component\n            LobbyPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            interface\n            LoginFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/logout-page/logout-page.component.ts\n            \n            component\n            LogoutPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            component\n            SignUpConfirmPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            interface\n            SignUpConfirmFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            component\n            SignUpPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            interface\n            SignUpFormData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/gaurd/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/api-url.interceptor.ts\n            \n            function\n            apiUrlInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/auth.interceptor.ts\n            \n            function\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/error-handler.interceptor.ts\n            \n            function\n            errorHandlerInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            interface\n            InitialGameElementStatesFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            function\n            getEmptyInitialGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameElementStates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            type alias\n            InitialGameElementStatesFactoryConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            type alias\n            PieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            PileAdapter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerAuthData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/cognito-client.service.ts\n            \n            injectable\n            CognitoClientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/sign-up.service.ts\n            \n            injectable\n            SignUpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game-management-client.service.ts\n            \n            injectable\n            GameManagementClientService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-initialization.service.ts\n            \n            injectable\n            GameStateInitializationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/service/game-state/game-state-initialization.service.ts\n            \n            variable\n            FACTORY_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                13 %\n                (2/15)\n            \n        \n        \n            \n                \n                src/app/engine/service/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/service/navigate.service.ts\n            \n            injectable\n            NavigateService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            deepFreeze\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            ensureDefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            setDifference\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n            \n            component\n            AdaptionActionDisplayCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n            \n            component\n            ActionPawnSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/element-space/element-space.component.ts\n            \n            component\n            ElementSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n            \n            component\n            EyeballComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-pawn/action-pawn.component.ts\n            \n            component\n            ActionPawnComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/animal-card/animal-card.component.ts\n            \n            component\n            AnimalCardComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/game/component/dominant-species-game/dominant-species-game.component.ts\n            \n            component\n            DominantSpeciesGameComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/game/component/element/element.component.ts\n            \n            component\n            ElementComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/game/constant/animal.constant.ts\n            \n            type alias\n            AnimalKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            variable\n            elementAreaIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            type alias\n            AreaId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element-config.constant.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element.constant.ts\n            \n            type alias\n            ElementKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/game-state.constant.ts\n            \n            variable\n            ACTION_DISPLAY_ADAPTION_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/game-state.constant.ts\n            \n            variable\n            ELEMENT_DRAW_POOL_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/image.constant.ts\n            \n            variable\n            imgPathByKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            interface\n            PileConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/game/constant/pile-config.ts\n            \n            variable\n            pileIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/action-display.model.ts\n            \n            interface\n            ActionDisplayService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/action-pawn.model.ts\n            \n            interface\n            ActionPawnPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            AnimalElements\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            interface\n            AnimalConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/element.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/species.model.ts\n            \n            interface\n            SpeciesPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            injectable\n            ActionDisplayManagerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/adaption-action-display.service.ts\n            \n            injectable\n            AdaptionActionDisplayService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/game/service/animal-provider.service.ts\n            \n            injectable\n            AnimalProviderService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/game/service/game-element-states-factory.service.ts\n            \n            class\n            GameElementStatesFactoryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/game/service/game-ready.service.ts\n            \n            injectable\n            GameReadyService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @aws-sdk/client-cognito-identity-provider : ^3.670.0\n        \n            fast-json-patch : ^3.1.1\n        \n            human-id : ^4.1.1\n        \n            jwt-decode : ^4.0.0\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalEnum   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../area.constant.ts)\n                        \n                        \n                            ElementEnum   (src/.../element.constant.ts)\n                        \n                        \n                            GameTitle   (src/.../game-title.constant.ts)\n                        \n                        \n                            LocalStorageKey   (src/.../local-storage.constant.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../piece.constant.ts)\n                        \n                        \n                            PileIdEnum   (src/.../pile.constant.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../area.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n\n    src/app/game/constant/area.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n    src/app/game/constant/element.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grass\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grub\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meat\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seed\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sun\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : water\n                            \n                        \n            \n        \n\n    src/app/engine/constant/game-title.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        GameTitle\n                    \n                \n                        \n                            \n                                 DOMINANT_SPECIES\n                            \n                        \n                        \n                            \n                                Value : dominant-species\n                            \n                        \n            \n        \n\n    src/app/engine/constant/local-storage.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageKey\n                    \n                \n                        \n                            \n                                 PLAYER_AUTH_DATA\n                            \n                        \n                        \n                            \n                                Value : playerAuthData\n                            \n                        \n            \n        \n\n    src/app/game/constant/piece.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 SPECIES\n                            \n                        \n                        \n                            \n                                Value : species\n                            \n                        \n            \n        \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PileIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrlInterceptor   (src/.../api-url.interceptor.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            deepCompare   (src/.../misc.ts)\n                        \n                        \n                            deepFreeze   (src/.../misc.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            ensureDefined   (src/.../misc.ts)\n                        \n                        \n                            errorHandlerInterceptor   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            getEmptyInitialGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            getOrThrow   (src/.../misc.ts)\n                        \n                        \n                            isFalse   (src/.../predicate.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                        \n                            isTrue   (src/.../predicate.ts)\n                        \n                        \n                            setDifference   (src/.../misc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/interceptor/api-url.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrlInterceptor\n                        \n                    \n                \n            \n            \n                \napiUrlInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n            \n                \nauthInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/misc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deepFreeze\n                        \n                    \n                \n            \n            \n                \ndeepFreeze(obj: T)\n                \n            \n\n\n\n\n            \n                \n                        Returns a readonly version of an object.\nThis is intended to be used with \"seed\" objects that should be copied to create a \"read/write\" object that can be used.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureDefined\n                        \n                    \n                \n            \n            \n                \nensureDefined(value)\n                \n            \n\n\n\n\n            \n                \n                        Ensures that a given value is defined (i.e., not undefined).\nTypically used for values that start as undefined and then are set during initialization by a subscription.\nIf the value is undefined, this function throws an error with a message\nindicating that the value is not defined. If the value is defined, it is\nreturned unchanged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be checked.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \nThe value itself if it is defined.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDifference\n                        \n                    \n                \n            \n            \n                \nsetDifference(setA: Set, setB: Set)\n                \n            \n\n\n\n\n            \n                \n                        Returns the items that are in setA, but not in setB\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                setA\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setB\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Set\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner, name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/error-handler.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorHandlerInterceptor\n                        \n                    \n                \n            \n            \n                \nerrorHandlerInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyInitialGameState\n                        \n                    \n                \n            \n            \n                \ngetEmptyInitialGameState(gameId: string, playerIds)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playerIds\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFalse\n                        \n                    \n                \n            \n            \n                \nisFalse(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTrue\n                        \n                    \n                \n            \n            \n                \nisTrue(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    26 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalKind   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaId   (src/.../area.constant.ts)\n                        \n                        \n                            ElementKind   (src/.../element.constant.ts)\n                        \n                        \n                            InitialGameElementStatesFactoryConstructor   (src/.../game-state.model.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/area.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/element.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/game-state.model.ts\n    \n    \n        \n            \n                \n                    \n                    InitialGameElementStatesFactoryConstructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTION_DISPLAY_ADAPTION_STATE   (src/.../game-state.constant.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            ELEMENT_DRAW_POOL_STATE   (src/.../game-state.constant.ts)\n                        \n                        \n                            elementAreaIdsByAnimal   (src/.../area.constant.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../element-config.constant.ts)\n                        \n                        \n                            emptyGameElementStates   (src/.../game-state.model.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            FACTORY_MAP   (src/.../game-state-initialization.service.ts)\n                        \n                        \n                            imgPathByKind   (src/.../image.constant.ts)\n                        \n                        \n                            pileIdsByAnimal   (src/.../pile-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/game-state.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACTION_DISPLAY_ADAPTION_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : deepFreeze({\n  id: AreaIdEnum.ACTION_DISPLAY_ADAPTION,\n  space: [\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n    { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n    { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n  ],\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ELEMENT_DRAW_POOL_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : deepFreeze({\n  id: PileIdEnum.ELEMENT,\n  owner: null,\n  inventory: {\n    // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n    [ElementEnum.GRASS]: 18,\n    [ElementEnum.GRUB]: 18,\n    [ElementEnum.MEAT]: 18,\n    [ElementEnum.SEED]: 18,\n    [ElementEnum.SUN]: 18,\n    [ElementEnum.WATER]: 18,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(\n      withFetch(),\n      withInterceptors([apiUrlInterceptor, authInterceptor, errorHandlerInterceptor]),\n    ),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideAnimationsAsync('animations'),\n    provideRouter(routes),\n    {\n      provide: CognitoIdentityProviderClient,\n      useFactory: () => new CognitoIdentityProviderClient({ region: environment.cognito.region }),\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/engine/gaurd/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  if (inject(AuthService).checkIsLoggedIn()) {\n    return inject(AuthService).checkIsLoggedIn();\n  } else {\n    void inject(NavigateService).toLoginPage();\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/area.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementAreaIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [AnimalEnum.AMPHIBIAN, AreaIdEnum.AMPHIBIAN_ELEMENT],\n  [AnimalEnum.ARACHNID, AreaIdEnum.ARACHNID_ELEMENT],\n  [AnimalEnum.BIRD, AreaIdEnum.BIRD_ELEMENT],\n  [AnimalEnum.INSECT, AreaIdEnum.INSECT_ELEMENT],\n  [AnimalEnum.MAMMAL, AreaIdEnum.MAMMAL_ELEMENT],\n  [AnimalEnum.REPTILE, AreaIdEnum.REPTILE_ELEMENT],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/element-config.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameElementStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameElementStates\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [],\n  faction: [],\n  pile: [],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  gameId: 'placeholder',\n  patchId: 0,\n  playerIds: [],\n  gameElements: emptyGameElementStates,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/engine/service/game-state/game-state-initialization.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FACTORY_MAP\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map([\n  [GameTitle.DOMINANT_SPECIES, GameElementStatesFactoryService],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/image.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imgPathByKind\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  // elements /\n  ['grass', 'dominant-species/element/noun-grass-7195612.svg'],\n  ['grub', 'dominant-species/element/noun-grub-3386143.svg'],\n  ['meat', 'dominant-species/element/noun-cow-skull-151117.svg'],\n  ['seed', 'dominant-species/element/noun-seed-6850047.svg'],\n  ['sun', 'dominant-species/element/noun-sun-7300296.svg'],\n  ['water', 'dominant-species/element/noun-water-water-1235535.svg'],\n  // animals /\n  ['amphibian', 'dominant-species/animal/noun-gecko-367390.svg'],\n  ['arachnid', 'dominant-species/animal/noun-spider-7144060.svg'],\n  ['bird', 'dominant-species/animal/noun-eagle-6606521.svg'],\n  ['insect', 'dominant-species/animal/noun-grasshopper-7049525.svg'],\n  ['mammal', 'dominant-species/animal/noun-monkey-2997582.svg'],\n  ['reptile', 'dominant-species/animal/noun-snake-4412103.svg'],\n  // others /\n  ['eyeball', 'dominant-species/other/noun-eye-2037742.svg'],\n  ['elementSpace', 'dominant-species/other/noun-leaf-7290921.svg'],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/pile-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pileIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
