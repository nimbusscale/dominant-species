var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.333,1,2.086]],["body/interfaces/Action.html",[0,0.498,1,3.666,2,1.88,3,0.413,4,0.372,5,0.372,6,4.595,7,0.22,8,0.585,9,1.638,10,1.113,11,0.257,12,0.021,13,0.413,14,0.019,15,0.019]],["title/injectables/AnimalService.html",[16,0.362,17,2.725]],["body/injectables/AnimalService.html",[3,0.158,4,0.143,5,0.143,7,0.084,8,0.3,9,0.95,10,0.342,11,0.273,12,0.022,13,0.158,14,0.01,15,0.01,16,0.327,17,2.46,18,0.609,19,1.759,20,1.652,21,4.022,22,3.695,23,5.723,24,4.022,25,1.843,26,0.725,27,3.249,28,4.565,29,2.148,30,4.565,31,3.249,32,1.135,33,2.021,34,4.022,35,4.022,36,1.073,37,1.759,38,2.864,39,2.973,40,3.465,41,1.228,42,3.249,43,0.848,44,0.666,45,0.848,46,2.773,47,3.249,48,3.695,49,2.061,50,1.348,51,0.988,52,1.063,53,2.061,54,2.061,55,2.061,56,3.249,57,2.061,58,1.487,59,5.826,60,1.474,61,1.38,62,2.061,63,2.061,64,2.195,65,2.061,66,3.249,67,1.487,68,0.915,69,3.249,70,2.061,71,2.061,72,1.759,73,2.061,74,2.061,75,2.061,76,2.061,77,2.061,78,2.061,79,2.061,80,0.578,81,0.515,82,2.061,83,2.061,84,2.061,85,2.46,86,1.293,87,1.633,88,2.864,89,1.11,90,1.412,91,3.433,92,0.762,93,0.609,94,1.293,95,1.412,96,1.412,97,1.412,98,2.061,99,1.56,100,1.56,101,2.061,102,2.061,103,2.061,104,0.609,105,0.576,106,0.143,107,1.194,108,2.061,109,2.061,110,3.249,111,2.061,112,2.061,113,2.061,114,2.061,115,2.061,116,2.061,117,2.061,118,3.249,119,2.061,120,2.061,121,1.412,122,1.759,123,2.061,124,3.249,125,1.759,126,1.56,127,0.681,128,1.759,129,4.022,130,2.061,131,2.061,132,1.425,133,1.759,134,2.061,135,2.061,136,2.061,137,2.061,138,1.56,139,3.249,140,2.061,141,3.249,142,2.061,143,4.022,144,0.93,145,2.061,146,2.061,147,4.022,148,3.249,149,2.061,150,2.061,151,2.061,152,3.249,153,2.061,154,1.946,155,4.022,156,4.022,157,3.249,158,2.061,159,2.061,160,1.293,161,2.061,162,1.412,163,3.249,164,2.061,165,2.061,166,2.061,167,2.061,168,2.061,169,1.759,170,2.061]],["title/components/AppComponent.html",[171,2.086,172,2.465]],["body/components/AppComponent.html",[3,0.325,4,0.293,5,0.293,7,0.173,8,0.504,10,0.701,11,0.202,12,0.022,13,0.325,14,0.016,15,0.016,41,0.793,44,0.904,50,1.611,60,1.183,61,1.058,80,0.558,81,1.058,95,3.737,105,1.524,106,0.293,171,3.498,172,4.367,173,4.13,174,3.613,175,3.613,176,3.613,177,3.613,178,3.613,179,4.826,180,5.442,181,4.656,182,4.13,183,4.656,184,6.037,185,4.367,186,4.656,187,5.456,188,4.656,189,5.456,190,6.037,191,5.456,192,4.234,193,3.613,194,4.234,195,3.787,196,3.205,197,4.234,198,3.613,199,4.656,200,3.613,201,5.442,202,3.613,203,3.613,204,2.453,205,0.892,206,3.613,207,3.613]],["title/classes/Area.html",[58,1.331,106,0.249]],["body/classes/Area.html",[0,0.279,3,0.231,4,0.209,5,0.209,7,0.207,8,0.4,9,1.385,10,0.839,11,0.299,12,0.022,13,0.332,14,0.013,15,0.013,20,1.442,26,0.967,29,2.605,36,0.996,41,1.245,43,0.913,44,0.717,45,0.913,51,1.1,52,0.893,58,2.047,64,2.936,67,1.115,68,0.839,80,0.468,106,0.209,107,1.748,132,1.352,144,0.763,154,1.697,162,4.404,205,0.636,208,1.624,209,2.283,210,1.496,211,2.246,212,3.285,213,3.897,214,2.696,215,2.509,216,1.383,217,2.176,218,4.724,219,2.509,220,2.935,221,3.696,222,4.33,223,3.016,224,1.516,225,2.59,226,2.066,227,0.797,228,2.066,229,2.066,230,3.016,231,3.016,232,1.769,233,2.037,234,2.758,235,3.016,236,1.333,237,2.066,238,2.574,239,1.601,240,1.254,241,2.066,242,2.574,243,2.574,244,2.283,245,1.624,246,3.696,247,2.574,248,2.574,249,2.574,250,2.574,251,2.574,252,2.574,253,2.574,254,2.574,255,1.748,256,2.066,257,2.066,258,2.066,259,2.066,260,2.509,261,2.574,262,2.574,263,2.574,264,1.892,265,2.574,266,2.574,267,2.574,268,2.574,269,2.574,270,2.574,271,1.624,272,2.574]],["title/injectables/AreaRegistryService.html",[16,0.362,38,2.258]],["body/injectables/AreaRegistryService.html",[3,0.29,4,0.262,5,0.262,7,0.154,8,0.469,9,0.894,10,0.84,11,0.312,12,0.022,13,0.29,14,0.015,15,0.015,16,0.51,18,1.118,20,1.547,26,1.131,33,1.902,36,1.249,38,3.179,41,1.253,43,1.204,44,0.947,45,1.204,50,1.118,51,1.008,52,0.667,58,1.874,60,1.705,61,1.525,68,0.947,80,0.564,81,0.946,86,3.179,87,1.902,92,1.874,104,1.118,105,1.057,106,0.262,127,1.887,205,0.798,210,1.497,225,2.894,227,1,234,1.781,273,1.673,274,2.193,275,3.706,276,2.547,277,3.471,278,3.067,279,2.385,280,3.784,281,4.18,282,3.23,283,5.068,284,2.592,285,2.865,286,2.871,287,2.374,288,3.23,289,2.865,290,2.592,291,2.865,292,2.865,293,2.592,294,2.865,295,2.374,296,1.672,297,2.193,298,3.784]],["title/interfaces/AreaState.html",[0,0.333,234,1.694]],["body/interfaces/AreaState.html",[0,0.338,2,1.276,3,0.28,4,0.253,5,0.253,7,0.229,8,0.457,9,1.486,10,0.605,11,0.174,12,0.022,13,0.38,14,0.015,15,0.015,20,1.169,29,1.719,58,2.224,64,3.02,68,0.93,80,0.519,106,0.253,107,2.116,132,1.545,144,0.872,154,1.939,162,4.12,205,0.77,209,2.765,210,1.658,211,1.728,212,2.664,213,4.004,216,1.237,218,3.117,221,3.117,232,1.728,233,1.719,234,2.958,238,3.117,239,2.075,240,1.519,241,2.502,242,3.117,243,4.224,244,3.746,245,2.664,246,5.134,247,3.117,248,3.117,249,3.117,250,3.117,251,3.117,252,3.117,253,3.117,254,3.117,255,2.116,256,2.502,257,2.502,258,2.502,259,2.502,260,2.867,261,3.117,262,3.117,263,3.117,264,2.291,265,3.117,266,3.117,267,3.117,268,3.117,269,3.117,270,3.117,271,1.966,272,3.117,299,1.835]],["title/injectables/AreaStateService.html",[16,0.362,281,2.465]],["body/injectables/AreaStateService.html",[3,0.273,4,0.246,5,0.246,7,0.145,8,0.449,9,0.841,10,0.805,11,0.306,12,0.022,13,0.273,14,0.014,15,0.014,16,0.489,18,1.051,20,1.584,26,1.085,29,2.605,32,1.698,41,1.256,43,1.254,44,0.986,45,1.254,50,1.051,51,1.239,52,1.049,58,2.304,60,1.358,61,1.215,68,0.805,80,0.512,81,0.889,86,3.049,92,1.797,104,1.051,105,0.994,106,0.246,127,1.605,144,0.627,205,0.75,210,1.436,214,2.909,216,0.889,225,2.909,234,2.8,273,1.605,276,2.442,278,2.442,279,2.287,281,3.329,286,2.782,295,2.232,296,1.572,300,2.061,301,3.701,302,3.329,303,3.329,304,3.329,305,3.792,306,4.861,307,3.68,308,3.329,309,2.693,310,2.437,311,2.693,312,2.693,313,2.437,314,2.693,315,2.437,316,2.693,317,2.437,318,2.693,319,3.558,320,3.558,321,3.558]],["title/components/DrawPoolGameComponent.html",[171,2.086,185,2.465]],["body/components/DrawPoolGameComponent.html",[3,0.175,4,0.158,5,0.158,7,0.175,8,0.325,10,0.95,11,0.248,12,0.022,13,0.175,14,0.01,15,0.01,20,1.466,26,0.785,29,2.589,36,1.16,39,2.595,41,1.162,43,0.741,44,0.799,45,0.741,50,1.424,51,1.094,52,1.094,60,1.198,61,1.072,80,0.562,81,0.57,85,3.247,87,1.146,89,1.227,90,1.561,93,0.673,106,0.158,107,1.321,125,3,132,1.505,144,0.402,171,2.485,172,1.561,173,2.661,174,1.946,175,1.946,176,1.946,178,1.946,179,3.649,180,4.114,181,3,182,2.661,183,3,185,3.302,186,3,188,3,195,4.471,196,4.779,198,1.946,199,3,200,1.946,201,4.114,202,1.946,203,1.946,204,3.872,205,1.016,206,1.946,207,1.946,232,1.819,271,1.892,296,1.007,322,5.388,323,1.946,324,4.29,325,4.29,326,3.515,327,3.515,328,4.445,329,5.208,330,5.208,331,4.114,332,4.821,333,3.515,334,4.821,335,2.28,336,3.302,337,3.661,338,3.024,339,4.29,340,3.302,341,3.661,342,3.515,343,3.515,344,2.28,345,2.28,346,2.28,347,3.515,348,2.28,349,0.893,350,2.28,351,2.28,352,1.498,353,2.28,354,1.227,355,2.28,356,2.28,357,2.28,358,2.28,359,1.227,360,1.946,361,2.28,362,2.28,363,1.946,364,2.28,365,2.28,366,2.28,367,3.515,368,2.28,369,2.28,370,1.726,371,1.946,372,2.28,373,2.28,374,2.28,375,2.28,376,2.28,377,2.28,378,4.696,379,2.28,380,2.28,381,2.28,382,2.28,383,2.28,384,2.28,385,2.28,386,2.28,387,2.28,388,2.28,389,2.28,390,2.28,391,1.561,392,2.28,393,2.28,394,3,395,3,396,4.821]],["title/interfaces/ElementConfig.html",[0,0.333,22,2.258]],["body/interfaces/ElementConfig.html",[0,0.245,2,0.925,3,0.203,4,0.183,5,0.183,7,0.108,8,0.364,9,0.93,10,0.921,11,0.288,12,0.022,13,0.508,14,0.012,15,0.012,22,2.47,25,0.925,33,1.979,50,1.537,58,0.98,64,1.17,68,0.439,80,0.245,92,0.98,94,1.662,121,1.814,126,2.005,132,1.467,205,0.558,232,1.642,245,1.426,349,2.623,352,0.925,354,2.53,397,1.662,398,1.662,399,5.114,400,5.503,401,3.564,402,1.738,403,2.649,404,2.005,405,5.562,406,2.697,407,3.361,408,3.361,409,3.361,410,3.361,411,3.361,412,3.361,413,2.261,414,2.981,415,2.261,416,2.261,417,2.261,418,2.261,419,2.261,420,2.261,421,2.261,422,2.261,423,2.261,424,2.261,425,2.261,426,2.261,427,2.261,428,2.261,429,2.261,430,2.261,431,2.981,432,2.261,433,2.981,434,2.261,435,2.981,436,2.261,437,2.981,438,2.261,439,2.981,440,2.261,441,2.981,442,2.261,443,2.981,444,2.005,445,2.261,446,2.261,447,2.261,448,2.261,449,2.261,450,2.261,451,2.261,452,2.261,453,2.261,454,2.261,455,2.261,456,2.261,457,2.261,458,2.261,459,2.261,460,2.261,461,2.261,462,2.261,463,2.261,464,2.261,465,2.261,466,2.261,467,2.261,468,2.261,469,2.261,470,2.261,471,2.261,472,2.261,473,2.261,474,2.261,475,2.261,476,2.005,477,2.261,478,2.261,479,2.261,480,2.261,481,1.814,482,2.261,483,4.012,484,1.954,485,2.261,486,1.814,487,2.261,488,3.992,489,2.261,490,2.261,491,2.261,492,5.151,493,2.261,494,2.261,495,2.261,496,2.261,497,2.261,498,2.261,499,2.261,500,2.261,501,2.261,502,2.261,503,2.261,504,2.261,505,2.261,506,2.261,507,2.261,508,2.261,509,2.261,510,2.261,511,2.261,512,2.261]],["title/injectables/ElementDrawPoolService.html",[16,0.362,340,2.465]],["body/injectables/ElementDrawPoolService.html",[3,0.275,4,0.248,5,0.248,7,0.146,8,0.452,11,0.285,12,0.022,13,0.275,14,0.014,15,0.014,16,0.492,18,1.059,20,1.609,26,1.091,29,2.809,32,1.707,36,1.184,41,1.208,43,0.756,44,0.594,45,0.756,51,0.713,52,0.862,60,1.553,61,1.39,67,2.31,68,0.81,80,0.578,81,0.896,85,2.715,87,1.802,90,2.456,93,1.059,95,2.456,96,2.456,104,1.059,105,1.002,106,0.248,107,2.078,132,1.12,138,2.715,144,0.632,204,3.822,227,1.469,232,2.182,328,5.502,340,3.347,352,2.085,360,3.061,363,3.061,371,3.061,444,2.715,513,5.63,514,3.061,515,5.56,516,5.56,517,3.587,518,3.745,519,4.888,520,4.171,521,3.587,522,3.587,523,4.888,524,5.971,525,3.587,526,3.587,527,3.587,528,2.25,529,3.587,530,3.587,531,3.587,532,3.587,533,3.587,534,3.587]],["title/interfaces/ElementPiece.html",[0,0.333,48,2.258]],["body/interfaces/ElementPiece.html",[0,0.454,2,1.715,3,0.377,4,0.34,5,0.34,7,0.2,8,0.553,11,0.234,12,0.021,13,0.459,14,0.018,15,0.018,48,4.219,80,0.553,95,3.362,96,3.362,144,0.866,210,1.768,232,2.091,349,2.635,401,4.722,484,2.685,535,3.716,536,5.09,537,3.08,538,4.909,539,2.643,540,4.19,541,3.716]],["title/classes/Faction.html",[25,1.257,106,0.249]],["body/classes/Faction.html",[0,0.319,3,0.265,4,0.239,5,0.239,7,0.141,8,0.44,10,0.788,11,0.311,12,0.022,13,0.365,14,0.014,15,0.014,25,1.662,26,1.062,32,1.662,41,1.28,43,1.238,44,0.973,45,1.238,51,1.225,52,1.173,67,1.275,80,0.319,106,0.239,127,1.138,144,0.839,205,0.727,208,1.856,210,1.609,211,2.323,214,2.815,215,2.756,216,1.468,217,2.39,219,2.756,220,3.156,224,2.737,225,2.722,226,2.361,227,0.911,228,2.361,229,2.361,233,1.622,236,1.523,237,2.361,239,1.759,240,1.433,354,3.716,402,1.275,542,2.61,543,4.757,544,4.757,545,4.757,546,3.684,547,4.445,548,4.06,549,3.448,550,5.437,551,4.06,552,3.448,553,4.06,554,3.448,555,2.61,556,2.163,557,1.622,558,1.998,559,1.998,560,2.163,561,2.163,562,1.523,563,3.448,564,3.448,565,3.448,566,3.448,567,1.523,568,2.943,569,5.012,570,3.73]],["title/interfaces/FactionAssignment.html",[0,0.333,88,2.258]],["body/interfaces/FactionAssignment.html",[0,0.39,2,1.472,3,0.323,4,0.291,5,0.291,7,0.172,8,0.503,9,1.557,10,1.118,11,0.259,12,0.022,13,0.417,14,0.016,15,0.016,16,0.547,20,1.285,25,2.104,39,2.268,50,1.244,52,0.743,67,2.011,68,0.698,80,0.609,81,1.053,87,2.117,88,4.133,89,2.268,93,1.244,104,1.244,105,1.177,106,0.291,205,0.888,210,1.244,227,1.437,256,2.886,273,1.391,274,2.441,275,2.928,287,2.643,296,1.862,297,2.441,546,4.133,567,1.862,571,2.441,572,3.412,573,3.596,574,3.596,575,3.596,576,3.596,577,3.596,578,3.596,579,3.596,580,3.596,581,3.596,582,3.596,583,3.596]],["title/injectables/FactionRegistryService.html",[16,0.362,39,1.938]],["body/injectables/FactionRegistryService.html",[0,0.293,3,0.243,4,0.219,5,0.219,7,0.129,8,0.414,9,1.229,10,0.937,11,0.31,12,0.022,13,0.344,14,0.013,15,0.013,16,0.451,18,0.935,20,1.62,25,2.086,26,1.001,33,1.591,36,1.045,39,2.413,41,1.258,43,1.097,44,0.862,45,1.097,50,0.935,51,0.891,52,0.79,60,1.781,61,1.593,67,1.924,68,0.989,80,0.552,81,0.791,87,1.591,88,4.155,89,3.215,92,1.657,93,0.935,104,0.935,105,0.885,106,0.219,127,1.718,205,0.667,210,1.324,225,2.74,227,1.495,256,2.169,273,1.971,274,1.835,275,3.566,276,2.252,277,3.07,278,2.843,279,2.109,284,2.169,285,2.397,286,1.591,287,2.812,289,2.397,290,2.169,291,2.397,292,2.397,293,2.169,294,2.397,296,1.399,297,1.835,546,2.812,567,1.399,571,1.835,572,3.549,573,4.441,574,3.826,575,3.826,576,3.826,577,2.702,578,2.702,579,2.702,580,2.702,581,2.702,582,2.702,583,2.702,584,3.166,585,3.166,586,3.166,587,3.166,588,3.166,589,2.702]],["title/interfaces/FactionState.html",[0,0.333,567,1.59]],["body/interfaces/FactionState.html",[0,0.415,2,1.568,3,0.344,4,0.311,5,0.311,7,0.183,8,0.524,10,1.08,11,0.27,12,0.022,13,0.435,14,0.017,15,0.017,25,1.568,52,1.094,80,0.415,106,0.311,144,0.999,205,0.946,210,1.832,211,1.978,239,2.294,240,1.866,354,3.75,542,3.398,546,4.214,547,5.085,548,3.831,550,5.296,551,3.831,553,3.831,567,2.502,568,3.831,569,5.561,570,4.249]],["title/injectables/FactionStateService.html",[16,0.362,572,2.258]],["body/injectables/FactionStateService.html",[3,0.273,4,0.246,5,0.246,7,0.145,8,0.449,9,0.841,10,0.805,11,0.306,12,0.022,13,0.273,14,0.014,15,0.014,16,0.489,18,1.051,20,1.584,25,2.176,26,1.085,29,2.605,32,1.698,41,1.256,43,1.254,44,0.986,45,1.254,50,1.051,51,1.239,52,1.049,60,1.358,61,1.215,68,0.805,80,0.512,81,0.889,89,2.617,92,1.797,104,1.051,105,0.994,106,0.246,127,1.605,144,0.627,205,0.75,210,1.436,214,2.909,216,0.889,225,2.909,273,1.605,276,2.442,278,2.442,279,2.287,286,2.782,296,1.572,300,2.061,301,3.701,302,3.329,303,3.329,304,3.329,305,3.792,307,3.68,308,3.329,309,2.693,310,2.437,311,2.693,312,2.693,313,2.437,314,2.693,315,2.437,316,2.693,317,2.437,318,2.693,567,2.629,571,2.061,572,3.049,590,4.861,591,3.558,592,3.558,593,3.558]],["title/classes/GameElement.html",[106,0.249,211,1.257]],["body/classes/GameElement.html",[0,0.318,3,0.264,4,0.238,5,0.238,7,0.14,8,0.439,9,1.455,10,0.787,11,0.293,12,0.022,13,0.364,14,0.014,15,0.014,26,1.061,32,1.659,36,1.136,41,1.246,43,1.001,44,0.787,45,1.001,51,0.945,52,0.959,67,2.012,68,0.787,72,2.937,80,0.439,93,1.016,106,0.238,127,1.568,144,0.838,154,1.348,208,1.853,211,1.659,214,2.982,215,3.153,216,1.739,217,2.734,219,2.753,220,3.4,224,3.432,227,1.438,233,2.236,236,2.404,239,1.272,255,1.994,257,2.357,258,2.357,260,1.994,402,1.757,556,2.98,557,2.236,558,2.753,559,2.753,560,2.98,561,2.98,562,2.099,594,3.91,595,2.605,596,3.254,597,4.751,598,3.441,599,3.441,600,3.441,601,3.441,602,3.441,603,2.937,604,3.441,605,2.159,606,1.729,607,1.729,608,1.729,609,4.055,610,2.357,611,2.937,612,2.357,613,2.357,614,2.937,615,2.937,616,2.159,617,2.937,618,2.937,619,2.605]],["title/injectables/GameElementRegistryService.html",[16,0.362,275,1.938]],["body/injectables/GameElementRegistryService.html",[3,0.249,4,0.225,5,0.225,7,0.133,8,0.422,9,1.352,10,0.874,11,0.298,12,0.022,13,0.249,14,0.013,15,0.013,16,0.459,18,0.959,20,1.574,26,1.019,33,1.632,36,1.072,41,1.203,43,1.112,44,0.874,45,1.112,50,2.05,51,0.907,52,0.804,60,1.599,61,1.43,67,1.201,68,1.086,80,0.529,81,0.812,92,2.116,93,0.959,104,0.959,105,0.907,106,0.225,127,2.064,132,1.014,144,0.572,154,1.788,205,0.684,210,0.959,211,1.134,227,1.394,239,1.201,240,1.35,273,2.164,274,1.881,275,2.456,276,2.65,277,3.613,278,3.141,279,2.147,284,3.125,286,3.029,287,2.862,290,3.125,293,3.125,296,1.435,297,1.881,301,2.456,562,1.435,589,2.771,620,4.961,621,3.247,622,5.722,623,4.563,624,4.563,625,3.247,626,3.247,627,3.247,628,3.247,629,1.881,630,2.771,631,2.771,632,4.563,633,3.454,634,3.247,635,2.771,636,2.771,637,2.771,638,2.771,639,3.247,640,3.247]],["title/interfaces/GameElementState.html",[0,0.333,239,1.331]],["body/interfaces/GameElementState.html",[0,0.384,2,1.451,3,0.319,4,0.287,5,0.287,7,0.17,8,0.498,9,1.588,10,1.049,11,0.198,12,0.022,13,0.414,14,0.016,15,0.016,52,0.732,67,1.993,68,0.893,80,0.498,93,1.227,106,0.287,127,1.372,144,0.95,154,1.628,211,1.451,214,2.643,215,2.407,216,1.64,217,2.088,220,2.407,224,3.296,227,1.424,233,1.955,236,2.381,239,1.993,255,2.407,257,2.845,258,2.845,260,2.407,402,1.536,556,2.606,557,1.955,558,2.407,559,2.407,560,2.606,561,2.606,562,1.836,594,2.407,595,3.145,596,2.845,605,2.606,606,2.088,607,2.088,608,2.088,609,4.6,610,2.845,611,3.546,612,2.845,613,2.845,614,3.546,615,3.546,616,2.606,617,3.546,618,3.546,619,3.145]],["title/injectables/GameElementStateService.html",[16,0.362,301,1.938]],["body/injectables/GameElementStateService.html",[3,0.22,4,0.199,5,0.199,7,0.117,8,0.386,9,1.278,10,0.816,11,0.295,12,0.022,13,0.22,14,0.012,15,0.012,16,0.42,18,0.848,20,1.591,26,0.933,29,2.545,32,1.459,36,0.948,41,1.212,43,1.212,44,0.952,45,1.212,50,2.051,51,1.143,52,1.119,60,1.167,61,1.044,68,0.994,80,0.5,81,0.718,92,2,93,0.848,104,0.848,105,0.802,106,0.199,107,1.663,127,1.786,132,1.304,144,0.506,154,1.637,205,0.605,211,1.003,214,2.736,216,0.718,227,1.104,239,2,240,1.194,273,2.169,276,2.475,278,2.475,279,1.966,286,3.25,296,1.268,297,1.663,300,1.663,301,2.249,302,2.861,303,2.861,304,2.861,305,3.373,308,2.861,310,2.861,313,2.861,315,1.966,317,1.966,337,3.566,338,3.393,359,1.545,562,1.268,620,4.974,629,1.663,630,5.415,631,2.45,633,3.162,635,2.45,636,2.45,637,2.45,638,2.45,641,2.871,642,4.178,643,2.871,644,2.871,645,2.871,646,4.178,647,2.871,648,2.871,649,2.871,650,2.871,651,2.871,652,2.871,653,2.871,654,2.871,655,2.871,656,2.871,657,4.178,658,2.871,659,2.871,660,2.871,661,2.871]],["title/injectables/GameManagementService.html",[16,0.362,336,2.465]],["body/injectables/GameManagementService.html",[3,0.237,4,0.213,5,0.213,7,0.18,9,0.729,11,0.147,12,0.022,13,0.237,14,0.013,15,0.013,16,0.443,18,0.911,20,1.612,22,1.935,25,1.791,26,0.982,36,1.452,37,2.632,38,3.508,39,3.01,40,3.969,41,1.108,43,0.65,44,0.511,45,0.65,46,3.755,50,0.911,51,1.112,52,1.084,58,1.896,64,2.266,68,0.511,80,0.636,81,0.771,86,1.935,87,2.577,89,1.66,94,1.935,96,2.112,97,2.112,104,0.911,105,0.862,106,0.213,132,2.019,133,2.632,162,3.83,205,1.081,271,2.368,273,2.029,295,1.935,331,4.772,336,3.013,341,4.377,352,1.077,406,2.112,476,2.335,481,2.112,518,3.508,520,4.377,528,1.935,546,1.935,547,2.335,571,1.787,662,2.632,663,5.592,664,5.592,665,5.128,666,3.084,667,3.084,668,3.084,669,3.084,670,3.084,671,3.084,672,1.935,673,3.084,674,3.084,675,2.632,676,3.084,677,3.084,678,2.335,679,3.084,680,3.084,681,3.084,682,3.084,683,4.399,684,3.084,685,3.084,686,3.084,687,3.084,688,3.084,689,3.084,690,3.084,691,3.084,692,3.084,693,3.084,694,3.084,695,5.128,696,3.084,697,3.084,698,3.084,699,3.084,700,3.084,701,3.084,702,3.084]],["title/interfaces/GameState.html",[0,0.333,402,1.331]],["body/interfaces/GameState.html",[0,0.42,2,1.588,3,0.349,4,0.314,5,0.314,7,0.186,8,0.528,11,0.297,12,0.022,13,0.438,14,0.017,15,0.017,25,2.355,58,2.493,80,0.577,121,3.91,132,1.419,234,3.08,299,2.284,352,2.355,402,2.493,567,2.892,594,2.634,703,3.442,704,3.91,705,5.709,706,3.581,707,3.08,708,4.546,709,4.546,710,4.546,711,3.114]],["title/injectables/GameStateClientService.html",[16,0.362,712,2.465]],["body/injectables/GameStateClientService.html",[3,0.353,4,0.319,5,0.319,7,0.188,11,0.219,12,0.022,13,0.353,14,0.017,15,0.017,16,0.579,18,1.36,26,1.285,32,2.01,41,1.078,43,0.971,44,0.763,45,0.971,51,0.916,52,1.015,80,0.58,81,1.151,93,1.36,104,1.36,105,1.287,106,0.319,144,0.812,216,1.644,227,1.521,273,2.072,359,3.38,557,3.094,629,2.668,712,3.941,713,3.93,714,5.755,715,5.755,716,3.81,717,4.605,718,4.605,719,4.605,720,3.486,721,4.605,722,4.605]],["title/interfaces/GameStatePatch.html",[0,0.333,716,2.086]],["body/interfaces/GameStatePatch.html",[0,0.472,2,1.783,3,0.392,4,0.353,5,0.353,7,0.208,8,0.567,11,0.292,12,0.021,13,0.392,14,0.018,15,0.018,80,0.472,216,1.276,354,3.537,594,2.959,606,2.566,607,2.566,608,3.502,716,3.552,723,4.358,724,5.816,725,6.815]],["title/injectables/GameStatePatchService.html",[16,0.362,726,2.465]],["body/injectables/GameStatePatchService.html",[3,0.312,4,0.281,5,0.281,7,0.166,11,0.253,12,0.022,13,0.312,14,0.016,15,0.016,16,0.535,18,1.202,26,1.187,41,0.996,43,1.121,44,0.881,45,1.121,51,1.057,59,3.473,80,0.581,81,1.017,104,1.202,105,1.137,106,0.281,144,0.938,216,1.57,236,2.775,273,1.955,299,2.045,359,3.189,402,2.655,404,3.08,557,2.787,606,2.045,607,2.045,608,2.672,629,3.081,716,3.873,720,3.08,724,3.473,726,3.642,727,3.473,728,4.538,729,5.317,730,5.317,731,5.317,732,5.317,733,5.317,734,4.069,735,5.317,736,4.069,737,4.069,738,4.069,739,4.069,740,4.069,741,4.069,742,4.069,743,4.069,744,4.069]],["title/injectables/GameStateService.html",[16,0.362,338,2.258]],["body/injectables/GameStateService.html",[0,0.326,3,0.175,4,0.158,5,0.158,7,0.093,11,0.282,12,0.022,13,0.175,14,0.01,15,0.01,16,0.354,18,0.675,20,1.301,25,1.501,26,0.786,32,1.23,36,1.163,41,1.242,43,1.249,44,0.982,45,1.249,51,1.256,52,1.222,58,1.589,68,0.584,80,0.562,81,0.571,90,1.565,93,0.675,104,0.675,105,0.639,106,0.158,132,1.1,144,0.758,154,1.892,160,1.434,205,0.906,216,1.481,227,1.276,234,2.7,236,2.434,273,2.207,295,1.434,299,1.149,300,1.324,338,3.028,352,1.501,359,3.599,402,1.302,557,2.272,567,2.536,571,1.324,629,1.324,672,1.434,706,3.028,707,2.7,712,3.306,716,2.797,720,1.73,726,3.306,745,3.006,746,3.522,747,3.522,748,3.522,749,3.522,750,3.006,751,3.522,752,3.522,753,3.522,754,4.12,755,3.006,756,3.006,757,3.006,758,4.827,759,4.12,760,3.006,761,3.006,762,3.006,763,4.12,764,2.286,765,4.297,766,4.297,767,2.286,768,3.522,769,3.522,770,2.286,771,2.286,772,3.006,773,2.286,774,3.006,775,2.286,776,3.006,777,2.286,778,2.286,779,3.006,780,4.45,781,3.667,782,3.522,783,3.006,784,3.522,785,3.522,786,2.286,787,3.006,788,2.286,789,3.006,790,2.286,791,3.006,792,2.286,793,2.286,794,1.951,795,2.286,796,1.951,797,2.286,798,1.951,799,2.286,800,2.286,801,2.286,802,2.286,803,2.286,804,2.286,805,2.286,806,2.286,807,2.286,808,2.286,809,2.286,810,4.297,811,1.951,812,2.286,813,2.286,814,2.286,815,2.286,816,2.286,817,2.286,818,1.565,819,2.286,820,2.286,821,2.286,822,2.286,823,2.286,824,2.286,825,2.286,826,2.286,827,2.286]],["title/injectables/GameStateStoreService.html",[16,0.362,706,2.258]],["body/injectables/GameStateStoreService.html",[3,0.095,4,0.085,5,0.085,7,0.153,8,0.197,11,0.271,12,0.022,13,0.095,14,0.006,15,0.006,16,0.214,18,0.365,20,1.478,25,0.979,26,0.744,32,0.743,33,0.621,36,0.925,41,1.171,43,1.127,44,0.862,45,1.097,50,0.984,51,1.111,52,1.119,58,1.036,60,0.594,61,0.833,67,1.036,68,0.973,80,0.429,81,0.309,92,0.457,93,0.365,104,0.365,105,0.345,106,0.085,122,1.816,127,0.925,128,1.816,132,1.04,138,1.61,144,0.819,154,1.82,160,1.335,169,1.816,179,0.935,216,1.656,224,1.069,227,1.333,232,1.622,234,2.069,236,2.515,239,1.626,240,0.513,244,4.556,245,1.793,264,1.335,273,2.08,279,2.286,295,0.775,299,1.408,349,1.305,352,1.536,359,3.393,378,1.816,391,1.457,394,1.816,402,2.586,404,0.935,488,1.457,539,0.665,557,1.001,558,1.233,559,1.233,562,1.472,567,1.943,571,0.716,605,0.775,606,0.621,607,0.621,608,0.621,616,2.09,619,1.61,629,1.233,633,2.521,672,0.775,704,3.75,706,2.914,707,2.069,711,0.846,728,1.816,745,1.816,750,1.816,754,3.503,755,1.816,756,1.816,757,1.816,759,3.503,760,1.816,761,1.816,762,2.843,763,3.503,772,1.816,774,1.816,776,1.816,780,4.564,781,2.843,783,1.054,787,1.816,789,1.816,791,1.816,794,1.054,796,1.054,798,1.054,811,1.054,818,2.281,828,1.054,829,2.127,830,2.127,831,2.127,832,2.127,833,2.127,834,2.127,835,2.127,836,1.816,837,4.645,838,2.127,839,2.127,840,3.331,841,2.127,842,2.127,843,2.127,844,2.127,845,2.127,846,3.331,847,4.105,848,2.127,849,2.127,850,2.127,851,3.828,852,2.127,853,5.475,854,2.127,855,1.816,856,2.843,857,1.816,858,2.127,859,2.521,860,3.964,861,3.331,862,2.127,863,2.127,864,2.127,865,2.127,866,3.331,867,2.521,868,3.331,869,2.811,870,2.127,871,2.127,872,2.127,873,2.127,874,2.802,875,3.331,876,2.127,877,3.331,878,2.281,879,2.127,880,1.816,881,2.802,882,2.802,883,2.802,884,2.127,885,2.127,886,2.802,887,2.802,888,2.802,889,2.127,890,2.127,891,1.235,892,1.235,893,2.127,894,1.235,895,1.235,896,1.235,897,1.235,898,1.235,899,5.205,900,1.235,901,2.127,902,2.127,903,3.331,904,1.235,905,1.235,906,1.235,907,2.127,908,1.235,909,1.235,910,1.235,911,1.235,912,3.756,913,2.127,914,2.127,915,1.235,916,2.127,917,1.235,918,1.235,919,1.235,920,1.235,921,1.235,922,1.235,923,1.235,924,1.235,925,1.235,926,1.235,927,1.235,928,1.235,929,1.235,930,1.235,931,2.127,932,4.858,933,1.235,934,1.235,935,2.127,936,1.235,937,2.127,938,2.127,939,2.127,940,2.127,941,1.235,942,2.127,943,2.127,944,1.235,945,1.235,946,1.235,947,1.235,948,2.127,949,1.235,950,1.235,951,1.235,952,1.235,953,1.235,954,1.235,955,1.235,956,1.235,957,1.235,958,1.235,959,1.235,960,1.235,961,2.802,962,1.235,963,1.235,964,1.235,965,1.235,966,1.235,967,1.235,968,1.235,969,1.235,970,1.235]],["title/interfaces/Piece.html",[0,0.333,484,1.497]],["body/interfaces/Piece.html",[0,0.436,2,1.647,3,0.362,4,0.326,5,0.326,7,0.192,8,0.54,10,1.196,11,0.302,12,0.022,13,0.487,14,0.017,15,0.017,144,0.831,232,2.425,349,2.758,484,2.757,536,5.384,539,2.538,541,3.569,971,3.229,972,3.229]],["title/classes/Pile.html",[106,0.249,352,1.257]],["body/classes/Pile.html",[0,0.19,3,0.158,4,0.142,5,0.142,7,0.084,8,0.3,11,0.287,12,0.022,13,0.249,14,0.01,15,0.01,20,1.39,26,0.723,32,1.132,36,0.678,41,1.215,43,0.96,44,0.755,45,0.96,51,1.17,52,0.929,60,0.574,61,0.81,67,1.685,68,0.34,80,0.371,93,0.607,106,0.142,127,0.678,132,1.645,144,0.803,195,2.858,204,1.878,205,0.433,208,1.106,210,1.185,211,1.997,212,2.16,214,2.328,215,1.878,216,1.317,217,1.628,219,1.878,220,2.325,224,2.016,225,2.191,226,1.407,227,1.204,228,1.407,229,1.407,232,1.591,233,0.967,236,0.908,237,1.407,239,1.198,240,0.854,245,2.16,264,1.289,271,3.078,299,2.289,349,2.407,352,2.415,354,3.243,370,3.989,391,2.219,402,0.76,484,2.635,486,2.219,537,2.033,539,1.745,555,1.555,556,1.289,557,0.967,558,1.19,559,1.19,560,1.289,561,1.289,562,0.908,570,1.407,596,2.219,616,2.858,704,2.219,707,2.333,851,3.12,856,2.453,859,3.989,867,3.754,869,2.219,878,2.219,972,4.395,973,1.555,974,3.888,975,5.944,976,3.425,977,3.888,978,3.888,979,3.888,980,3.24,981,3.038,982,4.497,983,2.766,984,2.766,985,2.766,986,2.766,987,2.219,988,2.453,989,2.766,990,2.054,991,2.054,992,2.054,993,2.766,994,2.054,995,2.766,996,3.449,997,3.888,998,2.766,999,2.766,1000,2.766,1001,2.766,1002,2.054,1003,2.766,1004,2.054,1005,2.054,1006,2.766,1007,1.407,1008,1.555,1009,1.753,1010,1.753,1011,1.753,1012,1.753,1013,1.753,1014,1.753,1015,1.753,1016,1.753,1017,1.753,1018,1.753,1019,1.753,1020,1.753,1021,1.753,1022,1.753,1023,2.766,1024,2.766,1025,1.753,1026,1.753,1027,1.753,1028,1.753,1029,1.753,1030,1.753,1031,2.766,1032,2.766,1033,1.753,1034,2.766,1035,2.766,1036,1.753,1037,1.753,1038,2.766,1039,1.753,1040,2.766,1041,2.766]],["title/injectables/PileRegistryService.html",[16,0.362,518,2.258]],["body/injectables/PileRegistryService.html",[3,0.29,4,0.262,5,0.262,7,0.154,8,0.469,9,0.894,10,0.84,11,0.312,12,0.022,13,0.29,14,0.015,15,0.015,16,0.51,18,1.118,20,1.547,26,1.131,33,1.902,36,1.249,41,1.253,43,1.204,44,0.947,45,1.204,50,1.118,51,1.008,52,0.667,60,1.705,61,1.525,68,0.947,80,0.564,81,0.946,87,1.902,92,1.874,104,1.118,105,1.057,106,0.262,127,1.887,205,0.798,210,1.497,225,2.894,227,1,273,1.673,274,2.193,275,3.706,276,2.547,277,3.471,278,3.067,279,2.385,282,3.23,284,2.592,285,2.865,286,2.871,287,2.374,288,3.23,289,2.865,290,2.592,291,2.865,292,2.865,293,2.592,294,2.865,296,1.672,297,2.193,352,1.77,518,3.179,528,3.179,672,2.374,707,1.781,1042,3.784,1043,4.18,1044,5.068,1045,3.784]],["title/interfaces/PileState.html",[0,0.333,707,1.694]],["body/interfaces/PileState.html",[0,0.262,2,0.99,3,0.217,4,0.196,5,0.196,7,0.116,8,0.383,11,0.135,12,0.022,13,0.318,14,0.012,15,0.012,20,1.155,41,0.531,51,0.823,52,0.73,61,0.708,67,1.53,68,0.47,80,0.452,93,0.837,106,0.196,132,1.864,144,0.948,195,2.597,204,1.642,205,0.597,210,1.444,211,1.446,212,1.526,216,0.708,227,1.094,232,1.708,239,1.808,240,1.178,245,1.526,264,1.778,271,3.403,299,1.424,349,2.241,352,2.368,354,2.895,370,3.133,391,1.941,484,2.628,486,3.917,537,2.597,539,1.526,570,1.941,596,1.941,616,3.373,704,1.941,707,2.691,851,2.835,856,2.145,859,4.07,867,3.133,869,1.941,878,1.941,972,4.224,973,2.145,974,3.533,975,5.915,976,2.419,977,2.419,978,2.419,979,2.419,981,2.145,982,4.173,983,2.419,984,2.419,985,2.419,986,2.419,987,1.941,988,2.145,989,2.419,993,2.419,995,2.419,996,3.133,997,3.533,998,2.419,999,2.419,1000,2.419,1001,2.419,1003,2.419,1006,2.419,1007,1.941,1008,2.145,1009,3.533,1010,3.533,1011,3.533,1012,3.533,1013,3.533,1014,3.533,1015,4.173,1016,2.419,1017,2.419,1018,2.419,1019,2.419,1020,2.419,1021,2.419,1022,2.419,1023,3.533,1024,3.533,1025,2.419,1026,2.419,1027,2.419,1028,2.419,1029,2.419,1030,2.419,1031,3.533,1032,3.533,1033,2.419,1034,3.533,1035,3.533,1036,2.419,1037,2.419,1038,3.533,1039,2.419,1040,3.533,1041,3.533]],["title/injectables/PileStateService.html",[16,0.362,1043,2.465]],["body/injectables/PileStateService.html",[3,0.273,4,0.246,5,0.246,7,0.145,8,0.449,9,0.841,10,0.805,11,0.306,12,0.022,13,0.273,14,0.014,15,0.014,16,0.489,18,1.051,20,1.584,26,1.085,29,2.605,32,1.698,41,1.256,43,1.254,44,0.986,45,1.254,50,1.051,51,1.239,52,1.049,60,1.358,61,1.215,68,0.805,80,0.512,81,0.889,92,1.797,104,1.051,105,0.994,106,0.246,127,1.605,144,0.627,205,0.75,210,1.436,214,2.909,216,0.889,225,2.909,273,1.605,276,2.442,278,2.442,279,2.287,286,2.782,296,1.572,300,2.061,301,3.701,302,3.329,303,3.329,304,3.329,305,3.792,307,3.68,308,3.329,309,2.693,310,2.437,311,2.693,312,2.693,313,2.437,314,2.693,315,2.437,316,2.693,317,2.437,318,2.693,352,2.176,528,3.049,672,2.232,707,2.8,1043,3.329,1046,4.861,1047,3.558,1048,3.558,1049,3.558]],["title/classes/Player.html",[106,0.249,1050,2.258]],["body/classes/Player.html",[0,0.385,3,0.319,4,0.288,5,0.288,7,0.17,8,0.499,9,0.984,10,0.992,11,0.302,12,0.021,13,0.414,14,0.016,15,0.016,26,1.205,32,1.885,41,1.26,43,0.878,44,1.088,45,0.878,51,1.073,52,0.952,67,1.54,80,0.385,106,0.288,127,1.375,144,0.734,205,0.878,208,2.242,210,1.594,211,2.424,214,2.972,215,3.128,216,1.584,217,2.712,219,3.128,220,3.47,224,3.009,225,2.901,226,2.852,227,1.101,228,2.852,229,2.852,233,1.96,236,1.84,237,2.852,240,1.731,402,1.54,555,3.152,556,2.612,557,1.96,558,2.413,559,2.413,560,2.612,561,2.612,562,1.84,1050,3.386,1051,3.152,1052,4.164,1053,4.164,1054,2.852,1055,3.554]],["title/injectables/PlayerService.html",[16,0.362,40,2.258]],["body/injectables/PlayerService.html",[3,0.352,4,0.318,5,0.318,7,0.188,8,0.531,9,1.358,11,0.274,12,0.022,13,0.352,14,0.017,15,0.017,16,0.578,18,1.357,40,3.604,41,1.076,44,0.952,60,1.605,61,1.436,68,0.952,80,0.531,81,1.148,104,1.357,105,1.283,106,0.318,132,1.794,212,3.715,1050,4.478,1056,3.92,1057,6.27,1058,6.27,1059,5.746,1060,4.904,1061,4.593,1062,5.746,1063,4.593,1064,4.593]],["title/interfaces/PlayerState.html",[0,0.333,1054,2.465]],["body/interfaces/PlayerState.html",[0,0.459,2,1.734,3,0.381,4,0.343,5,0.343,7,0.203,8,0.557,9,1.595,10,1.179,11,0.287,12,0.022,13,0.462,14,0.018,15,0.018,44,1.146,80,0.459,106,0.343,144,0.875,205,1.046,210,1.466,211,2.105,240,2.064,1050,3.114,1051,3.758,1054,4.128,1055,4.237]],["title/classes/Space.html",[64,1.59,106,0.249]],["body/classes/Space.html",[0,0.276,1,3.629,3,0.229,4,0.206,5,0.206,7,0.122,8,0.397,10,1.007,11,0.305,12,0.022,13,0.329,14,0.013,15,0.013,20,1.543,26,0.958,32,1.5,36,0.984,41,1.27,43,1.061,44,0.834,45,1.061,51,1,52,1.029,60,1.2,61,1.073,64,2.432,68,0.912,80,0.509,93,0.88,106,0.206,144,0.887,154,1.972,160,1.87,208,1.605,212,2.709,213,3.521,216,1.519,217,2.528,219,2.488,227,1.33,232,2.187,233,2.02,236,1.317,255,2.488,259,2.042,260,1.727,349,2.512,484,2.919,562,1.317,603,2.544,605,2.693,606,1.498,607,1.498,608,1.498,610,2.042,612,2.042,613,2.042,1007,2.042,1065,2.257,1066,4.295,1067,4.295,1068,4.293,1069,4.699,1070,3.664,1071,4.293,1072,2.981,1073,2.981,1074,2.981,1075,4.167,1076,2.981,1077,3.664,1078,2.981,1079,2.981,1080,2.981,1081,2.981,1082,2.981,1083,2.981,1084,2.981,1085,2.981,1086,2.544,1087,4.295,1088,5.345,1089,2.544,1090,2.544,1091,2.544,1092,2.544,1093,2.544]],["title/interfaces/SpaceState.html",[0,0.333,213,2.086]],["body/interfaces/SpaceState.html",[0,0.335,1,3.474,2,1.265,3,0.278,4,0.251,5,0.251,7,0.148,8,0.455,10,1.039,11,0.235,12,0.022,13,0.378,14,0.014,15,0.014,20,1.321,52,0.868,64,2.469,68,0.993,80,0.554,93,1.07,106,0.251,144,0.985,154,2.19,160,2.273,212,1.95,213,3.633,216,1.23,217,1.82,227,1.301,232,2.31,233,1.705,255,2.851,259,2.481,260,2.099,349,2.637,484,2.981,562,1.601,605,3.087,606,1.82,607,1.82,608,1.82,610,2.481,612,2.481,613,2.481,1007,2.481,1065,2.742,1066,3.092,1067,3.092,1069,3.092,1070,3.092,1075,4.231,1077,3.092,1086,3.092,1087,4.77,1088,5.645,1089,3.092,1090,3.092,1091,3.092,1092,3.092,1093,3.092]],["title/coverage.html",[1094,4.182]],["body/coverage.html",[0,0.623,1,1.584,5,0.189,6,2.334,11,0.13,12,0.022,14,0.012,15,0.012,16,0.694,17,2.07,19,2.334,22,1.715,25,0.955,38,1.715,39,1.472,40,1.715,48,1.715,50,1.191,58,1.011,64,1.208,68,0.453,86,2.529,88,1.715,89,2.578,94,1.715,97,1.873,99,2.07,100,2.07,106,0.408,171,2.336,172,1.873,177,2.334,185,1.873,195,2.529,196,2.07,204,1.584,209,3.052,211,0.955,213,1.584,216,1.321,234,1.287,239,1.011,241,1.873,271,3.927,273,2.243,274,3.265,275,1.472,281,1.873,300,3.265,301,1.472,322,2.334,323,2.334,336,1.873,338,1.715,340,1.873,352,0.955,359,2.845,397,3.004,398,3.004,402,1.011,481,1.873,484,1.137,513,2.334,514,2.334,518,1.715,528,2.529,535,3.052,537,1.715,539,3.283,542,3.052,567,1.208,572,1.715,594,3.265,595,3.052,620,3.052,662,2.334,678,2.07,703,3.052,706,1.715,707,1.287,711,1.873,712,1.873,713,2.334,716,1.584,723,2.334,726,1.873,727,2.334,828,2.334,971,2.761,973,3.052,1043,1.873,1050,1.715,1051,3.052,1054,1.873,1056,2.334,1065,3.052,1094,2.334,1095,2.334,1096,2.734,1097,2.734,1098,5.285,1099,2.334,1100,5.285,1101,2.334,1102,6.258,1103,4.789,1104,4.031,1105,4.031,1106,2.734,1107,2.734,1108,6.258,1109,2.734,1110,2.734,1111,2.734,1112,2.734,1113,2.734,1114,2.734,1115,2.334,1116,2.734,1117,2.734,1118,4.087,1119,5.896,1120,2.734,1121,4.031,1122,2.734,1123,2.734,1124,4.031,1125,2.734,1126,2.734,1127,3.441,1128,2.334,1129,4.789,1130,4.789,1131,2.734,1132,2.734,1133,2.734,1134,2.734]],["title/dependencies.html",[1135,2.28,1136,3.692]],["body/dependencies.html",[12,0.022,14,0.018,15,0.018,81,1.241,93,1.466,193,4.237,606,2.494,607,2.494,608,2.494,675,4.237,1136,4.237,1137,4.964,1138,7.181,1139,4.964,1140,6.027,1141,4.964,1142,4.964,1143,4.964,1144,4.964,1145,6.027,1146,6.027,1147,4.964,1148,4.964,1149,4.964,1150,4.964,1151,4.964,1152,4.964,1153,4.964,1154,4.964]],["title/miscellaneous/enumerations.html",[1155,1.514,1156,3.692]],["body/miscellaneous/enumerations.html",[7,0.154,12,0.022,14,0.015,15,0.015,50,1.799,61,1.862,397,2.364,398,4.103,406,3.461,407,4.313,408,4.313,409,4.313,410,4.313,411,4.313,412,4.313,414,3.826,415,3.216,416,3.216,417,3.216,418,3.216,419,3.216,420,3.216,421,3.216,422,3.216,423,3.216,424,3.216,425,3.216,426,3.216,427,3.216,428,3.216,429,3.216,430,3.216,431,3.826,432,3.216,433,2.853,434,3.216,435,2.853,436,3.216,437,2.853,438,3.216,439,2.853,440,3.216,441,2.853,442,3.216,443,2.853,444,3.826,445,3.216,446,3.216,447,3.216,448,3.216,449,3.216,450,3.216,451,3.216,452,3.216,453,3.216,454,3.216,455,3.216,456,3.216,457,3.216,458,3.216,459,3.216,460,3.216,461,3.216,462,3.216,463,3.216,464,3.216,465,3.216,466,3.216,467,3.216,468,3.216,476,3.826,477,3.216,478,3.216,1155,1.893,1156,3.216,1157,4.81]],["title/miscellaneous/functions.html",[1155,1.514,1158,3.692]],["body/miscellaneous/functions.html",[7,0.157,10,1.017,11,0.274,12,0.021,14,0.015,15,0.015,43,1.415,44,1.112,45,1.438,48,2.41,51,1.335,60,1.43,61,1.705,92,2.432,97,3.506,99,3.875,100,3.875,154,1.505,224,2.893,232,1.342,241,3.506,299,1.93,349,2.006,401,3.506,484,1.597,535,2.908,536,3.875,537,3.211,540,3.279,541,2.908,678,3.875,779,4.369,851,4.598,857,3.279,869,3.943,880,3.279,971,2.631,996,2.908,1008,2.908,1118,3.279,1127,3.279,1128,4.369,1155,1.93,1158,3.279,1159,5.119,1160,4.369,1161,5.757,1162,3.841,1163,5.119,1164,3.841,1165,3.841,1166,3.841,1167,3.841,1168,3.841,1169,4.369,1170,5.119,1171,3.841,1172,3.841,1173,3.841,1174,3.841,1175,3.841,1176,3.841,1177,3.841,1178,3.841,1179,3.841,1180,5.119,1181,3.841,1182,3.279,1183,3.841,1184,3.279,1185,3.841,1186,3.841,1187,3.841]],["title/index.html",[7,0.123,818,2.063,1188,2.571]],["body/index.html",[4,0.301,12,0.016,14,0.016,15,0.016,44,0.72,68,0.72,91,3.71,171,3.542,395,5.806,836,3.71,860,4.736,878,2.977,987,4.186,988,4.874,1060,3.71,1135,3.291,1189,4.347,1190,5.549,1191,4.347,1192,6.112,1193,6.112,1194,3.71,1195,4.347,1196,4.347,1197,5.549,1198,6.653,1199,6.915,1200,4.347,1201,4.347,1202,4.347,1203,4.347,1204,4.347,1205,4.347,1206,4.347,1207,4.347,1208,3.71,1209,4.347,1210,4.347,1211,6.112,1212,4.347,1213,4.347,1214,4.347,1215,4.347,1216,4.347,1217,5.549,1218,5.549,1219,6.439,1220,5.549,1221,4.347,1222,4.347,1223,4.347,1224,4.347,1225,5.549,1226,4.347,1227,4.347,1228,4.347,1229,4.347,1230,4.347,1231,6.112,1232,4.347,1233,4.347,1234,3.71,1235,3.291,1236,4.347,1237,4.347]],["title/license.html",[818,2.063,1188,2.571,1238,2.571]],["body/license.html",[1,2.575,12,0.017,14,0.017,15,0.017,349,1.742,855,3.793,981,3.364,987,3.854,1075,3.364,1095,3.793,1169,3.793,1182,3.793,1184,3.793,1208,3.793,1234,3.793,1238,3.793,1239,4.445,1240,6.176,1241,4.445,1242,4.445,1243,4.445,1244,5.628,1245,4.445,1246,4.445,1247,4.445,1248,4.445,1249,4.445,1250,4.445,1251,5.628,1252,7.098,1253,4.445,1254,6.176,1255,4.445,1256,5.628,1257,4.445,1258,4.445,1259,4.445,1260,4.445,1261,4.445,1262,4.445,1263,4.445,1264,4.445,1265,4.445,1266,5.628,1267,4.445,1268,4.445,1269,4.445,1270,4.445,1271,4.445,1272,4.445,1273,5.628,1274,5.628,1275,4.445,1276,4.445,1277,4.445,1278,4.445,1279,4.445,1280,4.445,1281,4.445,1282,4.445,1283,4.445,1284,4.445,1285,4.445,1286,4.445,1287,4.445,1288,4.445,1289,4.445,1290,4.445,1291,4.445,1292,4.445,1293,4.445,1294,4.445,1295,4.445,1296,4.445,1297,4.445,1298,4.445,1299,4.445]],["title/modules.html",[1300,4.182]],["body/modules.html",[12,0.019,14,0.019,15,0.019,1300,4.922]],["title/overview.html",[1235,3.709]],["body/overview.html",[2,1.963,12,0.019,14,0.019,15,0.019,18,1.66,173,4.255,208,3.026,488,3.85,1115,4.797,1235,4.255,1301,5.621,1302,5.621]],["title/properties.html",[8,0.4,1135,2.28]],["body/properties.html",[8,0.528,12,0.02,14,0.019,15,0.019,1194,4.874,1303,5.711]],["title/miscellaneous/typealiases.html",[1155,1.514,1304,4.326]],["body/miscellaneous/typealiases.html",[7,0.208,11,0.243,12,0.021,14,0.018,15,0.018,397,3.203,398,4.372,399,4.641,401,4.199,406,3.497,413,5.233,414,3.865,431,3.865,469,5.233,470,4.358,471,4.358,472,4.358,473,4.358,474,4.358,475,4.358,539,2.749,971,3.497,972,4.199,1155,2.566,1157,5.158,1160,4.358,1305,5.106]],["title/miscellaneous/variables.html",[1155,1.514,1306,3.692]],["body/miscellaneous/variables.html",[7,0.141,9,1.127,10,1.022,11,0.26,12,0.022,14,0.014,15,0.014,25,1.666,33,2.397,58,1.764,60,1.643,61,1.47,64,1.529,68,0.573,92,1.28,94,2.992,121,2.371,126,2.62,132,1.081,182,2.62,205,0.73,232,1.906,245,1.863,349,2.648,352,1.666,397,2.171,398,3.424,399,4.828,400,5.443,402,2.018,433,2.62,435,2.62,437,2.62,439,2.62,441,2.62,443,2.62,479,2.954,480,2.954,481,3.267,482,2.954,483,4.658,484,2.269,485,2.954,486,2.371,487,2.954,488,4.368,489,2.954,490,2.954,491,2.954,492,5.577,493,2.954,494,2.954,495,2.954,496,2.954,497,2.954,498,2.954,499,2.954,500,2.954,501,2.954,502,2.954,503,2.954,504,2.954,505,2.954,506,2.954,507,2.954,508,2.954,509,2.954,510,2.954,511,2.954,512,2.954,594,2.005,703,3.611,711,3.267,1099,2.954,1101,4.071,1155,1.739,1157,3.611,1306,2.954,1307,3.461,1308,3.461,1309,3.461,1310,3.461,1311,3.461,1312,3.461,1313,3.461,1314,3.461]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":271,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1303,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":859,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["1/1",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1302,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1115,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["18",{"_index":492,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["18.2.5",{"_index":1195,"title":{},"body":{"index.html":{}}}],["18.2.7",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":488,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":487,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["2024",{"_index":1242,"title":{},"body":{"license.html":{}}}],["25",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":496,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["3/19",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["4.17.21",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["5/13",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1301,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["_action",{"_index":1066,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_drawpool",{"_index":515,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":881,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":1067,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["_setgamestate",{"_index":884,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":890,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":215,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["_transactionstate",{"_index":882,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["above",{"_index":1272,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":630,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":832,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":32,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"license.html":{}}}],["action.model",{"_index":1086,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["action_display_abundance",{"_index":415,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":417,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["action_pawn",{"_index":477,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":445,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":447,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":449,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":451,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":453,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":455,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actiondisplayabundance",{"_index":416,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":418,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actionpawn",{"_index":478,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actionpawnamphibian",{"_index":446,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":448,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":450,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actionpawninsect",{"_index":452,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actionpawnkind",{"_index":469,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{}}}],["actionpawnmammal",{"_index":454,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actionpawnreptile",{"_index":456,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["actions",{"_index":872,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["acts",{"_index":983,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["actual_component",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["add",{"_index":1226,"title":{},"body":{"index.html":{}}}],["added",{"_index":169,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameStateStoreService.html":{}}}],["addedelements",{"_index":35,"title":{},"body":{"injectables/AnimalService.html":{}}}],["addedelementspaces",{"_index":34,"title":{},"body":{"injectables/AnimalService.html":{}}}],["addelement",{"_index":27,"title":{},"body":{"injectables/AnimalService.html":{}}}],["addelement(element",{"_index":47,"title":{},"body":{"injectables/AnimalService.html":{}}}],["addpiece",{"_index":1068,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":1077,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["aliases",{"_index":1305,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":562,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["always",{"_index":1027,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["amount",{"_index":550,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["amphibian",{"_index":407,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["amphibian_element",{"_index":419,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":420,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["and/or",{"_index":1264,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1192,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":357,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["angular/material/tooltip",{"_index":358,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["angular/platform",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["animalenum",{"_index":406,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":494,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":498,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":501,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":504,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":507,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":510,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["animalkind",{"_index":413,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{}}}],["animalservice",{"_index":17,"title":{"injectables/AnimalService.html":{}},"body":{"injectables/AnimalService.html":{},"coverage.html":{}}}],["app",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["app.component.html",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":172,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1204,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":729,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":731,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(gamestate",{"_index":733,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":753,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":769,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":738,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applypatch(gamestate",{"_index":742,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":408,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["arachnid_element",{"_index":421,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":422,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["area",{"_index":58,"title":{"classes/Area.html":{}},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area(areastate.id",{"_index":689,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["area.model",{"_index":710,"title":{},"body":{"interfaces/GameState.html":{}}}],["areaid",{"_index":399,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":414,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":482,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":497,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":500,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":503,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":506,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":509,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":512,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["arearegistryservice",{"_index":38,"title":{"injectables/AreaRegistryService.html":{}},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":46,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameManagementService.html":{}}}],["areas",{"_index":683,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areas.push(new",{"_index":688,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areaservice",{"_index":842,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["areastate",{"_index":234,"title":{"interfaces/AreaState.html":{}},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["areastate.space.foreach((spacestate",{"_index":685,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["areastateservice",{"_index":281,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":283,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["arising",{"_index":1297,"title":{},"body":{"license.html":{}}}],["array",{"_index":999,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["array.from(ids)[0",{"_index":376,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["artifacts",{"_index":1213,"title":{},"body":{"index.html":{}}}],["assignedanimal",{"_index":695,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["associated",{"_index":1184,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["assume",{"_index":1039,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["authors",{"_index":1287,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1205,"title":{},"body":{"index.html":{}}}],["available",{"_index":161,"title":{},"body":{"injectables/AnimalService.html":{}}}],["availablespace",{"_index":157,"title":{},"body":{"injectables/AnimalService.html":{}}}],["availablespace.addpiece(element",{"_index":159,"title":{},"body":{"injectables/AnimalService.html":{}}}],["availablespaces",{"_index":267,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces.length",{"_index":270,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["availablespaces[0",{"_index":272,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["back",{"_index":560,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["bag",{"_index":493,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":870,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["basegamestate",{"_index":481,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basegamestate.area.foreach((areastate",{"_index":684,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["before",{"_index":783,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":67,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Player.html":{}}}],["behaviorsubject(this._gamestate",{"_index":927,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.elementspaces",{"_index":69,"title":{},"body":{"injectables/AnimalService.html":{}}}],["behaviorsubject(this.length",{"_index":1019,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["behaviorsubject(this.state",{"_index":611,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["behaviorsubject>(new",{"_index":290,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":126,"title":{},"body":{"injectables/AnimalService.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["bird",{"_index":409,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["bird_element",{"_index":423,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":424,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":1167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browser",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":988,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"index.html":{}}}],["c",{"_index":1241,"title":{},"body":{"license.html":{}}}],["call",{"_index":782,"title":{},"body":{"injectables/GameStateService.html":{}}}],["called",{"_index":876,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":877,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["capabilities",{"_index":1229,"title":{},"body":{"index.html":{}}}],["case",{"_index":875,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["change",{"_index":1207,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1248,"title":{},"body":{"license.html":{}}}],["check",{"_index":1233,"title":{},"body":{"index.html":{}}}],["choice",{"_index":1224,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1290,"title":{},"body":{"license.html":{}}}],["class",{"_index":106,"title":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["classes",{"_index":208,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"overview.html":{}}}],["cli",{"_index":1193,"title":{},"body":{"index.html":{}}}],["client.service",{"_index":802,"title":{},"body":{"injectables/GameStateService.html":{}}}],["client.service.ts",{"_index":713,"title":{},"body":{"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:13",{"_index":719,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:9",{"_index":717,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["code",{"_index":1209,"title":{},"body":{"index.html":{}}}],["command",{"_index":1225,"title":{},"body":{"index.html":{}}}],["commit",{"_index":811,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":754,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":739,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate",{"_index":741,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":1029,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["component",{"_index":171,"title":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["components",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1271,"title":{},"body":{"license.html":{}}}],["connection",{"_index":1298,"title":{},"body":{"license.html":{}}}],["console.log('create",{"_index":373,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log('end",{"_index":392,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log('start",{"_index":377,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log(json.stringify(gsp",{"_index":721,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":132,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"classes/Space.html":{}}}],["constructor(arearegistrysvc",{"_index":37,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameManagementService.html":{}}}],["constructor(areastatesvc",{"_index":280,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(factionstatesvc",{"_index":584,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(gameelementstatesvc",{"_index":621,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gamemanagementsvc",{"_index":335,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["constructor(gamestatestore",{"_index":764,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":641,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["constructor(id",{"_index":221,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["constructor(kind",{"_index":1070,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["constructor(pileregistrysvc",{"_index":517,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":1042,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":529,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(protected",{"_index":297,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(state",{"_index":596,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["contract",{"_index":1294,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1266,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1251,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1240,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":982,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["coverage",{"_index":1094,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":732,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["create(oldstate",{"_index":735,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["createarea",{"_index":663,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["createfactions",{"_index":664,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["creategame",{"_index":331,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["createpile",{"_index":665,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["creates",{"_index":728,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["current",{"_index":264,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["currentcount",{"_index":1034,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["currentitemcount",{"_index":1040,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["currentplayer",{"_index":1057,"title":{},"body":{"injectables/PlayerService.html":{}}}],["custom",{"_index":1179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["damages",{"_index":1291,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":740,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["deal",{"_index":1253,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1299,"title":{},"body":{"license.html":{}}}],["decreasescore",{"_index":543,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":548,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["deepclone",{"_index":605,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["deepclone(emptygamestate",{"_index":916,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._gamestate",{"_index":948,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":615,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["deepclone(this._transactionstate",{"_index":949,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":1162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":60,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":537,"title":{},"body":{"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":541,"title":{},"body":{"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"miscellaneous/functions.html":{}}}],["defaults",{"_index":998,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["defined",{"_index":41,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{}}}],["defining",{"_index":121,"title":{},"body":{"injectables/AnimalService.html":{},"interfaces/ElementConfig.html":{},"interfaces/GameState.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":984,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["dependencies",{"_index":1136,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":299,"title":{},"body":{"interfaces/AreaState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":958,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":1164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dev",{"_index":1201,"title":{},"body":{"index.html":{}}}],["development",{"_index":1196,"title":{},"body":{"index.html":{}}}],["directive",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["directives",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1212,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1216,"title":{},"body":{"index.html":{}}}],["dist",{"_index":1215,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1008,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["distribute",{"_index":1262,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1095,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":618,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["dom",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["dominant",{"_index":95,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{}}}],["dominantspecies",{"_index":1189,"title":{},"body":{"index.html":{}}}],["done",{"_index":871,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["drawpool",{"_index":328,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["drawpool.length$.subscribe((length",{"_index":368,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["drawpoolgamecomponent",{"_index":185,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["drawpoollength",{"_index":329,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["drawpoolsubject",{"_index":516,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["drew",{"_index":389,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["ds",{"_index":480,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["during",{"_index":874,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["dynamic",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1222,"title":{},"body":{"index.html":{}}}],["each",{"_index":245,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["earth",{"_index":490,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":50,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element.id",{"_index":638,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":166,"title":{},"body":{"injectables/AnimalService.html":{}}}],["element.model",{"_index":240,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{}}}],["element.model.ts",{"_index":595,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"coverage.html":{}}}],["element.model.ts:10",{"_index":599,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:11",{"_index":597,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:19",{"_index":602,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:23",{"_index":604,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:31",{"_index":601,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:39",{"_index":600,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:9",{"_index":598,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":656,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":660,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":86,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["element/faction",{"_index":89,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["element/game",{"_index":620,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":528,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["elementarea",{"_index":21,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementbyid",{"_index":276,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementconfig",{"_index":22,"title":{"interfaces/ElementConfig.html":{}},"body":{"injectables/AnimalService.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["elementconfigbyanimal",{"_index":94,"title":{},"body":{"injectables/AnimalService.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpoolservice",{"_index":340,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["elementdrawpoolsvc",{"_index":339,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementenum",{"_index":431,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":505,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":499,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":508,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":502,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":511,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":495,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":401,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["elementname",{"_index":380,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementname.charat(0).touppercase",{"_index":382,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementname.slice(1",{"_index":383,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["elementpiece",{"_index":48,"title":{"interfaces/ElementPiece.html":{}},"body":{"injectables/AnimalService.html":{},"interfaces/ElementPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["elementpiece).filter(isnotnull",{"_index":148,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementpiecefactory",{"_index":678,"title":{},"body":{"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["elementpiecefactory(kind",{"_index":540,"title":{},"body":{"interfaces/ElementPiece.html":{},"miscellaneous/functions.html":{}}}],["elements",{"_index":33,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.foreach((element",{"_index":634,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elements.foreach((faction",{"_index":579,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elementspace",{"_index":163,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementspace.removepiece",{"_index":167,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementspaces",{"_index":23,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementspaces.length",{"_index":149,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementspaces.slice(this.elementconfig.inherentcount",{"_index":151,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementsspacessubject",{"_index":24,"title":{},"body":{"injectables/AnimalService.html":{}}}],["elementstate",{"_index":305,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["emit",{"_index":866,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitpilestate",{"_index":977,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["emitstate",{"_index":220,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["emitted",{"_index":559,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["empty",{"_index":391,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["emptygamestate",{"_index":711,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":395,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"index.html":{}}}],["endturn",{"_index":332,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["engine/model/area.model",{"_index":84,"title":{},"body":{"injectables/AnimalService.html":{}}}],["engine/model/faction.model",{"_index":83,"title":{},"body":{"injectables/AnimalService.html":{}}}],["engine/model/game",{"_index":403,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["engine/model/piece.model",{"_index":538,"title":{},"body":{"interfaces/ElementPiece.html":{}}}],["engine/model/pile.model",{"_index":360,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/model/space.model",{"_index":102,"title":{},"body":{"injectables/AnimalService.html":{}}}],["engine/predicate",{"_index":101,"title":{},"body":{"injectables/AnimalService.html":{}}}],["engine/service/game",{"_index":85,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/service/player.service",{"_index":82,"title":{},"body":{"injectables/AnimalService.html":{}}}],["engine/util",{"_index":98,"title":{},"body":{"injectables/AnimalService.html":{}}}],["ensure",{"_index":879,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ensures",{"_index":956,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entire",{"_index":863,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":315,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":658,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":653,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enum",{"_index":405,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["enumerations",{"_index":1156,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":1165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":779,"title":{},"body":{"injectables/GameStateService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":954,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":617,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["error('animal",{"_index":155,"title":{},"body":{"injectables/AnimalService.html":{}}}],["error('can",{"_index":945,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('gamestate",{"_index":952,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":933,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":160,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('number",{"_index":263,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["error('space",{"_index":1090,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('state",{"_index":259,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["error('transaction",{"_index":817,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":168,"title":{},"body":{"injectables/AnimalService.html":{}}}],["error(`element",{"_index":632,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":657,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":942,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["errormessage",{"_index":1170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["event",{"_index":1286,"title":{},"body":{"license.html":{}}}],["eventcoalescing",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1220,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1173,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":619,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["express",{"_index":1278,"title":{},"body":{"license.html":{}}}],["extend",{"_index":243,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["extends",{"_index":210,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{}}}],["faction",{"_index":25,"title":{"classes/Faction.html":{}},"body":{"injectables/AnimalService.html":{},"interfaces/ElementConfig.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction.id",{"_index":581,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.model",{"_index":708,"title":{},"body":{"interfaces/GameState.html":{}}}],["faction.ownerid",{"_index":582,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionassignment",{"_index":88,"title":{"interfaces/FactionAssignment.html":{}},"body":{"injectables/AnimalService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.ownerid",{"_index":113,"title":{},"body":{"injectables/AnimalService.html":{}}}],["factionassignments.find",{"_index":112,"title":{},"body":{"injectables/AnimalService.html":{}}}],["factionassignmentsubject",{"_index":573,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionassignmentsubscription",{"_index":28,"title":{},"body":{"injectables/AnimalService.html":{}}}],["factionregistryservice",{"_index":39,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":341,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{}}}],["factions",{"_index":691,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["factions.push",{"_index":697,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["factionstate",{"_index":567,"title":{"interfaces/FactionState.html":{}},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["factionstateservice",{"_index":572,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":576,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":986,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["false).newdocument",{"_index":744,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["fast",{"_index":606,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["files",{"_index":1208,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":90,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateService.html":{}}}],["filter((factionassignment",{"_index":115,"title":{},"body":{"injectables/AnimalService.html":{}}}],["filter((registeredids",{"_index":136,"title":{},"body":{"injectables/AnimalService.html":{}}}],["first",{"_index":91,"title":{},"body":{"injectables/AnimalService.html":{},"index.html":{}}}],["fitness",{"_index":1283,"title":{},"body":{"license.html":{}}}],["following",{"_index":1270,"title":{},"body":{"license.html":{}}}],["formatelementname",{"_index":333,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["formatelementname(kind",{"_index":347,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["found",{"_index":1181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["free",{"_index":1247,"title":{},"body":{"license.html":{}}}],["function",{"_index":539,"title":{},"body":{"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1158,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1269,"title":{},"body":{"license.html":{}}}],["further",{"_index":1230,"title":{},"body":{"index.html":{}}}],["game",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"miscellaneous/variables.html":{}}}],["game.component",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["game.component.html",{"_index":326,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":327,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":323,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:20",{"_index":353,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:21",{"_index":355,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:22",{"_index":342,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:32",{"_index":350,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:44",{"_index":344,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:52",{"_index":351,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:57",{"_index":348,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:62",{"_index":345,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:74",{"_index":346,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game/component/draw",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["game/dominant",{"_index":671,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["game/draw",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game/model/piece.model",{"_index":679,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["gameelement",{"_index":211,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["gameelement:10",{"_index":229,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:11",{"_index":228,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:31",{"_index":555,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:33",{"_index":235,"title":{},"body":{"classes/Area.html":{}}}],["gameelement:39",{"_index":237,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelement:9",{"_index":226,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gameelementregistryservice",{"_index":275,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:14",{"_index":292,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:15",{"_index":289,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:16",{"_index":291,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:17",{"_index":294,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:21",{"_index":285,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:29",{"_index":288,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:30",{"_index":586,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelementstate",{"_index":239,"title":{"interfaces/GameElementState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["gameelementstateservice",{"_index":301,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:13",{"_index":307,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:14",{"_index":316,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:17",{"_index":309,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:24",{"_index":312,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:35",{"_index":311,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:43",{"_index":314,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesvc",{"_index":624,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gamemanagementservice",{"_index":336,"title":{"injectables/GameManagementService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameManagementService.html":{},"coverage.html":{}}}],["gamemanagementsvc",{"_index":343,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamestate",{"_index":402,"title":{"interfaces/GameState.html":{}},"body":{"interfaces/ElementConfig.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gamestate.area",{"_index":962,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.faction",{"_index":965,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.pile",{"_index":968,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateclient",{"_index":766,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":712,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":244,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameStateStoreService.html":{}}}],["gamestateelements",{"_index":835,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatepatch",{"_index":716,"title":{"interfaces/GameStatePatch.html":{}},"body":{"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatepatches",{"_index":730,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":726,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":338,"title":{"injectables/GameStateService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatestore",{"_index":768,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":706,"title":{"injectables/GameStateStoreService.html":{}},"body":{"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":883,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":337,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["generate",{"_index":1211,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1191,"title":{},"body":{"index.html":{}}}],["get(id",{"_index":284,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getaction",{"_index":1082,"title":{},"body":{"classes/Space.html":{}}}],["getaddedelements",{"_index":78,"title":{},"body":{"injectables/AnimalService.html":{}}}],["getaddedelementspaces",{"_index":76,"title":{},"body":{"injectables/AnimalService.html":{}}}],["getarea",{"_index":794,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":526,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelements",{"_index":74,"title":{},"body":{"injectables/AnimalService.html":{}}}],["getelementstate",{"_index":317,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity",{"_index":304,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":310,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":796,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamestate",{"_index":919,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getgsp",{"_index":718,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["getid",{"_index":72,"title":{},"body":{"injectables/AnimalService.html":{},"classes/GameElement.html":{}}}],["getlength",{"_index":1004,"title":{},"body":{"classes/Pile.html":{}}}],["getname",{"_index":1052,"title":{},"body":{"classes/Player.html":{}}}],["getobservableforkey",{"_index":885,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":893,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":97,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameManagementService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":133,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameManagementService.html":{}}}],["getorthrow(map",{"_index":1168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getownerid",{"_index":563,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":1084,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":798,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getscore",{"_index":565,"title":{},"body":{"classes/Faction.html":{}}}],["getstate",{"_index":603,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["getting",{"_index":1188,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettransactionstate",{"_index":921,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":997,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["go",{"_index":1232,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1246,"title":{},"body":{"license.html":{}}}],["grass",{"_index":432,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["grasselement",{"_index":433,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grub",{"_index":434,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["grubelement",{"_index":435,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gsp",{"_index":557,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["gsp.patch",{"_index":743,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":765,"title":{},"body":{"injectables/GameStateService.html":{}}}],["happens",{"_index":556,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["help",{"_index":1231,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1245,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1288,"title":{},"body":{"license.html":{}}}],["html",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["http://localhost:4200",{"_index":1203,"title":{},"body":{"index.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":1227,"title":{},"body":{"index.html":{}}}],["implied",{"_index":1279,"title":{},"body":{"license.html":{}}}],["import",{"_index":80,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["imports",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["included",{"_index":981,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"license.html":{}}}],["including",{"_index":1256,"title":{},"body":{"license.html":{}}}],["increasescore",{"_index":544,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":551,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["inherent",{"_index":699,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["inherentcount",{"_index":400,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":225,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["initialize",{"_index":29,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["initialized",{"_index":156,"title":{},"body":{"injectables/AnimalService.html":{}}}],["injectable",{"_index":16,"title":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{}},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["injectables",{"_index":18,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"overview.html":{}}}],["insect",{"_index":410,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["insect_element",{"_index":425,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":426,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["instantiated",{"_index":834,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interact",{"_index":748,"title":{},"body":{"injectables/GameStateService.html":{}}}],["interested",{"_index":850,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/Piece.html":{},"interfaces/PileState.html":{},"interfaces/PlayerState.html":{},"interfaces/SpaceState.html":{}},"body":{"interfaces/Action.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/FactionState.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"interfaces/Piece.html":{},"interfaces/PileState.html":{},"interfaces/PlayerState.html":{},"interfaces/SpaceState.html":{},"overview.html":{}}}],["inventory",{"_index":486,"title":{},"body":{"interfaces/ElementConfig.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/variables.html":{}}}],["isnotnull",{"_index":99,"title":{},"body":{"injectables/AnimalService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":1185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":100,"title":{},"body":{"injectables/AnimalService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(factionassignment",{"_index":116,"title":{},"body":{"injectables/AnimalService.html":{}}}],["isnotundefined(value",{"_index":1186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":241,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(space.piece",{"_index":269,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["isnull(value",{"_index":1187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":561,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["item",{"_index":384,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["item.id",{"_index":939,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["item[0",{"_index":386,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["joe",{"_index":1243,"title":{},"body":{"license.html":{}}}],["json",{"_index":607,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["json.stringify(element",{"_index":170,"title":{},"body":{"injectables/AnimalService.html":{}}}],["json.stringify(newgamestateelement",{"_index":943,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["k",{"_index":1169,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["karma",{"_index":1221,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":1011,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["key",{"_index":851,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":931,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":846,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":349,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["kind.replace('element",{"_index":381,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["kinds",{"_index":1013,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["leaving",{"_index":491,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["length",{"_index":370,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["lengthsubject",{"_index":976,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["level",{"_index":845,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["liability",{"_index":1292,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1289,"title":{},"body":{"license.html":{}}}],["license",{"_index":1238,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":1257,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1280,"title":{},"body":{"license.html":{}}}],["line",{"_index":396,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["local",{"_index":122,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameStateStoreService.html":{}}}],["lodash",{"_index":675,"title":{},"body":{"injectables/GameManagementService.html":{},"dependencies.html":{}}}],["log",{"_index":330,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["maintain",{"_index":830,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["making",{"_index":831,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":411,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["mammal_element",{"_index":427,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":428,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["managed",{"_index":705,"title":{},"body":{"interfaces/GameState.html":{}}}],["management",{"_index":838,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["management.service",{"_index":356,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["management.service.ts",{"_index":662,"title":{},"body":{"injectables/GameManagementService.html":{},"coverage.html":{}}}],["management.service.ts:23",{"_index":666,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:31",{"_index":669,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:37",{"_index":667,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:49",{"_index":668,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["management.service.ts:85",{"_index":670,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["many",{"_index":1014,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["map",{"_index":92,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((factionassignments",{"_index":111,"title":{},"body":{"injectables/AnimalService.html":{}}}],["map((gamestate",{"_index":929,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matbutton",{"_index":324,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["match",{"_index":260,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["matches",{"_index":913,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mattooltip",{"_index":325,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["means",{"_index":130,"title":{},"body":{"injectables/AnimalService.html":{}}}],["meat",{"_index":436,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["meatelement",{"_index":437,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1282,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1260,"title":{},"body":{"license.html":{}}}],["message",{"_index":1180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["metadata",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["method",{"_index":837,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["miscellaneous",{"_index":1155,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1239,"title":{},"body":{"license.html":{}}}],["model/area.model",{"_index":295,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/faction.model",{"_index":571,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/game",{"_index":629,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/piece.model",{"_index":103,"title":{},"body":{"injectables/AnimalService.html":{}}}],["model/pile.model",{"_index":672,"title":{},"body":{"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":1064,"title":{},"body":{"injectables/PlayerService.html":{}}}],["model/space.model",{"_index":673,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["modify",{"_index":1259,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1300,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":878,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"index.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1202,"title":{},"body":{"index.html":{}}}],["need",{"_index":836,"title":{},"body":{"injectables/GameStateStoreService.html":{},"index.html":{}}}],["new",{"_index":68,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newgamestateelement",{"_index":899,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":940,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":236,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["newstate.id",{"_index":257,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["newstate.kind",{"_index":1092,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.piece",{"_index":1093,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["newstate.space.foreach((spacestate",{"_index":265,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["newstate.space.length",{"_index":262,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["nextavailablespace",{"_index":218,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["ng",{"_index":1199,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1285,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1273,"title":{},"body":{"license.html":{}}}],["null",{"_index":232,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":354,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"interfaces/GameStatePatch.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["object",{"_index":704,"title":{},"body":{"interfaces/GameState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":1022,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["object1",{"_index":1166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":1163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":880,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":227,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["observables",{"_index":847,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["obtaining",{"_index":1250,"title":{},"body":{"license.html":{}}}],["of(undefined",{"_index":722,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["oldstate",{"_index":737,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":902,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["one",{"_index":856,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["operation",{"_index":725,"title":{},"body":{"interfaces/GameStatePatch.html":{}}}],["optional",{"_index":45,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":749,"title":{},"body":{"injectables/GameStateService.html":{}}}],["others",{"_index":833,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["otherwise",{"_index":1296,"title":{},"body":{"license.html":{}}}],["out",{"_index":1234,"title":{},"body":{"index.html":{},"license.html":{}}}],["override",{"_index":256,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["overview",{"_index":1235,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrites",{"_index":864,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":536,"title":{},"body":{"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"miscellaneous/functions.html":{}}}],["ownerid",{"_index":546,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/GameManagementService.html":{}}}],["package",{"_index":1135,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":1237,"title":{},"body":{"index.html":{}}}],["param",{"_index":616,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":855,"title":{},"body":{"injectables/GameStateStoreService.html":{},"license.html":{}}}],["passed",{"_index":914,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["patch",{"_index":608,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["patch.model",{"_index":720,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["patch.model.ts",{"_index":723,"title":{},"body":{"interfaces/GameStatePatch.html":{},"coverage.html":{}}}],["patch.service",{"_index":801,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":727,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:13",{"_index":736,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":734,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["permission",{"_index":1244,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1267,"title":{},"body":{"license.html":{}}}],["person",{"_index":1249,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1268,"title":{},"body":{"license.html":{}}}],["piece",{"_index":484,"title":{"interfaces/Piece.html":{}},"body":{"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":1007,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["piececount",{"_index":1031,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["piecefactory",{"_index":972,"title":{},"body":{"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":444,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"miscellaneous/enumerations.html":{}}}],["piecekindenum.action_pawn_amphibian",{"_index":470,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum.action_pawn_arachnid",{"_index":472,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum.action_pawn_bird",{"_index":471,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum.action_pawn_insect",{"_index":473,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum.action_pawn_mammal",{"_index":474,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum.action_pawn_reptile",{"_index":475,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum.element",{"_index":485,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["pieces",{"_index":975,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pieces.push(null",{"_index":1037,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":1036,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount.length",{"_index":1032,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":1033,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pile",{"_index":352,"title":{"classes/Pile.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile(pilestate",{"_index":701,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["pile.model",{"_index":709,"title":{},"body":{"interfaces/GameState.html":{}}}],["pileregistryservice",{"_index":518,"title":{"injectables/PileRegistryService.html":{}},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":520,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameManagementService.html":{}}}],["piles.push(new",{"_index":700,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["pileservice",{"_index":841,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["pilestate",{"_index":707,"title":{"interfaces/PileState.html":{}},"body":{"interfaces/GameState.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestateservice",{"_index":1043,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":1044,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":110,"title":{},"body":{"injectables/AnimalService.html":{}}}],["pipe(filter((drawpool",{"_index":365,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["pipe(filter((registeredids",{"_index":531,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["places",{"_index":489,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":1223,"title":{},"body":{"index.html":{}}}],["player",{"_index":1050,"title":{"classes/Player.html":{}},"body":{"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["player.id",{"_index":698,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["player.service",{"_index":676,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["players",{"_index":1058,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playerservice",{"_index":40,"title":{"injectables/PlayerService.html":{}},"body":{"injectables/AnimalService.html":{},"injectables/GameManagementService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["playerstate",{"_index":1054,"title":{"interfaces/PlayerState.html":{}},"body":{"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["pool",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["pool.service",{"_index":362,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["pool.service.ts",{"_index":514,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:12",{"_index":522,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:13",{"_index":525,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":519,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:22",{"_index":521,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:32",{"_index":527,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["portions",{"_index":1276,"title":{},"body":{"license.html":{}}}],["predicate",{"_index":242,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["pretty",{"_index":1009,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["previous",{"_index":865,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":20,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["progress",{"_index":781,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["project",{"_index":1190,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"properties.html":{}}}],["protected",{"_index":214,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["provideanimationsasync('noop",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1182,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["providedin",{"_index":104,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{}}}],["providerouter(routes",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":745,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":1261,"title":{},"body":{"license.html":{}}}],["pull",{"_index":978,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pull(count",{"_index":993,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pulled",{"_index":1000,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["pulls",{"_index":995,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["purpose",{"_index":1284,"title":{},"body":{"license.html":{}}}],["put",{"_index":979,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["put(pieces",{"_index":1001,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["puts",{"_index":1003,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["random",{"_index":974,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["readonly",{"_index":212,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["received",{"_index":558,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{}}}],["record",{"_index":1015,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["reference",{"_index":1236,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":854,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["register",{"_index":279,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(elements",{"_index":287,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":313,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":755,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":772,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":633,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registeredareasubscription",{"_index":30,"title":{},"body":{"injectables/AnimalService.html":{}}}],["registeredelementsubject",{"_index":277,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":278,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(elementconfig.areaid",{"_index":137,"title":{},"body":{"injectables/AnimalService.html":{}}}],["registeredids.has(piecekindenum.element",{"_index":532,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registeredpilessubscription",{"_index":363,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["registeredpilessubscription.unsubscribe",{"_index":371,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":302,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":306,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":646,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":590,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":1046,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":756,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":774,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":757,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":776,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement",{"_index":886,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":898,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registry.service",{"_index":87,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameManagementService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":274,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:13",{"_index":282,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:14",{"_index":628,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:15",{"_index":626,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:16",{"_index":627,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:17",{"_index":623,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:20",{"_index":587,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:21",{"_index":589,"title":{},"body":{"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:24",{"_index":588,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:25",{"_index":585,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:29",{"_index":625,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":751,"title":{},"body":{"injectables/GameStateService.html":{}}}],["reload",{"_index":1206,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1091,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["removeelement",{"_index":31,"title":{},"body":{"injectables/AnimalService.html":{}}}],["removeelement(element",{"_index":56,"title":{},"body":{"injectables/AnimalService.html":{}}}],["removepiece",{"_index":1069,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["represents",{"_index":985,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["reptile",{"_index":412,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["reptile_element",{"_index":429,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":430,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["require",{"_index":785,"title":{},"body":{"injectables/GameStateService.html":{}}}],["requiretransaction",{"_index":758,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":829,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":746,"title":{},"body":{"injectables/GameStateService.html":{}}}],["restriction",{"_index":1255,"title":{},"body":{"license.html":{}}}],["results",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":1171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":144,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["returned",{"_index":1177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":51,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1258,"title":{},"body":{"license.html":{}}}],["rollback",{"_index":960,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":759,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":105,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{}}}],["root'},{'name",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["routeroutlet",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1198,"title":{},"body":{"index.html":{}}}],["running",{"_index":1217,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":93,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"dependencies.html":{}}}],["same",{"_index":901,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["scaffolding",{"_index":1210,"title":{},"body":{"index.html":{}}}],["scope",{"_index":123,"title":{},"body":{"injectables/AnimalService.html":{}}}],["score",{"_index":547,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"injectables/GameManagementService.html":{}}}],["seed",{"_index":438,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["seedelement",{"_index":439,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":989,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["selector",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["selector(gamestate",{"_index":930,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sell",{"_index":1265,"title":{},"body":{"license.html":{}}}],["sendgsptobackend",{"_index":714,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":715,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["serve",{"_index":1200,"title":{},"body":{"index.html":{}}}],["server",{"_index":1197,"title":{},"body":{"index.html":{}}}],["service",{"_index":839,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["service/element",{"_index":361,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["services",{"_index":752,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":127,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{}}}],["setarea",{"_index":760,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":787,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setentitystate",{"_index":303,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":308,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":761,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":789,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setgamestate",{"_index":861,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":907,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setpile",{"_index":762,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":791,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":545,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":553,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["setstate",{"_index":219,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":233,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["settransactionstateelement",{"_index":887,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":910,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["several",{"_index":843,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["shall",{"_index":1274,"title":{},"body":{"license.html":{}}}],["shuffle",{"_index":674,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffle(object.values(animalenum",{"_index":693,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffledanimals",{"_index":692,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["shuffledanimals[index",{"_index":696,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["simple",{"_index":1010,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["skip",{"_index":651,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["software",{"_index":1252,"title":{},"body":{"license.html":{}}}],["someone",{"_index":849,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"index.html":{}}}],["space",{"_index":64,"title":{"classes/Space.html":{}},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space(spacestate.kind",{"_index":687,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["space.model",{"_index":238,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.piece",{"_index":147,"title":{},"body":{"injectables/AnimalService.html":{}}}],["space.piece.kind",{"_index":165,"title":{},"body":{"injectables/AnimalService.html":{}}}],["space.state",{"_index":248,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["space.state$.subscribe((spacestate",{"_index":253,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spacekindenum",{"_index":476,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":483,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":162,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/GameManagementService.html":{}}}],["spaces.map((space",{"_index":247,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["spaces.push(new",{"_index":686,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["spacestate",{"_index":213,"title":{"interfaces/SpaceState.html":{}},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["species",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["species.constants",{"_index":96,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"injectables/GameManagementService.html":{}}}],["species.constants.ts",{"_index":398,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":457,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":459,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":461,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":463,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":465,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":467,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":458,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":460,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":462,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":464,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":466,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["speciesreptile",{"_index":468,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["specified",{"_index":996,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dominant",{"_index":1157,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../game",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../piece.model.ts",{"_index":1160,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../predicate.ts",{"_index":1161,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../util.ts",{"_index":1159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":209,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:13",{"_index":223,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:14",{"_index":222,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:24",{"_index":230,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:47",{"_index":231,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":542,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:13",{"_index":566,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:17",{"_index":552,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":549,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":554,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:9",{"_index":564,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":594,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"interfaces/GameState.html":{},"interfaces/GameStatePatch.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":971,"title":{},"body":{"interfaces/Piece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":973,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:16",{"_index":991,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:17",{"_index":990,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:18",{"_index":980,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:36",{"_index":1005,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:43",{"_index":992,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:53",{"_index":994,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:79",{"_index":1002,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":1051,"title":{},"body":{"classes/Player.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["src/app/engine/model/player.model.ts:9",{"_index":1053,"title":{},"body":{"classes/Player.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":1065,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:12",{"_index":1074,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:13",{"_index":1072,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:14",{"_index":1073,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:15",{"_index":1076,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:16",{"_index":1071,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:24",{"_index":1081,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:31",{"_index":1083,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:35",{"_index":1085,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:39",{"_index":1078,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:48",{"_index":1079,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:57",{"_index":1080,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/predicate.ts",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/service/game",{"_index":273,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["src/app/engine/service/player.service.ts",{"_index":1056,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/app/engine/service/player.service.ts:8",{"_index":1061,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/engine/service/player.service.ts:9",{"_index":1063,"title":{},"body":{"injectables/PlayerService.html":{}}}],["src/app/engine/util.ts",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/draw",{"_index":322,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/dominant",{"_index":397,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/model/piece.model.ts",{"_index":535,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/service/animal.service.ts",{"_index":19,"title":{},"body":{"injectables/AnimalService.html":{},"coverage.html":{}}}],["src/app/game/service/animal.service.ts:102",{"_index":79,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:110",{"_index":49,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:124",{"_index":57,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:21",{"_index":71,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:22",{"_index":63,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:23",{"_index":62,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:24",{"_index":65,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:25",{"_index":70,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:28",{"_index":42,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:38",{"_index":54,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:42",{"_index":53,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:62",{"_index":55,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:81",{"_index":73,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:85",{"_index":75,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/animal.service.ts:89",{"_index":77,"title":{},"body":{"injectables/AnimalService.html":{}}}],["src/app/game/service/element",{"_index":513,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["standalone",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["start",{"_index":394,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["started",{"_index":818,"title":{"index.html":{},"license.html":{}},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["starttransaction",{"_index":763,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["startturn",{"_index":334,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["state",{"_index":216,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{}}}],["state.model",{"_index":404,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":703,"title":{},"body":{"interfaces/GameState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.service",{"_index":296,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":300,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:13",{"_index":649,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:14",{"_index":642,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:18",{"_index":767,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:20",{"_index":650,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:21",{"_index":647,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:22",{"_index":648,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:24",{"_index":644,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:29",{"_index":770,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:34",{"_index":793,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:35",{"_index":643,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:38",{"_index":771,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:43",{"_index":645,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:51",{"_index":786,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:58",{"_index":778,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:64",{"_index":795,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:68",{"_index":788,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:72",{"_index":773,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:76",{"_index":797,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:80",{"_index":790,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:83",{"_index":775,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:87",{"_index":799,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:9",{"_index":318,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:91",{"_index":792,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:95",{"_index":777,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state/game",{"_index":359,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["statements",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["statesubject",{"_index":217,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Pile.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["static",{"_index":479,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["store.service",{"_index":800,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":828,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:103",{"_index":922,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:111",{"_index":891,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:116",{"_index":908,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:124",{"_index":915,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:132",{"_index":892,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:141",{"_index":904,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:151",{"_index":923,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:155",{"_index":905,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:159",{"_index":895,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:163",{"_index":924,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:167",{"_index":906,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:171",{"_index":896,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:175",{"_index":925,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:179",{"_index":909,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:183",{"_index":897,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:34",{"_index":917,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:35",{"_index":918,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:36",{"_index":889,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:42",{"_index":894,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:58",{"_index":911,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:82",{"_index":900,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:99",{"_index":920,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stored",{"_index":1214,"title":{},"body":{"index.html":{}}}],["stores",{"_index":903,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"interfaces/Piece.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["subject",{"_index":1075,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{},"license.html":{}}}],["sublicense",{"_index":1263,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":138,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((drawpool",{"_index":366,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["subscribe((factionassignment",{"_index":117,"title":{},"body":{"injectables/AnimalService.html":{}}}],["subscribers",{"_index":957,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substantial",{"_index":1275,"title":{},"body":{"license.html":{}}}],["substatearray",{"_index":935,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":938,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":947,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":941,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["such",{"_index":840,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sum",{"_index":1023,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["sun",{"_index":440,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["sunelement",{"_index":441,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":249,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["super(areastatesvc",{"_index":298,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":577,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":1045,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":1016,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["super.register(elements",{"_index":578,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["system",{"_index":747,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":224,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Player.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":873,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":862,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["template",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["templateurl",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["test",{"_index":1060,"title":{},"body":{"injectables/PlayerService.html":{},"index.html":{}}}],["test1",{"_index":1059,"title":{},"body":{"injectables/PlayerService.html":{}}}],["testing",{"_index":1228,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1219,"title":{},"body":{"index.html":{}}}],["tgameelement",{"_index":286,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstatesvc",{"_index":622,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["thinks",{"_index":131,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this._action",{"_index":1089,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._drawpool",{"_index":524,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":950,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate[key",{"_index":946,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":1088,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":959,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":953,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":955,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":609,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.id",{"_index":614,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this._state.inventory[key",{"_index":1024,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[kind",{"_index":1035,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this._state.inventory[piece.kind",{"_index":1041,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this._state.name",{"_index":1055,"title":{},"body":{"classes/Player.html":{},"interfaces/PlayerState.html":{}}}],["this._state.ownerid",{"_index":568,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._state.score",{"_index":569,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{}}}],["this._transactionstate",{"_index":932,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate[key",{"_index":936,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.addedelementspaces",{"_index":152,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.addedelementspaces.find",{"_index":164,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.addedelementspaces.map((space",{"_index":153,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.applygsp(gsp",{"_index":805,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.arearegistrysvc.get(elementconfig.areaid",{"_index":140,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.arearegistrysvc.register(areas",{"_index":690,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":135,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.createarea",{"_index":680,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.createfactions",{"_index":682,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.createpile",{"_index":681,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.currentplayer",{"_index":1062,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.drawpool",{"_index":367,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpool.pull",{"_index":385,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpoollength",{"_index":369,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.drawpoolsubject.asobservable",{"_index":523,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpoolsubject.next(this._drawpool",{"_index":534,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.elementarea",{"_index":139,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementarea.nextavailablespace",{"_index":158,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementarea.spaces",{"_index":142,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementbyid.get(id",{"_index":631,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementbyid.set(element.id",{"_index":636,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementconfig",{"_index":129,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementconfig.inherentcount",{"_index":150,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementdrawpoolsvc.drawpool",{"_index":364,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.elementspaces",{"_index":141,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementspaces?.map((space",{"_index":146,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementsspacessubject.asobservable",{"_index":66,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementsspacessubject.next(this.elementspaces",{"_index":143,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":652,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitpilestate",{"_index":1038,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.emitstate",{"_index":570,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionState.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.faction",{"_index":118,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.faction.id",{"_index":145,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.faction?.id",{"_index":134,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.factionassignment",{"_index":574,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":580,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":575,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":583,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubscription",{"_index":108,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.factionregistryservice.factionassignment",{"_index":109,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.factionregistryservice.get(factionassignment.id",{"_index":119,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.factionregistrysvc.registeredids$.subscribe((ids",{"_index":374,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.formatelementname(item[0].kind",{"_index":387,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gameelementstatesvc.register(elements",{"_index":640,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementsvc.creategame",{"_index":372,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestateclient.gsp$.pipe(filter((gsp",{"_index":803,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":815,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.area",{"_index":819,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":814,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":822,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.gamestate",{"_index":813,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":825,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":821,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":824,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":827,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":816,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":820,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":823,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate(updatedstate",{"_index":808,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":826,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":809,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":810,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":926,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":928,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":951,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":319,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":393,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":591,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":1047,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":320,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":592,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":1048,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":321,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":593,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":1049,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":379,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":655,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":961,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gspservice.apply(this.gamestatestore.gamestate",{"_index":807,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gspservice.create",{"_index":812,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.id",{"_index":258,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{}}}],["this.initialize",{"_index":107,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.kind",{"_index":1087,"title":{},"body":{"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.length",{"_index":1020,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject",{"_index":1018,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":1021,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.lengthsubject.next(this.length",{"_index":1025,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.log.push('pile",{"_index":390,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.log.push(`welcome",{"_index":375,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.log.push(`you",{"_index":388,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.piececounts.get(key",{"_index":1026,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.piecefactory",{"_index":1017,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["this.pileregistrysvc.get(piecekindenum.element",{"_index":533,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.register(piles",{"_index":702,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":530,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.playerservice.currentplayer.id",{"_index":114,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.playerservice.players.foreach((player",{"_index":694,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["this.registeredareasubscription",{"_index":120,"title":{},"body":{"injectables/AnimalService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":293,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":639,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":637,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":635,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":654,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":659,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":964,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":967,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":970,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.setentitystate(state",{"_index":661,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":963,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":966,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":969,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.spaces",{"_index":250,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.filter((space",{"_index":268,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.foreach((space",{"_index":252,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces.length",{"_index":261,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":266,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate",{"_index":251,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.spacestate[index",{"_index":254,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["this.state",{"_index":612,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject",{"_index":610,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.asobservable",{"_index":613,"title":{},"body":{"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.statesubject.next(this.state",{"_index":255,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"interfaces/GameElementState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["this.transactionstate",{"_index":944,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["those",{"_index":848,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":154,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"interfaces/AreaState.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":1172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timestamp",{"_index":724,"title":{},"body":{"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{}}}],["title",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":844,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tort",{"_index":1295,"title":{},"body":{"license.html":{}}}],["total",{"_index":1006,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["track",{"_index":125,"title":{},"body":{"injectables/AnimalService.html":{},"components/DrawPoolGameComponent.html":{}}}],["tracks",{"_index":1012,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["transaction",{"_index":780,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":888,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["true",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":124,"title":{},"body":{"injectables/AnimalService.html":{}}}],["tsc",{"_index":1028,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["tslib",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":378,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["two",{"_index":857,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"injectables/AnimalService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"interfaces/AreaState.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"interfaces/GameState.html":{},"injectables/GameStateClientService.html":{},"interfaces/GameStatePatch.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/Piece.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"injectables/PlayerService.html":{},"interfaces/PlayerState.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1304,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":937,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["typically",{"_index":868,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["undefined",{"_index":59,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameStatePatchService.html":{}}}],["undefined)).subscribe((gsp",{"_index":804,"title":{},"body":{"injectables/GameStateService.html":{}}}],["unique",{"_index":246,"title":{},"body":{"classes/Area.html":{},"interfaces/AreaState.html":{}}}],["unit",{"_index":1218,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":1030,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["update",{"_index":912,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updated",{"_index":853,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updatedstate",{"_index":806,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updates",{"_index":784,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updating",{"_index":934,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["use",{"_index":987,"title":{},"body":{"classes/Pile.html":{},"interfaces/PileState.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":869,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{},"miscellaneous/functions.html":{}}}],["using",{"_index":128,"title":{},"body":{"injectables/AnimalService.html":{},"injectables/GameStateStoreService.html":{}}}],["util",{"_index":677,"title":{},"body":{"injectables/GameManagementService.html":{}}}],["v",{"_index":1183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":61,"title":{},"body":{"injectables/AnimalService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":867,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"interfaces/PileState.html":{}}}],["var",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["variable",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1306,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":750,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["version",{"_index":1194,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":860,"title":{},"body":{"injectables/GameStateStoreService.html":{},"index.html":{}}}],["void",{"_index":52,"title":{},"body":{"injectables/AnimalService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"interfaces/FactionState.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"interfaces/GameElementState.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"interfaces/PileState.html":{},"injectables/PileStateService.html":{},"classes/Player.html":{},"classes/Space.html":{},"interfaces/SpaceState.html":{}}}],["warranties",{"_index":1281,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1277,"title":{},"body":{"license.html":{}}}],["water",{"_index":442,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{}}}],["waterelement",{"_index":443,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":858,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whenever",{"_index":852,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whether",{"_index":1293,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["without",{"_index":1254,"title":{},"body":{"license.html":{}}}],["yes",{"_index":1178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Action {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalService.html":{"url":"injectables/AnimalService.html","title":"injectable - AnimalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementArea\n                            \n                            \n                                    Private\n                                elementConfig\n                            \n                            \n                                    Private\n                                elementSpaces\n                            \n                            \n                                elementSpaces$\n                            \n                            \n                                    Private\n                                elementsSpacesSubject\n                            \n                            \n                                    Private\n                                faction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                    Private\n                                factionAssignmentSubscription\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                    Private\n                                registeredAreaSubscription\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    elements\n                                \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubscription\n                        \n                    \n                \n            \n            \n                \n                        \n                    factionAssignmentSubscription()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredAreaSubscription\n                        \n                    \n                \n            \n            \n                \n                        \n                    registeredAreaSubscription()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementConfig | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[] | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSpacesSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSpacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.elementSpaces)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/animal.service.ts:81\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/animal.service.ts:85\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/animal.service.ts:89\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/animal.service.ts:102\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { PlayerService } from '../../engine/service/player.service';\nimport { Faction } from '../../engine/model/faction.model';\nimport { Area } from '../../engine/model/area.model';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport {\n  FactionAssignment,\n  FactionRegistryService,\n} from '../../engine/service/game-element/faction-registry.service';\nimport { BehaviorSubject, filter, first, map } from 'rxjs';\nimport { elementConfigByAnimal, ElementConfig } from '../dominant-species.constants';\nimport { getOrThrow } from '../../engine/util';\nimport { isNotNull, isNotUndefined } from '../../engine/predicate';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from '../model/piece.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalService {\n  private faction: Faction | undefined = undefined;\n  private elementConfig: ElementConfig | undefined = undefined;\n  private elementArea: Area | undefined = undefined;\n  private elementSpaces: Space[] | undefined = undefined;\n  private elementsSpacesSubject: BehaviorSubject = new BehaviorSubject(this.elementSpaces);\n  elementSpaces$ = this.elementsSpacesSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private playerService: PlayerService,\n  ) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.factionAssignmentSubscription();\n  }\n\n  private factionAssignmentSubscription(): void {\n    this.factionRegistryService.factionAssignment$\n      .pipe(\n        map((factionAssignments) =>\n          factionAssignments.find(\n            (factionAssignment) =>\n              factionAssignment.ownerId === this.playerService.currentPlayer.id,\n          ),\n        ),\n        filter((factionAssignment): factionAssignment is FactionAssignment =>\n          isNotUndefined(factionAssignment),\n        ),\n        first(),\n      )\n      .subscribe((factionAssignment) => {\n        this.faction = this.factionRegistryService.get(factionAssignment.id);\n        this.registeredAreaSubscription();\n      });\n  }\n\n  private registeredAreaSubscription(): void {\n    /*\n    Defining elementConfig in local scope so that TS can track value is being set.\n    Using this.elementConfig means TS thinks it could be undefined\n    */\n    const elementConfig = getOrThrow(elementConfigByAnimal, this.faction?.id);\n    this.elementConfig = elementConfig;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(elementConfig.areaId)),\n        first(),\n      )\n      .subscribe(() => {\n        this.elementArea = this.areaRegistrySvc.get(elementConfig.areaId);\n        this.elementSpaces = this.elementArea.spaces;\n        this.elementsSpacesSubject.next(this.elementSpaces);\n      });\n  }\n\n  get id(): string | undefined {\n    return this.faction ? this.faction.id : undefined;\n  }\n\n  get elements(): ElementPiece[] | undefined {\n    return this.elementSpaces?.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n\n  private get addedElementSpaces(): Space[] | undefined {\n    const elementSpaces = this.elementSpaces;\n    if (elementSpaces && this.elementConfig) {\n      if (elementSpaces.length > this.elementConfig.inherentCount) {\n        return elementSpaces.slice(this.elementConfig.inherentCount);\n      } else {\n        return [];\n      }\n    } else {\n      return undefined;\n    }\n  }\n\n  get addedElements(): ElementPiece[] {\n    if (this.addedElementSpaces) {\n      return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n    } else {\n      throw new Error('Animal not initialized yet');\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    if (this.elementArea) {\n      const availableSpace = this.elementArea.nextAvailableSpace();\n      if (availableSpace) {\n        availableSpace.addPiece(element);\n        this.elementsSpacesSubject.next(this.elementSpaces);\n      } else {\n        throw new Error('No available element spaces');\n      }\n    } else {\n      throw new Error('Animal not initialized yet');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    if (this.addedElementSpaces) {\n      const elementSpace = this.addedElementSpaces.find(\n        (space) => space.piece && space.piece.kind === element.kind,\n      );\n      if (elementSpace) {\n        elementSpace.removePiece();\n        this.elementsSpacesSubject.next(this.elementSpaces);\n      } else {\n        throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n      }\n    } else {\n      throw new Error('Animal not initialized yet');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, spaces: Space[])\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spaces\n                                                  \n                                                        \n                                                                        Space[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Space | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { isNull } from '../predicate';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n  }\n\n  nextAvailableSpace(): Space | null {\n    const availableSpaces = this.spaces.filter((space) => isNull(space.piece));\n    if (availableSpaces.length > 0) {\n      return availableSpaces[0];\n    } else {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AreaState.html":{"url":"interfaces/AreaState.html","title":"interface - AreaState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AreaState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n            \n                Description\n            \n            \n                AreaState does not extend GameStateElement as each Area is unique with a unique ID\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            space\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        space\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        space:         SpaceState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpaceState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Space, SpaceState } from './space.model';\nimport { GameElement, GameElementState } from './game-element.model';\nimport { isNull } from '../predicate';\n\n/**\n * AreaState does not extend GameStateElement as each Area is unique with a unique ID\n */\nexport interface AreaState extends GameElementState {\n  space: SpaceState[];\n}\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n  }\n\n  nextAvailableSpace(): Space | null {\n    const availableSpaces = this.spaces.filter((space) => isNull(space.piece));\n    if (availableSpaces.length > 0) {\n      return availableSpaces[0];\n    } else {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area, AreaState } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                drawPool\n                            \n                            \n                                drawPoolLength\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGame\n                            \n                            \n                                draw\n                            \n                            \n                                endTurn\n                            \n                            \n                                    Private\n                                formatElementName\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                startTurn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameManagementSvc: GameManagementService, gameStateSvc: GameStateService, elementDrawPoolSvc: ElementDrawPoolService, factionRegistrySvc: FactionRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameManagementSvc\n                                                  \n                                                        \n                                                                        GameManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolSvc\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGame\n                        \n                    \n                \n            \n            \n                \ncreateGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        draw\n                        \n                    \n                \n            \n            \n                \ndraw()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endTurn\n                        \n                    \n                \n            \n            \n                \nendTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatElementName\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatElementName(kind: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTurn\n                        \n                    \n                \n            \n            \n                \nstartTurn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawPoolLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GameManagementService } from '../../../engine/service/game-management.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter } from 'rxjs';\nimport { Pile } from '../../../engine/model/pile.model';\nimport { ElementDrawPoolService } from '../../service/element-draw-pool.service';\n\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [MatButton, MatTooltip],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent {\n  drawPool: Pile | null = null;\n  drawPoolLength = 0;\n  log: string[] = [];\n  constructor(\n    private gameManagementSvc: GameManagementService,\n    private gameStateSvc: GameStateService,\n    private elementDrawPoolSvc: ElementDrawPoolService,\n    private factionRegistrySvc: FactionRegistryService,\n  ) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const registeredPilesSubscription = this.elementDrawPoolSvc.drawPool$\n      .pipe(filter((drawPool) => drawPool != null))\n      .subscribe((drawPool) => {\n        this.drawPool = drawPool;\n        drawPool.length$.subscribe((length) => {\n          this.drawPoolLength = length;\n        });\n        registeredPilesSubscription.unsubscribe();\n      });\n  }\n\n  createGame(): void {\n    this.gameManagementSvc.createGame();\n    console.log('Create Game');\n    this.factionRegistrySvc.registeredIds$.subscribe((ids) => {\n      this.log.push(`Welcome ${Array.from(ids)[0]}!`);\n    });\n  }\n\n  startTurn(): void {\n    console.log('Start Turn');\n    this.gameStateSvc.startTransaction();\n  }\n\n  private formatElementName(kind: string): string {\n    const elementName = kind.replace('Element', '');\n    return elementName.charAt(0).toUpperCase() + elementName.slice(1);\n  }\n\n  draw(): void {\n    if (this.drawPool) {\n      const item = this.drawPool.pull();\n      if (item[0]) {\n        const element = this.formatElementName(item[0].kind);\n        this.log.push(`You drew a ${element}`);\n      } else {\n        this.log.push('Pile is empty!');\n      }\n    }\n  }\n\n  endTurn(): void {\n    console.log('End Turn');\n    this.gameStateSvc.commitTransaction();\n  }\n}\n\n    \n\n    \n        \n  \n    Initialize\n    Start Turn\n    Draw!\n    End Turn\n  \n  \n    Draw Pool: {{ drawPoolLength }}\n    \n      \n        @for (line of log; track $index) {\n          {{ line }}\n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Initialize    Start Turn    Draw!    End Turn        Draw Pool: {{ drawPoolLength }}                  @for (line of log; track $index) {          {{ line }}        }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/dominant-species.constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameState } from '../engine/model/game-state.model';\n\nexport enum AnimalEnum {\n  AMPHIBIAN = 'amphibian',\n  ARACHNID = 'arachnid',\n  BIRD = 'bird',\n  INSECT = 'insect',\n  MAMMAL = 'mammal',\n  REPTILE = 'reptile',\n}\n\nexport type AnimalKind = `${AnimalEnum}`;\n\nexport enum AreaIdEnum {\n  ACTION_DISPLAY_ABUNDANCE = 'actionDisplayAbundance',\n  ACTION_DISPLAY_ADAPTION = 'actionDisplayAdaption',\n  AMPHIBIAN_ELEMENT = 'amphibianElement',\n  ARACHNID_ELEMENT = 'arachnidElement',\n  BIRD_ELEMENT = 'birdElement',\n  INSECT_ELEMENT = 'insectElement',\n  MAMMAL_ELEMENT = 'mammalElement',\n  REPTILE_ELEMENT = 'reptileElement',\n}\n\nexport type AreaId = `${AreaIdEnum}`;\n\nexport enum ElementEnum {\n  GRASS = 'grassElement',\n  GRUB = 'grubElement',\n  MEAT = 'meatElement',\n  SEED = 'seedElement',\n  SUN = 'sunElement',\n  WATER = 'waterElement',\n}\n\nexport type ElementKind = `${ElementEnum}`;\n\nexport enum PieceKindEnum {\n  ACTION_PAWN_AMPHIBIAN = 'actionPawnAmphibian',\n  ACTION_PAWN_ARACHNID = 'actionPawnArachnid',\n  ACTION_PAWN_BIRD = 'actionPawnBird',\n  ACTION_PAWN_INSECT = 'actionPawnInsect',\n  ACTION_PAWN_MAMMAL = 'actionPawnMammal',\n  ACTION_PAWN_REPTILE = 'actionPawnReptile',\n  ELEMENT = 'element',\n  SPECIES_AMPHIBIAN = 'speciesAmphibian',\n  SPECIES_ARACHNID = 'speciesArachnid',\n  SPECIES_BIRD = 'speciesBird',\n  SPECIES_INSECT = 'speciesInsect',\n  SPECIES_MAMMAL = 'speciesMammal',\n  SPECIES_REPTILE = 'speciesReptile',\n}\n\nexport type ActionPawnKind =\n  | PieceKindEnum.ACTION_PAWN_AMPHIBIAN\n  | PieceKindEnum.ACTION_PAWN_BIRD\n  | PieceKindEnum.ACTION_PAWN_ARACHNID\n  | PieceKindEnum.ACTION_PAWN_INSECT\n  | PieceKindEnum.ACTION_PAWN_MAMMAL\n  | PieceKindEnum.ACTION_PAWN_REPTILE;\n\nexport enum SpaceKindEnum {\n  ACTION_PAWN = 'actionPawn',\n  ELEMENT = 'element',\n}\n\n/**\n * GameState defining the static elements of the DS game\n */\nexport const baseGameState: GameState = {\n  area: [\n    {\n      id: AreaIdEnum.ACTION_DISPLAY_ADAPTION as string,\n      space: [\n        { kind: SpaceKindEnum.ACTION_PAWN as string, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN as string, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN as string, piece: null },\n      ],\n    },\n  ],\n  faction: [],\n  pile: [\n    {\n      id: PieceKindEnum.ELEMENT as string,\n      inventory: {\n        // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n        grassElement: 18,\n        grubElement: 18,\n        meatElement: 18,\n        seedElement: 18,\n        sunElement: 18,\n        waterElement: 18,\n      },\n    },\n  ],\n};\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                drawPool$\n                            \n                            \n                                    Private\n                                drawPoolSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawPool$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.drawPoolSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawPoolSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    this._drawPool,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, Observable } from 'rxjs';\nimport { PieceKindEnum } from '../dominant-species.constants';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | null = null;\n  private drawPoolSubject: BehaviorSubject = new BehaviorSubject(\n    this._drawPool,\n  );\n  drawPool$: Observable = this.drawPoolSubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const registeredPilesSubscription = this.pileRegistrySvc.registeredIds$\n      .pipe(filter((registeredIds) => registeredIds.has(PieceKindEnum.ELEMENT)))\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PieceKindEnum.ELEMENT);\n        this.drawPoolSubject.next(this._drawPool);\n        registeredPilesSubscription.unsubscribe();\n      });\n  }\n\n  get drawPool(): Pile | null {\n    return this._drawPool;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/piece.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { defaultPieceFactory, Piece } from '../../engine/model/piece.model';\nimport { ElementKind } from '../dominant-species.constants';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\nexport function elementPieceFactory(kind: ElementKind): ElementPiece {\n  return defaultPieceFactory(kind, null) as ElementPiece;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:30\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionState.html":{"url":"interfaces/FactionState.html","title":"interface - FactionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameElement, GameElementState } from './game-element.model';\n\nexport interface FactionState extends GameElementState {\n  ownerId: string;\n  score: number;\n}\n\nexport class Faction extends GameElement {\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction, FactionState } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:31\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  get(id: string): TgameElement {\n    const element = this.elementById.get(id);\n    if (!element) {\n      throw new Error(`Element with id ${id} is not registered.`);\n    } else {\n      return element;\n    }\n  }\n  register(elements: TgameElement[]): void {\n    elements.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elements);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameElementState.html":{"url":"interfaces/GameElementState.html","title":"interface - GameElementState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameElementState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\n\nexport interface GameElementState {\n  id: string;\n}\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement, GameElementState } from '../../model/game-element.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  protected abstract get elementState$(): Observable;\n  protected abstract registerEntityState(element: TgameElement): void;\n  protected abstract setEntityState(state: GameElementState): void;\n\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  private getEntity(id: string): TgameElement {\n    const element = this.elementById.get(id);\n    if (!element) {\n      throw new Error(`Entity for id ${id} is not registered.`);\n    }\n    return element;\n  }\n\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementService.html":{"url":"injectables/GameManagementService.html","title":"injectable - GameManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createArea\n                            \n                            \n                                    Private\n                                createFactions\n                            \n                            \n                                createGame\n                            \n                            \n                                    Private\n                                createPile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createArea\n                        \n                    \n                \n            \n            \n                \n                        \n                    createArea()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createFactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFactions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createGame\n                        \n                    \n                \n            \n            \n                \ncreateGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createPile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  baseGameState,\n  AnimalEnum,\n  SpaceKindEnum,\n  elementConfigByAnimal,\n} from '../../game/dominant-species.constants';\nimport { Pile } from '../model/pile.model';\nimport { Space } from '../model/space.model';\nimport { Area } from '../model/area.model';\nimport { shuffle } from 'lodash';\nimport { Faction } from '../model/faction.model';\nimport { PlayerService } from './player.service';\nimport { getOrThrow } from '../util';\nimport { AreaRegistryService } from './game-element/area-registry.service';\nimport { FactionRegistryService } from './game-element/faction-registry.service';\nimport { PileRegistryService } from './game-element/pile-registry.service';\nimport { elementPieceFactory } from '../../game/model/piece.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementService {\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private pileRegistrySvc: PileRegistryService,\n  ) {}\n\n  createGame(): void {\n    this.createArea();\n    this.createPile();\n    this.createFactions();\n  }\n\n  private createArea(): void {\n    const areas: Area[] = [];\n    baseGameState.area.forEach((areaState) => {\n      const spaces: Space[] = [];\n      areaState.space.forEach((spaceState) => {\n        spaces.push(new Space(spaceState.kind));\n      });\n      areas.push(new Area(areaState.id, spaces));\n    });\n    this.areaRegistrySvc.register(areas);\n  }\n\n  private createFactions() {\n    const factions: Faction[] = [];\n    const areas: Area[] = [];\n    const shuffledAnimals = shuffle(Object.values(AnimalEnum));\n    this.playerService.players.forEach((player, index) => {\n      const assignedAnimal = shuffledAnimals[index];\n      const elementConfig = getOrThrow(elementConfigByAnimal, assignedAnimal);\n\n      factions.push(\n        new Faction({\n          id: assignedAnimal,\n          ownerId: player.id,\n          score: 0,\n        }),\n      );\n\n      const spaces: Space[] = [];\n      // inherent element spaces\n      for (let i = 0; i  {\n      piles.push(new Pile(pileState));\n    });\n    this.pileRegistrySvc.register(piles);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameState.html":{"url":"interfaces/GameState.html","title":"interface - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Defining the GameState object managed by GameStateStoreService\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            area\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            pile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        area\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        area:         AreaState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         FactionState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FactionState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pile:         PileState[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PileState[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FactionState } from './faction.model';\nimport { PileState } from './pile.model';\nimport { AreaState } from './area.model';\n\n/**\n * Defining the GameState object managed by GameStateStoreService\n */\nexport interface GameState {\n  area: AreaState[];\n  faction: FactionState[];\n  pile: PileState[];\n}\n\nexport const emptyGameState: GameState = {\n  area: [],\n  faction: [],\n  pile: [],\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gsp$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gsp$\n                    \n                \n\n                \n                    \n                        getgsp$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-client.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { of, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n  }\n\n  get gsp$(): Observable {\n    return of(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameStatePatch.html":{"url":"interfaces/GameStatePatch.html","title":"interface - GameStatePatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameStatePatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state-patch.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            patch\n                                        \n                                \n                                \n                                        \n                                            timeStamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        patch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        patch:     Operation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Operation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeStamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Operation } from 'fast-json-patch';\n\nexport interface GameStatePatch {\n  timeStamp: number;\n  patch: Operation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(gameState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameState } from '../../model/game-state.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { applyPatch, compare } from 'fast-json-patch';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      timeStamp: Date.now(),\n      patch: compare(oldState, newState),\n    };\n  }\n\n  apply(gameState: GameState, gsp: GameStatePatch): GameState {\n    return applyPatch(gameState, gsp.patch, undefined, false).newDocument;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                            GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:87\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { filter, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { PileState } from '../../model/pile.model';\nimport { GameStatePatch } from '../../model/game-state-patch.model';\nimport { AreaState } from '../../model/area.model';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.pipe(filter((gsp) => gsp != undefined)).subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    const updatedState = this.gspService.apply(this.gameStateStore.gameState, gsp);\n    this.gameStateStore.setGameState(updatedState);\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        this.gameStateStore.gameState,\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\nusing the register method of the state element management service such as PileService or AreaService.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : deepClone(emptyGameState) as GameState\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:36\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:151\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:163\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:175\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { PileState } from '../../model/pile.model';\nimport { BehaviorSubject, map, Observable } from 'rxjs';\nimport { FactionState } from '../../model/faction.model';\nimport { emptyGameState, GameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\nimport { AreaState } from '../../model/area.model';\nimport { GameElementState } from '../../model/game-element.model';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\n * using the register method of the state element management service such as PileService or AreaService.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState = deepClone(emptyGameState) as GameState;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      map((gameState) => {\n        return selector(gameState);\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameState,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = this._gameState[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState {\n    return deepClone(this._gameState) as GameState;\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Piece.html":{"url":"interfaces/Piece.html","title":"interface - Piece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Piece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/piece.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Piece {\n  kind: string;\n  owner: string | null;\n}\n\nexport type PieceFactory = (kind: string, owner?: string | null) => Piece;\n\nexport function defaultPieceFactory(kind: string, owner: string | null = null): Piece {\n  return { kind: kind, owner: owner };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:18\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:53\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:79\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:36\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pull(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileState.html":{"url":"interfaces/PileState.html","title":"interface - PileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElementState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            inventory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inventory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inventory:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { defaultPieceFactory, Piece, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement, GameElementState } from './game-element.model';\n\n/**\n * PileState is pretty simple as it just keeps tracks of what kinds of pieces are in the pile and how many of them.\n */\nexport interface PileState extends GameElementState {\n  inventory: Record;\n}\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pull(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:17\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:24\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:43\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile, PileState } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Player.html":{"url":"classes/Player.html","title":"class - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:10\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:39\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/player.model.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement } from './game-element.model';\n\nexport interface PlayerState {\n  id: string;\n  name: string;\n}\n\nexport class Player extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                    Readonly\n                                players\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player\n\n                    \n                \n                \n                    \n                        Default value : new Player({ id: 'test1', name: 'Test Player' })\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/player.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player[]\n\n                    \n                \n                \n                    \n                        Default value : [this.currentPlayer] as const\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/player.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from '../model/player.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  readonly currentPlayer: Player = new Player({ id: 'test1', name: 'Test Player' });\n  readonly players: Player[] = [this.currentPlayer] as const;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerState.html":{"url":"interfaces/PlayerState.html","title":"interface - PlayerState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GameElement } from './game-element.model';\n\nexport interface PlayerState {\n  id: string;\n  name: string;\n}\n\nexport class Player extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _action\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                removePiece\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    action\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kind: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kind\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                            Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n\n                \n                    \n                        getaction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): void {\n    if (this._piece) {\n      this._piece = null;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpaceState.html":{"url":"interfaces/SpaceState.html","title":"interface - SpaceState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpaceState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            piece\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        piece\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        piece:         Piece | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Piece | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action } from './action.model';\nimport { Piece } from './piece.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\n\nexport interface SpaceState {\n  kind: string;\n  piece: Piece | null;\n}\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): void {\n    if (this._piece) {\n      this._piece = null;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            interface\n            AreaState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            interface\n            FactionState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            interface\n            GameElementState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state-patch.model.ts\n            \n            interface\n            GameStatePatch\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            interface\n            GameState\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/piece.model.ts\n            \n            interface\n            Piece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            interface\n            PileState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            class\n            Player\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            interface\n            SpaceState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management.service.ts\n            \n            injectable\n            GameManagementService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/engine/service/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/util.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/engine/util.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/game/dominant-species.constants.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/game/dominant-species.constants.ts\n            \n            variable\n            baseGameState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/game/dominant-species.constants.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/piece.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/piece.model.ts\n            \n            function\n            elementPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/service/animal.service.ts\n            \n            injectable\n            AnimalService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            fast-json-patch : ^3.1.1\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalEnum   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            ElementEnum   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../dominant-species.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/dominant-species.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grassElement\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grubElement\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meatElement\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seedElement\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sunElement\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : waterElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deepCompare   (src/.../util.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            elementPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            getOrThrow   (src/.../util.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map: Map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                                        Map\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/game/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementPieceFactory\n                        \n                    \n                \n            \n            \n                \nelementPieceFactory(kind: ElementKind)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            ElementKind\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ElementPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDominantSpecies\nThis project was generated with Angular CLI version 18.2.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Joe K.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionPawnKind   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            AnimalKind   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            AreaId   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            ElementKind   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/dominant-species.constants.ts\n    \n    \n        \n            \n                \n                    \n                    ActionPawnKind\n                \n            \n            \n                \n                            PieceKindEnum.ACTION_PAWN_AMPHIBIAN | PieceKindEnum.ACTION_PAWN_BIRD | PieceKindEnum.ACTION_PAWN_ARACHNID | PieceKindEnum.ACTION_PAWN_INSECT | PieceKindEnum.ACTION_PAWN_MAMMAL | PieceKindEnum.ACTION_PAWN_REPTILE\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            baseGameState   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../dominant-species.constants.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideAnimationsAsync('noop'),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/dominant-species.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [\n    {\n      id: AreaIdEnum.ACTION_DISPLAY_ADAPTION as string,\n      space: [\n        { kind: SpaceKindEnum.ACTION_PAWN as string, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN as string, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN as string, piece: null },\n      ],\n    },\n  ],\n  faction: [],\n  pile: [\n    {\n      id: PieceKindEnum.ELEMENT as string,\n      inventory: {\n        // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n        grassElement: 18,\n        grubElement: 18,\n        meatElement: 18,\n        seedElement: 18,\n        sunElement: 18,\n        waterElement: 18,\n      },\n    },\n  ],\n}\n                    \n                \n\n            \n                \n                    GameState defining the static elements of the DS game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [],\n  faction: [],\n  pile: [],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
