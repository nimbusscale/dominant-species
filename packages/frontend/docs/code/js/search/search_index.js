var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.718,1,1.044]],["body/interfaces/Action.html",[0,1.117,1,1.889,2,2.471,3,0.217,4,0.217,5,0.193,6,5.356,7,0.099,8,0.703,9,2.572,10,0.744,11,0.145,12,0.014,13,0.217,14,0.012,15,0.012]],["title/injectables/ActionDisplayManagerService.html",[16,0.33,17,2.846]],["body/injectables/ActionDisplayManagerService.html",[1,1.26,3,0.169,4,0.169,5,0.15,7,0.077,8,0.602,11,0.16,12,0.015,13,0.169,14,0.011,15,0.011,16,0.511,17,4.411,18,1.26,19,5.794,20,5.794,21,2.532,22,4.157,23,4.772,24,1.006,25,4.872,26,0.801,27,6.22,28,0.71,29,4.157,30,4.726,31,0.63,32,6.142,33,0.57,34,0.398,35,0.57,36,4.784,37,0.597,38,0.801,39,2.151,40,1.157,41,1.029,42,4.411,43,2.321,44,1.157,45,4.807,46,4.784,47,0.294,48,0.57,49,1.769,50,3.744,51,4.157,52,2.284,53,3.234,54,1.701,55,1.088,56,1.26,57,1.215,58,0.15,59,2.809,60,4.157,61,1.029,62,4.784,63,4.784,64,4.157,65,4.784,66,4.784,67,4.157,68,2.655,69,4.157,70,3.189,71,4.157,72,4.157,73,4.157,74,4.157,75,4.157]],["title/interfaces/ActionDisplayService.html",[0,0.718,76,3.101]],["body/interfaces/ActionDisplayService.html",[0,1.102,2,2.438,3,0.214,4,0.214,5,0.19,7,0.098,8,0.697,11,0.143,12,0.014,13,0.214,14,0.012,15,0.012,23,5.186,39,2.466,47,0.263,55,1.382,76,5.569,77,4.759,78,5.284]],["title/components/ActionPawnComponent.html",[79,0.718,80,1.409]],["body/components/ActionPawnComponent.html",[1,2.002,3,0.14,4,0.14,5,0.124,7,0.064,10,0.607,11,0.094,12,0.014,13,0.14,14,0.009,15,0.009,21,1.361,31,0.586,34,0.58,40,0.749,41,0.667,47,0.288,48,0.474,49,1.471,58,0.124,79,1.122,80,2.366,81,2.01,82,1.531,83,1.531,84,1.531,85,4.346,86,4.644,87,3.456,88,1.531,89,2.372,90,2.372,91,2.654,92,2.757,93,2.29,94,1.859,95,1.541,96,1.859,97,5.435,98,1.859,99,5.435,100,3.624,101,2.956,102,1.789,103,3.436,104,4.446,105,2.956,106,3.753,107,3.978,108,3.978,109,3.978,110,2.857,111,3.978,112,2.857,113,3.978,114,1.736,115,3.191,116,2.652,117,2.208,118,2.482,119,2.857,120,1.992,121,1.814,122,1.361,123,1.361,124,1.029,125,3.978,126,3.978,127,4.254,128,2.857,129,1.531,130,2.092,131,1.166,132,1.531,133,2.561,134,1.531,135,1.531,136,1.414,137,2.092,138,1.414,139,2.092,140,1.414,141,1.17,142,1.414,143,1.531,144,1.414,145,1.414,146,0.749,147,2.681,148,1.414,149,1.414,150,1.128,151,2.092,152,1.414,153,1.215,154,1.361,155,1.414,156,1.531,157,1.414,158,1.414,159,1.531,160,1.414,161,1.531,162,1.361,163,1.361,164,1.414,165,1.471,166,1.361,167,1.859,168,1.789,169,1.361,170,1.361,171,1.361,172,1.531,173,1.531]],["title/interfaces/ActionPawnPiece.html",[0,0.718,105,1.892]],["body/interfaces/ActionPawnPiece.html",[0,1.076,2,2.379,3,0.209,4,0.209,5,0.186,7,0.095,8,0.688,11,0.14,12,0.014,13,0.209,14,0.012,15,0.012,47,0.304,77,4.644,103,4.284,105,3.35,174,5.157,175,2.813,176,3.741,177,5.543,178,4.644,179,1.206,180,1.349,181,1.3]],["title/components/ActionPawnSpaceComponent.html",[79,0.718,136,1.409]],["body/components/ActionPawnSpaceComponent.html",[1,2.038,3,0.145,4,0.145,5,0.129,7,0.066,11,0.097,12,0.014,13,0.145,14,0.01,15,0.01,21,1.406,31,0.362,34,0.462,40,0.774,41,0.689,47,0.305,48,0.49,49,1.52,58,0.129,79,1.141,80,2.398,81,2.055,82,1.582,83,1.582,84,1.582,85,3.467,86,2.74,88,1.582,89,2.425,90,2.425,91,2.663,92,2.767,93,2.887,94,1.901,95,1.576,96,1.901,98,1.901,100,3.705,101,3.364,105,3.007,114,1.794,115,3.263,116,2.74,117,2.281,122,1.901,123,2.307,129,1.582,130,2.139,131,1.186,132,1.582,133,2.596,134,1.582,135,1.582,136,2.398,137,2.139,138,1.461,139,2.139,140,1.461,141,1.209,142,1.461,143,1.582,144,1.461,145,1.461,146,0.774,147,2.712,148,1.461,149,1.461,150,1.165,151,2.139,152,1.461,153,1.255,154,1.406,155,2.398,156,1.582,157,1.461,158,2.398,159,1.582,160,1.461,161,1.582,162,1.406,163,1.406,164,1.461,165,1.52,166,1.406,167,1.901,168,1.83,169,1.406,170,1.406,171,1.406,172,1.582,173,1.582,182,4.829,183,4.349,184,3.217,185,2.535,186,4.829,187,4.829,188,3.572,189,2.952,190,3.217,191,4.11]],["title/components/AdaptionActionDisplayCardComponent.html",[79,0.718,138,1.409]],["body/components/AdaptionActionDisplayCardComponent.html",[1,2.101,3,0.121,4,0.121,5,0.107,7,0.106,8,0.479,11,0.081,12,0.015,13,0.121,14,0.009,15,0.009,21,2.695,26,0.638,28,0.508,29,2.973,30,4.277,31,0.548,33,0.408,34,0.475,35,0.408,37,0.427,38,0.446,40,0.922,41,0.82,47,0.323,48,0.408,49,2.717,50,2.678,52,1.634,53,1.801,55,0.778,58,0.107,59,2.009,79,1.035,80,1.216,81,1.809,82,1.317,83,1.317,84,1.317,85,4.112,88,1.317,89,2.135,90,2.135,91,2.606,92,2.707,93,2.111,94,1.673,95,1.387,96,1.673,98,1.673,101,2.336,105,1.634,114,1.493,116,2.281,117,1.899,122,1.673,129,1.317,130,1.883,131,1.242,132,1.317,133,2.398,134,1.317,135,1.317,136,2.215,137,1.883,138,2.215,139,1.883,140,1.216,141,1.007,142,1.216,143,1.317,144,1.216,145,1.216,146,0.645,147,2.537,148,1.216,149,1.216,150,0.97,151,1.883,152,1.216,153,1.045,154,1.17,155,1.216,156,1.317,157,2.215,158,2.215,159,1.317,160,1.216,161,1.317,162,1.17,163,1.17,164,1.216,165,1.265,166,1.17,167,1.673,168,1.61,169,1.17,170,1.17,171,1.17,172,1.317,173,1.317,183,3.828,192,4.923,193,5.158,194,2.678,195,2.872,196,3.562,197,4.25,198,3.006,199,4.25,200,4.25,201,5.727,202,2.876,203,3.887,204,4.891,205,3.421,206,3.301,207,3.421,208,1.801,209,3.513,210,4.25,211,3.421,212,1.561,213,2.134,214,2.973,215,2.678,216,2.134,217,3.421,218,3.421,219,3.421,220,3.421,221,3.421,222,2.973,223,4.474]],["title/injectables/AdaptionActionDisplayService.html",[16,0.33,30,2.472]],["body/injectables/AdaptionActionDisplayService.html",[1,2.035,3,0.098,4,0.098,5,0.087,7,0.091,8,0.41,11,0.164,12,0.015,13,0.098,14,0.007,15,0.007,16,0.348,18,0.729,19,6.045,23,3.365,24,1.069,25,3.625,26,0.546,28,0.621,30,2.612,31,0.676,33,0.67,34,0.468,35,0.67,37,0.793,38,0.788,40,1.357,41,1.207,42,3.006,43,0.947,44,1.28,45,3.276,47,0.316,48,0.33,52,1.999,53,2.204,55,0.629,56,0.729,57,0.703,58,0.087,61,0.464,68,1.537,101,2.41,105,3.386,106,2.818,116,1.846,117,1.537,121,1.263,123,2.174,124,0.78,131,0.789,153,0.845,176,2.097,179,0.563,180,0.629,181,0.607,185,3.1,192,5.547,201,5.522,202,2.773,212,3.234,213,1.727,216,1.727,224,2.406,225,5.047,226,5.047,227,2.446,228,3.625,229,3.625,230,4.186,231,2.962,232,4.186,233,3.637,234,5.626,235,6.042,236,2.769,237,3.731,238,4.4,239,4.186,240,4.186,241,3.861,242,2.769,243,2.769,244,4.186,245,2.769,246,4.186,247,2.769,248,2.769,249,2.769,250,2.769,251,4.186,252,2.769,253,2.769,254,4.186,255,2.769,256,2.769,257,2.769,258,3.006,259,2.769,260,2.769,261,4.186,262,2.769,263,2.769,264,1.626,265,1.626,266,1.458,267,2.406,268,1.727,269,2.406,270,1.846,271,3.149,272,1.727,273,1.322,274,1.846,275,1.727,276,1.988,277,2.406,278,2.769,279,3.637,280,2.769,281,2.769,282,1.727,283,2.769,284,2.406,285,2.769,286,2.769,287,4.186,288,3.637,289,2.406,290,2.769,291,2.769,292,3.365,293,2.769,294,2.769,295,1.846,296,2.769,297,2.769,298,2.769,299,2.769,300,2.769,301,1.537,302,1.548,303,2.769,304,2.612,305,2.769,306,2.167,307,2.769,308,3.637,309,2.769,310,2.406,311,1.458,312,1.846,313,2.769,314,2.769,315,2.406,316,1.988,317,2.769,318,2.769,319,2.769]],["title/classes/Animal.html",[58,0.124,141,1.166]],["body/classes/Animal.html",[0,0.629,1,0.914,3,0.122,4,0.122,5,0.109,7,0.056,8,0.484,9,1.894,10,0.484,11,0.156,12,0.015,13,0.203,14,0.009,15,0.009,24,1.165,28,0.733,31,0.658,33,0.413,34,0.522,35,0.413,38,0.644,43,1.69,44,1.298,47,0.331,55,0.789,58,0.155,61,1.051,101,2.747,102,1.627,105,1.657,110,2.492,117,1.926,121,1.582,124,1.14,131,0.931,141,1.454,150,1.631,185,2.624,202,2.736,212,3.141,216,2.164,227,2.215,228,2.492,229,2.492,258,2.492,268,2.164,271,2.164,272,2.164,273,1.657,274,2.313,275,2.164,292,4.18,295,2.313,302,1.827,304,2.164,311,1.827,312,2.313,316,2.492,320,1.738,321,2.492,322,3.194,323,4.503,324,4.725,325,2.679,326,4.503,327,3.867,328,3.911,329,4.94,330,2.715,331,4.161,332,3.469,333,3.469,334,3.469,335,3.015,336,3.469,337,3.469,338,3.469,339,3.469,340,3.469,341,3.469,342,3.469,343,3.469,344,2.164,345,2.215,346,2.313,347,3.823,348,2.313,349,2.313,350,2.164,351,2.715,352,1.827,353,3.548,354,4.503,355,2.715,356,2.715,357,2.715,358,2.715,359,2.715,360,2.715,361,2.715,362,3.867,363,2.715,364,2.715,365,2.715,366,3.294,367,2.715,368,2.715,369,2.715,370,2.715,371,2.715,372,2.492,373,2.715,374,2.715,375,2.715,376,2.715,377,2.715,378,2.715,379,2.715,380,2.715,381,2.715,382,3.867,383,2.715,384,3.867,385,2.715,386,3.867,387,2.715,388,2.715,389,2.715,390,2.715]],["title/components/AnimalCardComponent.html",[79,0.718,140,1.409]],["body/components/AnimalCardComponent.html",[1,1.677,3,0.098,4,0.098,5,0.087,7,0.097,8,0.412,11,0.066,12,0.015,13,0.098,14,0.007,15,0.007,21,0.951,24,1.009,26,0.548,28,0.623,31,0.643,33,0.331,34,0.421,35,0.331,37,0.631,38,0.66,40,1.199,41,1.067,47,0.329,48,0.331,49,1.028,52,1.328,53,2.211,54,0.989,55,0.632,58,0.087,68,1.543,79,0.917,80,2.005,81,1.553,82,1.07,83,1.07,84,1.07,86,1.853,88,1.07,89,1.832,90,1.832,91,2.531,92,2.629,93,1.028,94,1.436,95,1.435,96,1.436,98,1.436,100,2.8,105,2.692,114,1.213,115,1.632,116,1.853,117,1.543,121,1.268,122,1.436,123,0.951,124,0.43,129,1.07,130,1.616,131,1.14,132,1.07,133,2.17,134,1.07,135,1.07,136,0.989,137,1.616,138,0.989,139,1.616,140,2.005,141,1.944,142,0.989,143,1.07,144,0.989,145,0.989,146,0.524,147,2.33,148,0.989,149,0.989,150,1.435,151,1.616,152,0.989,153,0.849,154,0.951,155,2.005,156,1.07,157,0.989,158,0.989,159,1.07,160,0.989,161,1.07,162,0.951,163,0.951,164,0.989,165,1.028,166,0.951,167,1.436,168,1.383,169,0.951,170,0.951,171,0.951,172,1.07,173,1.07,189,1.997,190,2.176,194,2.176,195,2.465,196,3.157,197,3.649,198,2.664,199,3.649,200,3.649,202,2.641,203,3.517,206,3.032,208,1.464,212,1.268,213,1.734,216,1.734,222,2.416,223,4.049,264,1.632,273,1.328,325,2.354,344,1.734,391,6.423,392,5.785,393,5.06,394,5.06,395,5.06,396,5.06,397,5.06,398,6.053,399,5.06,400,6.053,401,6.053,402,5.638,403,5.638,404,2.78,405,3.971,406,3.668,407,2.78,408,2.78,409,4.199,410,2.78,411,2.78,412,2.78,413,6.053,414,4.199,415,2.78,416,5.638,417,2.78,418,4.199,419,4.199,420,2.78,421,2.78,422,2.78,423,2.78,424,1.734,425,2.416,426,2.176,427,2.416,428,2.78,429,2.78,430,2.416,431,2.176,432,1.997,433,1.853,434,2.176,435,2.78,436,2.78,437,2.78,438,2.78,439,2.78,440,2.78,441,2.78,442,2.78,443,2.78,444,4.199,445,2.78,446,2.78,447,2.78,448,2.78,449,2.78,450,2.78,451,2.78,452,2.78,453,2.78,454,2.78,455,4.199,456,4.199,457,4.199]],["title/interfaces/AnimalConfig.html",[0,0.718,328,2.472]],["body/interfaces/AnimalConfig.html",[0,0.67,1,0.974,2,1.482,3,0.13,4,0.13,5,0.116,7,0.059,8,0.506,9,1.217,10,0.506,11,0.16,12,0.015,13,0.21,14,0.009,15,0.009,24,1.092,28,0.548,34,0.308,38,0.674,43,1.767,44,1.324,47,0.335,55,0.84,58,0.162,61,1.081,101,1.765,105,1.765,117,2.052,121,1.686,124,1.156,131,0.973,141,1.087,150,1.048,185,2.717,202,2.254,212,3.207,216,2.306,227,2.612,228,2.654,229,2.654,258,2.654,268,2.306,271,2.306,272,2.306,273,1.765,274,2.464,275,2.306,292,4.299,295,2.464,302,1.911,304,2.306,311,1.946,312,2.464,316,2.654,321,2.654,322,2.696,323,4.873,324,4.299,325,2.802,326,4.873,327,2.893,328,3.715,331,3.984,344,2.306,345,2.778,346,2.464,347,4.25,348,2.464,349,2.464,350,2.306,351,2.893,352,1.946,353,4.873,354,4.661,355,2.893,356,2.893,357,2.893,358,2.893,359,2.893,360,2.893,361,2.893,362,4.043,363,2.893,364,2.893,365,2.893,366,3.444,367,2.893,368,2.893,369,2.893,370,2.893,371,2.893,372,2.654,373,2.893,374,2.893,375,2.893,376,2.893,377,2.893,378,2.893,379,2.893,380,2.893,381,2.893,382,4.043,383,2.893,384,4.043,385,2.893,386,4.043,387,2.893,388,2.893,389,2.893,390,2.893]],["title/classes/AnimalElements.html",[58,0.124,324,2.642]],["body/classes/AnimalElements.html",[0,0.627,1,0.91,3,0.122,4,0.122,5,0.108,7,0.056,8,0.483,9,1.138,10,0.483,11,0.135,12,0.015,13,0.202,14,0.009,15,0.009,24,1.108,26,0.643,28,0.731,31,0.637,33,0.684,34,0.521,35,0.684,37,0.615,38,0.816,40,0.928,41,0.826,43,1.964,44,1.334,47,0.331,55,0.786,58,0.154,61,1.049,101,1.65,102,1.622,105,1.65,117,1.918,121,1.576,124,1.139,131,1.179,141,1.017,150,0.98,185,2.619,202,2.731,212,3.407,216,2.156,227,2.547,228,2.482,229,4.123,233,4.281,258,3.538,268,2.156,271,2.156,272,2.156,273,1.65,274,2.304,275,2.156,292,4.173,295,2.304,302,1.822,304,2.156,311,1.82,312,2.304,316,2.482,320,1.731,321,2.482,322,2.617,323,3.538,324,4.411,325,2.447,326,3.538,327,2.705,328,3.074,331,3.885,344,2.156,345,2.21,346,2.304,347,4.146,348,2.304,349,2.304,350,2.156,351,2.705,352,1.82,353,4.123,354,4.493,355,4.493,356,2.705,357,2.705,358,2.705,359,2.705,360,2.705,361,3.856,362,3.856,363,2.705,364,2.705,365,3.856,366,3.285,367,2.705,368,2.705,369,2.705,370,2.705,371,2.705,372,2.482,373,2.705,374,4.493,375,2.705,376,2.705,377,4.493,378,2.705,379,2.705,380,2.705,381,2.705,382,3.856,383,2.705,384,3.856,385,2.705,386,3.856,387,2.705,388,2.705,389,2.705,390,2.705,458,4.927,459,3.456,460,4.927,461,3.456,462,3.456,463,3.456,464,3.456,465,3.456,466,3.456,467,3.456,468,3.456,469,3.456]],["title/injectables/AnimalProviderService.html",[16,0.33,405,2.472]],["body/injectables/AnimalProviderService.html",[3,0.12,4,0.12,5,0.106,7,0.055,8,0.477,9,1.872,10,0.557,11,0.155,12,0.015,13,0.12,14,0.008,15,0.008,16,0.405,18,0.894,24,1.186,26,0.635,28,0.722,31,0.646,33,0.74,34,0.517,35,0.74,37,0.774,38,0.81,40,1.17,41,1.041,43,1.945,44,1.382,47,0.322,48,0.405,52,2.323,53,2.562,54,1.73,55,0.772,56,0.894,57,0.862,58,0.106,61,1.18,68,1.885,120,1.701,121,1.549,124,0.752,141,2.072,237,3.645,264,3.338,265,1.994,266,2.993,269,2.951,282,2.118,322,2.377,323,2.439,325,2.664,326,2.439,328,4.393,330,2.657,344,2.118,347,1.885,348,2.264,349,2.264,353,2.439,405,3.035,470,6.466,471,2.951,472,5.685,473,4.94,474,5.685,475,6.208,476,4.865,477,4.865,478,6.208,479,3.395,480,4.135,481,4.393,482,4.865,483,4.865,484,4.865,485,3.395,486,4.865,487,3.395,488,3.395,489,3.244,490,3.395,491,3.395,492,4.865,493,3.395,494,2.742,495,3.395,496,2.264,497,2.951,498,2.264,499,1.994,500,2.118,501,2.657,502,3.395,503,3.395,504,3.395,505,3.395,506,3.395,507,2.951,508,3.395,509,2.657,510,3.395,511,3.395,512,3.395,513,2.951,514,3.395,515,4.865,516,3.395,517,5.685,518,3.395,519,3.395,520,3.395,521,3.395,522,3.395,523,4.227,524,3.395,525,3.395,526,4.865,527,3.395,528,3.395,529,3.395,530,3.395,531,3.395,532,3.395,533,3.395,534,3.395,535,3.395,536,3.395,537,3.395,538,3.395,539,2.439,540,3.395,541,3.395,542,3.395,543,3.395,544,3.395]],["title/components/AppComponent.html",[79,0.718,142,1.409]],["body/components/AppComponent.html",[1,1.731,3,0.158,4,0.158,5,0.14,7,0.072,8,0.577,10,0.439,11,0.106,12,0.014,13,0.158,14,0.01,15,0.01,21,1.531,31,0.394,34,0.489,40,0.843,41,0.75,47,0.285,48,0.533,49,1.655,57,1.494,58,0.14,79,1.191,80,1.592,81,2.176,82,1.723,83,1.723,84,1.723,88,1.723,91,2.687,92,2.792,93,1.655,94,2.012,95,1.668,96,2.012,98,2.012,122,2.012,129,1.723,130,2.264,131,1.238,132,1.723,133,2.686,134,1.723,135,1.723,136,1.592,137,2.264,138,1.592,139,2.264,140,1.592,141,1.317,142,2.481,143,1.723,144,1.592,145,1.592,146,0.843,147,2.79,148,1.592,149,2.336,150,1.863,151,2.264,152,2.481,153,1.367,154,2.248,155,1.592,156,1.723,157,1.592,158,1.592,159,1.723,160,1.592,161,1.723,162,1.531,163,1.531,164,1.592,165,1.655,166,1.531,167,2.012,168,1.937,169,1.531,170,1.531,171,1.531,172,1.723,173,1.723,545,3.89,546,6.57,547,5.882,548,5.882,549,6.57,550,4.476,551,1.953,552,4.476,553,3.215,554,3.89]],["title/classes/Area.html",[58,0.124,227,1.525]],["body/classes/Area.html",[3,0.133,4,0.133,5,0.118,7,0.097,8,0.513,9,1.241,10,0.59,11,0.179,12,0.015,13,0.133,14,0.009,15,0.009,24,1.114,26,0.683,28,0.559,31,0.683,33,0.717,34,0.501,35,0.717,37,0.811,38,0.785,39,2.061,43,2.224,44,1.287,47,0.282,55,0.857,58,0.118,61,0.631,123,2.224,124,0.583,146,0.71,175,2.099,179,0.766,180,0.857,181,1.549,185,3.117,227,2.316,231,3.424,276,2.706,288,3.274,292,2.512,301,2.091,302,1.936,304,4.526,315,4.55,320,1.887,322,2.957,352,1.984,555,3.274,556,3.895,557,6.017,558,5.678,559,3.724,560,3.76,561,3.491,562,5.236,563,3.491,564,4.321,565,3.491,566,4.526,567,5.236,568,3.768,569,3.768,570,3.768,571,2.212,572,3.598,573,2.949,574,2.949,575,2.949,576,3.768,577,5.236,578,3.768,579,3.014,580,3.274,581,3.491,582,3.768,583,2.091,584,2.949,585,3.768,586,2.949,587,6.017,588,3.768,589,3.768,590,3.768,591,3.768,592,3.768,593,3.768,594,3.768,595,3.768,596,3.768,597,3.768,598,2.949,599,5.236,600,2.949,601,3.274,602,3.274,603,3.274,604,4.098,605,3.768,606,3.768,607,3.768,608,2.351,609,3.768,610,3.768,611,3.768,612,3.768,613,3.768]],["title/injectables/AreaRegistryService.html",[16,0.33,237,2.327]],["body/injectables/AreaRegistryService.html",[3,0.162,4,0.162,5,0.144,7,0.074,8,0.587,9,1.514,10,0.587,11,0.177,12,0.015,13,0.162,14,0.01,15,0.01,16,0.498,18,1.211,24,1.112,26,0.781,28,0.682,31,0.672,33,0.793,34,0.554,35,0.793,37,0.747,38,0.6,39,1.458,40,1.328,41,1.182,44,1.254,47,0.317,48,0.548,54,2.129,56,1.211,57,1.167,58,0.144,131,0.866,146,0.866,175,2.4,179,0.935,180,1.045,181,1.007,202,2.006,227,2.304,237,3.515,265,3.515,266,2.421,489,3.065,494,2.669,566,2.868,572,3.947,614,2.048,615,2.868,616,4.594,617,3.323,618,4.299,619,3.914,620,3.152,621,4.597,622,5.064,623,3.995,624,5.986,625,3.598,626,4.058,627,3.065,628,3.995,629,3.598,630,3.302,631,3.598,632,3.598,633,3.302,634,3.598,635,3.598,636,2.195,637,2.868,638,4.597]],["title/injectables/AreaStateService.html",[16,0.33,622,2.846]],["body/injectables/AreaStateService.html",[3,0.155,4,0.155,5,0.138,7,0.071,8,0.57,9,1.45,10,0.57,11,0.175,12,0.014,13,0.155,14,0.01,15,0.01,16,0.484,18,1.16,24,1.138,26,0.759,31,0.675,33,0.826,34,0.577,35,0.826,37,0.899,38,0.905,40,1.096,41,0.975,44,1.096,47,0.3,48,0.525,54,2.069,56,1.16,57,1.118,58,0.138,102,1.916,124,0.681,131,0.83,146,0.83,175,2.333,179,0.895,180,1.001,181,1.275,227,2.775,231,3.432,265,3.417,494,2.333,559,3.978,566,4.326,572,3.978,614,1.991,617,3.23,619,3.23,620,3.064,622,4.179,626,3.618,635,3.446,636,2.103,639,2.747,640,4.6,641,4.179,642,4.179,643,4.179,644,4.681,645,5.819,646,3.446,647,4.179,648,3.446,649,3.163,650,3.446,651,3.446,652,3.163,653,3.446,654,3.163,655,3.446,656,3.446,657,3.163,658,3.446,659,4.403,660,4.403,661,4.403]],["title/injectables/AuthService.html",[16,0.33,662,2.086]],["body/injectables/AuthService.html",[3,0.131,4,0.131,5,0.116,7,0.06,8,0.507,10,0.708,11,0.166,12,0.015,13,0.131,14,0.009,15,0.009,16,0.431,18,0.976,24,1.137,26,0.675,28,0.768,31,0.667,33,0.769,34,0.537,35,0.769,37,0.847,38,0.675,39,1.891,43,2.04,44,0.975,47,0.319,48,0.442,55,0.843,56,0.976,57,0.941,58,0.116,61,1,70,3.976,95,1.051,102,1.704,106,2.592,124,1.116,163,1.771,165,2.388,273,1.77,302,1.371,311,1.951,322,2.941,662,2.725,663,3.22,664,5.183,665,5.964,666,5.176,667,5.964,668,3.14,669,5.176,670,5.228,671,5.964,672,3.22,673,4.691,674,5.186,675,5.176,676,5.176,677,5.61,678,3.706,679,5.964,680,3.706,681,4.498,682,3.791,683,3.706,684,2.259,685,2.725,686,3.706,687,5.176,688,3.706,689,3.706,690,3.706,691,3.706,692,3.706,693,3.706,694,3.717,695,2.471,696,3.22,697,3.706,698,2.901,699,2.901,700,2.901,701,2.901,702,3.706,703,2.471,704,3.22,705,3.706,706,3.706,707,3.706,708,3.706,709,3.706,710,3.706,711,2.901,712,3.706,713,3.706,714,3.22,715,3.706,716,3.22,717,3.706,718,3.22,719,3.706,720,2.057,721,3.706,722,3.706,723,3.706,724,3.706,725,3.706,726,3.706,727,2.312,728,5.176,729,3.706,730,3.706,731,3.706,732,3.706,733,3.706,734,3.22,735,3.706,736,3.706]],["title/injectables/CognitoClientService.html",[16,0.33,673,2.642]],["body/injectables/CognitoClientService.html",[3,0.13,4,0.13,5,0.115,7,0.059,10,0.796,11,0.16,12,0.015,13,0.13,14,0.009,15,0.009,16,0.428,18,0.968,26,0.671,28,0.545,31,0.596,33,0.807,34,0.584,35,0.807,37,0.802,38,0.671,41,0.616,44,1.119,47,0.293,48,0.438,56,0.968,57,0.933,58,0.115,59,2.158,61,1.208,95,1.459,115,3.487,123,1.76,124,1.137,163,1.76,167,1.257,168,1.21,179,0.747,668,3.933,673,3.431,677,3.194,681,4.472,682,4.444,684,3.26,685,3.695,694,2.64,698,2.877,699,2.877,700,2.877,701,2.877,711,2.877,720,3.296,727,3.211,737,6.098,738,2.64,739,4.472,740,5.146,741,4.472,742,3.676,743,5.59,744,3.676,745,5.146,746,4.472,747,4.62,748,3.676,749,5.146,750,3.676,751,3.676,752,5.938,753,3.676,754,4.472,755,4.863,756,3.676,757,3.676,758,3.676,759,5.146,760,3.676,761,3.676,762,3.676,763,3.676,764,3.194,765,3.676,766,3.676,767,3.676,768,5.938,769,5.938,770,3.676,771,5.938,772,3.676,773,5.16,774,6.433,775,5.938,776,3.676,777,5.16,778,5.146,779,5.146,780,3.676,781,3.676,782,3.676,783,3.676,784,3.676,785,3.431,786,3.676,787,3.676]],["title/components/CreateGamePageComponent.html",[79,0.718,144,1.409]],["body/components/CreateGamePageComponent.html",[1,0.945,3,0.058,4,0.058,5,0.052,7,0.081,8,0.272,10,0.716,11,0.16,12,0.015,13,0.058,14,0.005,15,0.005,21,0.567,24,0.98,26,0.363,28,0.412,31,0.639,33,0.641,34,0.488,35,0.641,37,0.81,38,0.701,40,1.013,41,0.901,44,0.881,47,0.305,48,0.198,49,0.613,52,0.792,55,0.377,58,0.052,61,1.067,70,4.035,79,0.65,80,0.59,81,1.028,82,0.638,83,0.638,84,0.638,88,0.638,91,2.293,92,2.382,93,0.613,94,0.951,95,1.326,96,0.951,98,0.951,106,1.392,115,2.746,122,0.951,123,1.6,124,0.831,129,0.638,130,1.07,131,0.676,132,0.638,133,1.616,134,0.638,135,0.638,136,0.59,137,1.07,138,0.59,139,1.07,140,0.59,141,0.488,142,0.59,143,0.638,144,1.493,145,2.084,146,1.509,147,1.8,148,0.59,149,0.59,150,0.47,151,1.07,152,0.59,153,0.507,154,0.567,155,0.59,156,0.638,157,0.59,158,0.59,159,0.638,160,0.59,161,0.638,162,0.567,163,0.567,164,0.59,165,0.613,166,0.567,167,0.951,168,0.915,169,0.567,170,0.567,171,1.227,172,0.638,173,0.638,179,0.337,195,1.632,196,2.239,198,1.889,203,2.62,208,0.873,241,3.533,273,0.792,322,1.5,406,2.983,432,1.191,433,1.106,434,1.298,494,2.155,509,3.286,551,0.724,608,1.734,668,3.667,684,1.566,685,3.351,703,1.106,720,2.808,727,4.051,773,3.118,777,3.118,785,3.118,788,6.35,789,6.35,790,0.831,791,3.588,792,3.588,793,3.588,794,3.588,795,3.588,796,3.588,797,3.588,798,1.889,799,3.588,800,3.588,801,3.588,802,2.107,803,3.118,804,3.588,805,3.118,806,2.808,807,1.464,808,1.464,809,3.588,810,3.588,811,3.588,812,3.588,813,3.588,814,3.588,815,3.118,816,3.588,817,4.199,818,2.416,819,2.78,820,3.016,821,2.78,822,4.199,823,4.199,824,2.78,825,4.199,826,4.199,827,2.78,828,2.78,829,4.199,830,1.659,831,2.465,832,2.567,833,3.588,834,4.199,835,3.353,836,2.78,837,2.78,838,2.78,839,1.659,840,3.649,841,2.78,842,1.659,843,1.659,844,2.78,845,1.659,846,1.659,847,1.659,848,2.78,849,1.659,850,1.659,851,1.441,852,1.659,853,2.78,854,1.659,855,2.78,856,1.659,857,1.659,858,1.659,859,4.746,860,1.659,861,1.659,862,1.659,863,2.416,864,1.659,865,4.199,866,1.659,867,2.808,868,1.659,869,3.588,870,2.577,871,2.78,872,1.659,873,2.176,874,1.191,875,1.298,876,1.659,877,1.659,878,1.659,879,0.921,880,1.659,881,0.873,882,1.659,883,1.659,884,1.441,885,1.441,886,1.298,887,1.659,888,1.659,889,1.659,890,1.659,891,1.659,892,1.035,893,1.659,894,1.659,895,1.659,896,1.659,897,1.659,898,1.659,899,3.588,900,1.659,901,1.441,902,1.441,903,3.588,904,2.78,905,5.06,906,2.78,907,3.588,908,4.397,909,1.659,910,3.588,911,3.588,912,2.78,913,2.176,914,2.78,915,1.659,916,1.659,917,1.659,918,1.659,919,2.78,920,4.199,921,1.659,922,3.588,923,1.659,924,2.78,925,1.659,926,1.441,927,1.659,928,2.78,929,2.78,930,4.199,931,1.659,932,0.921,933,1.659,934,1.659,935,1.659,936,1.659,937,1.191,938,1.106,939,1.659,940,1.659,941,2.78,942,1.659,943,2.78,944,1.659,945,1.659,946,1.659,947,1.659,948,1.659,949,1.659,950,4.676,951,1.659,952,2.78,953,2.78,954,2.78,955,1.659,956,1.659,957,2.78,958,2.78,959,2.78,960,1.659,961,1.441,962,1.659,963,1.191,964,1.659,965,1.659,966,2.78,967,2.78,968,2.416]],["title/components/DominantSpeciesGameComponent.html",[79,0.718,148,1.409]],["body/components/DominantSpeciesGameComponent.html",[1,1.518,3,0.123,4,0.123,5,0.109,7,0.056,8,0.485,10,0.565,11,0.117,12,0.015,13,0.123,14,0.009,15,0.009,21,1.19,24,1.052,26,0.646,28,0.734,31,0.553,33,0.59,34,0.522,35,0.59,37,0.617,38,0.819,40,0.655,41,0.583,47,0.307,48,0.414,49,1.286,52,1.661,53,2.606,55,0.791,58,0.109,61,0.583,68,1.931,79,1.044,80,1.237,81,1.83,82,1.339,83,1.339,84,1.339,88,1.339,91,2.611,92,2.713,93,1.286,94,1.693,95,1.403,96,1.693,98,1.693,122,1.693,129,1.339,130,1.905,131,1.086,132,1.339,133,2.416,134,1.339,135,1.339,136,1.237,137,1.905,138,1.237,139,1.905,140,1.237,141,1.023,142,1.237,143,1.339,144,1.237,145,1.237,146,1.086,147,2.553,148,2.232,149,2.522,150,2.239,151,1.905,152,2.232,153,1.511,154,1.971,155,1.237,156,1.339,157,1.237,158,1.237,159,1.339,160,1.237,161,1.339,162,1.19,163,1.19,164,1.237,165,1.286,166,1.19,167,1.693,168,1.63,169,1.19,170,1.19,171,1.19,172,1.339,173,1.339,195,2.906,196,3.594,203,3.916,206,1.742,264,2.042,279,3.022,282,2.17,551,1.518,553,2.498,554,3.022,668,3.034,685,2.606,720,1.931,832,3.387,835,4.424,873,2.722,875,2.722,963,2.498,969,5.763,970,5.763,971,2.722,972,5.761,973,4.301,974,4.301,975,6.632,976,4.301,977,3.478,978,6.277,979,5.093,980,4.949,981,4.949,982,4.301,983,3.022,984,3.034,985,3.478,986,4.949,987,3.478,988,3.478,989,3.478,990,3.478,991,3.478,992,3.478,993,3.478,994,3.478,995,3.478]],["title/components/DrawPoolGameComponent.html",[79,0.718,152,1.409]],["body/components/DrawPoolGameComponent.html",[1,1.916,3,0.096,4,0.096,5,0.085,7,0.044,8,0.405,10,0.405,11,0.141,12,0.015,13,0.096,14,0.007,15,0.007,21,1.709,24,0.937,26,0.539,28,0.613,30,4.093,31,0.578,33,0.324,34,0.416,35,0.324,37,0.515,38,0.652,40,1.051,41,1.133,47,0.335,48,0.324,49,1.006,50,2.13,52,1.3,53,2.176,55,0.619,58,0.085,61,1.005,68,1.511,79,0.905,80,1.983,81,1.528,82,1.048,83,1.048,84,1.048,86,1.814,88,1.048,91,2.522,92,2.621,93,1.006,94,1.413,95,1.172,96,1.413,98,1.413,101,2.385,106,3.385,121,1.241,122,1.413,123,1.413,129,1.048,130,1.59,131,1.051,132,1.048,133,2.147,134,1.048,135,1.048,136,0.968,137,1.59,138,1.983,139,1.59,140,1.983,141,1.47,142,0.968,143,1.048,144,0.968,145,0.968,146,0.941,147,2.308,148,0.968,149,0.968,150,0.772,151,1.59,152,1.983,153,2.003,154,2.683,155,1.983,156,1.048,157,1.983,158,1.983,159,1.048,160,0.968,161,1.048,162,0.931,163,0.931,164,0.968,165,1.006,166,0.931,167,1.413,168,1.36,169,0.931,170,0.931,171,0.931,172,1.048,173,1.048,189,1.955,190,2.13,192,2.967,193,2.13,195,2.426,196,3.116,203,3.479,209,1.955,210,2.365,214,2.365,223,2.967,227,1.923,237,3.852,264,3.275,265,1.598,266,2.176,268,1.698,270,1.814,272,1.698,273,1.3,282,1.698,284,2.365,325,2.5,344,1.698,392,2.13,405,4.093,406,3.641,430,2.365,431,2.13,433,1.814,480,3.275,499,1.598,513,2.365,539,2.967,553,4.854,636,1.3,798,2.63,806,3.909,881,1.433,886,2.13,971,2.13,973,3.59,974,3.59,983,3.59,996,5.873,997,4.995,998,4.995,999,5.996,1000,4.995,1001,5.577,1002,2.365,1003,3.479,1004,4.995,1005,3.59,1006,2.721,1007,2.721,1008,2.721,1009,2.721,1010,2.721,1011,1.3,1012,4.132,1013,2.721,1014,2.13,1015,2.721,1016,2.721,1017,2.721,1018,2.721,1019,2.721,1020,2.13,1021,2.721,1022,2.721,1023,2.721,1024,2.721,1025,2.721,1026,2.721,1027,2.721,1028,2.721,1029,2.721,1030,2.721,1031,2.721,1032,2.721,1033,2.721,1034,2.721,1035,2.721,1036,2.721,1037,4.132]],["title/components/ElementComponent.html",[79,0.718,155,1.409]],["body/components/ElementComponent.html",[1,1.655,3,0.144,4,0.144,5,0.128,7,0.066,10,0.616,11,0.096,12,0.015,13,0.144,14,0.01,15,0.01,21,1.4,31,0.593,34,0.585,40,0.771,41,0.686,47,0.292,48,0.488,49,1.513,58,0.128,79,1.139,80,1.455,81,2.049,82,1.575,83,1.575,84,1.575,88,1.575,89,2.418,90,2.418,91,2.662,92,2.766,93,1.513,94,1.895,95,1.571,96,1.895,98,1.895,100,3.694,102,1.824,104,4.511,106,3.778,110,2.939,112,2.939,114,1.786,115,3.253,118,2.553,119,2.939,120,2.049,121,1.866,122,1.4,124,1.041,128,2.939,129,1.575,130,2.133,131,1.421,132,1.575,133,2.591,134,1.575,135,1.575,136,1.455,137,2.133,138,1.455,139,2.133,140,1.455,141,1.204,142,1.455,143,1.575,144,1.455,145,1.455,146,0.771,147,2.708,148,1.455,149,1.455,150,1.16,151,2.133,152,1.455,153,1.249,154,1.4,155,2.394,156,1.575,157,1.455,158,1.455,159,1.575,160,1.455,161,1.575,162,1.4,163,1.4,164,1.455,165,1.513,166,1.4,167,1.895,168,1.824,169,1.4,170,1.4,171,1.4,172,1.575,173,1.575,212,2.865,213,2.553,579,3.146,1038,3.555,1039,5.54,1040,5.54,1041,4.091,1042,4.091,1043,4.091,1044,4.091,1045,4.091,1046,4.091,1047,4.091,1048,4.814]],["title/interfaces/ElementConfig.html",[0,0.718,347,2.2]],["body/interfaces/ElementConfig.html",[0,0.896,2,1.981,3,0.174,4,0.174,5,0.155,7,0.08,8,0.614,11,0.162,12,0.015,13,0.221,14,0.011,15,0.011,44,0.931,47,0.298,54,1.757,61,1.051,241,3.823,270,3.294,347,3.48,498,3.294,579,4.001,1049,3.867,1050,3.867,1051,5.852,1052,6.942,1053,5.203,1054,3.867,1055,4.94,1056,4.94,1057,3.294,1058,4.293,1059,3.867,1060,3.867,1061,4.293,1062,4.293,1063,4.293,1064,3.867,1065,4.293,1066,5.851,1067,4.293,1068,3.867,1069,4.293,1070,4.293,1071,3.867,1072,4.293,1073,4.293,1074,3.867,1075,4.293,1076,4.293,1077,3.867,1078,4.293,1079,4.293]],["title/injectables/ElementDrawPoolService.html",[16,0.33,238,2.642]],["body/injectables/ElementDrawPoolService.html",[3,0.133,4,0.133,5,0.118,7,0.061,8,0.515,11,0.167,12,0.015,13,0.133,14,0.009,15,0.009,16,0.437,18,0.997,23,4.842,24,1.159,25,4.331,26,0.685,28,0.561,31,0.67,33,0.719,34,0.502,35,0.719,37,0.752,38,0.85,39,2.065,40,1.289,41,1.147,42,3.771,43,2.063,44,1.136,47,0.315,48,0.451,52,1.807,53,2.765,55,0.86,56,0.997,57,0.961,58,0.118,59,2.222,68,2.1,95,1.073,102,1.729,106,3.263,123,1.294,124,1.007,153,2.349,176,2.63,179,0.769,180,0.86,181,0.829,212,3.23,213,2.36,231,3.43,238,3.501,241,2.915,264,2.222,266,1.992,276,2.717,282,2.36,302,1.399,345,2.507,346,2.523,481,4.064,500,2.36,727,3.276,870,4.331,892,3.276,1080,6.683,1081,3.288,1082,6.03,1083,4.11,1084,4.11,1085,5.24,1086,3.784,1087,5.251,1088,5.251,1089,3.784,1090,5.251,1091,3.784,1092,2.961,1093,4.11,1094,3.784,1095,2.961,1096,3.784,1097,3.784,1098,5.251,1099,3.784,1100,3.784,1101,3.784,1102,2.961,1103,3.784,1104,2.961,1105,3.784,1106,3.784,1107,3.784,1108,3.784,1109,6.514,1110,3.784,1111,3.784,1112,3.784,1113,3.784,1114,3.784,1115,3.784,1116,3.784,1117,3.784]],["title/interfaces/ElementPiece.html",[0,0.718,212,1.808]],["body/interfaces/ElementPiece.html",[0,1.066,2,2.359,3,0.207,4,0.207,5,0.184,7,0.095,8,0.684,11,0.139,12,0.014,13,0.207,14,0.012,15,0.012,47,0.302,103,4.272,123,2.012,175,2.798,176,3.727,179,1.196,180,1.337,181,1.289,212,3.183,579,3.855,1053,5.527,1118,5.112,1119,5.883]],["title/components/ElementSpaceComponent.html",[79,0.718,157,1.409]],["body/components/ElementSpaceComponent.html",[1,1.658,3,0.145,4,0.145,5,0.129,7,0.066,10,0.403,11,0.097,12,0.014,13,0.145,14,0.01,15,0.01,21,1.406,31,0.489,34,0.462,40,0.774,41,0.689,47,0.305,48,0.49,49,1.52,58,0.129,79,1.141,80,1.461,81,2.055,82,1.582,83,1.582,84,1.582,85,3.928,88,1.582,89,2.425,90,2.425,91,2.663,92,2.767,93,1.52,94,1.901,95,1.576,96,1.901,98,1.901,100,3.705,102,1.83,104,4.522,112,2.952,114,1.794,115,3.263,118,2.564,119,2.952,120,2.059,121,1.875,122,1.901,123,2.307,124,0.635,128,2.952,129,1.582,130,2.139,131,1.5,132,1.582,133,2.596,134,1.582,135,1.582,136,1.461,137,2.139,138,1.461,139,2.139,140,1.461,141,1.209,142,1.461,143,1.582,144,1.461,145,1.461,146,0.774,147,2.712,148,1.461,149,1.461,150,1.165,151,2.139,152,1.461,153,1.255,154,1.406,155,2.398,156,1.582,157,2.398,158,1.461,159,1.582,160,1.461,161,1.582,162,1.406,163,1.406,164,1.461,165,1.52,166,1.406,167,1.901,168,1.83,169,1.406,170,1.406,171,1.406,172,1.582,173,1.582,184,3.217,185,2.535,186,4.829,187,4.829,188,3.572,189,2.952,209,4.522,212,2.872,213,2.564,366,2.74,1014,4.928,1120,4.11]],["title/components/EyeballComponent.html",[79,0.718,158,1.409]],["body/components/EyeballComponent.html",[1,1.736,3,0.159,4,0.159,5,0.141,7,0.073,10,0.442,12,0.014,13,0.159,14,0.01,15,0.01,21,1.541,31,0.397,34,0.492,47,0.286,48,0.537,49,1.666,58,0.141,79,1.195,80,1.602,81,2.185,82,1.734,83,1.734,84,1.734,85,3.686,88,1.734,89,2.578,90,2.578,91,2.689,92,2.794,93,1.666,94,2.021,95,1.675,96,2.021,98,2.021,102,1.945,104,4.734,112,3.236,114,1.966,118,2.811,119,3.236,120,2.257,121,2.055,122,1.541,124,0.697,128,3.236,129,1.734,130,2.274,131,1.242,132,1.734,133,2.693,134,1.734,135,1.734,136,1.602,137,2.274,138,1.602,139,2.274,140,1.602,141,1.326,142,1.602,143,1.734,144,1.602,145,1.602,146,0.849,147,2.796,148,1.602,149,1.602,150,1.278,151,2.274,152,1.602,153,1.376,154,1.541,155,1.602,156,1.734,157,1.602,158,2.488,159,1.734,160,1.602,161,1.734,162,1.541,163,1.541,164,1.602,165,1.666,166,1.541,167,2.021,168,1.945,169,1.541,170,1.541,171,1.541,172,1.734,173,1.734,1121,3.915,1122,5.728,1123,5.908,1124,5.908,1125,4.506]],["title/classes/Faction.html",[58,0.124,325,1.466]],["body/classes/Faction.html",[3,0.151,4,0.151,5,0.134,7,0.069,8,0.561,10,0.561,11,0.177,12,0.015,13,0.151,14,0.01,15,0.01,26,0.746,31,0.692,33,0.818,34,0.625,35,0.818,37,0.892,38,0.995,39,1.361,43,1.468,47,0.248,58,0.134,102,1.884,110,3.083,124,0.995,146,0.809,175,2.294,179,0.872,180,0.976,181,1.566,241,4.329,320,2.15,325,2.116,352,2.26,494,1.721,556,4.015,559,3.872,560,4.109,561,3.814,563,3.814,564,4.622,571,3.779,572,3.764,573,3.359,574,3.359,575,3.359,581,2.862,583,2.382,584,3.359,932,2.382,1126,3.73,1127,5.721,1128,5.721,1129,5.721,1130,4.622,1131,5.592,1132,5.721,1133,4.292,1134,7.353,1135,5.721,1136,4.292,1137,5.721,1138,4.292,1139,3.73,1140,3.359,1141,2.52,1142,3.083,1143,3.083,1144,3.359,1145,3.083,1146,1.958,1147,4.292,1148,4.292,1149,4.292,1150,4.292,1151,4.292,1152,2.678,1153,4.292,1154,4.292,1155,6.864,1156,5.037]],["title/interfaces/FactionAssignment.html",[0,0.718,1157,2.846]],["body/interfaces/FactionAssignment.html",[0,0.881,2,1.949,3,0.171,4,0.171,5,0.152,7,0.078,8,0.608,10,0.746,11,0.146,12,0.015,13,0.219,14,0.011,15,0.011,16,0.516,24,0.921,38,0.892,39,1.967,43,2.123,44,0.916,47,0.33,48,0.579,55,1.105,56,1.28,57,1.234,58,0.152,61,0.815,131,0.916,146,0.916,175,1.949,179,0.988,180,1.105,181,1.065,202,2.708,266,2.559,325,2.814,480,2.854,499,2.854,539,3.491,600,5.35,614,1.663,615,3.033,616,3.643,627,4.137,636,2.321,637,3.033,1020,3.804,1130,5.343,1152,3.033,1157,5.343,1158,6.465,1159,3.491,1160,4.137,1161,4.224,1162,4.224,1163,4.224,1164,4.224,1165,4.224,1166,3.804,1167,3.804,1168,3.804,1169,4.224,1170,4.224,1171,4.224,1172,4.224]],["title/injectables/FactionRegistryService.html",[16,0.33,480,2.327]],["body/injectables/FactionRegistryService.html",[0,0.701,3,0.136,4,0.136,5,0.121,7,0.062,8,0.522,9,1.272,10,0.644,11,0.176,12,0.015,13,0.188,14,0.009,15,0.009,16,0.443,18,1.018,24,1.155,26,0.695,28,0.573,31,0.673,33,0.727,34,0.507,35,0.727,37,0.665,38,0.857,39,2.084,40,1.376,41,1.224,43,2.086,44,1.299,47,0.309,48,0.461,54,1.895,55,0.879,56,1.018,57,0.981,58,0.121,61,0.648,131,0.728,146,0.728,175,2.136,179,0.786,180,0.879,181,0.847,202,2.661,266,2.035,325,2.827,480,3.129,489,2.576,494,2.445,499,4.049,539,2.775,572,3.753,600,4.773,614,2.359,615,2.411,616,4.435,617,2.957,618,3.827,619,3.648,620,2.805,625,3.024,626,2.145,627,4.066,629,3.024,630,2.775,631,3.024,632,3.024,633,2.775,634,3.024,636,1.845,637,2.411,1020,3.024,1130,3.827,1152,2.411,1157,5.425,1158,4.63,1159,2.775,1160,4.382,1161,5.299,1162,4.63,1163,4.63,1164,4.63,1165,3.358,1166,3.024,1167,3.024,1168,3.024,1169,3.358,1170,3.358,1171,3.358,1172,3.358,1173,3.864,1174,3.864,1175,3.864,1176,3.864,1177,3.864,1178,3.864]],["title/injectables/FactionStateService.html",[16,0.33,1160,2.642]],["body/injectables/FactionStateService.html",[3,0.155,4,0.155,5,0.138,7,0.071,8,0.57,9,1.45,10,0.57,11,0.175,12,0.014,13,0.155,14,0.01,15,0.01,16,0.484,18,1.16,24,1.138,26,0.759,31,0.675,33,0.826,34,0.577,35,0.826,37,0.899,38,0.905,40,1.096,41,0.975,44,1.096,47,0.3,48,0.525,54,2.069,56,1.16,57,1.118,58,0.138,102,1.916,124,0.681,131,0.83,146,0.83,175,2.333,179,0.895,180,1.001,181,1.275,231,3.432,325,2.667,494,2.333,499,3.417,559,3.978,572,3.978,614,1.991,617,3.23,619,3.23,620,3.064,626,3.618,636,2.103,639,2.747,640,4.6,641,4.179,642,4.179,643,4.179,644,4.681,646,3.446,647,4.179,648,3.446,649,3.163,650,3.446,651,3.446,652,3.163,653,3.446,654,3.163,655,3.446,656,3.446,657,3.163,658,3.446,1152,4.326,1159,3.163,1160,3.88,1179,5.819,1180,4.403,1181,4.403,1182,4.403]],["title/classes/GameElement.html",[58,0.124,556,2.086]],["body/classes/GameElement.html",[3,0.152,4,0.152,5,0.135,7,0.07,8,0.564,9,2.267,10,0.424,11,0.169,12,0.015,13,0.152,14,0.01,15,0.01,26,0.75,28,0.642,31,0.673,33,0.685,34,0.479,35,0.685,37,0.717,38,0.843,39,2.048,43,2.21,44,1.084,47,0.28,55,0.984,58,0.135,102,1.894,124,0.889,179,0.879,180,0.984,181,1.747,302,1.6,320,2.167,335,3.759,494,2.306,556,3.028,559,4.072,560,4.64,561,4.308,563,3.835,564,4.945,565,3.835,571,4.586,581,3.835,583,3.586,598,3.386,601,3.759,602,3.759,604,3.386,932,3.192,1140,4.501,1141,3.377,1142,4.131,1143,4.131,1144,4.501,1145,4.131,1146,2.624,1183,4.824,1184,3.759,1185,5.751,1186,4.326,1187,4.326,1188,4.326,1189,4.326,1190,4.326,1191,3.759,1192,4.326,1193,2.884,1194,2.884,1195,2.884,1196,2.884,1197,3.107,1198,5.751,1199,3.759,1200,4.326,1201,3.759,1202,3.759,1203,4.326,1204,4.326,1205,3.107,1206,4.326,1207,4.326,1208,3.759]],["title/injectables/GameElementRegistryService.html",[16,0.33,616,2.327]],["body/injectables/GameElementRegistryService.html",[3,0.141,4,0.141,5,0.125,7,0.064,8,0.534,9,2.043,10,0.608,11,0.17,12,0.015,13,0.141,14,0.009,15,0.009,16,0.454,18,1.052,24,1.129,26,0.711,28,0.593,31,0.649,33,0.739,34,0.516,35,0.739,37,0.68,38,0.87,39,1.967,40,1.256,41,1.117,43,1.367,44,1.388,47,0.312,48,0.476,54,2.37,55,0.908,56,1.052,57,1.014,58,0.125,61,0.67,120,2.001,124,0.618,131,1.45,146,0.753,175,1.602,179,0.812,180,0.908,181,0.875,202,2.708,302,1.478,352,2.104,489,3.634,494,2.887,556,2.104,559,2.87,614,2.566,615,2.492,616,3.201,617,3.444,618,4.456,619,3.997,620,2.87,626,4.271,627,4.137,630,3.915,633,3.915,636,1.908,637,2.492,640,3.201,703,2.664,932,2.218,1166,3.127,1167,3.127,1168,3.127,1197,2.869,1209,5.871,1210,3.995,1211,6.666,1212,5.451,1213,5.451,1214,3.995,1215,3.995,1216,3.995,1217,3.995,1218,3.995,1219,2.869,1220,3.472,1221,3.472,1222,3.995,1223,3.472,1224,3.472,1225,3.472,1226,3.995,1227,3.472,1228,3.127,1229,3.995,1230,3.995]],["title/injectables/GameElementStateService.html",[16,0.33,640,2.327]],["body/injectables/GameElementStateService.html",[3,0.131,4,0.131,5,0.116,7,0.06,8,0.509,9,1.968,10,0.586,11,0.17,12,0.015,13,0.131,14,0.009,15,0.009,16,0.432,18,0.98,24,1.148,26,0.677,28,0.552,31,0.66,33,0.811,34,0.566,35,0.811,37,0.849,38,0.962,39,1.646,40,0.978,41,0.87,44,1.282,47,0.305,48,0.443,54,2.3,55,0.846,56,0.98,57,0.945,58,0.116,61,0.624,102,1.709,120,1.864,124,0.575,131,1.469,146,0.701,179,0.756,180,0.846,181,1.137,231,3.405,276,2.673,302,1.376,352,1.959,494,2.593,556,1.959,559,3.807,614,2.595,617,3.318,619,3.318,620,2.733,626,4.158,636,1.777,637,2.322,639,2.322,640,3.048,641,3.728,642,3.728,643,3.728,644,4.293,647,3.728,649,3.728,652,3.728,654,2.673,657,2.673,703,2.481,932,2.066,1002,3.234,1003,4.035,1005,4.51,1011,1.777,1197,4.645,1209,5.938,1219,2.673,1220,6.408,1221,3.234,1223,3.234,1224,3.234,1225,3.234,1227,3.234,1228,2.913,1231,5.191,1232,3.721,1233,3.234,1234,3.721,1235,5.191,1236,3.721,1237,3.721,1238,3.234,1239,3.721,1240,3.721,1241,3.721,1242,3.721,1243,3.721,1244,3.721,1245,3.721,1246,3.721,1247,3.721,1248,3.721,1249,3.721,1250,3.721]],["title/classes/GameElementStatesFactoryService.html",[58,0.124,1251,2.642]],["body/classes/GameElementStatesFactoryService.html",[3,0.122,4,0.122,5,0.109,7,0.08,8,0.485,9,1.144,10,0.695,11,0.148,12,0.015,13,0.122,14,0.009,15,0.009,16,0.289,24,1.134,26,0.645,28,0.854,31,0.638,33,0.589,34,0.479,35,0.589,37,0.827,38,0.818,44,1.182,47,0.338,58,0.109,61,1.155,120,1.74,121,1.584,124,0.89,131,1.426,178,2.719,179,0.706,180,0.79,181,1.083,185,1.584,195,2.903,227,2.415,231,1.829,268,2.167,271,2.167,272,2.167,274,2.316,301,2.745,302,1.829,304,3.592,308,4.297,310,3.018,311,1.829,312,2.316,320,1.74,322,2.407,330,2.719,345,2.552,346,2.316,347,1.928,348,2.316,349,2.316,424,2.167,425,3.018,426,2.719,427,3.018,496,2.316,497,3.018,498,2.316,509,2.719,523,3.018,558,3.87,566,3.085,840,3.018,937,5.296,938,2.316,1057,2.316,1085,3.018,1130,2.495,1131,3.018,1145,2.495,1193,2.316,1194,2.316,1195,2.316,1196,2.316,1251,3.297,1252,5.771,1253,3.018,1254,4.135,1255,5.757,1256,5.371,1257,3.297,1258,6.273,1259,6.273,1260,6.273,1261,4.945,1262,4.945,1263,3.474,1264,4.297,1265,3.474,1266,2.604,1267,3.474,1268,3.474,1269,3.474,1270,4.945,1271,3.474,1272,2.903,1273,3.474,1274,3.474,1275,3.018,1276,2.495,1277,3.474,1278,2.719,1279,2.719,1280,2.719,1281,2.719,1282,3.474,1283,3.474,1284,3.474,1285,2.316,1286,4.945,1287,3.474,1288,3.474,1289,3.474,1290,3.474,1291,3.474,1292,3.474,1293,3.018,1294,3.474,1295,3.474,1296,4.945,1297,3.474,1298,3.474,1299,3.474,1300,3.474,1301,3.018,1302,3.474,1303,3.474,1304,3.474,1305,3.474,1306,5.757,1307,3.474,1308,3.474,1309,3.474,1310,3.474,1311,3.474,1312,3.474]],["title/injectables/GameManagementClientService.html",[16,0.33,1313,2.642]],["body/injectables/GameManagementClientService.html",[3,0.121,4,0.121,5,0.107,7,0.055,10,0.747,11,0.17,12,0.015,13,0.121,14,0.009,15,0.009,16,0.408,18,0.903,24,0.727,26,0.639,28,0.727,31,0.657,33,0.861,34,0.601,35,0.861,37,0.917,47,0.306,48,0.409,55,0.78,56,0.903,57,0.871,58,0.107,61,0.821,95,0.972,124,1.02,146,1.293,179,1.162,180,1.114,181,0.751,614,2.582,662,3.719,668,4.278,684,2.879,685,4.169,720,4.08,738,2.463,820,3.519,859,4.738,874,2.463,968,2.98,984,2.58,1146,3.13,1313,3.267,1314,6.558,1315,5.032,1316,3.835,1317,4.258,1318,5.42,1319,4.9,1320,5.42,1321,4.9,1322,4.9,1323,4.9,1324,3.43,1325,6.237,1326,3.43,1327,4.9,1328,3.835,1329,3.43,1330,4.9,1331,3.43,1332,4.258,1333,3.43,1334,3.43,1335,4.9,1336,3.43,1337,3.43,1338,4.9,1339,3.43,1340,4.9,1341,3.43,1342,4.9,1343,3.43,1344,3.43,1345,2.684,1346,4.9,1347,5.717,1348,4.258,1349,3.43,1350,3.43,1351,4.9,1352,2.98,1353,3.43,1354,3.43,1355,3.43,1356,3.43,1357,3.43,1358,3.43,1359,3.43,1360,3.43,1361,3.43,1362,3.43,1363,3.43]],["title/injectables/GameReadyService.html",[16,0.33,979,2.846]],["body/injectables/GameReadyService.html",[1,0.999,3,0.134,4,0.134,5,0.119,7,0.061,8,0.516,11,0.154,12,0.015,13,0.134,14,0.009,15,0.009,16,0.438,17,5.22,18,0.999,20,2.97,21,1.298,23,4.348,24,1.197,25,4.337,26,0.686,27,5.667,28,0.78,31,0.64,33,0.452,34,0.316,35,0.452,37,0.753,38,0.686,39,2.304,40,1.138,41,1.012,42,3.778,43,2.066,44,1.229,45,5.104,47,0.315,48,0.452,51,3.297,52,1.812,53,2.77,54,1.349,55,0.863,56,0.999,57,0.963,58,0.119,60,3.297,61,1.148,64,3.297,67,3.297,68,2.106,69,3.297,70,2.53,71,3.297,72,3.297,73,3.297,74,3.297,75,3.297,124,0.813,131,0.715,141,1.116,153,1.159,238,4.846,264,3.089,267,3.297,277,3.297,405,4.534,406,4.034,431,2.97,433,2.53,636,1.812,815,5.248,867,4.727,901,3.297,902,3.297,979,3.778,1003,4.422,1011,1.812,1252,5.799,1364,3.297,1365,6.522,1366,6.522,1367,3.794,1368,5.261,1369,3.794,1370,3.794,1371,3.794,1372,3.794,1373,3.794,1374,3.794,1375,3.297,1376,3.794,1377,3.794,1378,4.118,1379,3.794,1380,3.794,1381,3.794,1382,3.794,1383,3.794,1384,3.794,1385,3.794,1386,3.794,1387,3.794,1388,3.794,1389,3.794,1390,3.794,1391,3.794,1392,3.794]],["title/injectables/GameService.html",[16,0.33,835,2.472]],["body/injectables/GameService.html",[3,0.125,4,0.125,5,0.111,7,0.057,9,1.168,10,0.752,11,0.158,12,0.015,13,0.125,14,0.009,15,0.009,16,0.418,18,0.934,24,1.058,26,0.655,28,0.744,31,0.611,33,0.796,34,0.556,35,0.796,37,0.833,47,0.337,48,0.423,56,0.934,57,0.9,58,0.111,61,1.061,124,0.548,146,1.344,150,1.005,179,0.721,180,0.806,181,0.777,227,1.365,237,4.188,265,2.082,266,3.066,325,1.312,345,1.365,480,4.188,481,4.449,499,2.082,500,2.212,551,1.548,614,2.44,635,2.776,662,3.755,668,4.126,685,3.955,695,2.364,720,3.85,820,3.604,832,3.313,835,3.131,961,4.36,976,4.36,982,4.36,984,3.901,1011,1.693,1146,1.618,1159,2.547,1266,3.334,1281,2.776,1285,4.755,1313,4.755,1315,2.364,1316,3.927,1318,5.502,1328,3.927,1345,2.776,1352,4.36,1393,3.082,1394,4.36,1395,3.546,1396,3.546,1397,3.546,1398,5.018,1399,3.546,1400,3.546,1401,3.546,1402,4.36,1403,3.546,1404,5.018,1405,3.082,1406,3.546,1407,2.776,1408,3.082,1409,2.776,1410,3.546,1411,3.082,1412,3.546,1413,3.546,1414,2.776,1415,3.546,1416,3.546,1417,3.546,1418,3.546,1419,3.546,1420,3.546,1421,3.546,1422,3.546,1423,3.546,1424,3.546,1425,3.546,1426,3.546,1427,3.546,1428,3.546,1429,3.546,1430,3.546]],["title/injectables/GameStateClientService.html",[16,0.33,1431,2.846]],["body/injectables/GameStateClientService.html",[3,0.193,4,0.193,5,0.171,7,0.088,11,0.129,12,0.014,13,0.193,14,0.012,15,0.012,16,0.556,18,1.44,26,0.871,31,0.588,33,0.652,34,0.455,35,0.652,37,0.682,38,0.871,39,2.117,47,0.312,48,0.652,55,1.243,56,1.44,57,1.388,58,0.171,102,2.199,124,0.845,179,1.112,180,1.243,181,1.645,614,2.467,738,3.927,1011,3.443,1141,4.409,1431,4.796,1432,6.678,1433,6.678,1434,5.877,1435,5.468,1436,5.468,1437,5.468,1438,5.468,1439,5.468]],["title/injectables/GameStateInitializationService.html",[16,0.33,1285,2.642]],["body/injectables/GameStateInitializationService.html",[3,0.159,4,0.159,5,0.141,7,0.073,8,0.579,10,0.764,11,0.155,12,0.015,13,0.159,14,0.01,15,0.01,16,0.492,18,1.187,24,0.978,26,0.771,28,0.876,31,0.58,33,0.704,34,0.492,35,0.834,37,0.562,44,1.242,47,0.315,48,0.537,54,2.651,56,1.187,57,1.144,58,0.141,61,1.173,123,2.255,124,0.697,131,0.849,179,0.916,180,1.024,181,1.633,302,1.666,322,2.756,614,2.393,937,3.236,984,3.471,1011,3.341,1146,3.314,1219,3.236,1251,3.939,1257,4.395,1266,3.684,1278,3.527,1281,3.527,1285,3.939,1407,5.159,1408,3.915,1414,3.527,1440,3.527,1441,6.592,1442,4.506,1443,5.908,1444,6.592,1445,5.908,1446,4.506,1447,4.506,1448,3.527,1449,3.236,1450,4.506,1451,4.506,1452,4.624,1453,4.506,1454,4.506,1455,3.527,1456,6.592,1457,4.506,1458,4.506,1459,4.506,1460,4.506,1461,4.506,1462,3.915]],["title/injectables/GameStatePatchService.html",[16,0.33,1463,2.846]],["body/injectables/GameStatePatchService.html",[3,0.171,4,0.171,5,0.152,7,0.078,11,0.146,12,0.015,13,0.171,14,0.011,15,0.011,16,0.515,18,1.276,26,0.808,31,0.545,33,0.738,34,0.515,35,0.738,37,0.772,47,0.296,48,0.577,56,1.276,57,1.23,58,0.152,61,0.812,106,2.426,124,0.957,145,2.201,179,0.985,180,1.101,181,1.575,583,4.125,614,2.334,727,3.022,892,3.022,984,2.55,1011,3.259,1141,4.007,1146,3.693,1193,3.229,1194,3.229,1195,3.229,1196,4.128,1434,5.949,1463,4.446,1464,4.209,1465,3.229,1466,5.38,1467,6.191,1468,6.191,1469,6.191,1470,6.191,1471,4.843,1472,6.191,1473,6.191,1474,4.843,1475,6.191,1476,4.843,1477,4.843,1478,3.791,1479,4.843,1480,4.843,1481,6.191,1482,4.843,1483,4.843,1484,4.843,1485,4.843,1486,4.843,1487,4.843]],["title/injectables/GameStateService.html",[16,0.33,1003,2.472]],["body/injectables/GameStateService.html",[0,0.818,3,0.108,4,0.108,5,0.096,7,0.049,10,0.3,11,0.165,12,0.015,13,0.108,14,0.008,15,0.008,16,0.376,18,0.807,24,0.979,26,0.589,28,0.67,31,0.679,33,0.834,34,0.583,35,0.834,37,0.919,38,1.034,39,1.875,44,0.85,47,0.286,48,0.365,52,1.462,55,0.696,56,0.807,57,0.778,58,0.096,61,0.513,102,1.486,124,0.914,146,1.01,179,0.622,180,0.696,181,1.534,227,2.063,302,2.187,306,3.532,311,1.612,325,1.982,345,2.063,566,4.256,583,3.662,614,2.653,639,1.91,695,2.042,785,3.009,1003,3.69,1011,3.703,1141,3.473,1146,2.059,1152,4.256,1233,2.661,1238,2.661,1266,2.822,1272,4.006,1431,4.248,1434,4.629,1463,4.248,1465,2.042,1488,3.922,1489,4.513,1490,4.513,1491,4.513,1492,4.513,1493,3.922,1494,4.513,1495,4.513,1496,4.513,1497,5.139,1498,3.922,1499,3.922,1500,3.922,1501,5.914,1502,5.139,1503,3.922,1504,3.922,1505,3.922,1506,5.139,1507,3.062,1508,4.248,1509,5.36,1510,5.36,1511,4.513,1512,4.513,1513,3.062,1514,3.922,1515,3.062,1516,3.922,1517,3.062,1518,3.922,1519,3.062,1520,3.062,1521,5.479,1522,4.657,1523,4.513,1524,4.513,1525,4.513,1526,3.062,1527,3.922,1528,3.062,1529,3.922,1530,3.062,1531,3.922,1532,3.062,1533,3.062,1534,2.661,1535,3.062,1536,2.661,1537,3.062,1538,2.661,1539,3.062,1540,2.661,1541,3.062,1542,3.062,1543,3.062,1544,3.062,1545,3.062,1546,3.062,1547,3.062,1548,3.062,1549,5.36,1550,2.661,1551,3.062,1552,3.062,1553,3.062,1554,3.062,1555,3.062,1556,3.062,1557,2.661,1558,3.062,1559,3.062,1560,3.062,1561,3.062,1562,3.062,1563,3.062,1564,3.062,1565,3.062,1566,3.062,1567,3.062]],["title/injectables/GameStateStoreService.html",[16,0.33,1508,2.846]],["body/injectables/GameStateStoreService.html",[3,0.061,4,0.061,5,0.054,7,0.077,8,0.284,10,0.171,11,0.16,12,0.015,13,0.061,14,0.005,15,0.005,16,0.241,18,0.458,24,1.087,26,0.565,28,0.551,31,0.649,33,0.77,34,0.526,35,0.753,37,0.836,38,0.967,39,1.952,40,0.545,41,0.725,43,1.271,44,1.313,47,0.208,48,0.207,54,0.619,55,0.396,56,0.458,57,0.442,58,0.054,61,0.725,91,0.573,102,0.953,123,1.968,124,0.923,131,0.815,179,0.354,180,0.396,181,1.689,202,0.76,227,1.43,282,1.805,302,2.128,306,1.362,311,1.524,325,1.374,345,2.115,372,2.078,494,1.489,507,2.515,566,3.428,571,1.699,579,2.168,583,3.773,608,1.805,614,2.536,620,3.144,696,2.515,892,2.7,926,2.515,932,2.402,938,1.929,1011,3.54,1066,2.265,1141,1.699,1142,2.078,1143,2.078,1146,3.638,1152,3.428,1193,1.161,1194,1.161,1195,1.161,1196,1.161,1197,3.946,1205,3.108,1208,2.515,1219,1.25,1228,3.387,1256,2.668,1266,1.956,1272,3.226,1278,1.362,1293,2.515,1315,1.929,1465,2.476,1466,2.515,1488,2.515,1493,2.515,1497,4.505,1498,2.515,1499,2.515,1500,2.515,1502,4.505,1503,2.515,1504,2.515,1505,3.761,1506,4.505,1508,4.132,1514,2.515,1516,2.515,1518,2.515,1521,5.615,1522,3.761,1527,2.515,1529,2.515,1531,2.515,1534,1.513,1536,1.513,1538,1.513,1540,1.513,1550,1.513,1557,3.761,1568,1.513,1569,2.894,1570,2.894,1571,2.894,1572,2.894,1573,2.515,1574,2.894,1575,2.894,1576,2.894,1577,5.753,1578,2.894,1579,4.328,1580,2.894,1581,2.894,1582,2.894,1583,2.894,1584,4.328,1585,5.184,1586,3.108,1587,2.894,1588,2.894,1589,2.894,1590,4.532,1591,2.894,1592,6.587,1593,2.894,1594,2.894,1595,3.76,1596,2.515,1597,2.894,1598,5.753,1599,4.328,1600,2.894,1601,2.894,1602,4.731,1603,2.894,1604,2.894,1605,4.328,1606,3.108,1607,3.761,1608,3.456,1609,2.894,1610,2.894,1611,2.515,1612,2.894,1613,3.228,1614,2.894,1615,4.328,1616,2.894,1617,4.328,1618,2.279,1619,2.515,1620,3.714,1621,3.714,1622,3.714,1623,2.894,1624,2.894,1625,3.714,1626,3.714,1627,3.714,1628,2.894,1629,2.894,1630,1.741,1631,1.741,1632,2.894,1633,1.741,1634,1.022,1635,1.741,1636,1.741,1637,1.741,1638,1.741,1639,6.32,1640,1.741,1641,7.108,1642,2.894,1643,2.894,1644,4.328,1645,1.741,1646,1.741,1647,1.741,1648,2.894,1649,1.741,1650,1.741,1651,1.741,1652,1.741,1653,4.804,1654,2.894,1655,2.894,1656,1.741,1657,2.894,1658,1.741,1659,1.741,1660,1.741,1661,1.741,1662,1.741,1663,1.741,1664,1.741,1665,1.741,1666,1.741,1667,1.741,1668,1.25,1669,1.741,1670,1.741,1671,1.741,1672,1.741,1673,1.741,1674,2.894,1675,5.971,1676,1.741,1677,2.515,1678,1.741,1679,2.894,1680,1.741,1681,2.894,1682,2.894,1683,2.894,1684,2.894,1685,1.741,1686,2.894,1687,2.894,1688,1.741,1689,1.741,1690,1.741,1691,1.741,1692,2.894,1693,1.741,1694,1.741,1695,1.741,1696,1.741,1697,1.741,1698,1.741,1699,1.741,1700,1.513,1701,1.741,1702,1.741,1703,1.741,1704,1.741,1705,1.741,1706,3.714,1707,1.741,1708,1.741,1709,1.741,1710,1.741,1711,1.741,1712,1.741,1713,1.741,1714,1.741,1715,1.741]],["title/interfaces/InitialGameElementStatesFactory.html",[0,0.718,1254,2.846]],["body/interfaces/InitialGameElementStatesFactory.html",[0,0.931,2,2.06,3,0.181,4,0.181,5,0.161,7,0.083,10,0.741,11,0.152,12,0.015,13,0.267,14,0.011,15,0.011,26,0.838,31,0.452,33,0.612,34,0.427,35,0.612,37,0.641,44,0.968,47,0.223,61,1.077,124,0.794,146,1.211,179,1.044,180,1.168,181,1.408,227,1.977,231,2.705,301,3.567,325,1.9,345,1.977,608,3.205,734,4.464,984,3.692,1146,3.198,1183,4.009,1254,5.036,1256,5.277,1257,4.284,1264,5.583,1266,3.983,1276,5.036,1449,3.689,1455,4.02,1462,4.464,1478,5.029,1608,3.425,1634,3.016,1668,3.689,1716,3.425,1717,5.137,1718,5.137,1719,5.137,1720,5.137,1721,4.464,1722,5.583]],["title/components/LobbyPageComponent.html",[79,0.718,160,1.409]],["body/components/LobbyPageComponent.html",[1,1.345,3,0.1,4,0.1,5,0.088,7,0.082,8,0.416,9,1.399,10,0.698,11,0.144,12,0.015,13,0.1,14,0.007,15,0.007,21,0.966,24,0.758,26,0.554,28,0.63,31,0.616,33,0.677,34,0.533,35,0.677,37,0.76,38,0.554,40,0.962,41,0.856,47,0.313,48,0.336,49,1.044,58,0.088,79,0.926,80,1.004,81,1.571,82,1.087,83,1.087,84,1.087,88,1.087,91,2.537,92,2.636,93,1.044,94,1.453,95,1.205,96,1.453,98,1.453,122,1.453,124,0.437,129,1.087,130,1.635,131,0.962,132,1.087,133,2.187,134,1.087,135,1.087,136,1.004,137,1.635,138,1.004,139,1.635,140,1.004,141,0.831,142,1.004,143,1.087,144,1.004,145,1.004,146,1.252,147,2.346,148,1.004,149,1.004,150,0.801,151,1.635,152,1.004,153,0.862,154,0.966,155,1.004,156,1.087,157,1.004,158,1.004,159,1.087,160,2.02,161,2.557,162,0.966,163,1.747,164,1.004,165,1.044,166,0.966,167,1.453,168,1.399,169,0.966,170,0.966,171,1.747,172,1.087,173,1.087,179,0.864,180,0.642,206,2.558,223,3.051,322,2.135,406,3.687,433,1.882,551,1.232,668,3.86,685,3.599,720,3.154,790,1.414,798,2.689,803,4.438,805,4.438,806,3.997,807,2.237,808,2.237,820,4.081,832,3.172,835,3.994,851,2.453,859,4.598,873,3.325,874,2.028,875,2.21,881,1.487,884,2.453,885,2.453,886,2.21,908,3.692,984,2.992,1266,2.237,1316,3.325,1328,3.325,1378,3.997,1394,3.692,1402,3.692,1411,4.938,1611,3.692,1723,6.191,1724,6.191,1725,5.107,1726,5.107,1727,5.107,1728,5.107,1729,5.107,1730,5.107,1731,5.107,1732,5.107,1733,5.107,1734,5.107,1735,5.107,1736,5.107,1737,4.438,1738,5.107,1739,5.682,1740,4.248,1741,2.823,1742,4.248,1743,2.823,1744,2.823,1745,2.823,1746,5.682,1747,2.823,1748,4.248,1749,2.823,1750,2.823,1751,2.823,1752,2.823,1753,2.823,1754,4.248,1755,2.823,1756,2.823,1757,6.093,1758,2.823,1759,2.823,1760,2.823,1761,2.823,1762,2.823,1763,2.823,1764,2.823,1765,4.248,1766,4.248,1767,4.248,1768,4.248,1769,4.248]],["title/injectables/LocalStorageService.html",[16,0.33,674,2.846]],["body/injectables/LocalStorageService.html",[3,0.183,4,0.183,5,0.163,7,0.084,10,0.803,11,0.166,12,0.014,13,0.183,14,0.011,15,0.011,16,0.538,18,1.369,26,0.844,31,0.621,33,0.84,34,0.586,35,0.84,37,0.879,38,0.962,41,1.236,47,0.225,48,0.619,56,1.369,57,1.319,58,0.163,123,2.214,124,0.803,674,4.648,1590,4.699,1770,6.41,1771,4.515,1772,6.471,1773,6.471,1774,6.471,1775,6.471,1776,5.196,1777,6.471,1778,5.196,1779,6.471,1780,5.196,1781,5.196,1782,5.196,1783,5.196]],["title/interfaces/LoginFormData.html",[0,0.718,1784,2.846]],["body/interfaces/LoginFormData.html",[0,0.854,2,1.888,3,0.166,4,0.166,5,0.147,7,0.076,8,0.596,10,0.739,11,0.143,12,0.015,13,0.166,14,0.011,15,0.011,24,0.999,28,0.699,38,0.878,47,0.327,48,0.561,58,0.147,61,0.789,79,1.102,89,2.055,90,2.055,91,1.55,92,1.611,94,1.611,95,1.335,96,1.611,98,1.611,114,2.055,122,1.611,162,1.611,163,2.303,171,1.611,198,3.201,206,3.045,208,2.479,551,2.055,662,3.545,682,4.43,684,3.292,790,2.359,798,3.201,802,3.57,807,2.479,808,2.479,831,3.954,832,3.215,879,2.614,881,2.479,963,3.382,1618,2.479,1784,4.836,1785,3.686,1786,3.686,1787,3.793,1788,2.938,1789,5.283,1790,3.686,1791,3.793,1792,4.092,1793,2.765,1794,4.092,1795,2.938,1796,3.793,1797,2.938,1798,4.092,1799,4.092,1800,4.092,1801,3.382,1802,2.938,1803,4.092,1804,2.938,1805,2.938,1806,2.938,1807,2.938]],["title/components/LoginPageComponent.html",[79,0.718,162,1.356]],["body/components/LoginPageComponent.html",[0,0.632,1,1.52,3,0.123,4,0.123,5,0.109,7,0.056,8,0.486,10,0.486,11,0.117,12,0.015,13,0.123,14,0.009,15,0.009,21,1.193,24,0.856,26,0.647,28,0.736,31,0.553,33,0.416,34,0.48,35,0.416,37,0.435,38,0.82,40,0.657,41,0.584,47,0.299,48,0.416,49,1.29,58,0.109,61,0.584,79,1.046,80,1.24,81,1.834,82,1.342,83,1.342,84,1.342,88,1.342,89,2.164,90,2.164,91,2.612,92,2.714,93,1.29,94,1.696,95,1.406,96,1.696,98,1.696,114,1.522,122,1.696,129,1.342,130,1.909,131,1.087,132,1.342,133,2.419,134,1.342,135,1.342,136,1.24,137,1.909,138,1.24,139,1.909,140,1.24,141,1.026,142,1.24,143,1.342,144,1.24,145,1.24,146,0.657,147,2.556,148,1.24,149,1.24,150,0.989,151,1.909,152,1.24,153,1.065,154,1.193,155,1.24,156,1.342,157,1.24,158,1.24,159,1.342,160,1.24,161,1.342,162,2.15,163,2.525,164,1.24,165,1.29,166,1.193,167,2.15,168,2.069,169,1.974,170,1.193,171,1.974,172,1.342,173,1.342,198,3.038,206,2.89,208,1.836,551,1.522,662,3.737,682,3.898,684,2.897,790,1.747,798,3.038,802,3.388,807,2.611,808,2.611,831,4.051,832,3.389,879,1.936,881,1.836,963,2.504,1618,1.836,1784,3.561,1785,5.196,1786,5.196,1787,3.6,1788,2.175,1789,5.014,1790,2.729,1791,3.6,1792,5.014,1793,4.167,1794,3.03,1795,2.175,1796,3.093,1797,3.92,1798,3.03,1799,3.03,1800,3.03,1801,2.504,1802,2.175,1803,3.03,1804,2.175,1805,2.175,1806,2.175,1807,2.175,1808,2.729,1809,3.881,1810,3.03,1811,3.03,1812,4.958]],["title/components/LogoutPageComponent.html",[79,0.718,164,1.409]],["body/components/LogoutPageComponent.html",[1,1.681,3,0.149,4,0.149,5,0.132,7,0.068,11,0.099,12,0.014,13,0.149,14,0.01,15,0.01,21,1.443,24,0.839,26,0.738,28,0.839,31,0.498,33,0.503,34,0.531,35,0.503,37,0.526,38,0.738,47,0.276,48,0.503,49,1.56,58,0.132,79,1.157,80,1.5,81,2.092,82,1.624,83,1.624,84,1.624,88,1.624,91,2.671,92,2.775,93,1.56,94,1.935,95,1.604,96,1.935,98,1.935,122,1.443,129,1.624,130,2.177,131,1.202,132,1.624,133,2.624,134,1.624,135,1.624,136,1.5,137,2.177,138,1.5,139,2.177,140,1.5,141,1.241,142,1.5,143,1.624,144,1.5,145,1.5,146,0.795,147,2.736,148,1.5,149,1.5,150,1.196,151,2.177,152,1.5,153,1.288,154,1.443,155,1.5,156,1.624,157,1.5,158,1.5,159,1.624,160,1.5,161,1.624,162,1.443,163,1.443,164,2.424,165,2.845,166,1.443,167,1.935,168,1.862,169,1.443,170,1.443,171,2.432,172,1.624,173,1.624,195,3.321,196,3.98,203,4.253,551,1.841,662,3.853,790,2.113,807,2.978,808,2.978,832,3.569,1790,3.302,1813,5.544,1814,5.544,1815,3.666,1816,4.219,1817,4.219,1818,4.219,1819,3.302,1820,5.656]],["title/classes/Pile.html",[58,0.124,345,1.525]],["body/classes/Pile.html",[3,0.091,4,0.091,5,0.081,7,0.042,8,0.389,10,0.389,11,0.167,12,0.015,13,0.14,14,0.007,15,0.007,24,1.066,26,0.518,28,0.383,31,0.664,33,0.647,34,0.452,35,0.647,37,0.868,38,0.84,39,1.857,40,0.486,41,0.665,43,1.856,44,0.486,47,0.235,55,0.587,58,0.124,59,1.516,61,1.036,102,1.307,103,2.683,123,2.381,124,1.054,127,3.106,146,0.486,153,1.212,154,1.856,175,1.591,176,3.751,179,0.525,180,0.587,181,1.411,241,3.931,301,3.69,320,1.293,322,2.585,331,1.516,345,3.031,352,1.359,424,2.476,494,1.035,556,3.5,559,3.256,560,2.85,561,2.646,563,2.646,564,3.472,565,2.646,571,3.903,572,3.084,573,2.021,574,2.021,575,2.021,579,3.547,581,1.721,583,1.433,584,2.021,586,2.021,608,1.611,870,4.774,892,4.018,913,3.106,932,1.433,938,2.646,1083,3.106,1084,4.247,1092,4.84,1093,3.784,1095,6.162,1102,2.021,1139,2.243,1140,2.021,1141,1.516,1142,1.854,1143,1.854,1144,2.021,1145,1.854,1146,1.178,1156,2.021,1205,3.897,1257,2.646,1272,3.186,1465,3.618,1586,3.472,1590,3.618,1595,3.106,1602,2.85,1606,4.206,1608,2.646,1618,2.09,1634,2.33,1821,2.021,1822,4.715,1823,4.201,1824,5.284,1825,4.715,1826,3.449,1827,5.089,1828,3.969,1829,4.201,1830,3.449,1831,3.449,1832,3.449,1833,3.449,1834,3.449,1835,2.582,1836,2.582,1837,2.582,1838,2.582,1839,4.201,1840,2.582,1841,3.449,1842,4.247,1843,4.247,1844,3.449,1845,3.449,1846,3.449,1847,2.582,1848,2.582,1849,3.449,1850,2.582,1851,3.449,1852,2.243,1853,2.021,1854,2.243,1855,2.243,1856,2.243,1857,2.243,1858,2.243,1859,2.243,1860,2.243,1861,3.449,1862,3.449,1863,2.243,1864,2.243,1865,2.243,1866,2.243,1867,2.243,1868,2.021,1869,3.449,1870,3.449,1871,2.243,1872,3.449,1873,3.449,1874,2.243,1875,2.243,1876,3.449,1877,3.449,1878,2.243,1879,2.021,1880,3.449,1881,3.449,1882,3.449,1883,2.243,1884,2.243]],["title/classes/PileAdapter.html",[58,0.124,331,2.327]],["body/classes/PileAdapter.html",[3,0.114,4,0.114,5,0.101,7,0.052,10,0.317,11,0.13,12,0.015,13,0.166,14,0.008,15,0.008,24,0.9,26,0.613,28,0.48,31,0.611,33,0.659,34,0.46,35,0.659,37,0.804,38,0.792,39,1.753,40,0.609,41,0.787,43,1.607,44,0.609,47,0.263,55,0.735,58,0.147,59,1.899,61,1.127,102,1.546,103,1.795,123,2.432,124,1.12,127,3.676,146,0.609,153,0.987,154,1.607,175,1.297,176,3.687,179,0.657,180,0.735,181,1.029,241,3.852,301,3.946,320,1.62,322,1.964,331,2.758,345,2.992,352,1.703,424,2.93,556,2.473,565,2.156,571,4.174,579,3.229,586,2.531,608,2.017,870,5.105,892,4.196,913,2.531,938,2.156,1083,2.531,1084,4.329,1092,4.75,1093,4.329,1095,6.047,1102,3.676,1156,2.531,1205,4.359,1257,2.156,1272,2.758,1586,2.322,1590,3.131,1595,2.531,1602,2.322,1606,3.373,1608,2.156,1618,1.703,1634,1.899,1821,2.531,1822,4.081,1823,2.81,1824,4.984,1825,2.81,1826,4.081,1827,5.602,1829,2.81,1830,2.81,1831,2.81,1832,2.81,1833,2.81,1834,2.81,1839,4.806,1841,2.81,1842,3.676,1843,3.676,1844,2.81,1845,2.81,1846,2.81,1849,2.81,1851,2.81,1852,2.81,1853,2.531,1854,2.81,1855,2.81,1856,2.81,1857,2.81,1858,2.81,1859,2.81,1860,2.81,1861,4.081,1862,4.081,1863,2.81,1864,2.81,1865,2.81,1866,2.81,1867,2.81,1868,2.531,1869,4.081,1870,4.081,1871,2.81,1872,4.081,1873,4.081,1874,2.81,1875,2.81,1876,4.081,1877,4.081,1878,2.81,1879,2.531,1880,4.081,1881,4.081,1882,4.081,1883,2.81,1884,2.81,1885,3.234,1886,3.234,1887,3.234,1888,3.234,1889,3.234,1890,3.234,1891,3.234]],["title/interfaces/PileConfig.html",[0,0.718,1892,3.101]],["body/interfaces/PileConfig.html",[0,0.946,2,2.091,3,0.184,4,0.184,5,0.163,7,0.084,8,0.636,10,0.759,11,0.153,12,0.015,13,0.229,14,0.011,15,0.011,44,0.983,47,0.281,54,1.855,61,0.874,101,3.848,150,2.285,496,3.478,1057,3.478,1058,4.532,1059,4.082,1060,4.082,1064,4.082,1068,4.082,1071,4.082,1074,4.082,1077,4.082,1104,4.082,1892,5.077,1893,4.082,1894,4.082,1895,5.216,1896,4.532,1897,4.532,1898,4.532,1899,4.532,1900,4.532,1901,4.532,1902,4.532,1903,4.532,1904,4.532,1905,4.532,1906,4.532,1907,4.532]],["title/injectables/PileRegistryService.html",[16,0.33,481,2.472]],["body/injectables/PileRegistryService.html",[3,0.162,4,0.162,5,0.144,7,0.074,8,0.587,9,1.514,10,0.587,11,0.177,12,0.015,13,0.162,14,0.01,15,0.01,16,0.498,18,1.211,24,1.112,26,0.781,28,0.682,31,0.672,33,0.793,34,0.554,35,0.793,37,0.747,38,0.6,39,1.458,40,1.328,41,1.182,44,1.254,47,0.317,48,0.548,54,2.129,56,1.211,57,1.167,58,0.144,131,0.866,146,0.866,175,2.4,179,0.935,180,1.045,181,1.007,202,2.006,266,2.421,345,2.304,481,3.735,489,3.065,494,2.669,500,3.735,572,3.947,614,2.048,615,2.868,616,4.594,617,3.323,618,4.299,619,3.914,620,3.152,623,3.995,625,3.598,626,4.058,627,3.065,628,3.995,629,3.598,630,3.302,631,3.598,632,3.598,633,3.302,634,3.598,636,2.195,637,2.868,1272,2.699,1409,3.598,1908,4.597,1909,5.064,1910,5.986,1911,4.597]],["title/injectables/PileStateService.html",[16,0.33,1909,2.846]],["body/injectables/PileStateService.html",[3,0.155,4,0.155,5,0.138,7,0.071,8,0.57,9,1.45,10,0.57,11,0.175,12,0.014,13,0.155,14,0.01,15,0.01,16,0.484,18,1.16,24,1.138,26,0.759,31,0.675,33,0.826,34,0.577,35,0.826,37,0.899,38,0.905,40,1.096,41,0.975,44,1.096,47,0.3,48,0.525,54,2.069,56,1.16,57,1.118,58,0.138,102,1.916,124,0.681,131,0.83,146,0.83,175,2.333,179,0.895,180,1.001,181,1.275,231,3.432,345,2.775,494,2.333,500,3.631,559,3.978,572,3.978,614,1.991,617,3.23,619,3.23,620,3.064,626,3.618,636,2.103,639,2.747,640,4.6,641,4.179,642,4.179,643,4.179,644,4.681,646,3.446,647,4.179,648,3.446,649,3.163,650,3.446,651,3.446,652,3.163,653,3.446,654,3.163,655,3.446,656,3.446,657,3.163,658,3.446,1272,4.071,1409,3.446,1909,4.179,1912,5.819,1913,4.403,1914,4.403,1915,4.403]],["title/interfaces/PlayerAuthData.html",[0,0.718,670,2.642]],["body/interfaces/PlayerAuthData.html",[0,1.053,2,2.329,3,0.205,4,0.205,5,0.182,7,0.093,8,0.679,10,0.798,11,0.181,12,0.014,13,0.205,14,0.012,15,0.012,241,4.108,670,4.617,684,3.344,714,6.659,716,6.659,718,6.659,1916,5.046]],["title/injectables/PlayerService.html",[16,0.33,406,2.2]],["body/injectables/PlayerService.html",[3,0.14,4,0.14,5,0.125,7,0.064,8,0.533,10,0.745,11,0.17,12,0.015,13,0.14,14,0.009,15,0.009,16,0.453,18,1.049,24,1.034,26,0.71,28,0.807,31,0.648,33,0.793,34,0.554,35,0.793,37,0.773,40,1.167,41,1.038,43,2.119,44,1.025,47,0.312,48,0.475,55,0.906,56,1.049,57,1.011,58,0.125,61,0.668,106,3.491,124,0.616,146,0.751,179,0.81,273,1.902,302,1.473,406,3.02,614,2.564,662,3.788,664,3.461,668,4.003,684,2.905,685,3.788,695,2.656,703,2.656,720,3.439,785,2.656,818,4.727,859,4.782,874,2.861,1313,4.91,1315,2.656,1317,4.727,1320,3.461,1332,4.727,1345,3.118,1348,3.461,1375,5.384,1378,5.631,1815,3.461,1868,3.118,1917,3.461,1918,5.44,1919,5.44,1920,5.44,1921,3.983,1922,3.983,1923,5.44,1924,3.983,1925,3.983,1926,5.44,1927,5.44,1928,3.983,1929,3.983,1930,3.983,1931,3.983,1932,5.44,1933,6.658,1934,3.983,1935,3.983,1936,3.983,1937,3.983,1938,3.983,1939,5.44,1940,3.983,1941,3.983,1942,5.44]],["title/interfaces/SignUpConfirmFormData.html",[0,0.718,1943,2.846]],["body/interfaces/SignUpConfirmFormData.html",[0,0.838,2,1.853,3,0.163,4,0.163,5,0.145,7,0.074,8,0.589,10,0.736,11,0.142,12,0.015,13,0.163,14,0.01,15,0.01,24,0.99,28,0.686,38,0.87,47,0.325,48,0.551,58,0.145,61,0.774,79,1.089,89,2.017,90,2.017,91,1.521,92,1.581,94,1.581,95,1.31,96,1.581,98,1.581,114,2.017,122,1.581,166,1.581,167,2.283,168,2.471,169,2.505,171,1.581,198,3.162,206,3.008,208,2.433,551,2.017,684,3.276,747,5.391,790,2.314,798,3.162,802,3.527,807,2.433,808,2.433,831,3.918,832,3.186,879,2.565,881,2.433,1618,2.433,1787,3.747,1788,2.883,1791,3.747,1793,2.713,1795,2.883,1796,3.747,1797,2.883,1802,2.883,1804,2.883,1805,2.883,1806,2.883,1807,2.883,1819,3.617,1943,4.792,1944,3.081,1945,3.081,1946,3.918,1947,3.319,1948,3.319,1949,4.015,1950,4.015,1951,4.015,1952,4.015,1953,4.015,1954,4.015,1955,3.319,1956,4.015]],["title/components/SignUpConfirmPageComponent.html",[79,0.718,166,1.356]],["body/components/SignUpConfirmPageComponent.html",[0,0.609,1,1.488,3,0.118,4,0.118,5,0.105,7,0.054,8,0.473,10,0.473,11,0.114,12,0.015,13,0.118,14,0.008,15,0.008,21,1.149,24,0.838,26,0.63,28,0.716,31,0.544,33,0.4,34,0.47,35,0.4,37,0.419,38,0.806,40,0.633,41,0.563,47,0.295,48,0.4,49,1.242,58,0.105,61,0.563,79,1.024,80,1.194,81,1.785,82,1.292,83,1.292,84,1.292,88,1.292,89,2.106,90,2.106,91,2.6,92,2.701,93,1.242,94,1.651,95,1.368,96,1.651,98,1.651,114,1.465,122,1.651,129,1.292,130,1.858,131,1.064,132,1.292,133,2.378,134,1.292,135,1.292,136,1.194,137,1.858,138,1.194,139,1.858,140,1.194,141,0.988,142,1.194,143,1.292,144,1.194,145,1.194,146,0.633,147,2.519,148,1.194,149,1.194,150,0.952,151,1.858,152,1.194,153,1.025,154,1.149,155,1.194,156,1.292,157,1.194,158,1.194,159,1.292,160,1.194,161,1.292,162,1.149,163,1.149,164,1.194,165,1.242,166,2.113,167,2.539,168,2.629,169,2.732,170,1.149,171,1.933,172,1.292,173,1.292,198,2.975,206,2.83,208,1.768,551,1.465,684,2.855,747,4.699,790,1.682,798,2.975,802,3.317,807,2.541,808,2.541,831,4,832,3.352,879,1.864,881,1.768,1618,1.768,1787,3.525,1788,2.095,1791,3.525,1793,4.121,1795,2.095,1796,3.011,1797,3.853,1802,2.095,1804,2.095,1805,2.095,1806,2.095,1807,2.095,1808,2.628,1809,3.777,1810,2.918,1811,2.918,1819,2.628,1943,3.466,1944,4.362,1945,4.362,1946,4.121,1947,2.411,1948,2.411,1949,4.909,1950,2.918,1951,2.918,1952,2.918,1953,2.918,1954,2.918,1955,2.411,1956,2.918]],["title/interfaces/SignUpFormData.html",[0,0.718,1957,2.846]],["body/interfaces/SignUpFormData.html",[0,0.81,2,1.792,3,0.157,4,0.157,5,0.14,7,0.072,8,0.576,10,0.763,11,0.155,12,0.015,13,0.157,14,0.01,15,0.01,24,0.974,28,0.663,38,0.856,47,0.322,48,0.533,58,0.14,61,0.749,79,1.065,89,1.95,90,1.95,91,1.471,92,1.529,94,1.529,95,1.267,96,1.529,98,1.529,114,1.95,122,1.529,167,2.246,168,2.496,169,1.529,170,1.529,171,1.529,198,3.094,206,2.943,208,2.353,551,1.95,682,4.367,684,3.246,755,5.445,790,2.238,798,3.094,802,3.45,807,2.353,808,2.353,831,3.855,832,3.135,879,2.48,881,2.353,1618,2.353,1787,3.666,1788,2.788,1791,3.666,1793,2.624,1795,2.788,1796,4.096,1797,2.788,1801,3.209,1802,2.788,1804,2.788,1805,2.788,1806,2.788,1807,2.788,1944,2.979,1945,2.979,1946,3.855,1947,3.209,1948,3.209,1955,3.209,1957,4.715,1958,5.106,1959,3.883,1960,3.883,1961,3.883,1962,3.883,1963,3.883,1964,3.883,1965,3.883,1966,3.883,1967,3.883,1968,3.883]],["title/components/SignUpPageComponent.html",[79,0.718,170,1.356]],["body/components/SignUpPageComponent.html",[0,0.575,1,1.441,3,0.112,4,0.112,5,0.099,7,0.051,8,0.454,10,0.536,11,0.109,12,0.015,13,0.112,14,0.008,15,0.008,21,1.085,24,0.812,26,0.604,28,0.687,31,0.53,33,0.378,34,0.455,35,0.378,37,0.396,38,0.785,40,0.598,41,0.532,47,0.289,48,0.378,49,1.174,58,0.099,61,0.532,79,0.992,80,1.128,81,1.713,82,1.221,83,1.221,84,1.221,88,1.221,89,2.022,90,2.022,91,2.58,92,2.68,93,1.174,94,1.585,95,1.313,96,1.585,98,1.585,114,1.385,122,1.585,129,1.221,130,1.783,131,1.031,132,1.221,133,2.316,134,1.221,135,1.221,136,1.128,137,1.783,138,1.128,139,1.783,140,1.128,141,0.934,142,1.128,143,1.221,144,1.128,145,1.128,146,0.598,147,2.463,148,1.128,149,1.128,150,0.9,151,1.783,152,1.128,153,0.969,154,1.085,155,1.128,156,1.221,157,1.128,158,1.128,159,1.221,160,1.128,161,1.221,162,1.085,163,1.085,164,1.128,165,1.174,166,1.085,167,2.569,168,2.637,169,1.585,170,2.058,171,1.872,172,1.221,173,1.221,198,2.881,206,2.74,208,1.671,551,1.385,682,4.051,684,2.792,755,5.079,790,1.589,798,2.881,802,3.213,807,2.439,808,2.439,831,3.923,832,3.294,863,4.025,879,1.761,881,1.671,1618,1.671,1737,4.025,1787,3.413,1788,1.98,1791,3.413,1793,4.051,1795,1.98,1796,3.413,1797,3.753,1801,2.279,1802,1.98,1804,1.98,1805,1.98,1806,1.98,1807,1.98,1808,2.484,1809,2.484,1944,4.266,1945,4.266,1946,4.051,1947,2.279,1948,2.279,1955,2.279,1957,3.327,1958,4.754,1959,4.754,1960,2.757,1961,2.757,1962,2.757,1963,2.757,1964,2.757,1965,2.757,1966,2.757,1967,2.757,1968,2.757,1969,4.632,1970,3.173,1971,4.632,1972,4.632,1973,4.632,1974,4.632,1975,4.632,1976,4.632,1977,4.632,1978,4.632,1979,4.632,1980,4.632]],["title/injectables/SignUpService.html",[16,0.33,1946,2.327]],["body/injectables/SignUpService.html",[3,0.177,4,0.177,5,0.157,7,0.081,10,0.803,11,0.164,12,0.014,13,0.177,14,0.011,15,0.011,16,0.528,18,1.325,26,0.827,28,0.747,31,0.612,33,0.828,34,0.578,35,0.828,37,0.791,47,0.275,48,0.6,56,1.325,57,1.278,58,0.157,59,2.955,124,0.981,668,4.042,672,4.373,673,5.118,682,4.282,684,2.768,685,3.84,694,3.614,695,3.355,739,5.512,741,5.512,746,5.512,747,5.238,754,5.512,755,5.238,1946,3.724,1981,6.337,1982,4.373,1983,5.032,1984,5.032,1985,5.032,1986,5.032,1987,5.032]],["title/classes/Space.html",[58,0.124,185,1.808]],["body/classes/Space.html",[1,1.92,3,0.135,4,0.135,5,0.12,7,0.062,8,0.519,10,0.519,11,0.175,12,0.015,13,0.135,14,0.009,15,0.009,24,1.119,26,0.691,28,0.568,31,0.685,33,0.723,34,0.505,35,0.723,37,0.757,38,0.792,39,1.925,40,0.998,41,0.888,44,1.234,47,0.284,55,0.871,58,0.12,61,0.642,102,1.744,123,2.432,124,1.013,176,4.004,179,0.779,180,0.871,181,1.627,185,2.987,302,2.245,311,2.017,320,1.919,322,2.538,558,5.901,561,4.048,563,3.532,565,3.532,579,3.443,581,3.532,583,2.127,598,4.146,603,3.33,604,2.999,932,2.127,1048,5.275,1191,3.33,1193,3.532,1194,2.555,1195,2.555,1196,2.555,1199,3.33,1201,3.33,1202,3.33,1988,3.33,1989,6.071,1990,6.071,1991,5.297,1992,6.549,1993,5.297,1994,3.832,1995,3.832,1996,3.832,1997,6.549,1998,3.832,1999,5.297,2000,3.832,2001,3.832,2002,3.832,2003,3.832,2004,3.832,2005,3.832,2006,3.832,2007,3.832,2008,3.832,2009,3.832,2010,7.539,2011,3.832,2012,3.832,2013,3.832,2014,5.297,2015,3.832,2016,3.832,2017,3.832]],["title/interfaces/SpeciesPiece.html",[0,0.718,350,2.472]],["body/interfaces/SpeciesPiece.html",[0,1.078,2,2.385,3,0.21,4,0.21,5,0.186,7,0.096,8,0.688,11,0.14,12,0.014,13,0.21,14,0.012,15,0.012,47,0.304,103,4.287,175,2.816,176,3.744,177,5.547,178,4.655,179,1.209,180,1.352,181,1.303,350,4.382,2018,5.168]],["title/coverage.html",[2019,4.71]],["body/coverage.html",[0,1.312,1,1.372,5,0.075,6,2.077,11,0.141,12,0.015,14,0.007,15,0.007,16,0.647,17,1.717,19,2.926,20,1.871,21,1.575,22,2.077,30,1.491,44,0.45,58,0.208,76,1.871,77,2.926,78,2.077,79,1.338,80,0.85,85,3.526,86,1.594,87,2.077,93,1.383,105,1.142,118,1.491,120,1.197,131,0.868,136,0.85,138,0.85,140,0.85,141,0.703,142,0.85,144,0.85,146,0.704,148,0.85,150,1.06,152,0.85,153,0.73,154,1.279,155,0.85,157,0.85,158,0.85,160,0.85,162,0.818,164,0.85,166,0.818,168,2.134,169,1.782,170,0.818,174,2.077,177,1.717,181,1.238,182,2.077,183,1.871,184,2.926,185,1.09,192,2.685,193,1.871,194,2.926,209,1.717,212,1.09,215,1.871,224,2.077,227,0.92,237,1.404,238,1.594,265,2.195,273,1.142,275,1.491,301,4.619,321,3.307,324,1.594,325,0.884,328,1.491,331,1.404,345,0.92,347,1.327,350,1.491,391,2.077,392,1.871,405,1.491,406,1.327,424,1.491,432,1.717,470,2.077,471,2.077,480,1.404,481,1.491,496,1.594,498,1.594,499,2.704,500,2.333,501,1.871,545,2.077,553,1.717,555,2.077,556,1.259,614,2.565,615,3.526,616,1.404,622,1.717,639,3.526,640,1.404,662,1.259,663,2.077,670,1.594,673,1.594,674,1.717,737,2.077,738,3.307,788,2.077,789,2.077,790,3.337,835,1.491,937,1.717,969,2.077,970,2.077,971,2.926,979,1.717,996,2.077,1003,1.491,1011,2.862,1014,1.871,1038,2.077,1049,2.926,1050,2.926,1051,1.717,1053,1.717,1080,2.077,1081,2.077,1118,2.077,1121,2.077,1126,2.077,1157,1.717,1160,1.594,1183,3.739,1184,2.077,1209,2.926,1251,1.594,1252,2.926,1253,2.077,1254,1.717,1276,1.717,1279,1.871,1280,1.871,1285,1.594,1313,1.594,1314,2.077,1315,1.594,1364,2.077,1393,2.077,1431,1.717,1440,2.926,1448,1.871,1449,1.717,1452,1.871,1463,1.717,1464,2.077,1508,1.717,1568,2.077,1634,4.295,1668,1.717,1716,3.768,1723,2.077,1724,2.077,1770,2.077,1771,2.077,1784,1.717,1785,2.926,1786,2.926,1813,2.077,1814,2.077,1821,2.926,1824,1.717,1892,1.871,1893,2.926,1894,2.926,1909,1.717,1916,2.077,1917,2.077,1943,1.717,1944,3.472,1945,3.472,1946,1.404,1957,1.717,1981,2.077,1982,2.077,1988,2.077,2018,2.077,2019,2.077,2020,2.391,2021,2.391,2022,2.391,2023,6.943,2024,2.077,2025,6.943,2026,2.077,2027,7.827,2028,2.391,2029,4.605,2030,6.481,2031,5.992,2032,5.652,2033,2.077,2034,2.077,2035,2.077,2036,2.077,2037,2.077,2038,2.077,2039,1.871,2040,2.077,2041,2.077,2042,1.871,2043,3.739,2044,2.391,2045,2.391,2046,2.077,2047,2.391,2048,5.652,2049,2.926,2050,3.739,2051,2.391,2052,5.208,2053,5.208,2054,6.662,2055,3.739,2056,2.391,2057,2.391,2058,3.739,2059,2.391,2060,2.391,2061,4.911,2062,2.077,2063,5.652,2064,5.652,2065,1.871,2066,4.911,2067,2.077,2068,2.077,2069,1.871,2070,2.685,2071,2.077,2072,1.871,2073,3.249,2074,3.249,2075,2.077,2076,2.391,2077,2.391,2078,2.391]],["title/dependencies.html",[2079,2.87,2080,4.144]],["body/dependencies.html",[9,1.868,12,0.015,14,0.012,15,0.012,48,0.676,55,1.29,434,4.441,551,2.476,694,4.075,698,4.441,699,4.441,700,4.441,701,4.441,711,4.441,764,4.93,879,3.149,1275,4.93,1405,4.93,2080,4.93,2081,5.674,2082,8.061,2083,5.674,2084,6.83,2085,5.674,2086,5.674,2087,6.83,2088,6.83,2089,5.674,2090,5.674,2091,5.674,2092,5.674,2093,5.674,2094,5.674,2095,5.674,2096,5.674,2097,5.674,2098,5.674]],["title/miscellaneous/enumerations.html",[2099,1.833,2100,4.144]],["body/miscellaneous/enumerations.html",[7,0.071,12,0.015,14,0.01,15,0.01,41,1.404,101,2.791,131,1.31,149,1.576,150,1.854,270,3.897,271,3.646,426,4.574,670,2.955,704,5.079,1054,4.574,1057,3.897,1104,4.574,1407,4.574,2069,3.469,2070,3.183,2072,3.469,2099,2.46,2100,3.851,2101,3.851,2102,4.574,2103,3.851,2104,3.183,2105,5.844,2106,4.432,2107,5.844,2108,4.432,2109,4.432,2110,5.079,2111,5.079,2112,5.079,2113,5.079,2114,5.079,2115,5.079,2116,4.432,2117,4.432,2118,4.432,2119,4.432,2120,4.432,2121,4.432,2122,4.432,2123,4.432,2124,4.432,2125,4.432,2126,4.432,2127,4.432,2128,4.432,2129,4.432,2130,4.432,2131,4.432,2132,5.844,2133,5.079,2134,5.079,2135,5.079,2136,4.574,2137,5.079,2138,5.079,2139,4.432,2140,4.432,2141,4.432,2142,4.432,2143,4.432,2144,4.432,2145,4.432,2146,4.432,2147,4.432,2148,4.432,2149,4.432,2150,4.432,2151,4.432,2152,4.432,2153,4.432,2154,4.432,2155,4.432,2156,4.432,2157,4.432,2158,4.432,2159,4.432,2160,4.432,2161,4.432,2162,4.432,2163,4.432,2164,4.432,2165,4.432,2166,4.432,2167,4.432,2168,4.432]],["title/miscellaneous/functions.html",[2099,1.833,2169,4.144]],["body/miscellaneous/functions.html",[7,0.058,10,0.682,11,0.172,12,0.014,14,0.009,15,0.009,31,0.56,33,0.935,34,0.66,35,0.94,37,0.979,39,1.136,40,0.952,41,1.329,54,2.262,70,2.389,103,2.806,106,2.933,120,2.532,123,1.729,145,1.274,176,1.795,215,3.957,273,2.414,275,3.154,302,1.325,322,1.498,424,3.154,432,3.631,494,2.791,501,3.957,571,4.361,579,1.795,580,3.114,785,3.905,867,2.805,984,1.887,1146,1.635,1183,2.236,1266,2.662,1301,3.114,1448,3.957,1455,2.805,1465,3.37,1590,4.769,1596,3.114,1602,3.631,1606,2.574,1607,3.114,1608,4.641,1613,3.114,1619,4.393,1634,2.104,1677,3.114,1700,3.114,1716,3.37,1793,2.968,1842,2.805,1843,2.805,1853,2.805,2035,3.114,2036,4.393,2037,4.393,2038,3.114,2039,3.957,2040,3.114,2041,4.393,2042,3.957,2049,2.805,2061,3.114,2062,4.393,2065,3.957,2066,3.114,2067,4.393,2068,4.393,2099,1.989,2104,2.574,2136,2.805,2169,3.114,2170,3.584,2171,3.584,2172,6.708,2173,3.114,2174,3.584,2175,6.708,2176,3.584,2177,6.961,2178,6.961,2179,6.961,2180,5.857,2181,3.584,2182,3.584,2183,5.055,2184,3.584,2185,3.584,2186,3.584,2187,3.584,2188,3.114,2189,3.584,2190,3.584,2191,3.584,2192,3.584,2193,3.584,2194,3.584,2195,3.584,2196,5.857,2197,3.584,2198,5.055,2199,3.584,2200,3.584,2201,3.584,2202,3.584,2203,5.055,2204,3.584,2205,3.584,2206,3.584,2207,3.584,2208,3.584,2209,3.584,2210,3.584,2211,3.584,2212,3.584,2213,3.584,2214,3.584,2215,3.584,2216,5.857,2217,3.584,2218,5.055,2219,3.584,2220,3.584,2221,3.584,2222,3.584,2223,3.584,2224,3.584,2225,3.584]],["title/index.html",[7,0.064,2226,3.443]],["body/index.html",[2,2.552,12,0.013,14,0.013,15,0.013,18,1.677,81,2.354,320,3.188,2046,5.531,2226,5.531,2227,6.366,2228,6.366,2229,6.366]],["title/modules.html",[2230,4.71]],["body/modules.html",[12,0.013,14,0.013,15,0.013,2230,5.637]],["title/properties.html",[8,0.467,2079,2.87]],["body/properties.html",[8,0.631,12,0.013,14,0.013,15,0.013,2188,5.597,2231,6.441]],["title/miscellaneous/typealiases.html",[2099,1.833,2232,4.769]],["body/miscellaneous/typealiases.html",[7,0.098,11,0.143,12,0.012,14,0.012,15,0.012,177,5.104,270,4.045,1051,5.104,1053,5.104,1054,4.748,1057,4.045,1183,3.785,1449,5.104,1634,3.562,1716,4.738,1824,5.104,2049,4.748,2069,4.748,2070,4.357,2072,4.748,2099,3.367,2101,5.272,2102,4.748,2103,5.272,2104,4.357,2173,5.272,2233,6.067]],["title/miscellaneous/variables.html",[2099,1.833,2234,4.144]],["body/miscellaneous/variables.html",[7,0.048,9,1.465,11,0.164,12,0.015,14,0.008,15,0.008,38,0.392,40,1.383,41,1.23,44,1.234,54,2.225,61,0.504,95,0.852,101,3.129,103,1.668,118,2.776,123,2.382,124,0.688,149,2.693,150,1.858,176,3.396,181,0.975,185,1.371,202,1.942,227,1.157,289,4.606,295,3.907,301,1.668,325,1.111,345,1.157,366,2.003,473,2.611,496,2.967,498,2.967,579,3.76,614,1.028,727,1.874,743,3.867,984,1.582,1011,1.435,1049,2.352,1050,3.483,1051,4.705,1052,5.693,1059,4.586,1060,4.148,1061,3.867,1062,2.611,1063,3.867,1064,4.148,1065,3.867,1066,5.128,1067,3.867,1068,4.148,1069,3.867,1070,3.867,1071,4.148,1072,3.867,1073,3.867,1074,4.148,1075,3.867,1076,3.867,1077,4.148,1078,3.867,1079,3.867,1122,2.611,1146,1.371,1183,1.874,1251,2.003,1256,2.158,1266,1.582,1276,3.807,1279,3.483,1280,3.483,1414,2.352,1440,3.483,1452,3.483,1478,2.352,1573,2.611,1586,2.158,1668,3.196,1716,3.534,1721,2.611,1722,2.611,1879,2.352,1893,2.352,1894,3.483,1896,2.611,1897,2.611,1898,2.611,1899,2.611,1900,2.611,1901,2.611,1902,2.611,1903,2.611,1904,2.611,1905,2.611,1906,2.611,1907,2.611,2024,2.611,2026,3.867,2033,2.611,2034,3.867,2039,2.352,2042,2.352,2065,3.483,2070,2.158,2071,3.867,2073,2.611,2074,4.606,2075,2.611,2099,1.668,2102,2.352,2104,4.493,2110,2.611,2111,2.611,2112,2.611,2113,2.611,2114,2.611,2115,2.611,2133,3.867,2134,3.867,2135,2.611,2136,3.483,2137,3.867,2138,4.606,2234,2.611,2235,3.005,2236,3.005,2237,3.005,2238,3.005,2239,3.005,2240,3.005,2241,3.005,2242,3.005,2243,3.005,2244,3.005,2245,3.005,2246,3.005,2247,6.78,2248,3.005,2249,3.005,2250,3.005,2251,3.005,2252,3.005,2253,3.005,2254,3.005,2255,3.005,2256,3.005,2257,3.005,2258,3.005,2259,3.005,2260,3.005,2261,3.005,2262,4.45,2263,3.005,2264,6.552,2265,3.005,2266,3.005,2267,3.005,2268,3.005,2269,3.005,2270,3.005,2271,3.005,2272,3.005,2273,6.552,2274,3.005,2275,3.005,2276,3.005,2277,3.005,2278,3.005,2279,3.005,2280,3.005,2281,3.005,2282,3.005,2283,3.005,2284,3.005,2285,3.005,2286,4.45,2287,3.005,2288,3.005,2289,3.005,2290,3.005]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":301,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2231,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":2098,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2055,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2076,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2053,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2056,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2054,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":892,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["1/1",{"_index":2064,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":2063,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["1235535.svg",{"_index":2272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":2046,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["15",{"_index":2058,"title":{},"body":{"coverage.html":{}}}],["151117.svg",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":2227,"title":{},"body":{"index.html":{}}}],["18",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":2082,"title":{},"body":{"dependencies.html":{}}}],["18.2.7",{"_index":2084,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1066,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":2096,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2037742.svg",{"_index":2288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":2228,"title":{},"body":{"index.html":{}}}],["2997582.svg",{"_index":2283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1062,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.670.0",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["3/19",{"_index":2059,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":959,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["33",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["3386143.svg",{"_index":2266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["367390.svg",{"_index":2275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":2092,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2091,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2093,"title":{},"body":{"dependencies.html":{}}}],["4412103.svg",{"_index":2285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":871,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["5/15",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":863,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["6606521.svg",{"_index":2279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6850047.svg",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":2094,"title":{},"body":{"dependencies.html":{}}}],["7049525.svg",{"_index":2281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7144060.svg",{"_index":2277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7195612.svg",{"_index":2265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7290921.svg",{"_index":2290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7300296.svg",{"_index":2271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":2229,"title":{},"body":{"index.html":{}}}],["_action",{"_index":1989,"title":{},"body":{"classes/Space.html":{}}}],["_drawpool",{"_index":1082,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":1620,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":1990,"title":{},"body":{"classes/Space.html":{}}}],["_setgamestate",{"_index":1623,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":1629,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":560,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["_transactionstate",{"_index":1621,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["abstract",{"_index":1220,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":1572,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":102,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{}}}],["accesstoken",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["accesstokenexpire",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"coverage.html":{}}}],["action.model",{"_index":2008,"title":{},"body":{"classes/Space.html":{}}}],["action_display_abundance",{"_index":2116,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":2118,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption_state",{"_index":1279,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["action_pawn",{"_index":2132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":2145,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":2147,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":2149,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":2151,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":2153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":2155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayabundance",{"_index":2117,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":2119,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplaymanagerservice",{"_index":17,"title":{"injectables/ActionDisplayManagerService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["actiondisplayservice",{"_index":76,"title":{"interfaces/ActionDisplayService.html":{}},"body":{"interfaces/ActionDisplayService.html":{},"coverage.html":{}}}],["actiondisplayservices",{"_index":62,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["actiondisplayservices.map((service",{"_index":65,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["actionpawn",{"_index":101,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actionpawnamphibian",{"_index":2146,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":2148,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":2150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawncomponent",{"_index":80,"title":{"components/ActionPawnComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnforheader",{"_index":397,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawninsect",{"_index":2152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnmammal",{"_index":2154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnpiece",{"_index":105,"title":{"interfaces/ActionPawnPiece.html":{}},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["actionpawnpile",{"_index":323,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["actionpawnpileid",{"_index":525,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["actionpawnpilelength",{"_index":398,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnreptile",{"_index":2156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawns",{"_index":201,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnspacecomponent",{"_index":136,"title":{"components/ActionPawnSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnspaces",{"_index":225,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnssubject",{"_index":226,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actions",{"_index":1611,"title":{},"body":{"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{}}}],["activatedroute",{"_index":978,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["acts",{"_index":1830,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["actual_component",{"_index":173,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaption",{"_index":49,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaptionactiondisplayarea",{"_index":1296,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["adaptionactiondisplayarea.nextavailablespace(spacekindenum.element",{"_index":1299,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["adaptionactiondisplaycardcomponent",{"_index":138,"title":{"components/AdaptionActionDisplayCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["adaptionactiondisplayservice",{"_index":30,"title":{"injectables/AdaptionActionDisplayService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["adaptionarea",{"_index":997,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["add",{"_index":509,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["add_circle",{"_index":1766,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["addactionpawn",{"_index":230,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["addactionpawn(index",{"_index":240,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["added",{"_index":372,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameStateStoreService.html":{}}}],["addedelements",{"_index":377,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addedelementspaces",{"_index":355,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addelement",{"_index":458,"title":{},"body":{"classes/AnimalElements.html":{}}}],["addelement(element",{"_index":361,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addfriend",{"_index":818,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/PlayerService.html":{}}}],["addfriend(playerid",{"_index":838,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["addfriend(username",{"_index":1920,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfriendtogame",{"_index":819,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["addfriendtogame(playerid",{"_index":841,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["addpiece",{"_index":1991,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":1999,"title":{},"body":{"classes/Space.html":{}}}],["alias",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2233,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allelements",{"_index":374,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["already",{"_index":932,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["always",{"_index":1865,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["amount",{"_index":1134,"title":{},"body":{"classes/Faction.html":{}}}],["amphibian",{"_index":2110,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["amphibian_element",{"_index":2120,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":2121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular/animations",{"_index":2081,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2083,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":434,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1344,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["angular/compiler",{"_index":2085,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":879,"title":{},"body":{"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2086,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":880,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/button",{"_index":881,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/card",{"_index":208,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/chips",{"_index":885,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/material/form",{"_index":876,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/grid",{"_index":428,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/icon",{"_index":884,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/material/input",{"_index":882,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/progress",{"_index":988,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["angular/material/snack",{"_index":887,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["angular/material/table",{"_index":1751,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/tooltip",{"_index":886,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/platform",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":551,"title":{},"body":{"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["animal",{"_index":141,"title":{"classes/Animal.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animal(animalconfig",{"_index":521,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animal.actionpawn.length$.subscribe((length",{"_index":450,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.actionpawn.pullone",{"_index":1028,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.constant",{"_index":1058,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{}}}],["animal.elements.addelement(element",{"_index":1035,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.elements.elements$.subscribe((elements",{"_index":447,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.id",{"_index":443,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.species.length$.subscribe((length",{"_index":452,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalbyid",{"_index":472,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalcard",{"_index":1310,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["animalcardcomponent",{"_index":140,"title":{"components/AnimalCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animalconfig",{"_index":328,"title":{"interfaces/AnimalConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["animalelements",{"_index":324,"title":{"classes/AnimalElements.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["animalelements(config.elementarea",{"_index":387,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["animalenum",{"_index":1057,"title":{},"body":{"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":1060,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":1064,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":1068,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":1071,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":1074,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":1077,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalfactory",{"_index":476,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalfactory(animalconfig",{"_index":484,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalkind",{"_index":177,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["animalproviderservice",{"_index":405,"title":{"injectables/AnimalProviderService.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["animalreadysubject",{"_index":1382,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalreadysubject.asobservable",{"_index":1389,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalreadysubject.next(true",{"_index":1387,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animals",{"_index":473,"title":{},"body":{"injectables/AnimalProviderService.html":{},"miscellaneous/variables.html":{}}}],["animals.find((animal",{"_index":442,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animals.length",{"_index":1385,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalsready",{"_index":1365,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["animalssubject",{"_index":474,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalsubscription",{"_index":1383,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["api",{"_index":179,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["apiurlinterceptor",{"_index":2037,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiurlinterceptor(req",{"_index":2176,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":92,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["app.component.html",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":142,"title":{"components/AppComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":1467,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":1469,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(oldstate",{"_index":1470,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":1496,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":1512,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":1475,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":2111,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arachnid_element",{"_index":2122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":2123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":227,"title":{"classes/Area.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area(areastate",{"_index":1422,"title":{},"body":{"injectables/GameService.html":{}}}],["area.constant",{"_index":1056,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["areaid",{"_index":1051,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":270,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":1063,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":1067,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":1070,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":1073,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":1076,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":1079,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaids",{"_index":532,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaids.has(elementareaid",{"_index":534,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["arearegistryservice",{"_index":237,"title":{"injectables/AreaRegistryService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":483,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaservice",{"_index":1581,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["areastate",{"_index":566,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["areastateservice",{"_index":622,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":624,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["array",{"_index":1845,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["array.from",{"_index":869,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["array.isarray(elements",{"_index":1168,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{}}}],["assignedanimal",{"_index":1306,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["associated",{"_index":2214,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assume",{"_index":1878,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["async",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["auth/auth.service",{"_index":1345,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{}}}],["authenticationresult",{"_index":774,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authenticationresulttype",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["authflow",{"_index":766,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authguard",{"_index":2034,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":2039,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor(req",{"_index":2181,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authparameters",{"_index":770,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authresult",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth(authresult",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":662,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["available",{"_index":312,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["availablefriends",{"_index":809,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["availablespace",{"_index":362,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace.addpiece(element",{"_index":364,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespaces",{"_index":611,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces.length",{"_index":612,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces[0",{"_index":613,"title":{},"body":{"classes/Area.html":{}}}],["await",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["aws",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["back",{"_index":1144,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["bag",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":888,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["based",{"_index":1609,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["before",{"_index":306,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":43,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{}}}],["behaviorsubject(false",{"_index":45,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/GameReadyService.html":{}}}],["behaviorsubject(this._gamestate",{"_index":1670,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.actionpawns",{"_index":254,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.checkisloggedin",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.currentplayer",{"_index":1927,"title":{},"body":{"injectables/PlayerService.html":{}}}],["behaviorsubject(this.elements",{"_index":261,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.length",{"_index":1857,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["behaviorsubject(this.ready",{"_index":1098,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["behaviorsubject(this.spaces",{"_index":591,"title":{},"body":{"classes/Area.html":{}}}],["behaviorsubject(this.state",{"_index":1200,"title":{},"body":{"classes/GameElement.html":{}}}],["behaviorsubject>(new",{"_index":630,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bird",{"_index":2112,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bird_element",{"_index":2124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":2125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blur",{"_index":1964,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["boolean",{"_index":70,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{},"miscellaneous/functions.html":{}}}],["browser",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1257,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["build(gametitle",{"_index":1445,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["build(playerids",{"_index":1264,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["buildactiondisplay",{"_index":1258,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildadaptionactiondisplay",{"_index":1259,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildanimal",{"_index":477,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimal(faction",{"_index":486,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimals",{"_index":478,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildelementdrawpool",{"_index":1260,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildfactions",{"_index":1261,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildfactions(playerids",{"_index":1270,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["building",{"_index":506,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["built",{"_index":1283,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["call",{"_index":1523,"title":{},"body":{"injectables/GameStateService.html":{}}}],["called",{"_index":1616,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":1617,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["canactivatefn",{"_index":2261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":197,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card'},{'name",{"_index":139,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["card.component",{"_index":1012,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["card.component.html",{"_index":199,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.scss",{"_index":200,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts",{"_index":194,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:21",{"_index":207,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:22",{"_index":204,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:26",{"_index":205,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:36",{"_index":409,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:37",{"_index":421,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:38",{"_index":422,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:39",{"_index":417,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:40",{"_index":423,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:41",{"_index":415,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:42",{"_index":420,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:44",{"_index":407,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:51",{"_index":412,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:55",{"_index":411,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:76",{"_index":410,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card/adaption",{"_index":193,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["card/animal",{"_index":392,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["case",{"_index":1615,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["catch",{"_index":777,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{}}}],["catch((error",{"_index":1934,"title":{},"body":{"injectables/PlayerService.html":{}}}],["change",{"_index":436,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["changedetection",{"_index":89,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy",{"_index":114,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":90,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["characters",{"_index":1979,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["checked",{"_index":2200,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkisloggedin",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":58,"title":{"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"coverage.html":{}}}],["classes",{"_index":320,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"index.html":{}}}],["clear",{"_index":935,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["cleared",{"_index":305,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["client.service",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["client.service.ts",{"_index":738,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:12",{"_index":1326,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:13",{"_index":1437,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:17",{"_index":744,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:18",{"_index":1331,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:20",{"_index":753,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:22",{"_index":1334,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:31",{"_index":1329,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:35",{"_index":1343,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:39",{"_index":1336,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:43",{"_index":1339,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:44",{"_index":750,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:47",{"_index":1337,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:48",{"_index":756,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:51",{"_index":1333,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:60",{"_index":1341,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:70",{"_index":748,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:9",{"_index":1435,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["clientid",{"_index":768,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["close",{"_index":957,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["code",{"_index":747,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"injectables/SignUpService.html":{}}}],["code).then((success",{"_index":1954,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["cognito",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["cognitoclient",{"_index":745,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoclientservice",{"_index":673,"title":{"injectables/CognitoClientService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["cognitoidentityproviderclient",{"_index":743,"title":{},"body":{"injectables/CognitoClientService.html":{},"miscellaneous/variables.html":{}}}],["cognitoidtokenjwt",{"_index":752,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["combinelatest",{"_index":51,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["combinelatest(readyobs",{"_index":67,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["combinelatestwith",{"_index":269,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{}}}],["combinelatestwith(this.arearegistryservice.registeredids",{"_index":278,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["combinelatestwith(this.pileregistryservice.registeredids",{"_index":531,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["command",{"_index":771,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["commit",{"_index":1550,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":1497,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":1476,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate.gameelements",{"_index":1480,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":1867,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["complete",{"_index":1355,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["completegame",{"_index":1316,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["completegame(gameid",{"_index":1328,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["component",{"_index":79,"title":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":134,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["components",{"_index":81,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"index.html":{}}}],["computed",{"_index":413,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["config",{"_index":330,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["config.constant",{"_index":349,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["config.constant.ts",{"_index":1050,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.elementconfig",{"_index":388,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.faction",{"_index":381,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.ts",{"_index":1894,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":169,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["confirmation",{"_index":1956,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["confirmationcode",{"_index":783,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirming",{"_index":787,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignup",{"_index":739,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignup(username",{"_index":746,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignupcommand",{"_index":757,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignupcommand(input",{"_index":784,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console",{"_index":1806,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["console.error('error",{"_index":786,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error('failed",{"_index":960,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["console.error('unexpected",{"_index":776,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(e",{"_index":779,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(error",{"_index":919,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["console.log(`created",{"_index":1416,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log(authresult",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(json.stringify(gsp",{"_index":1438,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":61,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["constant/animal.constant",{"_index":178,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/SpeciesPiece.html":{}}}],["constant/area.constant",{"_index":272,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/element",{"_index":348,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/element.constant",{"_index":1119,"title":{},"body":{"interfaces/ElementPiece.html":{}}}],["constant/game",{"_index":1281,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{}}}],["constant/image.constant",{"_index":119,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["constant/local",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["constant/piece.constant",{"_index":427,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/pile",{"_index":497,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/pile.constant",{"_index":1105,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["constructor(adaptionactiondisplayservice",{"_index":29,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{}}}],["constructor(animalproviderservice",{"_index":404,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constructor(arearegistryservice",{"_index":236,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["constructor(arearegistrysvc",{"_index":479,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constructor(areastatesvc",{"_index":621,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(authservice",{"_index":1815,"title":{},"body":{"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(cognitoclient",{"_index":742,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["constructor(cognitoclientservice",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignUpService.html":{}}}],["constructor(config",{"_index":327,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["constructor(elementarea",{"_index":459,"title":{},"body":{"classes/AnimalElements.html":{}}}],["constructor(factionstatesvc",{"_index":1173,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(factorymap",{"_index":1442,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["constructor(fb",{"_index":830,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["constructor(formbuilder",{"_index":1808,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["constructor(gameelementstatesvc",{"_index":1210,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gameservice",{"_index":1741,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["constructor(gamestateservice",{"_index":1367,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["constructor(gamestatestore",{"_index":1507,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":1002,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["constructor(http",{"_index":1324,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["constructor(pile",{"_index":1885,"title":{},"body":{"classes/PileAdapter.html":{}}}],["constructor(pileregistrysvc",{"_index":1086,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":1908,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/SignUpService.html":{}}}],["constructor(protected",{"_index":637,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(route",{"_index":977,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["constructor(router",{"_index":1395,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(state",{"_index":565,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}}}],["control",{"_index":903,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.invalid",{"_index":953,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.seterrors",{"_index":922,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.seterrors(null",{"_index":925,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["control.value",{"_index":905,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["copied",{"_index":2190,"title":{},"body":{"miscellaneous/functions.html":{}}}],["corresponding",{"_index":2209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":1092,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["coverage",{"_index":2019,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":145,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStatePatchService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["create(oldstate",{"_index":1473,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["creategame",{"_index":820,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["creategame(game",{"_index":1330,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["creategame(otherplayers",{"_index":1398,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamepagecomponent",{"_index":144,"title":{"components/CreateGamePageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["creates",{"_index":1466,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["creating",{"_index":965,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["current",{"_index":608,"title":{},"body":{"classes/Area.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentcount",{"_index":1872,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentitemcount",{"_index":1880,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentplayer",{"_index":1378,"title":{},"body":{"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["currentplayer()?.username",{"_index":1768,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["currentplayeranimal",{"_index":399,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["currentplayerfaction",{"_index":998,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["currentplayerready",{"_index":1366,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentplayersubject",{"_index":1375,"title":{},"body":{"injectables/GameReadyService.html":{},"injectables/PlayerService.html":{}}}],["currentplayersubject.asobservable",{"_index":1381,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentplayersubject.next(true",{"_index":1379,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentplayersubscription",{"_index":1376,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["currentuser",{"_index":810,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["custom",{"_index":2210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["decode",{"_index":764,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["decodejwttoken",{"_index":740,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decodejwttoken(token",{"_index":749,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decreasescore",{"_index":1127,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":1132,"title":{},"body":{"classes/Faction.html":{}}}],["deepclone",{"_index":1193,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["deepclone(action_display_adaption_state",{"_index":1297,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["deepclone(emptygameelementstates",{"_index":1287,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["deepclone(emptygamestate",{"_index":1657,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(oldstate",{"_index":1482,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["deepclone(this._gamestate",{"_index":1692,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":1204,"title":{},"body":{"classes/GameElement.html":{}}}],["deepclone(this._transactionstate",{"_index":1693,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":2062,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":2182,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deepfreeze",{"_index":2065,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["deepfreeze(obj",{"_index":2187,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":40,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":424,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":2219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultpiecefactory(piecekindenum.action_pawn",{"_index":454,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["defaults",{"_index":1844,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["defined",{"_index":31,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["definition",{"_index":1831,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["delete",{"_index":1769,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["deletedstoragekey",{"_index":1772,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deletedstoragekey(key",{"_index":1775,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["demand",{"_index":1284,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["dependencies",{"_index":2080,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":1465,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":1702,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":2184,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directive",{"_index":132,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["directives",{"_index":172,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["display",{"_index":21,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["display.model.ts",{"_index":78,"title":{},"body":{"interfaces/ActionDisplayService.html":{},"coverage.html":{}}}],["display.service",{"_index":50,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["display.service.ts",{"_index":224,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:100",{"_index":245,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:18",{"_index":256,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:19",{"_index":253,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:20",{"_index":250,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:21",{"_index":255,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:22",{"_index":252,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:23",{"_index":260,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:24",{"_index":257,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:25",{"_index":262,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:26",{"_index":259,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:27",{"_index":263,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:28",{"_index":239,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:37",{"_index":243,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:69",{"_index":249,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:86",{"_index":247,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:90",{"_index":248,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:96",{"_index":242,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display/action",{"_index":20,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["display/adaption",{"_index":192,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["display/space/action",{"_index":182,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"coverage.html":{}}}],["display/space/element",{"_index":1014,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component",{"_index":1013,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["display/space/eyeball/eyeball.component.ts",{"_index":1121,"title":{},"body":{"components/EyeballComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component.ts:14",{"_index":1125,"title":{},"body":{"components/EyeballComponent.html":{}}}],["distinctuntilchanged",{"_index":1853,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1207,"title":{},"body":{"classes/GameElement.html":{}}}],["dom",{"_index":83,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["dominant",{"_index":149,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dominant_species",{"_index":2140,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dominantspeciesgamecomponent",{"_index":148,"title":{"components/DominantSpeciesGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["done",{"_index":1610,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":153,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["drawpool",{"_index":1085,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["drawpoolgamecomponent",{"_index":152,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["duplicate",{"_index":933,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["duration",{"_index":958,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["during",{"_index":1613,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":778,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["each",{"_index":1586,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["eagle",{"_index":2278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":131,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element'},{'name",{"_index":156,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["element.component.html",{"_index":1039,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.component.scss",{"_index":1040,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.constant",{"_index":1055,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["element.id",{"_index":1227,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":369,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["element.model",{"_index":352,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["element.model.ts",{"_index":1184,"title":{},"body":{"classes/GameElement.html":{},"coverage.html":{}}}],["element.model.ts:16",{"_index":1190,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:20",{"_index":1192,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:28",{"_index":1189,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:36",{"_index":1188,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:6",{"_index":1186,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:7",{"_index":1187,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:8",{"_index":1185,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":1245,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":1248,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":265,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["element/element.component",{"_index":189,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["element/faction",{"_index":499,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["element/game",{"_index":1209,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":500,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["element_draw_pool_state",{"_index":1280,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementarea",{"_index":353,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["elementareaid",{"_index":522,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["elementareaidsbyanimal",{"_index":2071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbyid",{"_index":617,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementcomponent",{"_index":155,"title":{"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementconfig",{"_index":347,"title":{"interfaces/ElementConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{}}}],["elementconfig.inherentcount",{"_index":359,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementconfigbyanimal",{"_index":498,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpool",{"_index":1255,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["elementdrawpoolservice",{"_index":238,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["elementenum",{"_index":1054,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":1072,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":1065,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":1075,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":1069,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":1078,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":1061,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":1053,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["elementpiece",{"_index":212,"title":{"interfaces/ElementPiece.html":{}},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["elementpiece).filter(isnotnull",{"_index":379,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elements",{"_index":202,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.length).fill(null",{"_index":449,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["elementsarray",{"_index":1167,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{}}}],["elementsarray.foreach((element",{"_index":1222,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elementsarray.foreach((faction",{"_index":1170,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elementspace",{"_index":366,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementSpaceComponent.html":{},"miscellaneous/variables.html":{}}}],["elementspace.removepiece",{"_index":370,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacecomponent",{"_index":157,"title":{"components/ElementSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementspaces",{"_index":228,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.length",{"_index":358,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.slice(elementconfig.inherentcount",{"_index":360,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacesstate",{"_index":1311,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["elementssubject",{"_index":229,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementstate",{"_index":644,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["email",{"_index":755,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["emit",{"_index":1605,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitpilestate",{"_index":1825,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emitstate",{"_index":564,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["emitted",{"_index":1143,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["empty",{"_index":938,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emptycontrol",{"_index":941,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["emptycontrol.setvalue(playerid",{"_index":945,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["emptyelementspace",{"_index":456,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptyelementspaces",{"_index":400,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptygameelementstates",{"_index":1276,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptygamestate",{"_index":1668,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1292,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/area.model",{"_index":268,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/faction.model",{"_index":344,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/game",{"_index":1277,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/piece.model",{"_index":425,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/pile.model",{"_index":346,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/space.model",{"_index":274,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/service/game",{"_index":264,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["engine/util/misc",{"_index":121,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/util/predicate",{"_index":216,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensure",{"_index":926,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameStateStoreService.html":{}}}],["ensuredefined",{"_index":273,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensuredefined(authresult.idtoken",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(authresult.refreshtoken",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt.exp",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt['cognito:username",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].addpiece(actionpawn",{"_index":318,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].removepiece",{"_index":319,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.area).nextavailablespace(spacekindenum.element",{"_index":309,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.currentplayer).friends",{"_index":1940,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.filter",{"_index":1941,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.push(username",{"_index":1938,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentuser).friends.filter",{"_index":949,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ensuredefined(this.currentuser).friends.includes(playerid",{"_index":954,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ensuredefined(this.elementarea",{"_index":375,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).nextavailablespace",{"_index":363,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).spaces",{"_index":356,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementconfig",{"_index":357,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementspaces",{"_index":314,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementspaces)[index].removepiece",{"_index":313,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.playerservice.currentplayer).username",{"_index":419,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ensuredefined(value",{"_index":2193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensures",{"_index":1700,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["enter",{"_index":1976,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["entire",{"_index":1601,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":654,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":1246,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":1242,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enumerations",{"_index":2100,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":761,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.clientid",{"_index":769,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.region",{"_index":2260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":762,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["equal",{"_index":2185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":785,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":1698,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":1206,"title":{},"body":{"classes/GameElement.html":{}}}],["error('can",{"_index":1689,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('drawpool",{"_index":1300,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["error('element",{"_index":303,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["error('gamestate",{"_index":1696,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":1676,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":311,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["error('number",{"_index":607,"title":{},"body":{"classes/Area.html":{}}}],["error('pile",{"_index":1113,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["error('space",{"_index":2013,"title":{},"body":{"classes/Space.html":{}}}],["error('state",{"_index":603,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["error('transaction",{"_index":1556,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":371,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["error(`element",{"_index":1226,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":1250,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":1686,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(`unable",{"_index":1461,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["errorhandlerinterceptor",{"_index":2042,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorhandlerinterceptor(req",{"_index":2220,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errormessage",{"_index":1793,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["errormessages",{"_index":811,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["errormessages[i",{"_index":966,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["eventcoalescing",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":2206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":1208,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["extends",{"_index":175,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SpeciesPiece.html":{}}}],["eye",{"_index":2287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeball",{"_index":1122,"title":{},"body":{"components/EyeballComponent.html":{},"miscellaneous/variables.html":{}}}],["eyeball'},{'name",{"_index":159,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["eyeball.component.html",{"_index":1123,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball.component.scss",{"_index":1124,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball/eyeball.component",{"_index":191,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["eyeballcomponent",{"_index":158,"title":{"components/EyeballComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["faction",{"_index":325,"title":{"classes/Faction.html":{}},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction().name",{"_index":455,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["faction(state",{"_index":1425,"title":{},"body":{"injectables/GameService.html":{}}}],["faction.id",{"_index":539,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.id).actionpawn",{"_index":527,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).areaid",{"_index":524,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).species",{"_index":529,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.ownerid",{"_index":1020,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionassignment",{"_index":1157,"title":{"interfaces/FactionAssignment.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.factionid",{"_index":514,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionassignments.map((factionassignment",{"_index":513,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["factionassignmentsubject",{"_index":1161,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionid",{"_index":1158,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionids",{"_index":512,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess",{"_index":515,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess.foreach((factionid",{"_index":518,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionregistryservice",{"_index":480,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":1004,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factions",{"_index":999,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionstate",{"_index":1152,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["factionstateservice",{"_index":1160,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":1164,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":1833,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["factory.service",{"_index":1451,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["factory.service.ts",{"_index":1253,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{}}}],["factory.service.ts:25",{"_index":1263,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:26",{"_index":1262,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:33",{"_index":1265,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:42",{"_index":1269,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:46",{"_index":1268,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:65",{"_index":1267,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:69",{"_index":1271,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory_map",{"_index":1452,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["factorybygametitle",{"_index":1441,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["factorymap",{"_index":1444,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["failed",{"_index":1804,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["false",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1194,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["fb",{"_index":837,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetcherror",{"_index":923,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetchgames",{"_index":1739,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["fetching",{"_index":921,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetchplayers",{"_index":821,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["fetchplayers(index",{"_index":844,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["field",{"_index":877,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["filter",{"_index":52,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateService.html":{}}}],["filter((ids",{"_index":1023,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((isready",{"_index":993,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["filter((player",{"_index":1756,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filter((registeredids",{"_index":1107,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["filter((serviceready",{"_index":72,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["filter((space",{"_index":315,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["filter(isnotundefined",{"_index":445,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["filteredplayers",{"_index":812,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["filterplayers",{"_index":1740,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filterplayers(game",{"_index":1746,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["findplayers",{"_index":1317,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["findplayers(username",{"_index":1332,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["first",{"_index":53,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["first()).subscribe",{"_index":218,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["formarray",{"_index":865,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["formbuilder",{"_index":831,"title":{},"body":{"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formcontrol",{"_index":878,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["formgroup",{"_index":1787,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formsmodule",{"_index":794,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["found",{"_index":2211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["friend",{"_index":950,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["friends",{"_index":968,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{}}}],["friendusername",{"_index":1942,"title":{},"body":{"injectables/PlayerService.html":{}}}],["function",{"_index":1634,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2169,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":146,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["game'},{'name",{"_index":151,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["game.component",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["game.component.html",{"_index":973,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":974,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":971,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:17",{"_index":980,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["game.component.ts:25",{"_index":985,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["game.component.ts:39",{"_index":1009,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:40",{"_index":1010,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:41",{"_index":1008,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:42",{"_index":983,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:53",{"_index":1006,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:73",{"_index":1007,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.gameid",{"_index":1767,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.host",{"_index":1757,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.playerids",{"_index":1755,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game/component/draw",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["game/dominant",{"_index":970,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"coverage.html":{}}}],["game/draw",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game/service/game",{"_index":1450,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gamecollection",{"_index":1346,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gamecollection.games",{"_index":1353,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gameelement",{"_index":556,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["gameelement:28",{"_index":1139,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:31",{"_index":582,"title":{},"body":{"classes/Area.html":{}}}],["gameelement:36",{"_index":584,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:6",{"_index":573,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:7",{"_index":575,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:8",{"_index":574,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelementregistryservice",{"_index":616,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:16",{"_index":632,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:17",{"_index":629,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:18",{"_index":631,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:19",{"_index":634,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:23",{"_index":625,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:29",{"_index":628,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:33",{"_index":1175,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelements",{"_index":1722,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["gameelementsfactory",{"_index":1458,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementsfactory.build(playerids",{"_index":1460,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementsfactoryclass",{"_index":1456,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementstate",{"_index":1197,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["gameelementstates",{"_index":1256,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["gameelementstateservice",{"_index":640,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:14",{"_index":646,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:15",{"_index":656,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:16",{"_index":655,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:18",{"_index":648,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:26",{"_index":651,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:37",{"_index":650,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:41",{"_index":653,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesfactoryservice",{"_index":1251,"title":{"classes/GameElementStatesFactoryService.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gameelementstatesvc",{"_index":1213,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gameid",{"_index":984,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamemanagementclientservice",{"_index":1313,"title":{"injectables/GameManagementClientService.html":{}},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["gameready",{"_index":975,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["gamereadyservice",{"_index":979,"title":{"injectables/GameReadyService.html":{}},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["games",{"_index":1737,"title":{},"body":{"components/LobbyPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["gameservice",{"_index":835,"title":{"injectables/GameService.html":{}},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["gamestate",{"_index":1146,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamestate.gameelements",{"_index":1459,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gamestate.gameelements.area",{"_index":1707,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.area.foreach((areastate",{"_index":1420,"title":{},"body":{"injectables/GameService.html":{}}}],["gamestate.gameelements.faction",{"_index":1710,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.faction.foreach((state",{"_index":1423,"title":{},"body":{"injectables/GameService.html":{}}}],["gamestate.gameelements.pile",{"_index":1713,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.pile.foreach((state",{"_index":1426,"title":{},"body":{"injectables/GameService.html":{}}}],["gamestateclient",{"_index":1510,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":1431,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":1641,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateelements",{"_index":1575,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateinitializationservice",{"_index":1285,"title":{"injectables/GameStateInitializationService.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["gamestatepatch",{"_index":1434,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["gamestatepatches",{"_index":1468,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":1463,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":1003,"title":{"injectables/GameStateService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatestore",{"_index":1511,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":1508,"title":{"injectables/GameStateStoreService.html":{}},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":1622,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":1005,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["gamestoreservice",{"_index":1718,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["gametablecolumns",{"_index":1738,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["gametitle",{"_index":1407,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"miscellaneous/enumerations.html":{}}}],["gametitle.dominant_species",{"_index":1414,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"miscellaneous/variables.html":{}}}],["gecko",{"_index":2274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(id",{"_index":489,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getaction",{"_index":2004,"title":{},"body":{"classes/Space.html":{}}}],["getactionpawn",{"_index":338,"title":{},"body":{"classes/Animal.html":{}}}],["getactionpawnforheader",{"_index":402,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getaddedelements",{"_index":468,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getaddedelementspaces",{"_index":464,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getallelements",{"_index":466,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getanimal",{"_index":403,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getarea",{"_index":1536,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":1100,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelements",{"_index":340,"title":{},"body":{"classes/Animal.html":{}}}],["getelementstate",{"_index":657,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getemptyinitialgamestate",{"_index":1448,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getemptyinitialgamestate(gameid",{"_index":1455,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/functions.html":{}}}],["getentity",{"_index":643,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":649,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":1538,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamesforloggedinplayer",{"_index":1318,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["getgamestate",{"_index":1660,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getgsp",{"_index":1436,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["getid",{"_index":335,"title":{},"body":{"classes/Animal.html":{},"classes/GameElement.html":{}}}],["getimgpath",{"_index":112,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getkind",{"_index":1042,"title":{},"body":{"components/ElementComponent.html":{}}}],["getlatestgamestate",{"_index":1319,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getlatestgamestate(gameid",{"_index":1335,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getlength",{"_index":1102,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["getloggedinplayer",{"_index":1320,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["getloggedinusername",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["getname",{"_index":110,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{}}}],["getobservableforkey",{"_index":1624,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":1632,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":120,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":523,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["getorthrow(imgpathbykind",{"_index":128,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getorthrow(map",{"_index":2202,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorthrow(pileidsbyanimal",{"_index":526,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.animalbyid",{"_index":544,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.elementbyid",{"_index":1221,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["getowner",{"_index":108,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["getownerid",{"_index":1148,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":2006,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":1540,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getplayer",{"_index":1321,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayer(username",{"_index":1338,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayerauthdata",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["getplayerids",{"_index":1534,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getscore",{"_index":1150,"title":{},"body":{"classes/Faction.html":{}}}],["getspecies",{"_index":342,"title":{},"body":{"classes/Animal.html":{}}}],["getstate",{"_index":1191,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["getstoragekey",{"_index":1773,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getstoragekey(key",{"_index":1777,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["gettransactionstate",{"_index":1662,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":1843,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["grass",{"_index":2133,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grasshopper",{"_index":2280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grub",{"_index":2134,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gsp",{"_index":1141,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["gsp.patch",{"_index":1484,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gsp.patchid",{"_index":1487,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":1509,"title":{},"body":{"injectables/GameStateService.html":{}}}],["handler.interceptor.ts",{"_index":2041,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["happens",{"_index":1140,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["hasinvalidplayer",{"_index":822,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["hasvalidplayers",{"_index":823,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["here",{"_index":1812,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["host",{"_index":1411,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["html",{"_index":130,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["http",{"_index":1327,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httpclient",{"_index":1325,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httphandlerfn",{"_index":2179,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httprequest",{"_index":2177,"title":{},"body":{"miscellaneous/functions.html":{}}}],["human",{"_index":1405,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["humanid",{"_index":1404,"title":{},"body":{"injectables/GameService.html":{}}}],["i.e",{"_index":2194,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["ids.has(areaidenum.action_display_adaption",{"_index":1024,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["imgpath",{"_index":104,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["imgpathbykind",{"_index":118,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":195,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"components/LogoutPageComponent.html":{}}}],["import",{"_index":47,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["imports",{"_index":122,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["included",{"_index":1829,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["increasescore",{"_index":1128,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":1135,"title":{},"body":{"classes/Faction.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":2197,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["information",{"_index":1807,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["inherent",{"_index":1312,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["inherentcount",{"_index":1052,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":572,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["initial",{"_index":1462,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["initialgameelementstatesfactory",{"_index":1254,"title":{"interfaces/InitialGameElementStatesFactory.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{}}}],["initialgameelementstatesfactoryconstructor",{"_index":1449,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["initialgamestate",{"_index":1412,"title":{},"body":{"injectables/GameService.html":{}}}],["initialization",{"_index":1301,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"miscellaneous/functions.html":{}}}],["initialization.service",{"_index":1406,"title":{},"body":{"injectables/GameService.html":{}}}],["initialization.service.ts",{"_index":1440,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization.service.ts:18",{"_index":1443,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["initialization.service.ts:28",{"_index":1446,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["initialize",{"_index":231,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"injectables/PileStateService.html":{}}}],["initializegame",{"_index":976,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{}}}],["initializegame(gameid",{"_index":982,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{}}}],["initiateauthcommand",{"_index":758,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommand(input",{"_index":772,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommandinput",{"_index":759,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["inject",{"_index":1447,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["inject('factory_map",{"_index":1453,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["inject(authservice).checkisloggedin",{"_index":2262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router).navigate(['/login",{"_index":2263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":16,"title":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["injectables",{"_index":18,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"index.html":{}}}],["input",{"_index":115,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["input.required",{"_index":438,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["inputs",{"_index":100,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["insect",{"_index":2113,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["insect_element",{"_index":2126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":2127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instantiated",{"_index":1574,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["intended",{"_index":2189,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interact",{"_index":1491,"title":{},"body":{"injectables/GameStateService.html":{}}}],["interested",{"_index":1589,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameStateService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{},"index.html":{}}}],["invalid",{"_index":929,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["inventory",{"_index":1879,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["isfalse",{"_index":2067,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfalse(value",{"_index":2221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isfriend",{"_index":824,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isfriend(playerid",{"_index":848,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isgamefullorinvalid",{"_index":825,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isloggedin",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlayerService.html":{}}}],["isloggedinsubject",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotnull",{"_index":275,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":2222,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":432,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(value",{"_index":2223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":2068,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(value",{"_index":2224,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isplayeralreadyadded",{"_index":943,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["isready",{"_index":279,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DominantSpeciesGameComponent.html":{}}}],["istrue",{"_index":215,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istrue(value",{"_index":2225,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":1145,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{}}}],["item.id",{"_index":1683,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["items",{"_index":2217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["itself",{"_index":2201,"title":{},"body":{"miscellaneous/functions.html":{}}}],["joingame",{"_index":1394,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["joingame(gameid",{"_index":1402,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["joins",{"_index":1720,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["json",{"_index":1195,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["json.parse(playerauthdata",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(element",{"_index":373,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["json.stringify(newgamestateelement",{"_index":1687,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["json.stringify(this.authresulttoplayerauth(authresult",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":763,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["jwtdecode(token",{"_index":780,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["k",{"_index":2203,"title":{},"body":{"miscellaneous/functions.html":{}}}],["key",{"_index":1590,"title":{},"body":{"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":1674,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":1584,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":579,"title":{},"body":{"classes/Area.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":1347,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/game/${gameid}/state",{"_index":1357,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/player/${username",{"_index":1358,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/game/${gameid",{"_index":1354,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/player/${player.username",{"_index":1362,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post('/game",{"_index":1349,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post(`/game/${gamestate.gameid}/state",{"_index":1356,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["leaf",{"_index":2289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaving",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":129,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["length",{"_index":870,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["lengthsubject",{"_index":1823,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["level",{"_index":1583,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["list",{"_index":429,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["lobby",{"_index":161,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["lobbypagecomponent",{"_index":160,"title":{"components/LobbyPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["local",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameStateStoreService.html":{}}}],["localstorage.getitem(key",{"_index":1782,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1781,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":1783,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstoragekey",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["localstoragekey.player_auth_data",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorageservice",{"_index":674,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["lodash",{"_index":1275,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"dependencies.html":{}}}],["log",{"_index":1000,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["logged",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedinusername",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":163,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["login(username",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["loginform",{"_index":1792,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["loginformdata",{"_index":1784,"title":{"interfaces/LoginFormData.html":{}},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecomponent",{"_index":162,"title":{"components/LoginPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["logout",{"_index":165,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["logoutpagecomponent",{"_index":164,"title":{"components/LogoutPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["long",{"_index":1980,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["maintain",{"_index":1570,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["making",{"_index":1571,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":2114,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mammal_element",{"_index":2128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":2129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["management",{"_index":1315,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["management/game",{"_index":1314,"title":{},"body":{"injectables/GameManagementClientService.html":{},"coverage.html":{}}}],["management/game.service",{"_index":875,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["management/game.service.ts",{"_index":1393,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["management/game.service.ts:19",{"_index":1396,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:30",{"_index":1399,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:47",{"_index":1400,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:51",{"_index":1397,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:55",{"_index":1401,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:68",{"_index":1403,"title":{},"body":{"injectables/GameService.html":{}}}],["management/player.service",{"_index":433,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{}}}],["management/player.service.ts",{"_index":1917,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["management/player.service.ts:12",{"_index":1925,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:13",{"_index":1928,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:16",{"_index":1919,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:40",{"_index":1922,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:45",{"_index":1921,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:51",{"_index":1924,"title":{},"body":{"injectables/PlayerService.html":{}}}],["manager.service",{"_index":1374,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["manager.service.ts",{"_index":22,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"coverage.html":{}}}],["manager.service.ts:10",{"_index":32,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:16",{"_index":36,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:9",{"_index":46,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["map",{"_index":54,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((animals",{"_index":441,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["map((gamestate",{"_index":1672,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["map((serviceready",{"_index":69,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["map((space",{"_index":316,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["matautocomplete",{"_index":796,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matautocompletetrigger",{"_index":795,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matbutton",{"_index":798,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcard",{"_index":198,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardcontent",{"_index":1791,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardheader",{"_index":1958,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardtitle",{"_index":393,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matcell",{"_index":1728,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcelldef",{"_index":1734,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["match",{"_index":604,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["matches",{"_index":1654,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchip",{"_index":805,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["matchipset",{"_index":1736,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcolumndef",{"_index":1726,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matformfield",{"_index":792,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matformfieldmodule",{"_index":793,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matgridlist",{"_index":394,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matgridtile",{"_index":395,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matheadercell",{"_index":1727,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheadercelldef",{"_index":1733,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrow",{"_index":1729,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrowdef",{"_index":1731,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["maticon",{"_index":803,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["maticonbutton",{"_index":804,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matinput",{"_index":799,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matminifabbutton",{"_index":1735,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matoption",{"_index":797,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["matprogressspinner",{"_index":972,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["matrow",{"_index":1730,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matrowdef",{"_index":1732,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matsnackbar",{"_index":834,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["mattable",{"_index":1725,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["mattooltip",{"_index":806,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["max_players",{"_index":813,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["meat",{"_index":2135,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":2196,"title":{},"body":{"miscellaneous/functions.html":{}}}],["metadata",{"_index":88,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["method",{"_index":1577,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["minimize",{"_index":505,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["miscellaneous",{"_index":2099,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model/action",{"_index":116,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{}}}],["model/animal.model",{"_index":502,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["model/area.model",{"_index":635,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameService.html":{}}}],["model/element.model",{"_index":213,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{}}}],["model/faction.model",{"_index":1159,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameService.html":{}}}],["model/game",{"_index":1219,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/pile.model",{"_index":1409,"title":{},"body":{"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules",{"_index":2230,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monkey",{"_index":2282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1618,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":1576,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["new",{"_index":44,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newdocument",{"_index":1485,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newgamestateelement",{"_index":1639,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":1684,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":583,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["newstate.gameelements",{"_index":1481,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.id",{"_index":601,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["newstate.kind",{"_index":2016,"title":{},"body":{"classes/Space.html":{}}}],["newstate.patchid",{"_index":1486,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.piece",{"_index":2017,"title":{},"body":{"classes/Space.html":{}}}],["newstate.space.foreach((spacestate",{"_index":609,"title":{},"body":{"classes/Area.html":{}}}],["newstate.space.length",{"_index":606,"title":{},"body":{"classes/Area.html":{}}}],["next",{"_index":2178,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextactionpawnspaceindex",{"_index":1029,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextavailablespace",{"_index":562,"title":{},"body":{"classes/Area.html":{}}}],["nextavailablespace(kind",{"_index":577,"title":{},"body":{"classes/Area.html":{}}}],["nextelementspaceindex",{"_index":1031,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextspace",{"_index":308,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["nextspace.addpiece(element",{"_index":310,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["ngclass",{"_index":396,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ngforof",{"_index":800,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ngif",{"_index":801,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ngondestroy",{"_index":826,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["ngoninit",{"_index":203,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LogoutPageComponent.html":{}}}],["null",{"_index":123,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":241,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/CreateGamePageComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PlayerAuthData.html":{}}}],["obj",{"_index":2192,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":1602,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":1860,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["object1",{"_index":2186,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":2183,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":1619,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":39,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":1585,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["of(0",{"_index":1115,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["of(undefined",{"_index":1439,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["oldstate",{"_index":1472,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameelements",{"_index":1483,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameid",{"_index":1477,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.patchid",{"_index":1479,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":1643,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ondestroy",{"_index":791,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["one",{"_index":1595,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["oninit",{"_index":196,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LogoutPageComponent.html":{}}}],["onplayerblur",{"_index":827,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onplayerblur(index",{"_index":853,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onplayerinput",{"_index":828,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onplayerinput(index",{"_index":855,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["onpush",{"_index":437,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["onsubmit",{"_index":1797,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":1492,"title":{},"body":{"injectables/GameStateService.html":{}}}],["otherplayers",{"_index":961,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameService.html":{}}}],["others",{"_index":1573,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":600,"title":{},"body":{"classes/Area.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["overview",{"_index":2226,"title":{"index.html":{}},"body":{"index.html":{}}}],["overwrites",{"_index":1603,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":103,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ownerid",{"_index":1130,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["package",{"_index":2079,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":171,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page'},{'name",{"_index":147,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.html",{"_index":807,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.scss",{"_index":808,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts",{"_index":790,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:118",{"_index":856,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:12",{"_index":1816,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:122",{"_index":854,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:164",{"_index":850,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:170",{"_index":842,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:18",{"_index":1817,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:184",{"_index":857,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:191",{"_index":847,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:195",{"_index":846,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:199",{"_index":839,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:211",{"_index":849,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:215",{"_index":843,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:22",{"_index":1811,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:23",{"_index":1809,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts:24",{"_index":1969,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:36",{"_index":1810,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:41",{"_index":1970,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:49",{"_index":1749,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:50",{"_index":1750,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:51",{"_index":1742,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:52",{"_index":864,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:53",{"_index":866,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:54",{"_index":868,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:55",{"_index":860,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:56",{"_index":862,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:57",{"_index":861,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:58",{"_index":872,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:59",{"_index":858,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:60",{"_index":836,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:64",{"_index":1747,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:71",{"_index":1745,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:74",{"_index":852,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page.component.ts:75",{"_index":1744,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:79",{"_index":1743,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:84",{"_index":851,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["page.component.ts:90",{"_index":845,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["page/create",{"_index":789,"title":{},"body":{"components/CreateGamePageComponent.html":{},"coverage.html":{}}}],["page/lobby",{"_index":1724,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":1786,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/logout",{"_index":1814,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["page/sign",{"_index":1945,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":1205,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1351,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["particular",{"_index":1594,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["passed",{"_index":1655,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["password",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["password).then((success",{"_index":1801,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["patch",{"_index":1196,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["patch.service",{"_index":1543,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":1464,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:12",{"_index":1474,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":1471,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patchid",{"_index":1478,"title":{},"body":{"injectables/GameStatePatchService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["pawn",{"_index":93,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pawn'},{'name",{"_index":135,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["pawn.component",{"_index":190,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.component.html",{"_index":97,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.scss",{"_index":99,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts",{"_index":87,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["pawn.component.ts:15",{"_index":107,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:17",{"_index":109,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:21",{"_index":111,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:25",{"_index":113,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.model",{"_index":117,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pawn.model.ts",{"_index":174,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["pawn/action",{"_index":86,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["pawns",{"_index":457,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["person_add",{"_index":967,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["piece",{"_index":176,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":1852,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piececount",{"_index":1869,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piecefactory",{"_index":1824,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":426,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"miscellaneous/enumerations.html":{}}}],["pieces",{"_index":1095,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(null",{"_index":1875,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":1874,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount.length",{"_index":1870,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":1871,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pile",{"_index":345,"title":{"classes/Pile.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile(deepclone(element_draw_pool_state",{"_index":1295,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["pile(state",{"_index":1428,"title":{},"body":{"injectables/GameService.html":{}}}],["pile.constant",{"_index":1895,"title":{},"body":{"interfaces/PileConfig.html":{}}}],["pileadapter",{"_index":331,"title":{"classes/PileAdapter.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["pileadapter(config.actionpawnpile",{"_index":383,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileadapter(config.speciespile",{"_index":385,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileconfig",{"_index":1892,"title":{"interfaces/PileConfig.html":{}},"body":{"interfaces/PileConfig.html":{},"coverage.html":{}}}],["pileidenum",{"_index":1104,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{}}}],["pileidenum.action_pawn_amphibian",{"_index":1896,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_arachnid",{"_index":1898,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_bird",{"_index":1900,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_insect",{"_index":1902,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_mammal",{"_index":1904,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_reptile",{"_index":1906,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.element",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_amphibian",{"_index":1897,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_arachnid",{"_index":1899,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_bird",{"_index":1901,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_insect",{"_index":1903,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_mammal",{"_index":1905,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_reptile",{"_index":1907,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileids",{"_index":533,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(actionpawnpileid",{"_index":535,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(speciespileid",{"_index":536,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileidsbyanimal",{"_index":496,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pileregistryservice",{"_index":481,"title":{"injectables/PileRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":1088,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pileservice",{"_index":1580,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["pilestate",{"_index":1272,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["pilestateservice",{"_index":1909,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":1910,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":68,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["pipe(filter(isnotundefined",{"_index":896,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["placeholder",{"_index":1721,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player",{"_index":859,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["player.friends",{"_index":1363,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["player.username",{"_index":1937,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player_auth_data",{"_index":2142,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playerauthdata",{"_index":670,"title":{"interfaces/PlayerAuthData.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["playercollection",{"_index":1348,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["playercollection.map((player",{"_index":1936,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playercollection.players",{"_index":1361,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["playercontrols",{"_index":814,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["playerid",{"_index":840,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["playerids",{"_index":1266,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["playerids.foreach((playerid",{"_index":1305,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["players",{"_index":908,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/LobbyPageComponent.html":{}}}],["players.filter((player",{"_index":915,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["players.foreach((player",{"_index":917,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["playerservice",{"_index":406,"title":{"injectables/PlayerService.html":{}},"body":{"components/AnimalCardComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["playersubscription",{"_index":894,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["please",{"_index":1975,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["pool",{"_index":154,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pool.service",{"_index":267,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameReadyService.html":{}}}],["pool.service.ts",{"_index":1081,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:15",{"_index":1096,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":1097,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:17",{"_index":1099,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:18",{"_index":1087,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:24",{"_index":1089,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:37",{"_index":1101,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:45",{"_index":1103,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:53",{"_index":1091,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:57",{"_index":1094,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["populated",{"_index":927,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["possible",{"_index":511,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["previous",{"_index":1604,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":24,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{}}}],["processedfactionids",{"_index":475,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["progress",{"_index":1522,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["promise",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"properties.html":{}}}],["protected",{"_index":559,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{}}}],["provide",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":2212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providedin",{"_index":56,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["providehttpclient",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["provider.service",{"_index":431,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameReadyService.html":{}}}],["provider.service.ts",{"_index":471,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["provider.service.ts:16",{"_index":495,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:17",{"_index":491,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:18",{"_index":493,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:19",{"_index":482,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:28",{"_index":488,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:46",{"_index":485,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:50",{"_index":487,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:78",{"_index":490,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["providerouter(routes",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":1488,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pull",{"_index":1083,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pull(count",{"_index":1090,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pulled",{"_index":1846,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany",{"_index":1826,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany(count",{"_index":1839,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullone",{"_index":1827,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pulls",{"_index":1841,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put",{"_index":1084,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put(pieces",{"_index":1093,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["puts",{"_index":1849,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["queryparams",{"_index":1430,"title":{},"body":{"injectables/GameService.html":{}}}],["quickly",{"_index":510,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["random",{"_index":1822,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reactiveformsmodule",{"_index":802,"title":{},"body":{"components/CreateGamePageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["read/write",{"_index":2191,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":322,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["readonlymap",{"_index":1059,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["ready",{"_index":23,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["ready.service",{"_index":987,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["ready.service.ts",{"_index":1364,"title":{},"body":{"injectables/GameReadyService.html":{},"coverage.html":{}}}],["ready.service.ts:13",{"_index":1373,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:14",{"_index":1372,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:15",{"_index":1368,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:27",{"_index":1370,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:40",{"_index":1369,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["ready.service.ts:51",{"_index":1371,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["readyobs",{"_index":64,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["readysubject",{"_index":25,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["received",{"_index":1142,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["refactored",{"_index":1719,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["refresh",{"_index":1765,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["refreshtoken",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["regardless",{"_index":1593,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["region",{"_index":2259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["register",{"_index":620,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(element",{"_index":1166,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{}}}],["register(elements",{"_index":627,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":652,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":1498,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":1514,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":1228,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registeredareaids",{"_index":280,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredareaids.has(areaidenum.action_display_adaption",{"_index":281,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredelementsubject",{"_index":618,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":619,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(pileidenum.element",{"_index":1108,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":641,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":645,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":1235,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":1179,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":1912,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":1499,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":1516,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":1500,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":1518,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement",{"_index":1625,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":1638,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registry.service",{"_index":266,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":615,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:14",{"_index":623,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:16",{"_index":1218,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:17",{"_index":1216,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:18",{"_index":1217,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:19",{"_index":1212,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:21",{"_index":1176,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:22",{"_index":1178,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:23",{"_index":1214,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:25",{"_index":1177,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:26",{"_index":1174,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:29",{"_index":1215,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":1494,"title":{},"body":{"injectables/GameStateService.html":{}}}],["remove",{"_index":2015,"title":{},"body":{"classes/Space.html":{}}}],["removeactionpawn",{"_index":232,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removeactionpawn(index",{"_index":244,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removedpiece",{"_index":2014,"title":{},"body":{"classes/Space.html":{}}}],["removeelement",{"_index":233,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/AnimalElements.html":{}}}],["removeelement(element",{"_index":365,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["removeelement(index",{"_index":246,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removefriend",{"_index":1918,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removefriend(username",{"_index":1923,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removepiece",{"_index":1992,"title":{},"body":{"classes/Space.html":{}}}],["removeremainingelements",{"_index":234,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["replenish",{"_index":235,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["represents",{"_index":1832,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reptile",{"_index":2115,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reptile_element",{"_index":2130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":2131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["req",{"_index":2180,"title":{},"body":{"miscellaneous/functions.html":{}}}],["require",{"_index":1525,"title":{},"body":{"injectables/GameStateService.html":{}}}],["required",{"_index":408,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["requiretransaction",{"_index":1501,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":1569,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":1489,"title":{},"body":{"injectables/GameStateService.html":{}}}],["results",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":2207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":2204,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":124,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":2198,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rollback",{"_index":1704,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":1502,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":57,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["root'},{'name",{"_index":143,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["route",{"_index":981,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["router",{"_index":832,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["routerlink",{"_index":1789,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["routeroutlet",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":55,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["same",{"_index":1642,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["score",{"_index":1131,"title":{},"body":{"classes/Faction.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["sdk/client",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["see",{"_index":1805,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["seed",{"_index":2136,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":913,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["selectedplayers",{"_index":910,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.add(ensuredefined(this.currentuser).username",{"_index":914,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.has(friend",{"_index":951,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.has(input",{"_index":931,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selectedplayers.has(player",{"_index":916,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["selector",{"_index":91,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["selector(gamestate",{"_index":1673,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sendgsptobackend",{"_index":1432,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":1433,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["service",{"_index":1578,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["service.ready",{"_index":66,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["service/action",{"_index":214,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/animal",{"_index":430,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/auth/auth.service",{"_index":1790,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{}}}],["service/auth/sign",{"_index":1947,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["service/game",{"_index":873,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["serviceready",{"_index":73,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["serviceready.every((ready",{"_index":71,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["services",{"_index":1495,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":494,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/CreateGamePageComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["set(this.playercontrols.value.filter(boolean",{"_index":947,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["seta",{"_index":2218,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setarea",{"_index":1503,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":1527,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setb",{"_index":2216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setdifference",{"_index":501,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdifference(factionids",{"_index":516,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["setdifference(seta",{"_index":2215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setentitystate",{"_index":642,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":647,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":1504,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":1529,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfriends",{"_index":1322,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setfriends(player",{"_index":1340,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setgamestate",{"_index":1599,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":1648,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setinitialgamestate",{"_index":1323,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setinitialgamestate(gamestate",{"_index":1342,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setpile",{"_index":1505,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":1531,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":1129,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":1137,"title":{},"body":{"classes/Faction.html":{}}}],["setstate",{"_index":563,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":581,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["setstoragekey",{"_index":1774,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setstoragekey(key",{"_index":1779,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settransactionstateelement",{"_index":1626,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":1651,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["several",{"_index":507,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameStateStoreService.html":{}}}],["shuffle",{"_index":1273,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffle(object.values(animalenum",{"_index":1304,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffledanimals",{"_index":1303,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffledanimals[index",{"_index":1307,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["sign",{"_index":167,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal",{"_index":206,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal(0",{"_index":416,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["signal(false",{"_index":986,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["signal(undefined",{"_index":1748,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["signalready",{"_index":27,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["signup",{"_index":741,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signup(username",{"_index":754,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signupcommand",{"_index":760,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupcommand(input",{"_index":782,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupconfirmform",{"_index":1949,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["signupconfirmformdata",{"_index":1943,"title":{"interfaces/SignUpConfirmFormData.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"coverage.html":{}}}],["signupconfirmpagecomponent",{"_index":166,"title":{"components/SignUpConfirmPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupform",{"_index":1959,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signupform.dirty",{"_index":1973,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"email\")?.errors?.[\"email",{"_index":1974,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"password\")?.errors?.[\"minlength",{"_index":1978,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.invalid",{"_index":1972,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupformdata",{"_index":1957,"title":{"interfaces/SignUpFormData.html":{}},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signuppagecomponent",{"_index":170,"title":{"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupservice",{"_index":1946,"title":{"injectables/SignUpService.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["skip",{"_index":1240,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["skull",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":1758,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["snackbar",{"_index":833,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["snake",{"_index":2284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["someone",{"_index":1588,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sort",{"_index":1759,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["space",{"_index":185,"title":{"classes/Space.html":{}},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"components/ElementSpaceComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space'},{'name",{"_index":137,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["space(spacestate",{"_index":589,"title":{},"body":{"classes/Area.html":{}}}],["space.component",{"_index":210,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["space.component.html",{"_index":186,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.scss",{"_index":187,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts",{"_index":184,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space.component.ts:16",{"_index":188,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts:18",{"_index":1120,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.kind",{"_index":288,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["space.model",{"_index":585,"title":{},"body":{"classes/Area.html":{}}}],["space.piece",{"_index":292,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{}}}],["space.piece.kind",{"_index":368,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["space.removepiece",{"_index":317,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["space.state$.subscribe((spacestate",{"_index":596,"title":{},"body":{"classes/Area.html":{}}}],["space/action",{"_index":183,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{}}}],["space/element",{"_index":209,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space/eyeball/eyeball.component",{"_index":211,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["spacekindenum",{"_index":271,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":289,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"miscellaneous/variables.html":{}}}],["spacekindenum.element",{"_index":295,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":304,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["spaces.filter",{"_index":287,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["spaces.filter((space",{"_index":376,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["spacessubject",{"_index":557,"title":{},"body":{"classes/Area.html":{}}}],["spacestate",{"_index":558,"title":{},"body":{"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Space.html":{}}}],["species",{"_index":150,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/PileConfig.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["species.model",{"_index":351,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["species/animal/noun",{"_index":2273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/element/noun",{"_index":2264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/other/noun",{"_index":2286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":2157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":2159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":2161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":2163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":2165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":2167,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":2158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":2160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":2162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":2164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":2166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciespiece",{"_index":350,"title":{"interfaces/SpeciesPiece.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["speciespile",{"_index":326,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["speciespileid",{"_index":528,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["speciespilelength",{"_index":401,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciesreptile",{"_index":2168,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specified",{"_index":1842,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["spider",{"_index":2276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":989,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["src/.../animal.constant.ts",{"_index":2101,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":2170,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area.constant.ts",{"_index":2102,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":2171,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../element",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../element.constant.ts",{"_index":2103,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../error",{"_index":2174,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../game",{"_index":2104,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../image.constant.ts",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":2106,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../misc.ts",{"_index":2172,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../piece.constant.ts",{"_index":2108,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../piece.model.ts",{"_index":2173,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pile",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pile.constant.ts",{"_index":2109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../predicate.ts",{"_index":2175,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2024,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/component/create",{"_index":788,"title":{},"body":{"components/CreateGamePageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/lobby",{"_index":1723,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/login",{"_index":1785,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/logout",{"_index":1813,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/sign",{"_index":1944,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/constant/game",{"_index":2139,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/constant/local",{"_index":2141,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/gaurd/auth.guard.ts",{"_index":2033,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/interceptor/api",{"_index":2035,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/auth.interceptor.ts",{"_index":2038,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/error",{"_index":2040,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":555,"title":{},"body":{"classes/Area.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:10",{"_index":567,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:21",{"_index":576,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:47",{"_index":578,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:7",{"_index":568,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:8",{"_index":570,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:9",{"_index":569,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":1126,"title":{},"body":{"classes/Faction.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:13",{"_index":1151,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:17",{"_index":1136,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":1133,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":1138,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:5",{"_index":1147,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:9",{"_index":1149,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":1183,"title":{},"body":{"classes/GameElement.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":2049,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":1821,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:10",{"_index":1836,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:100",{"_index":1887,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:104",{"_index":1888,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:108",{"_index":1889,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:11",{"_index":1837,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:12",{"_index":1835,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:13",{"_index":1828,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:32",{"_index":1850,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:39",{"_index":1838,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:49",{"_index":1840,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:71",{"_index":1847,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:79",{"_index":1848,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:89",{"_index":1886,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:92",{"_index":1890,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:96",{"_index":1891,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":1916,"title":{},"body":{"interfaces/PlayerAuthData.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":1988,"title":{},"body":{"classes/Space.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:10",{"_index":1998,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:11",{"_index":1993,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:20",{"_index":2003,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:27",{"_index":2005,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:31",{"_index":2007,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:35",{"_index":2000,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:44",{"_index":2001,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:55",{"_index":2002,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:7",{"_index":1996,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:8",{"_index":1994,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:9",{"_index":1995,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/service/auth/auth.service.ts",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/auth.service.ts:14",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:15",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:25",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:35",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:50",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:57",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:66",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:74",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:78",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/cognito",{"_index":737,"title":{},"body":{"injectables/CognitoClientService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/sign",{"_index":1981,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["src/app/engine/service/game",{"_index":614,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/service/local",{"_index":1770,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/engine/util/misc.ts",{"_index":2061,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/util/predicate.ts",{"_index":2066,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/action",{"_index":85,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["src/app/game/component/animal",{"_index":391,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["src/app/game/component/dominant",{"_index":969,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/draw",{"_index":996,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts",{"_index":1038,"title":{},"body":{"components/ElementComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts:16",{"_index":1041,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:18",{"_index":1043,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:22",{"_index":1044,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:26",{"_index":1045,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/constant/animal.constant.ts",{"_index":2069,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/area.constant.ts",{"_index":2070,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element",{"_index":1049,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element.constant.ts",{"_index":2072,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/game",{"_index":2073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/image.constant.ts",{"_index":2075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/piece.constant.ts",{"_index":2143,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/pile",{"_index":1893,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/pile.constant.ts",{"_index":2144,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/model/action",{"_index":77,"title":{},"body":{"interfaces/ActionDisplayService.html":{},"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts",{"_index":321,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts:103",{"_index":341,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:107",{"_index":343,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:23",{"_index":461,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:24",{"_index":460,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:33",{"_index":465,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:43",{"_index":462,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:55",{"_index":463,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:67",{"_index":467,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:73",{"_index":469,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:79",{"_index":333,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:80",{"_index":332,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:81",{"_index":334,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:82",{"_index":329,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:91",{"_index":336,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:95",{"_index":337,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:99",{"_index":339,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/element.model.ts",{"_index":1118,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["src/app/game/model/species.model.ts",{"_index":2018,"title":{},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["src/app/game/service/action",{"_index":19,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["src/app/game/service/animal",{"_index":470,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["src/app/game/service/element",{"_index":1080,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["src/app/game/service/game",{"_index":1252,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"coverage.html":{}}}],["standalone",{"_index":94,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["start",{"_index":1677,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["startcase",{"_index":1274,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["startcase(assignedanimal",{"_index":1309,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["started",{"_index":1557,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["starttransaction",{"_index":1506,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["state",{"_index":181,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.constant",{"_index":1282,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["state.constant.ts",{"_index":2074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.kind",{"_index":2009,"title":{},"body":{"classes/Space.html":{}}}],["state.model",{"_index":1278,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":1716,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.model.ts:27",{"_index":1717,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["state.owner",{"_index":1854,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["state.piece",{"_index":2011,"title":{},"body":{"classes/Space.html":{}}}],["state.service",{"_index":636,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":639,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":658,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:15",{"_index":1238,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{}}}],["state.service.ts:16",{"_index":1231,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:22",{"_index":1239,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:23",{"_index":1236,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:24",{"_index":1237,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:26",{"_index":1233,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{}}}],["state.service.ts:30",{"_index":1533,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:34",{"_index":1513,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:37",{"_index":1232,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:41",{"_index":1234,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:47",{"_index":1526,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:54",{"_index":1520,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:60",{"_index":1535,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:64",{"_index":1537,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:68",{"_index":1528,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:72",{"_index":1515,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:76",{"_index":1539,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:80",{"_index":1530,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:83",{"_index":1517,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:87",{"_index":1541,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:91",{"_index":1532,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:95",{"_index":1519,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.space",{"_index":594,"title":{},"body":{"classes/Area.html":{}}}],["state.space.map((spacestate",{"_index":588,"title":{},"body":{"classes/Area.html":{}}}],["state/game",{"_index":1011,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":937,"title":{},"body":{"components/CreateGamePageComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["statesubject",{"_index":561,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["storage.constant",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.constant.ts",{"_index":2107,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["storage.service",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service.ts",{"_index":1771,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1778,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:15",{"_index":1780,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:7",{"_index":1776,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store.service",{"_index":1542,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":1568,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:106",{"_index":1661,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:110",{"_index":1663,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:118",{"_index":1630,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:123",{"_index":1649,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:131",{"_index":1656,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:139",{"_index":1631,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:148",{"_index":1645,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:158",{"_index":1664,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:162",{"_index":1665,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:166",{"_index":1646,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:170",{"_index":1635,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:174",{"_index":1666,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:178",{"_index":1647,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:182",{"_index":1636,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:186",{"_index":1667,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:190",{"_index":1650,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:194",{"_index":1637,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:39",{"_index":1658,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:40",{"_index":1659,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:41",{"_index":1628,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:47",{"_index":1633,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:63",{"_index":1652,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:89",{"_index":1640,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stores",{"_index":1644,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":98,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["sub.unsubscribe",{"_index":902,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{}}}],["subject",{"_index":1997,"title":{},"body":{"classes/Space.html":{}}}],["subscribe",{"_index":282,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((allready",{"_index":74,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["subscribe((animal",{"_index":446,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["subscribe((player",{"_index":897,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["subscribers",{"_index":1701,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["subscription",{"_index":867,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":815,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{}}}],["substatearray",{"_index":1679,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":1682,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":1691,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":1685,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["success",{"_index":1802,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["such",{"_index":1579,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sum",{"_index":1861,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["sun",{"_index":2137,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super(areastatesvc",{"_index":638,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":1165,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":1911,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":586,"title":{},"body":{"classes/Area.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["super.register(elementsarray",{"_index":1169,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["system",{"_index":1490,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":571,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":2078,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2077,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1037,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["takeaction",{"_index":1001,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["taken",{"_index":1612,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":1600,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["template",{"_index":82,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["templateurl",{"_index":96,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["tgameelement",{"_index":626,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstatesvc",{"_index":1211,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["then((player",{"_index":1931,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this._action",{"_index":2012,"title":{},"body":{"classes/Space.html":{}}}],["this._drawpool",{"_index":1109,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":1694,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate.gameelements[key",{"_index":1690,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate.playerids",{"_index":1705,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":2010,"title":{},"body":{"classes/Space.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":1703,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":1697,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":1699,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":1198,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.id",{"_index":1203,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.inventory[key",{"_index":1862,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[kind",{"_index":1873,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[piece.kind",{"_index":1881,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.name",{"_index":1153,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.ownerid",{"_index":1154,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.score",{"_index":1155,"title":{},"body":{"classes/Faction.html":{}}}],["this._transactionstate",{"_index":1675,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate.gameelements",{"_index":1680,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.actiondisplaymanagerservice.ready",{"_index":1392,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.actionpawn?.name",{"_index":126,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawn?.owner",{"_index":125,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawnpile",{"_index":382,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.actionpawnpilelength.set(length",{"_index":451,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawns",{"_index":290,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawns.set(actionpawns",{"_index":220,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.actionpawnspaces",{"_index":286,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces.map",{"_index":291,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.asobservable",{"_index":251,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.next(this.actionpawns",{"_index":293,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.adaptionactiondisplayservice",{"_index":63,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["this.adaptionactiondisplayservice.actionpawns$.subscribe((actionpawns",{"_index":219,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.actionpawns.findindex",{"_index":1030,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.addactionpawn(nextactionpawnspaceindex",{"_index":1033,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.elements$.subscribe((elements",{"_index":221,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.elements.findindex",{"_index":1032,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.ready$.pipe(filter(istrue",{"_index":217,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.removeelement(nextelementspaceindex",{"_index":1034,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionarea",{"_index":1025,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.addedelementspaces.find",{"_index":367,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.addedelementspaces.map((space",{"_index":378,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalbyid.set(faction.id",{"_index":541,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalelements",{"_index":386,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalfactory(animalconfig",{"_index":542,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalproviderservice.animals",{"_index":440,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalproviderservice.animals$.subscribe((animals",{"_index":1384,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.animalproviderservice.get(ensuredefined(this.currentplayerfaction).id",{"_index":1027,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.animalsready",{"_index":1391,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.animalssubject.asobservable",{"_index":492,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalssubject.next(array.from(this.animalbyid.values",{"_index":543,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.applygsp(gsp",{"_index":1546,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.area",{"_index":283,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.area.spaces$.subscribe((spaces",{"_index":285,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.arearegistryservice.get(areaidenum.action_display_adaption",{"_index":284,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["this.arearegistryservice.register(new",{"_index":1421,"title":{},"body":{"injectables/GameService.html":{}}}],["this.arearegistryservice.registeredids",{"_index":1022,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.arearegistrysvc.get(elementareaid",{"_index":538,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":530,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.authservice.isloggedin$.pipe().subscribe((isloggedin",{"_index":1929,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.authservice.loggedinusername",{"_index":1352,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["this.authservice.login(username",{"_index":1800,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.authservice.logout",{"_index":1818,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["this.availablefriends",{"_index":948,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.buildactiondisplay",{"_index":1291,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.buildanimal(faction",{"_index":520,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimals",{"_index":503,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildelementdrawpool",{"_index":1289,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.buildfactions(playerids",{"_index":1290,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.cognitoclient.send(command",{"_index":775,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclientservice.confirmsignup(username",{"_index":1987,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.cognitoclientservice.decodejwttoken(ensuredefined(authresult.idtoken",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.login(username",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.signup(username",{"_index":1986,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.currentplayer",{"_index":1932,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayer.set(player",{"_index":1753,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.currentplayerfaction",{"_index":1018,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.currentplayerready",{"_index":1390,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.currentplayersubject.asobservable",{"_index":1926,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayersubject.next(this.currentplayer",{"_index":1933,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentuser",{"_index":898,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.drawpool.length",{"_index":1114,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.pullmany(count",{"_index":1116,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.put(pieces",{"_index":1117,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.element?.kind",{"_index":1046,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.element?.name",{"_index":1047,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.elementbyid.set(element.id",{"_index":1224,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementdrawpool",{"_index":1288,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.elementdrawpool.pullmany(4).foreach((element",{"_index":1298,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.elementdrawpoolservice.pull(4).foreach((element",{"_index":307,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementdrawpoolservice.ready",{"_index":277,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameReadyService.html":{}}}],["this.elements",{"_index":296,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.filter(isnotnull).length",{"_index":300,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.set(elements",{"_index":222,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["this.elementspaces",{"_index":294,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspaces.map((space",{"_index":297,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementssubject.asobservable",{"_index":258,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.allelements",{"_index":354,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.elements",{"_index":298,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":1241,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitpilestate",{"_index":1876,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emitstate",{"_index":1156,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emptyelementspaces.set(array(6",{"_index":448,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.errormessage.set('login",{"_index":1803,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.errormessage.set('sign",{"_index":1955,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.errormessages[index",{"_index":920,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.faction",{"_index":380,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction().id",{"_index":444,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction().ownerid",{"_index":418,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction.id",{"_index":389,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.name",{"_index":390,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.factionassignment",{"_index":1162,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":1171,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":1163,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":1172,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionregistryservice.factionassignment$.subscribe((factionassignments",{"_index":504,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.get(factionid",{"_index":519,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.register(new",{"_index":1424,"title":{},"body":{"injectables/GameService.html":{}}}],["this.factionregistrysvc.factionassignment$.subscribe((factionassignments",{"_index":1015,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factionregistrysvc.get(factionassignment.factionid",{"_index":1017,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions",{"_index":1016,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions.find",{"_index":1019,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factorybygametitle",{"_index":1454,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["this.factorybygametitle.get(gametitle",{"_index":1457,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["this.fb.array",{"_index":890,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.fb.control",{"_index":893,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.fetchgames",{"_index":1754,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.fetchplayers(index",{"_index":924,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.filteredplayers[index",{"_index":907,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.formbuilder.group",{"_index":1795,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.gameelementstates",{"_index":1286,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstates.area.push(this.buildadaptionactiondisplay().state",{"_index":1302,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstates.faction.push",{"_index":1308,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstates.pile.push(this.elementdrawpool.state",{"_index":1294,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.gameelementstatesvc.register(elementsarray",{"_index":1230,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementclientservice",{"_index":1930,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.completegame(gameid",{"_index":1418,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.creategame",{"_index":1410,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.findplayers(username",{"_index":1935,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.getgamesforloggedinplayer",{"_index":1417,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.getlatestgamestate(gameid",{"_index":1419,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.setfriends(ensuredefined(this.currentplayer",{"_index":1939,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.setinitialgamestate(initialgamestate",{"_index":1415,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gameready.set(true",{"_index":994,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.gamereadyservice.ready",{"_index":992,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.games.set(await",{"_index":1760,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.completegame(gameid",{"_index":1763,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.creategame(otherplayers",{"_index":962,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.gameservice.getgamesforloggedinplayer",{"_index":1761,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.initializegame(gameid",{"_index":995,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.gameservice.joingame(gameid",{"_index":1764,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gamestateclient.gsp$.pipe(filter((gsp",{"_index":1544,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":1554,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateinitializationservice.build",{"_index":1413,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamestateservice.playerids.length",{"_index":1386,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.gamestatestore.area",{"_index":1559,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":1553,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":1562,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.gamestate",{"_index":1552,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":1565,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.playerids",{"_index":1558,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":1561,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":1564,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":1567,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":1555,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":1560,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":1563,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate(this.gspservice.apply(this.gamestatestore.gamestate",{"_index":1547,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":1566,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":1548,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":1549,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":1669,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":1671,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":1695,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":659,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":1036,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":1180,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":1913,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":660,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":1181,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":1914,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":661,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":1182,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":1915,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":1026,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getactionpawnforheader",{"_index":414,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getanimal",{"_index":439,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":1244,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":1706,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.getplayer(this.authservice.loggedinusername",{"_index":1359,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.gspservice.create",{"_index":1551,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.hasinvalidplayer",{"_index":939,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.http.get('/game",{"_index":1350,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.http.get('/player",{"_index":1360,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.id",{"_index":602,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["this.initialize",{"_index":276,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.initializegame(gameid",{"_index":991,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.isfriend(input",{"_index":934,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.isloggedin",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.asobservable",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(false",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(true",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.kind",{"_index":1048,"title":{},"body":{"components/ElementComponent.html":{},"classes/Space.html":{}}}],["this.length",{"_index":1858,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject",{"_index":1856,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":1859,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.next(this.length",{"_index":1863,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.localstorageservice.deletedstoragekey(localstoragekey.player_auth_data",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.getstoragekey(localstoragekey.player_auth_data",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.setstoragekey",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1794,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":1798,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":1799,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.max_players",{"_index":891,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.onplayerinput(this.playercontrols.controls.indexof(emptycontrol",{"_index":946,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.owner",{"_index":127,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piececounts.get(key",{"_index":1864,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piecefactory",{"_index":1855,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.length",{"_index":1882,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.pullmany(count",{"_index":1883,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.put(pieces",{"_index":1884,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pileregistryservice.get(actionpawnpileid",{"_index":537,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.get(speciespileid",{"_index":540,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.register(new",{"_index":1427,"title":{},"body":{"injectables/GameService.html":{}}}],["this.pileregistrysvc.get(pileidenum.element",{"_index":1110,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":1106,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.playerauthdata",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playerauthdata.username",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playercontrols",{"_index":889,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.at(index",{"_index":904,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.every((control",{"_index":940,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.find((control",{"_index":942,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.some",{"_index":944,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.controls.some((control",{"_index":952,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playercontrols.value.filter",{"_index":911,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playerservice.addfriend(playerid",{"_index":955,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playerservice.currentplayer",{"_index":895,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.playerservice.currentplayer$.subscribe",{"_index":1377,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.playerservice.currentplayer$.subscribe((player",{"_index":1752,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.playerservice.currentplayer?.username",{"_index":1021,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.playerservice.findplayers(input",{"_index":909,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.processedfactionids",{"_index":517,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pullmany(1)[0",{"_index":1877,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.ready",{"_index":1111,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.asobservable",{"_index":42,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameReadyService.html":{}}}],["this.readysubject.next(allready",{"_index":75,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["this.readysubject.next(this.ready",{"_index":1112,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(true",{"_index":299,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":633,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":1229,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":1225,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":1223,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":1243,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":1247,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":1709,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":1712,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":1715,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.route.snapshot.queryparammap.get('gameid",{"_index":990,"title":{},"body":{"components/DominantSpeciesGameComponent.html":{}}}],["this.router.navigate(['/create",{"_index":1762,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.router.navigate(['/game/dominant",{"_index":1429,"title":{},"body":{"injectables/GameService.html":{}}}],["this.router.navigate(['/lobby",{"_index":963,"title":{},"body":{"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1819,"title":{},"body":{"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.router.navigate(['/sign",{"_index":1968,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.setentitystate(state",{"_index":1249,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":1708,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":1711,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":1714,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.signalready",{"_index":60,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/GameReadyService.html":{}}}],["this.signupconfirmform",{"_index":1950,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.valid",{"_index":1951,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.value",{"_index":1952,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupform",{"_index":1960,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.valid",{"_index":1965,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.value",{"_index":1966,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupservice.confirmsignup(username",{"_index":1953,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupservice.signup(username",{"_index":1967,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.snackbar.open('error",{"_index":964,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.snackbar.open('failed",{"_index":956,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.spaces",{"_index":587,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.foreach((space",{"_index":595,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.length",{"_index":605,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":610,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject",{"_index":590,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.asobservable",{"_index":592,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.next(this.spaces",{"_index":599,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate",{"_index":593,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate[index",{"_index":597,"title":{},"body":{"classes/Area.html":{}}}],["this.speciespile",{"_index":384,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.speciespilelength.set(length",{"_index":453,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.state",{"_index":1201,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject",{"_index":1199,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject.asobservable",{"_index":1202,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject.next(this.state",{"_index":598,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.subscriptions.foreach((sub",{"_index":901,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameReadyService.html":{}}}],["this.subscriptions.push(animalsubscription",{"_index":1388,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.subscriptions.push(currentplayersubscription",{"_index":1380,"title":{},"body":{"injectables/GameReadyService.html":{}}}],["this.subscriptions.push(playersubscription",{"_index":900,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.transactionstate",{"_index":1688,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.updateavailablefriends",{"_index":899,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validinputstates[index",{"_index":930,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validplayers[index].add(player",{"_index":918,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validplayers[index].clear",{"_index":906,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["this.validplayers[index].has(input",{"_index":928,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["those",{"_index":1587,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":302,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":2205,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":2195,"title":{},"body":{"miscellaneous/functions.html":{}}}],["times",{"_index":508,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["title",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["title.constant",{"_index":1408,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{}}}],["title.constant.ts",{"_index":2105,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["todo",{"_index":435,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["token",{"_index":751,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["top",{"_index":1582,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["total",{"_index":1851,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["track",{"_index":223,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["transaction",{"_index":1521,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":1627,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":84,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["true",{"_index":95,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":773,"title":{},"body":{"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{}}}],["tsc",{"_index":1866,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["tslib",{"_index":2095,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1614,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["two",{"_index":1596,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayService.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameReadyService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2232,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1681,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["types/src/auth",{"_index":765,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["types/src/game",{"_index":180,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["types/src/player",{"_index":874,"title":{},"body":{"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["typically",{"_index":1607,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["unchanged",{"_index":2199,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":106,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["undefined)).subscribe((gsp",{"_index":1545,"title":{},"body":{"injectables/GameStateService.html":{}}}],["unknown",{"_index":1868,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{}}}],["up",{"_index":168,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["up.service",{"_index":1948,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["up.service.ts",{"_index":1982,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["up.service.ts:10",{"_index":1985,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:14",{"_index":1984,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:7",{"_index":1983,"title":{},"body":{"injectables/SignUpService.html":{}}}],["update",{"_index":1653,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updateavailablefriends",{"_index":829,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["updated",{"_index":1592,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updateon",{"_index":1963,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["updates",{"_index":1524,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updating",{"_index":1678,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["url.interceptor.ts",{"_index":2036,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":1834,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["used",{"_index":1608,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":2258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["user's",{"_index":912,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["user_password_auth",{"_index":767,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["userattributes",{"_index":781,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["username",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameManagementClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["using",{"_index":1293,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateStoreService.html":{}}}],["util/misc",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateGamePageComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PlayerService.html":{}}}],["util/predicate",{"_index":883,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["v",{"_index":2213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":1977,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["validateplayerauthdata",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateplayerauthdata(playerauthdata",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":936,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["validators",{"_index":1788,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.email",{"_index":1961,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.minlength(6",{"_index":1962,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.required",{"_index":1796,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validinputstates",{"_index":816,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["validplayers",{"_index":817,"title":{},"body":{"components/CreateGamePageComponent.html":{}}}],["value",{"_index":41,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1606,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":133,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["variable",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2234,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1493,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["version",{"_index":2188,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["via",{"_index":1598,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["void",{"_index":38,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/CreateGamePageComponent.html":{},"components/DominantSpeciesGameComponent.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameReadyService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["vpa",{"_index":1971,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["water",{"_index":2138,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":1597,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whenever",{"_index":1591,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whose",{"_index":2208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["withfetch",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([apiurlinterceptor",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":1820,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["yes",{"_index":580,"title":{},"body":{"classes/Area.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2097,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Action {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionDisplayManagerService.html":{"url":"injectables/ActionDisplayManagerService.html","title":"injectable - ActionDisplayManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionDisplayManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signalReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        signalReady\n                        \n                    \n                \n            \n            \n                \nsignalReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.signalReady();\n  }\n\n  signalReady(): void {\n    const actionDisplayServices = [this.adaptionActionDisplayService];\n    const readyObs = actionDisplayServices.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionDisplayService.html":{"url":"interfaces/ActionDisplayService.html","title":"interface - ActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-display.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ready$\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ready$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ready$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface ActionDisplayService {\n  ready$: Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnComponent.html":{"url":"components/ActionPawnComponent.html","title":"component - ActionPawnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-pawn/action-pawn.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./action-pawn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    owner\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        owner\n                    \n                \n\n                \n                    \n                        getowner()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-action-pawn',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './action-pawn.component.html',\n  styleUrl: './action-pawn.component.scss',\n})\nexport class ActionPawnComponent {\n  @Input() actionPawn: ActionPawnPiece | undefined = undefined;\n\n  get owner(): string | null | undefined {\n    return this.actionPawn?.owner;\n  }\n\n  get name(): string | undefined {\n    return this.actionPawn?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.owner) {\n      return getOrThrow(imgPathByKind, this.owner);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionPawnPiece.html":{"url":"interfaces/ActionPawnPiece.html","title":"interface - ActionPawnPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionPawnPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-pawn.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ActionPawnPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnSpaceComponent.html":{"url":"components/ActionPawnSpaceComponent.html","title":"component - ActionPawnSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                                ActionPawnComponent\n                                EyeballComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./action-pawn-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../../../model/action-pawn.model';\nimport { ElementComponent } from '../../../element/element.component';\nimport { ActionPawnComponent } from '../../../action-pawn/action-pawn.component';\nimport { EyeballComponent } from '../eyeball/eyeball.component';\n\n@Component({\n  selector: 'app-action-pawn-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent, ActionPawnComponent, EyeballComponent],\n  templateUrl: './action-pawn-space.component.html',\n  styleUrl: './action-pawn-space.component.scss',\n})\nexport class ActionPawnSpaceComponent {\n  @Input() actionPawn: ActionPawnPiece | null = null;\n}\n\n    \n\n    \n        \n  \n    @if (actionPawn) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (actionPawn) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdaptionActionDisplayCardComponent.html":{"url":"components/AdaptionActionDisplayCardComponent.html","title":"component - AdaptionActionDisplayCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdaptionActionDisplayCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adaption-action-display-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                                ElementSpaceComponent\n                                EyeballComponent\n                                ActionPawnSpaceComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adaption-action-display-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adaption-action-display-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, signal } from '@angular/core';\nimport { MatCard } from '@angular/material/card';\nimport { ElementSpaceComponent } from '../space/element-space/element-space.component';\nimport { EyeballComponent } from '../space/eyeball/eyeball.component';\nimport { ActionPawnSpaceComponent } from '../space/action-pawn-space/action-pawn-space.component';\nimport { ElementPiece } from '../../../model/element.model';\nimport { ActionPawnPiece } from '../../../model/action-pawn.model';\nimport { AdaptionActionDisplayService } from '../../../service/action-display/adaption-action-display.service';\nimport { filter, first } from 'rxjs';\nimport { isTrue } from '../../../../engine/util/predicate';\n\n@Component({\n  selector: 'app-adaption-action-display-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatCard, ElementSpaceComponent, EyeballComponent, ActionPawnSpaceComponent],\n  templateUrl: './adaption-action-display-card.component.html',\n  styleUrl: './adaption-action-display-card.component.scss',\n})\nexport class AdaptionActionDisplayCardComponent implements OnInit {\n  actionPawns = signal([]);\n  elements = signal([]);\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {}\n\n  ngOnInit() {\n    this.adaptionActionDisplayService.ready$.pipe(filter(isTrue), first()).subscribe(() => {\n      this.adaptionActionDisplayService.actionPawns$.subscribe((actionPawns) => {\n        this.actionPawns.set(actionPawns);\n      });\n      this.adaptionActionDisplayService.elements$.subscribe((elements) => {\n        this.elements.set(elements);\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Adaption\n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n      \n      \n        @for (actionPawn of actionPawns(); track $index) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Adaption                  @for (element of elements(); track $index) {                  }                    @for (actionPawn of actionPawns(); track $index) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdaptionActionDisplayCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdaptionActionDisplayService.html":{"url":"injectables/AdaptionActionDisplayService.html","title":"injectable - AdaptionActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdaptionActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/adaption-action-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                actionPawns$\n                            \n                            \n                                actionPawnSpaces\n                            \n                            \n                                    Private\n                                actionPawnsSubject\n                            \n                            \n                                area\n                            \n                            \n                                elements\n                            \n                            \n                                elements$\n                            \n                            \n                                elementSpaces\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActionPawn\n                            \n                            \n                                initialize\n                            \n                            \n                                removeActionPawn\n                            \n                            \n                                removeElement\n                            \n                            \n                                removeRemainingElements\n                            \n                            \n                                replenish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistryService: AreaRegistryService, elementDrawPoolService: ElementDrawPoolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActionPawn\n                        \n                    \n                \n            \n            \n                \naddActionPawn(index: number, actionPawn: ActionPawnPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionPawn\n                                            \n                                                            ActionPawnPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActionPawn\n                        \n                    \n                \n            \n            \n                \nremoveActionPawn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ElementPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRemainingElements\n                        \n                    \n                \n            \n            \n                \nremoveRemainingElements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ElementPiece[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replenish\n                        \n                    \n                \n            \n            \n                \nreplenish()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ActionPawnPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.actionPawnsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionPawnsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.actionPawns)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         (ElementPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.elements)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { ElementDrawPoolService } from '../element-draw-pool.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { ElementPiece } from '../../model/element.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaIdEnum, SpaceKindEnum } from '../../constant/area.constant';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { Space } from '../../../engine/model/space.model';\nimport { isNotNull } from '../../../engine/util/predicate';\nimport { Piece } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdaptionActionDisplayService {\n  area: Area | undefined = undefined;\n  actionPawnSpaces: Space[] = [];\n  actionPawns: (ActionPawnPiece | null)[] = [];\n  private actionPawnsSubject = new BehaviorSubject(this.actionPawns);\n  actionPawns$ = this.actionPawnsSubject.asObservable();\n  elementSpaces: Space[] = [];\n  elements: (ElementPiece | null)[] = [];\n  private elementsSubject = new BehaviorSubject(this.elements);\n  elements$ = this.elementsSubject.asObservable();\n  private readySubject = new BehaviorSubject(false);\n  ready$ = this.readySubject.asObservable();\n\n  constructor(\n    private areaRegistryService: AreaRegistryService,\n    private elementDrawPoolService: ElementDrawPoolService,\n  ) {\n    this.initialize();\n  }\n\n  initialize() {\n    this.elementDrawPoolService.ready$\n      .pipe(\n        combineLatestWith(this.areaRegistryService.registeredIds$),\n        filter(\n          ([isReady, registeredAreaIds]) =>\n            isReady && registeredAreaIds.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        this.area = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n\n        this.area.spaces$.subscribe((spaces) => {\n          this.actionPawnSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ACTION_PAWN,\n          );\n          this.actionPawns = this.actionPawnSpaces.map(\n            (space) => space.piece,\n          ) as (ActionPawnPiece | null)[];\n          this.actionPawnsSubject.next(this.actionPawns);\n\n          this.elementSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ELEMENT,\n          );\n          this.elements = this.elementSpaces.map((space) => space.piece) as (ElementPiece | null)[];\n          this.elementsSubject.next(this.elements);\n          this.readySubject.next(true);\n        });\n      });\n  }\n\n  replenish(): void {\n    if (this.elements.filter(isNotNull).length > 0) {\n      throw new Error('Element spaces must be cleared before replenish');\n    }\n\n    this.elementDrawPoolService.pull(4).forEach((element) => {\n      if (element) {\n        const nextSpace = ensureDefined(this.area).nextAvailableSpace(SpaceKindEnum.ELEMENT);\n        if (nextSpace) {\n          nextSpace.addPiece(element as Piece);\n        } else {\n          throw new Error('No Spaces available');\n        }\n      }\n    });\n  }\n\n  removeElement(index: number): ElementPiece {\n    return ensureDefined(this.elementSpaces)[index].removePiece() as ElementPiece;\n  }\n\n  removeRemainingElements(): ElementPiece[] {\n    return ensureDefined(this.elementSpaces)\n      .filter((space) => space.piece)\n      .map((space) => space.removePiece() as ElementPiece);\n  }\n\n  addActionPawn(index: number, actionPawn: ActionPawnPiece): void {\n    ensureDefined(this.actionPawnSpaces)[index].addPiece(actionPawn);\n  }\n\n  removeActionPawn(index: number): ActionPawnPiece {\n    return ensureDefined(this.actionPawnSpaces)[index].removePiece() as ActionPawnPiece;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                actionPawnPile\n                            \n                            \n                                    Private\n                                    Readonly\n                                animalElements\n                            \n                            \n                                    Private\n                                    Readonly\n                                faction\n                            \n                            \n                                    Private\n                                    Readonly\n                                speciesPile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    actionPawn\n                                \n                                \n                                    elements\n                                \n                                \n                                    species\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AnimalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        actionPawnPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimalElements\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        speciesPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n\n                \n                    \n                        getactionPawn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        species\n                    \n                \n\n                \n                    \n                        getspecies()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:107\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimalCardComponent.html":{"url":"components/AnimalCardComponent.html","title":"component - AnimalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/animal-card/animal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animal-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardTitle\n                                ActionPawnComponent\n                            MatGridList\n                            MatGridTile\n                                ElementComponent\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnForHeader\n                            \n                            \n                                actionPawnPileLength\n                            \n                            \n                                currentPlayerAnimal\n                            \n                            \n                                elements\n                            \n                            \n                                emptyElementSpaces\n                            \n                            \n                                faction\n                            \n                            \n                                speciesPileLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActionPawnForHeader\n                            \n                            \n                                    Private\n                                getAnimal\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                faction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(animalProviderService: AnimalProviderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        faction\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getActionPawnForHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActionPawnForHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnimal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnForHeader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getActionPawnForHeader())\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyElementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faction\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speciesPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, input, OnInit, signal } from '@angular/core';\nimport { MatCard, MatCardTitle } from '@angular/material/card';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { MatGridList, MatGridTile } from '@angular/material/grid-list';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { filter, first, map } from 'rxjs';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementComponent } from '../element/element.component';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { isNotUndefined } from '../../../engine/util/predicate';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { NgClass } from '@angular/common';\nimport { ensureDefined } from '../../../engine/util/misc';\n\n// Todo: change to OnPush\n@Component({\n  selector: 'app-animal-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatCard,\n    MatCardTitle,\n    ActionPawnComponent,\n    MatGridList,\n    MatGridTile,\n    ElementComponent,\n    NgClass,\n  ],\n  templateUrl: './animal-card.component.html',\n  styleUrl: './animal-card.component.scss',\n})\nexport class AnimalCardComponent implements OnInit {\n  faction = input.required();\n  elements = signal([]);\n  emptyElementSpaces = signal([]);\n  actionPawnPileLength = signal(0);\n  speciesPileLength = signal(0);\n  actionPawnForHeader = computed(() => this.getActionPawnForHeader());\n  currentPlayerAnimal = computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  );\n\n  constructor(\n    private animalProviderService: AnimalProviderService,\n    private playerService: PlayerService,\n  ) {}\n\n  ngOnInit() {\n    this.getAnimal();\n  }\n\n  private getAnimal(): void {\n    this.animalProviderService.animals$\n      .pipe(\n        map((animals) => animals.find((animal) => animal.id === this.faction().id)),\n        filter(isNotUndefined),\n        first(),\n      )\n      .subscribe((animal) => {\n        animal.elements.elements$.subscribe((elements) => {\n          this.elements.set(elements);\n          this.emptyElementSpaces.set(Array(6 - elements.length).fill(null) as null[]);\n        });\n        animal.actionPawn.length$.subscribe((length) => {\n          this.actionPawnPileLength.set(length);\n        });\n        animal.species.length$.subscribe((length) => {\n          this.speciesPileLength.set(length);\n        });\n      });\n  }\n\n  private getActionPawnForHeader(): ActionPawnPiece {\n    return defaultPieceFactory(PieceKindEnum.ACTION_PAWN, this.faction().id) as ActionPawnPiece;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{\n          faction().name\n        }}\n      \n    \n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n        @for (emptyElementSpace of emptyElementSpaces(); track $index) {\n          \n        }\n      \n    \n    \n      \n        Action Pawns\n      \n      Species\n      \n        {{ actionPawnPileLength() }}\n      \n      {{ speciesPileLength() }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{          faction().name        }}                            @for (element of elements(); track $index) {                  }        @for (emptyElementSpace of emptyElementSpaces(); track $index) {                  }                            Action Pawns            Species              {{ actionPawnPileLength() }}            {{ speciesPileLength() }}            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalConfig.html":{"url":"interfaces/AnimalConfig.html","title":"interface - AnimalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnimalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawnPile\n                                        \n                                \n                                \n                                        \n                                            elementArea\n                                        \n                                \n                                \n                                        \n                                            elementConfig\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            speciesPile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawnPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawnPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementArea\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementArea:         Area\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Area\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementConfig:         ElementConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         Faction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Faction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speciesPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speciesPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalElements.html":{"url":"classes/AnimalElements.html","title":"class - AnimalElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elements$\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    allElements\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementArea: Area, elementConfig: ElementConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementArea\n                                                  \n                                                        \n                                                                        Area\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementConfig\n                                                  \n                                                        \n                                                                        ElementConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allElements\n                    \n                \n\n                \n                    \n                        getallElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:73\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalProviderService.html":{"url":"injectables/AnimalProviderService.html","title":"injectable - AnimalProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal-provider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animalById\n                            \n                            \n                                animals$\n                            \n                            \n                                    Private\n                                animalsSubject\n                            \n                            \n                                    Private\n                                processedFactionIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalFactory\n                            \n                            \n                                    Private\n                                buildAnimal\n                            \n                            \n                                    Private\n                                buildAnimals\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalFactory(animalConfig: AnimalConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animalConfig\n                                            \n                                                            AnimalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimals\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animals$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.animalsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processedFactionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../engine/model/faction.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport { FactionRegistryService } from '../../engine/service/game-element/faction-registry.service';\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { getOrThrow, setDifference } from '../../engine/util/misc';\nimport { Animal, AnimalConfig } from '../model/animal.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalProviderService {\n  private processedFactionIds: Set = new Set();\n  private readonly animalById = new Map();\n  private animalsSubject = new BehaviorSubject([]);\n  animals$ = this.animalsSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {\n    this.buildAnimals();\n  }\n  private buildAnimals(): void {\n    this.factionRegistryService.factionAssignment$.subscribe((factionAssignments) => {\n      // To minimize any building an animal several times, we add the animal id to processedFactionIds as quickly as possible /\n      const factionIds = new Set(\n        factionAssignments.map((factionAssignment) => factionAssignment.factionId),\n      );\n      const factionIdsToProcess = setDifference(factionIds, this.processedFactionIds);\n      this.processedFactionIds = new Set([\n        ...factionIdsToProcess,\n        ...this.processedFactionIds,\n      ]);\n      factionIdsToProcess.forEach((factionId) => {\n        const faction = this.factionRegistryService.get(factionId);\n        this.buildAnimal(faction);\n      });\n    });\n  }\n\n  private animalFactory(animalConfig: AnimalConfig): Animal {\n    return new Animal(animalConfig);\n  }\n\n  private buildAnimal(faction: Faction): void {\n    const elementAreaId = getOrThrow(elementConfigByAnimal, faction.id).areaId;\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id).actionPawn;\n    const speciesPileId = getOrThrow(pileIdsByAnimal, faction.id).species;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        combineLatestWith(this.pileRegistryService.registeredIds$),\n        filter(\n          ([areaIds, pileIds]) =>\n            areaIds.has(elementAreaId) &&\n            pileIds.has(actionPawnPileId) &&\n            pileIds.has(speciesPileId),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        const animalConfig: AnimalConfig = {\n          faction: faction,\n          actionPawnPile: this.pileRegistryService.get(actionPawnPileId),\n          elementArea: this.areaRegistrySvc.get(elementAreaId),\n          elementConfig: getOrThrow(elementConfigByAnimal, faction.id),\n          speciesPile: this.pileRegistryService.get(speciesPileId),\n        };\n        this.animalById.set(faction.id, this.animalFactory(animalConfig));\n        this.animalsSubject.next(Array.from(this.animalById.values()));\n      });\n  }\n\n  get(id: string): Animal {\n    return getOrThrow(this.animalById, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                spaces$\n                            \n                            \n                                    Private\n                                spacesSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: AreaState)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        AreaState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace(kind?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Space | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space } from './space.model';\nimport { GameElement } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AreaState, SpaceState } from 'api-types/src/game-state';\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(state: AreaState) {\n    super(state);\n    this.spaces = state.space.map((spaceState) => new Space(spaceState));\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = state.space;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement | TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement | TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoggedIn$\n                            \n                            \n                                    Private\n                                    Readonly\n                                isLoggedInSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authResultToPlayerAuth\n                            \n                            \n                                checkIsLoggedIn\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                validatePlayerAuthData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerAuthData\n                                \n                                \n                                    loggedInUsername\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authResultToPlayerAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    authResultToPlayerAuth(authResult: AuthenticationResultType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authResult\n                                            \n                                                        AuthenticationResultType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerAuthData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIsLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validatePlayerAuthData\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePlayerAuthData(playerAuthData: PlayerAuthData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerAuthData\n                                            \n                                                            PlayerAuthData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        isLoggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerAuthData\n                    \n                \n\n                \n                    \n                        getplayerAuthData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loggedInUsername\n                    \n                \n\n                \n                    \n                        getloggedInUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:66\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\nimport { LocalStorageService } from '../local-storage.service';\nimport { AuthenticationResultType } from '@aws-sdk/client-cognito-identity-provider';\nimport { PlayerAuthData } from '../../model/player.model';\nimport { ensureDefined } from '../../util/misc';\nimport { LocalStorageKey } from '../../constant/local-storage.constant';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private readonly isLoggedInSubject: BehaviorSubject;\n  readonly isLoggedIn$: Observable;\n\n  constructor(\n    private cognitoClientService: CognitoClientService,\n    private localStorageService: LocalStorageService,\n  ) {\n    this.isLoggedInSubject = new BehaviorSubject(this.checkIsLoggedIn());\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n  }\n\n  private authResultToPlayerAuth(authResult: AuthenticationResultType): PlayerAuthData {\n    const jwt = this.cognitoClientService.decodeJwtToken(ensureDefined(authResult.IdToken));\n    return {\n      username: ensureDefined(jwt['cognito:username']),\n      accessToken: ensureDefined(authResult.IdToken),\n      accessTokenExpire: ensureDefined(jwt.exp),\n      refreshToken: ensureDefined(authResult.RefreshToken),\n    };\n  }\n\n  async login(username: string, password: string): Promise {\n    const authResult = await this.cognitoClientService.login(username, password);\n    console.log(authResult);\n    if (authResult) {\n      this.localStorageService.setStorageKey(\n        LocalStorageKey.PLAYER_AUTH_DATA,\n        JSON.stringify(this.authResultToPlayerAuth(authResult)),\n      );\n      this.isLoggedInSubject.next(true);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout(): void {\n    if (this.playerAuthData) {\n      this.localStorageService.deletedStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    }\n    this.isLoggedInSubject.next(false);\n  }\n\n  get playerAuthData(): PlayerAuthData | undefined {\n    const playerAuthData = this.localStorageService.getStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    if (playerAuthData) {\n      return JSON.parse(playerAuthData) as PlayerAuthData;\n    } else {\n      return undefined;\n    }\n  }\n\n  get loggedInUsername(): string {\n    if (this.playerAuthData) {\n      return this.playerAuthData.username;\n    } else {\n      throw new Error('No user logged in');\n    }\n  }\n\n  private validatePlayerAuthData(playerAuthData: PlayerAuthData): boolean {\n    return Date.now() \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CognitoClientService.html":{"url":"injectables/CognitoClientService.html","title":"injectable - CognitoClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CognitoClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/cognito-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                decodeJwtToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClient: CognitoIdentityProviderClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClient\n                                                  \n                                                        \n                                                                    CognitoIdentityProviderClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeJwtToken\n                        \n                    \n                \n            \n            \n                \ndecodeJwtToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CognitoIdTokenJwt\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AuthenticationResultType,\n  CognitoIdentityProviderClient,\n  ConfirmSignUpCommand,\n  InitiateAuthCommand,\n  InitiateAuthCommandInput,\n  SignUpCommand,\n} from '@aws-sdk/client-cognito-identity-provider';\nimport { environment } from '../../../../environments/environment';\nimport { jwtDecode } from 'jwt-decode';\nimport { CognitoIdTokenJwt } from 'api-types/src/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CognitoClientService {\n  constructor(private cognitoClient: CognitoIdentityProviderClient) {}\n\n  async login(username: string, password: string): Promise {\n    const input = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: environment.cognito.clientId,\n      AuthParameters: {\n        USERNAME: username,\n        PASSWORD: password,\n      },\n    } as InitiateAuthCommandInput;\n    const command = new InitiateAuthCommand(input);\n    try {\n      const { AuthenticationResult } = await this.cognitoClient.send(command);\n      if (AuthenticationResult) {\n        return AuthenticationResult;\n      } else {\n        console.error('Unexpected AuthenticationResult');\n        return null;\n      }\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  decodeJwtToken(token: string): CognitoIdTokenJwt {\n    return jwtDecode(token);\n  }\n\n  async signUp(username: string, email: string, password: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: [\n        {\n          Name: 'email',\n          Value: email,\n        },\n      ],\n    };\n    try {\n      const command = new SignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      ConfirmationCode: code,\n    };\n    try {\n      const command = new ConfirmSignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (error) {\n      console.error('Error confirming sign up: ', error);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateGamePageComponent.html":{"url":"components/CreateGamePageComponent.html","title":"component - CreateGamePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateGamePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/create-game-page/create-game-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-game-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatFormField\n                            MatFormFieldModule\n                            FormsModule\n                            MatAutocompleteTrigger\n                            MatAutocomplete\n                            MatOption\n                            MatButton\n                            MatInput\n                            NgForOf\n                            NgIf\n                            ReactiveFormsModule\n                            MatIcon\n                            MatIconButton\n                            MatChip\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-game-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-game-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableFriends\n                            \n                            \n                                currentUser\n                            \n                            \n                                errorMessages\n                            \n                            \n                                filteredPlayers\n                            \n                            \n                                    Private\n                                    Readonly\n                                MAX_PLAYERS\n                            \n                            \n                                playerControls\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                validInputStates\n                            \n                            \n                                validPlayers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFriend\n                            \n                            \n                                    Async\n                                addFriendToGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Private\n                                    Async\n                                fetchPlayers\n                            \n                            \n                                hasInvalidPlayer\n                            \n                            \n                                hasValidPlayers\n                            \n                            \n                                isFriend\n                            \n                            \n                                isGameFullOrInvalid\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onPlayerBlur\n                            \n                            \n                                    Async\n                                onPlayerInput\n                            \n                            \n                                updateAvailableFriends\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, snackBar: MatSnackBar, playerService: PlayerService, gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFriend(playerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:199\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFriendToGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFriendToGame(playerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:215\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        fetchPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchPlayers(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasInvalidPlayer\n                        \n                    \n                \n            \n            \n                \nhasInvalidPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValidPlayers\n                        \n                    \n                \n            \n            \n                \nhasValidPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFriend\n                        \n                    \n                \n            \n            \n                \nisFriend(playerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGameFullOrInvalid\n                        \n                    \n                \n            \n            \n                \nisGameFullOrInvalid()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onPlayerBlur\n                        \n                    \n                \n            \n            \n                \n                        \n                    onPlayerBlur(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onPlayerInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    onPlayerInput(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateAvailableFriends\n                        \n                    \n                \n            \n            \n                \nupdateAvailableFriends()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableFriends\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Player | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['', '', '', '', '']\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[][]\n\n                    \n                \n                \n                    \n                        Default value : [[], [], [], [], []]\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        MAX_PLAYERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerControls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormArray\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validInputStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean[]\n\n                    \n                \n                \n                    \n                        Default value : [false, false, false, false, false]\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validPlayers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set[]\n\n                    \n                \n                \n                    \n                        Default value : Array.from({ length: 5 }, () => new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/create-game-page/create-game-page.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PlayerService } from '../../service/game-management/player.service';\nimport { Player } from 'api-types/src/player';\nimport { GameService } from '../../service/game-management/game.service';\nimport { MatCard } from '@angular/material/card';\nimport { MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteTrigger, MatOption } from '@angular/material/autocomplete';\nimport { MatButton, MatIconButton } from '@angular/material/button';\nimport { MatInput } from '@angular/material/input';\nimport { NgForOf, NgIf } from '@angular/common';\nimport { filter, Subscription } from 'rxjs';\nimport { isNotUndefined } from '../../util/predicate';\nimport { Router } from '@angular/router';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatChip } from '@angular/material/chips';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { ensureDefined } from '../../util/misc';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-create-game-page',\n  standalone: true,\n  imports: [\n    MatCard,\n    MatFormField,\n    MatFormFieldModule,\n    FormsModule,\n    MatAutocompleteTrigger,\n    MatAutocomplete,\n    MatOption,\n    MatButton,\n    MatInput,\n    NgForOf,\n    NgIf,\n    ReactiveFormsModule,\n    MatIcon,\n    MatIconButton,\n    MatChip,\n    MatTooltip,\n  ],\n  templateUrl: './create-game-page.component.html',\n  styleUrl: './create-game-page.component.scss',\n})\nexport class CreateGamePageComponent implements OnInit, OnDestroy {\n  private readonly MAX_PLAYERS = 6;\n  playerControls: FormArray;\n  private subscriptions: Subscription[] = [];\n  currentUser: Player | undefined;\n  filteredPlayers: string[][] = [[], [], [], [], []];\n  errorMessages: string[] = ['', '', '', '', ''];\n  validPlayers: Set[] = Array.from({ length: 5 }, () => new Set());\n  availableFriends: string[] = [];\n  validInputStates: boolean[] = [false, false, false, false, false];\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private playerService: PlayerService,\n    private gameService: GameService,\n  ) {\n    this.playerControls = this.fb.array(\n      Array.from({ length: this.MAX_PLAYERS - 1 }, () => this.fb.control('')),\n    ) as FormArray;\n  }\n\n  ngOnInit(): void {\n    const playerSubscription = this.playerService.currentPlayer$\n      .pipe(filter(isNotUndefined))\n      .subscribe((player) => {\n        this.currentUser = player;\n        this.updateAvailableFriends();\n      });\n    this.subscriptions.push(playerSubscription);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n\n  private async fetchPlayers(index: number): Promise {\n    const control = this.playerControls.at(index);\n    const input = control.value as string | null;\n    this.validPlayers[index].clear();\n    this.filteredPlayers[index] = [];\n\n    if (input) {\n      try {\n        const players = await this.playerService.findPlayers(input);\n        const selectedPlayers = new Set(\n          this.playerControls.value.filter(\n            (player: string | null, i: number) => player && i !== index,\n          ) as string[],\n        );\n\n        // Add the current user's username to the selected players\n        selectedPlayers.add(ensureDefined(this.currentUser).username);\n\n        this.filteredPlayers[index] = players.filter((player) => !selectedPlayers.has(player));\n        players.forEach((player) => this.validPlayers[index].add(player));\n      } catch (error) {\n        console.error(error);\n        this.errorMessages[index] = 'Error fetching players';\n        control.setErrors({ fetchError: true });\n      }\n    }\n  }\n\n  async onPlayerInput(index: number): Promise {\n    await this.fetchPlayers(index);\n  }\n\n  async onPlayerBlur(index: number): Promise {\n    const control = this.playerControls.at(index);\n    const input = control.value as string | null;\n    const selectedPlayers = new Set(\n      this.playerControls.value.filter(\n        (player: string | null, i: number) => player && i !== index,\n      ) as string[],\n    );\n\n    // Add the current user's username to the selected players\n    selectedPlayers.add(ensureDefined(this.currentUser).username);\n\n    this.errorMessages[index] = '';\n    control.setErrors(null);\n\n    if (input) {\n      // Ensure the validPlayers set is populated\n      if (!this.validPlayers[index].has(input)) {\n        await this.fetchPlayers(index);\n      }\n\n      if (!this.validPlayers[index].has(input)) {\n        this.errorMessages[index] = 'Invalid username';\n        control.setErrors({ invalid: true });\n        this.validInputStates[index] = false;\n      } else if (selectedPlayers.has(input)) {\n        this.errorMessages[index] = 'Player already in the game';\n        control.setErrors({ duplicate: true });\n        this.validInputStates[index] = false;\n      } else {\n        this.validInputStates[index] = !this.isFriend(input);\n      }\n\n      this.updateAvailableFriends();\n    } else {\n      // Clear validation states if input is empty\n      this.validPlayers[index].clear();\n      this.validInputStates[index] = false;\n      this.filteredPlayers[index] = [];\n    }\n  }\n\n  isGameFullOrInvalid(): boolean {\n    return (\n      this.hasInvalidPlayer() || this.playerControls.controls.every((control) => control.value)\n    );\n  }\n\n  async addFriendToGame(playerId: string): Promise {\n    const emptyControl = this.playerControls.controls.find((control) => !control.value);\n    if (!emptyControl) return;\n\n    const isPlayerAlreadyAdded = this.playerControls.controls.some(\n      (control) => control.value === playerId,\n    );\n    if (isPlayerAlreadyAdded) return;\n\n    emptyControl.setValue(playerId);\n    this.updateAvailableFriends();\n    await this.onPlayerInput(this.playerControls.controls.indexOf(emptyControl));\n  }\n\n  updateAvailableFriends(): void {\n    const selectedPlayers = new Set(this.playerControls.value.filter(Boolean) as string[]);\n    this.availableFriends = ensureDefined(this.currentUser).friends.filter(\n      (friend) => !selectedPlayers.has(friend),\n    );\n  }\n\n  hasValidPlayers(): boolean {\n    return this.playerControls.controls.some((control) => control.value && !control.invalid);\n  }\n\n  hasInvalidPlayer(): boolean {\n    return this.playerControls.controls.some((control) => control.invalid);\n  }\n\n  async addFriend(playerId: string): Promise {\n    if (ensureDefined(this.currentUser).friends.includes(playerId)) return;\n    try {\n      await this.playerService.addFriend(playerId);\n    } catch (error) {\n      this.snackBar.open('Failed to add friend', 'Close', {\n        duration: 3000,\n      });\n      console.error('Failed to add friend', error);\n    }\n  }\n\n  isFriend(playerId: string): boolean {\n    return ensureDefined(this.currentUser).friends.includes(playerId);\n  }\n\n  async createGame(): Promise {\n    const otherPlayers = this.playerControls.value.filter(\n      (player: string | null): player is string => !!player,\n    );\n    try {\n      await this.gameService.createGame(otherPlayers);\n      void this.router.navigate(['/lobby']);\n    } catch (error) {\n      this.snackBar.open('Error creating game', 'Close', {\n        duration: 3000,\n      });\n      console.error(error);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Players\n        \n          \n        \n\n        \n          \n            \n              \n              \n                \n                  {{ player }}\n                \n              \n\n              {{ errorMessages[i] }}\n            \n\n            \n              person_add\n            \n          \n        \n\n        \n          Create Game\n        \n      \n\n      \n        Friends\n        \n          \n            {{ friend }}\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Players                                                                                                                      {{ player }}                                            {{ errorMessages[i] }}                                      person_add                                                Create Game                            Friends                              {{ friend }}                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateGamePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DominantSpeciesGameComponent.html":{"url":"components/DominantSpeciesGameComponent.html","title":"component - DominantSpeciesGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DominantSpeciesGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/dominant-species-game/dominant-species-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dominant-species-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                DrawPoolGameComponent\n                            MatProgressSpinner\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dominant-species-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dominant-species-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gameReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                initializeGame\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, gameService: GameService, gameReadyService: GameReadyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameReadyService\n                                                  \n                                                        \n                                                                        GameReadyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        initializeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gameReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/dominant-species-game/dominant-species-game.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, signal } from '@angular/core';\nimport { DrawPoolGameComponent } from '../draw-pool-game/draw-pool-game.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GameService } from '../../../engine/service/game-management/game.service';\nimport { GameReadyService } from '../../service/game-ready.service';\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\nimport { filter, first } from 'rxjs';\n\n@Component({\n  selector: 'app-dominant-species-game',\n  standalone: true,\n  imports: [DrawPoolGameComponent, MatProgressSpinner],\n  templateUrl: './dominant-species-game.component.html',\n  styleUrl: './dominant-species-game.component.scss',\n})\nexport class DominantSpeciesGameComponent implements OnInit {\n  gameReady = signal(false);\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private gameService: GameService,\n    private gameReadyService: GameReadyService,\n  ) {}\n\n  ngOnInit(): void {\n    const gameId = this.route.snapshot.queryParamMap.get('gameId');\n    if (!gameId) {\n      void this.router.navigate(['/lobby']);\n    } else {\n      void this.initializeGame(gameId);\n    }\n    this.gameReadyService.ready$\n      .pipe(\n        filter((isReady) => isReady),\n        first(),\n      )\n      .subscribe(() => {\n        this.gameReady.set(true);\n      });\n  }\n\n  private async initializeGame(gameId: string): Promise {\n    await this.gameService.initializeGame(gameId);\n  }\n}\n\n    \n\n    \n        @if (gameReady()) {\n  \n} @else {\n  \n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (gameReady()) {  } @else {        }'\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DominantSpeciesGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                                ElementComponent\n                                ActionPawnComponent\n                                AnimalCardComponent\n                                EyeballComponent\n                                ElementSpaceComponent\n                                AdaptionActionDisplayCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adaptionArea\n                            \n                            \n                                currentPlayerFaction\n                            \n                            \n                                factions\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                takeAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService, areaRegistryService: AreaRegistryService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, animalProviderService: AnimalProviderService, adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeAction\n                        \n                    \n                \n            \n            \n                \ntakeAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adaptionArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerFaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter, first } from 'rxjs';\nimport { ElementComponent } from '../element/element.component';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { AnimalCardComponent } from '../animal-card/animal-card.component';\nimport { EyeballComponent } from '../action-display/space/eyeball/eyeball.component';\nimport { ElementSpaceComponent } from '../action-display/space/element-space/element-space.component';\nimport { AdaptionActionDisplayCardComponent } from '../action-display/adaption-action-display-card/adaption-action-display-card.component';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { AreaIdEnum } from '../../constant/area.constant';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { AdaptionActionDisplayService } from '../../service/action-display/adaption-action-display.service';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [\n    MatButton,\n    MatTooltip,\n    ElementComponent,\n    ActionPawnComponent,\n    AnimalCardComponent,\n    EyeballComponent,\n    ElementSpaceComponent,\n    AdaptionActionDisplayCardComponent,\n  ],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent implements OnInit {\n  currentPlayerFaction: Faction | undefined = undefined;\n  factions: Faction[] = [];\n  adaptionArea: Area | undefined = undefined;\n  log: string[] = [];\n\n  constructor(\n    private gameStateSvc: GameStateService,\n    private areaRegistryService: AreaRegistryService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private animalProviderService: AnimalProviderService,\n    private adaptionActionDisplayService: AdaptionActionDisplayService,\n  ) {}\n\n  ngOnInit() {\n    this.factionRegistrySvc.factionAssignment$.subscribe((factionAssignments) => {\n      this.factions = factionAssignments.map((factionAssignment) =>\n        this.factionRegistrySvc.get(factionAssignment.factionId),\n      );\n      this.currentPlayerFaction = this.factions.find(\n        (faction) => faction.ownerId === this.playerService.currentPlayer?.username,\n      );\n    });\n\n    this.areaRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION)),\n        first(),\n      )\n      .subscribe(() => {\n        this.adaptionArea = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n      });\n  }\n\n  takeAction(): void {\n    this.gameStateSvc.startTransaction();\n    const animal = this.animalProviderService.get(ensureDefined(this.currentPlayerFaction).id);\n    const actionPawn = animal.actionPawn.pullOne();\n    if (actionPawn) {\n      const nextActionPawnSpaceIndex = this.adaptionActionDisplayService.actionPawns.findIndex(\n        (value) => value === null,\n      );\n      const nextElementSpaceIndex = this.adaptionActionDisplayService.elements.findIndex(\n        (value) => value !== null,\n      );\n      this.adaptionActionDisplayService.addActionPawn(nextActionPawnSpaceIndex, actionPawn);\n      const element = this.adaptionActionDisplayService.removeElement(nextElementSpaceIndex);\n      animal.elements.addElement(element);\n    }\n    this.gameStateSvc.commitTransaction();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Take Action\n    \n    \n      \n      \n        @for (faction of factions; track faction.id) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Take Action                            @for (faction of factions; track faction.id) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementComponent.html":{"url":"components/ElementComponent.html","title":"component - ElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/element/element.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    kind\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         ElementPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/element/element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        kind\n                    \n                \n\n                \n                    \n                        getkind()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../model/element.model';\n\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-element',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './element.component.html',\n  styleUrl: './element.component.scss',\n})\nexport class ElementComponent {\n  @Input() element: ElementPiece | undefined = undefined;\n\n  get kind(): string | undefined {\n    return this.element?.kind;\n  }\n\n  get name(): string | undefined {\n    return this.element?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.kind) {\n      return getOrThrow(imgPathByKind, this.kind);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/element-config.constant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementEnum, ElementKind } from './element.constant';\nimport { AreaId, AreaIdEnum } from './area.constant';\nimport { AnimalEnum } from './animal.constant';\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                    Private\n                                ready\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: ElementPiece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            ElementPiece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ready\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.ready)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, first, Observable, of } from 'rxjs';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { PileIdEnum } from '../constant/pile.constant';\nimport { ElementPiece } from '../model/element.model';\n\nimport { Piece } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | undefined = undefined;\n  private ready = false;\n  private readySubject: BehaviorSubject = new BehaviorSubject(this.ready);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.pileRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(PileIdEnum.ELEMENT)),\n        first(),\n      )\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PileIdEnum.ELEMENT);\n        this.ready = true;\n        this.readySubject.next(this.ready);\n      });\n  }\n\n  private get drawPool(): Pile {\n    if (this._drawPool) {\n      return this._drawPool;\n    } else {\n      throw new Error('Pile not ready');\n    }\n  }\n\n  get length$(): Observable {\n    if (this._drawPool) {\n      return this.drawPool.length$;\n    } else {\n      return of(0);\n    }\n  }\n\n  pull(count = 1): (ElementPiece | null)[] {\n    return this.drawPool.pullMany(count) as ElementPiece[];\n  }\n\n  put(pieces: ElementPiece[]): void {\n    this.drawPool.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/element.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementKind } from '../constant/element.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementSpaceComponent.html":{"url":"components/ElementSpaceComponent.html","title":"component - ElementSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/element-space/element-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./element-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         ElementPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../../../model/element.model';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\nimport { ElementComponent } from '../../../element/element.component';\n\n@Component({\n  selector: 'app-element-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent],\n  templateUrl: './element-space.component.html',\n  styleUrl: './element-space.component.scss',\n})\nexport class ElementSpaceComponent {\n  @Input() element: ElementPiece | null = null;\n\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'elementSpace');\n  }\n}\n\n    \n\n    \n        \n  \n    @if (element) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (element) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EyeballComponent.html":{"url":"components/EyeballComponent.html","title":"component - EyeballComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EyeballComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-eyeball\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./eyeball.component.html\n            \n\n\n\n            \n                styleUrl\n                ./eyeball.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/eyeball/eyeball.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\n\n@Component({\n  selector: 'app-eyeball',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  templateUrl: './eyeball.component.html',\n  styleUrl: './eyeball.component.scss',\n})\nexport class EyeballComponent {\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'eyeball');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EyeballComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:28\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:5\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement } from './game-element.model';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            factionId\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        factionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        factionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  factionId: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  // override register(element: Faction): void;\n  // override register(elements: Faction[]): void\n  override register(elements: Faction | Faction[]): void {\n    const elementsArray = Array.isArray(elements) ? elements : [elements];\n    super.register(elementsArray);\n    elementsArray.forEach((faction) => {\n      this.factionAssignment.push({\n        factionId: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction | Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:33\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction | Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  factionId: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  // override register(element: Faction): void;\n  // override register(elements: Faction[]): void\n  override register(elements: Faction | Faction[]): void {\n    const elementsArray = Array.isArray(elements) ? elements : [elements];\n    super.register(elementsArray);\n    elementsArray.forEach((faction) => {\n      this.factionAssignment.push({\n        factionId: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { FactionState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:28\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\nimport { GameElementState } from 'api-types/src/game-state';\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement | TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement | TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  protected constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  get(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  // register(element: TgameElement): void;\n  // register(elements: TgameElement[]): void;\n  register(elements: TgameElement | TgameElement[]): void {\n    const elementsArray = Array.isArray(elements) ? elements : [elements];\n\n    elementsArray.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elementsArray);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  protected abstract get elementState$(): Observable;\n  protected abstract registerEntityState(element: TgameElement): void;\n  protected abstract setEntityState(state: GameElementState): void;\n\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  private getEntity(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElementStatesFactoryService.html":{"url":"classes/GameElementStatesFactoryService.html","title":"class - GameElementStatesFactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElementStatesFactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/game-element-states-factory.service.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            InitialGameElementStatesFactory\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementDrawPool\n                            \n                            \n                                    Private\n                                    Readonly\n                                gameElementStates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                            \n                                    Private\n                                buildActionDisplay\n                            \n                            \n                                buildAdaptionActionDisplay\n                            \n                            \n                                buildElementDrawPool\n                            \n                            \n                                    Private\n                                buildFactions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/game-element-states-factory.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementDrawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-element-states-factory.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gameElementStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameElementStates\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-element-states-factory.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameElementStates\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildActionDisplay\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildActionDisplay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAdaptionActionDisplay\n                        \n                    \n                \n            \n            \n                \nbuildAdaptionActionDisplay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Area\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildElementDrawPool\n                        \n                    \n                \n            \n            \n                \nbuildElementDrawPool()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Pile\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildFactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildFactions(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AreaState, GameElementStates, PileState, SpaceState } from 'api-types/src/game-state';\nimport { shuffle, startCase } from 'lodash';\nimport { AnimalEnum } from '../constant/animal.constant';\nimport { getOrThrow } from '../../engine/util/misc';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { deepClone } from 'fast-json-patch';\nimport { Space } from '../../engine/model/space.model';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { defaultPieceFactory } from '../../engine/model/piece.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { PieceKindEnum } from '../constant/piece.constant';\nimport {\n  emptyGameElementStates,\n  InitialGameElementStatesFactory,\n} from '../../engine/model/game-state.model';\nimport { Area } from '../../engine/model/area.model';\nimport { Pile } from '../../engine/model/pile.model';\nimport {\n  ACTION_DISPLAY_ADAPTION_STATE,\n  ELEMENT_DRAW_POOL_STATE,\n} from '../constant/game-state.constant';\n\n// Not injectable as it's built on-demand by GameStateInitializationService\nexport class GameElementStatesFactoryService implements InitialGameElementStatesFactory {\n  private readonly gameElementStates: GameElementStates;\n  private elementDrawPool: Pile;\n\n  constructor() {\n    this.gameElementStates = deepClone(emptyGameElementStates) as GameElementStates;\n    this.elementDrawPool = this.buildElementDrawPool();\n  }\n\n  build(playerIds: string[]): GameElementStates {\n    this.buildFactions(playerIds);\n    this.buildActionDisplay();\n\n    // add DrawPool state at the end after using it to initialize the other GameElementStates\n    this.gameElementStates.pile.push(this.elementDrawPool.state);\n    return this.gameElementStates;\n  }\n\n  buildElementDrawPool(): Pile {\n    return new Pile(deepClone(ELEMENT_DRAW_POOL_STATE) as PileState);\n  }\n\n  buildAdaptionActionDisplay(): Area {\n    const adaptionActionDisplayArea = new Area(\n      deepClone(ACTION_DISPLAY_ADAPTION_STATE) as AreaState,\n    );\n    this.elementDrawPool.pullMany(4).forEach((element) => {\n      if (element) {\n        const nextSpace = adaptionActionDisplayArea.nextAvailableSpace(SpaceKindEnum.ELEMENT);\n        if (nextSpace) {\n          nextSpace.addPiece(element);\n        } else {\n          throw new Error('No Spaces available');\n        }\n      } else {\n        throw new Error('Drawpool empty for initialization');\n      }\n    });\n    return adaptionActionDisplayArea;\n  }\n\n  private buildActionDisplay(): void {\n    this.gameElementStates.area.push(this.buildAdaptionActionDisplay().state);\n  }\n\n  private buildFactions(playerIds: string[]): void {\n    const shuffledAnimals = shuffle(Object.values(AnimalEnum));\n    playerIds.forEach((playerId: string, index) => {\n      const assignedAnimal = shuffledAnimals[index];\n      const elementConfig = getOrThrow(elementConfigByAnimal, assignedAnimal);\n\n      this.gameElementStates.faction.push({\n        id: assignedAnimal,\n        name: startCase(assignedAnimal),\n        ownerId: playerId,\n        score: 0,\n      });\n\n      // AnimalCard Spaces\n      const elementSpacesState: SpaceState[] = [];\n      // inherent element spaces\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementClientService.html":{"url":"injectables/GameManagementClientService.html","title":"injectable - GameManagementClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game-management-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                getLatestGameState\n                            \n                            \n                                    Async\n                                getLoggedInPlayer\n                            \n                            \n                                    Async\n                                getPlayer\n                            \n                            \n                                    Async\n                                setFriends\n                            \n                            \n                                    Async\n                                setInitialGameState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game-management-client.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLatestGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatestGameState(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayer(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setFriends\n                        \n                    \n                \n            \n            \n                \n                        \n                    setFriends(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                        Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setInitialGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setInitialGameState(gameState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { Game, GameCollection } from 'api-types/src/game';\nimport { lastValueFrom } from 'rxjs';\nimport { Player, PlayerCollection } from 'api-types/src/player';\nimport { GameState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementClientService {\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {}\n\n  async createGame(game: Game): Promise {\n    await lastValueFrom(this.http.post('/game', game));\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    const gameCollection = await lastValueFrom(\n      this.http.get('/game', {\n        params: { username: this.authService.loggedInUsername },\n      }),\n    );\n    return gameCollection.games;\n  }\n\n  async completeGame(gameId: string): Promise {\n    await lastValueFrom(this.http.patch(`/game/${gameId}`, { complete: true }));\n  }\n\n  async setInitialGameState(gameState: GameState): Promise {\n    await lastValueFrom(this.http.post(`/game/${gameState.gameId}/state`, gameState));\n  }\n\n  async getLatestGameState(gameId: string): Promise {\n    return await lastValueFrom(this.http.get(`/game/${gameId}/state`));\n  }\n\n  async getPlayer(username: string): Promise {\n    return await lastValueFrom(this.http.get(`/player/${username}`));\n  }\n\n  async getLoggedInPlayer(): Promise {\n    return await this.getPlayer(this.authService.loggedInUsername);\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await lastValueFrom(\n      this.http.get('/player', {\n        params: { username: username },\n      }),\n    );\n    return playerCollection.players;\n  }\n\n  async setFriends(player: Player): Promise {\n    await lastValueFrom(this.http.patch(`/player/${player.username}`, { friends: player.friends }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameReadyService.html":{"url":"injectables/GameReadyService.html","title":"injectable - GameReadyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameReadyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/game-ready.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalsReady\n                            \n                            \n                                    Private\n                                currentPlayerReady\n                            \n                            \n                                    Private\n                                signalReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateService: GameStateService, playerService: PlayerService, elementDrawPoolService: ElementDrawPoolService, animalProviderService: AnimalProviderService, actionDisplayManagerService: ActionDisplayManagerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/game-ready.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateService\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionDisplayManagerService\n                                                  \n                                                        \n                                                                        ActionDisplayManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalsReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-ready.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayerReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    currentPlayerReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-ready.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        signalReady\n                        \n                    \n                \n            \n            \n                \n                        \n                    signalReady()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-ready.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-ready.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-ready.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/game-ready.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ElementDrawPoolService } from './element-draw-pool.service';\nimport { AnimalProviderService } from './animal-provider.service';\nimport { ActionDisplayManagerService } from './action-display/action-display-manager.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable, Subscription } from 'rxjs';\nimport { GameStateService } from '../../engine/service/game-state/game-state.service';\nimport { PlayerService } from '../../engine/service/game-management/player.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameReadyService {\n  private subscriptions: Subscription[] = [];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(\n    private gameStateService: GameStateService,\n    private playerService: PlayerService,\n    private elementDrawPoolService: ElementDrawPoolService,\n    private animalProviderService: AnimalProviderService,\n    private actionDisplayManagerService: ActionDisplayManagerService,\n  ) {\n    this.signalReady();\n  }\n\n  private currentPlayerReady(): Observable {\n    const currentPlayerSubject = new BehaviorSubject(false);\n    const currentPlayerSubscription = this.playerService.currentPlayer$.subscribe(\n      (currentPlayer) => {\n        if (currentPlayer) {\n          currentPlayerSubject.next(true);\n        }\n      },\n    );\n    this.subscriptions.push(currentPlayerSubscription);\n    return currentPlayerSubject.asObservable();\n  }\n\n  private animalsReady(): Observable {\n    const animalReadySubject = new BehaviorSubject(false);\n    const animalSubscription = this.animalProviderService.animals$.subscribe((animals) => {\n      if (animals.length === this.gameStateService.playerIds.length) {\n        animalReadySubject.next(true);\n      }\n    });\n    this.subscriptions.push(animalSubscription);\n    return animalReadySubject.asObservable();\n  }\n\n  private signalReady(): void {\n    const readyObs = [\n      this.currentPlayerReady(),\n      this.animalsReady(),\n      this.elementDrawPoolService.ready$,\n      this.actionDisplayManagerService.ready$,\n    ];\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n        this.subscriptions.forEach((sub) => {\n          sub.unsubscribe();\n        });\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                initializeGame\n                            \n                            \n                                    Async\n                                joinGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, gameManagementClientService: GameManagementClientService, gameStateInitializationService: GameStateInitializationService, areaRegistryService: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateInitializationService\n                                                  \n                                                        \n                                                                        GameStateInitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(otherPlayers: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otherPlayers\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initializeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        joinGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { humanId } from 'human-id';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Game } from 'api-types/src/game';\nimport { GameStateInitializationService } from '../game-state/game-state-initialization.service';\nimport { GameTitle } from '../../constant/game-title.constant';\nimport { FactionRegistryService } from '../game-element/faction-registry.service';\nimport { AreaRegistryService } from '../game-element/area-registry.service';\nimport { PileRegistryService } from '../game-element/pile-registry.service';\nimport { Area } from '../../model/area.model';\nimport { Faction } from '../../model/faction.model';\nimport { Pile } from '../../model/pile.model';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameService {\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n    private gameStateInitializationService: GameStateInitializationService,\n    private areaRegistryService: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {}\n\n  async createGame(otherPlayers: string[]): Promise {\n    const gameId = humanId();\n    const playerIds = [this.authService.loggedInUsername, ...otherPlayers];\n    await this.gameManagementClientService.createGame({\n      gameId,\n      host: this.authService.loggedInUsername,\n      playerIds: playerIds,\n    });\n    const initialGameState = this.gameStateInitializationService.build(\n      GameTitle.DOMINANT_SPECIES,\n      gameId,\n      playerIds,\n    );\n    await this.gameManagementClientService.setInitialGameState(initialGameState);\n    console.log(`created game: ${gameId}`);\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    return await this.gameManagementClientService.getGamesForLoggedInPlayer();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameManagementClientService.completeGame(gameId);\n  }\n\n  async initializeGame(gameId: string): Promise {\n    const gameState = await this.gameManagementClientService.getLatestGameState(gameId);\n    gameState.gameElements.area.forEach((areaState) => {\n      this.areaRegistryService.register(new Area(areaState));\n    });\n    gameState.gameElements.faction.forEach((state) => {\n      this.factionRegistryService.register(new Faction(state));\n    });\n    gameState.gameElements.pile.forEach((state) => {\n      this.pileRegistryService.register(new Pile(state));\n    });\n  }\n\n  async joinGame(gameId: string): Promise {\n    await this.router.navigate(['/game/dominant-species'], {\n      queryParams: {\n        gameId: gameId,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gsp$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gsp$\n                    \n                \n\n                \n                    \n                        getgsp$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-client.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { GameStatePatch } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n  }\n\n  get gsp$(): Observable {\n    return of(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateInitializationService.html":{"url":"injectables/GameStateInitializationService.html","title":"injectable - GameStateInitializationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateInitializationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-initialization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                factoryByGameTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factoryMap: Map | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factoryMap\n                                                  \n                                                        \n                                                                        Map | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(gameTitle: string, gameId: string, playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameTitle\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        factoryByGameTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  getEmptyInitialGameState,\n  InitialGameElementStatesFactoryConstructor,\n} from '../../model/game-state.model';\nimport { GameTitle } from '../../constant/game-title.constant';\nimport { GameElementStatesFactoryService } from '../../../game/service/game-element-states-factory.service';\nimport { GameState } from 'api-types/src/game-state';\n\nconst FACTORY_MAP = new Map([\n  [GameTitle.DOMINANT_SPECIES, GameElementStatesFactoryService],\n]);\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateInitializationService {\n  private readonly factoryByGameTitle: Map;\n\n  constructor(\n    @Optional()\n    @Inject('FACTORY_MAP')\n    factoryMap: Map | null,\n  ) {\n    this.factoryByGameTitle = factoryMap ?? FACTORY_MAP;\n  }\n\n  build(gameTitle: string, gameId: string, playerIds: string[]): GameState {\n    const gameState = getEmptyInitialGameState(gameId, playerIds);\n    const gameElementsFactoryClass = this.factoryByGameTitle.get(gameTitle);\n    if (gameElementsFactoryClass) {\n      const gameElementsFactory = new gameElementsFactoryClass();\n      gameState.gameElements = gameElementsFactory.build(playerIds);\n      return gameState;\n    } else {\n      throw new Error(`Unable to build initial state for ${gameTitle}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(oldState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { applyPatch, compare, deepClone } from 'fast-json-patch';\nimport { GameState, GameStatePatch } from 'api-types/src/game-state';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      gameId: oldState.gameId,\n      patchId: oldState.patchId + 1,\n      patch: compare(oldState.gameElements, newState.gameElements),\n    };\n  }\n\n  apply(oldState: GameState, gsp: GameStatePatch): GameState {\n    const newState = deepClone(oldState) as GameState;\n    newState.gameElements = applyPatch(\n      oldState.gameElements,\n      gsp.patch,\n      undefined,\n      false,\n    ).newDocument;\n    newState.patchId = gsp.patchId;\n    return newState;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerIds\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerIds\n                    \n                \n\n                \n                    \n                        getplayerIds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:76\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:87\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { filter, Observable } from 'rxjs';\nimport { AreaState, FactionState, GameStatePatch, PileState } from 'api-types/src/game-state';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.pipe(filter((gsp) => gsp != undefined)).subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    this.gameStateStore.setGameState(this.gspService.apply(this.gameStateStore.gameState, gsp));\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        this.gameStateStore.gameState,\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get playerIds(): string[] {\n    return this.gameStateStore.playerIds;\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\nusing the register method of the state element management service such as PileService or AreaService.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    playerIds\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:41\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState\n\n                    \n                \n                \n                    \n                        Default value : deepClone(emptyGameState) as GameState\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:106\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        playerIds\n                    \n                \n\n                \n                    \n                        getplayerIds()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:162\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:174\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:186\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, map, Observable } from 'rxjs';\nimport { emptyGameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\n\nimport {\n  AreaState,\n  FactionState,\n  GameElementState,\n  GameElementStates,\n  GameState,\n  PileState,\n} from 'api-types/src/game-state';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\n * using the register method of the state element management service such as PileService or AreaService.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState = deepClone(emptyGameState) as GameState;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      map((gameState) => {\n        return selector(gameState);\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState.gameElements[\n      key\n    ] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = this._gameState.gameElements[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState {\n    return deepClone(this._gameState) as GameState;\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get playerIds(): string[] {\n    return this._gameState.playerIds;\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitialGameElementStatesFactory.html":{"url":"interfaces/InitialGameElementStatesFactory.html","title":"interface - InitialGameElementStatesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InitialGameElementStatesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        build\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-state.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameElementStates\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GameElementStates, GameState } from 'api-types/src/game-state';\n\nexport const emptyGameElementStates: GameElementStates = {\n  area: [],\n  faction: [],\n  pile: [],\n};\n\n// current used to initialize GameStoreService, but should be refactored to get the Initial Game State when user joins the game.\nexport const emptyGameState: GameState = {\n  gameId: 'placeholder',\n  patchId: 0,\n  playerIds: [],\n  gameElements: emptyGameElementStates,\n};\n\nexport function getEmptyInitialGameState(gameId: string, playerIds: string[]): GameState {\n  return {\n    gameId: gameId,\n    patchId: 0,\n    playerIds: playerIds,\n    gameElements: emptyGameElementStates,\n  };\n}\n\nexport interface InitialGameElementStatesFactory {\n  build(playerIds: string[]): GameElementStates;\n}\n\nexport type InitialGameElementStatesFactoryConstructor = new () => InitialGameElementStatesFactory;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LobbyPageComponent.html":{"url":"components/LobbyPageComponent.html","title":"component - LobbyPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LobbyPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/lobby-page/lobby-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lobby-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTable\n                            MatColumnDef\n                            MatHeaderCell\n                            MatCell\n                            MatHeaderRow\n                            MatRow\n                            MatHeaderRowDef\n                            MatRowDef\n                            MatHeaderCellDef\n                            MatCellDef\n                            MatButton\n                            MatIcon\n                            MatMiniFabButton\n                            MatChipSet\n                            MatChip\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lobby-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./lobby-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                games\n                            \n                            \n                                gameTableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                fetchGames\n                            \n                            \n                                filterPlayers\n                            \n                            \n                                    Async\n                                joinGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, playerService: PlayerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterPlayers\n                        \n                    \n                \n            \n            \n                \nfilterPlayers(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        joinGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameTableColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['gameId', 'host', 'playerIds', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { Game } from 'api-types/src/game';\nimport { GameService } from '../../service/game-management/game.service';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatHeaderCell,\n  MatHeaderCellDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef,\n  MatTable,\n} from '@angular/material/table';\nimport { MatButton, MatMiniFabButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatChip, MatChipSet } from '@angular/material/chips';\nimport { PlayerService } from '../../service/game-management/player.service';\nimport { Player } from 'api-types/src/player';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-lobby-page',\n  standalone: true,\n  imports: [\n    MatTable,\n    MatColumnDef,\n    MatHeaderCell,\n    MatCell,\n    MatHeaderRow,\n    MatRow,\n    MatHeaderRowDef,\n    MatRowDef,\n    MatHeaderCellDef,\n    MatCellDef,\n    MatButton,\n    MatIcon,\n    MatMiniFabButton,\n    MatChipSet,\n    MatChip,\n    MatTooltip,\n  ],\n  templateUrl: './lobby-page.component.html',\n  styleUrl: './lobby-page.component.scss',\n})\nexport class LobbyPageComponent {\n  games = signal([]);\n  gameTableColumns: string[] = ['gameId', 'host', 'playerIds', 'actions'];\n  readonly currentPlayer = signal(undefined);\n\n  constructor(\n    private gameService: GameService,\n    private playerService: PlayerService,\n    private router: Router,\n  ) {\n    this.playerService.currentPlayer$.subscribe((player) => {\n      this.currentPlayer.set(player);\n      void this.fetchGames();\n    });\n  }\n\n  filterPlayers(game: Game): string[] {\n    return game.playerIds\n      .filter((player) => player !== game.host)\n      .slice()\n      .sort();\n  }\n\n  async fetchGames(): Promise {\n    this.games.set(await this.gameService.getGamesForLoggedInPlayer());\n  }\n\n  async createGame(): Promise {\n    void (await this.router.navigate(['/create-game']));\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameService.completeGame(gameId);\n    await this.fetchGames();\n  }\n\n  async joinGame(gameId: string): Promise {\n    await this.gameService.joinGame(gameId);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      refresh\n    \n    \n      add_circle\n    \n  \n  \n    \n      \n        Id\n        {{ game.gameId }}\n      \n      \n        Host\n        \n          \n            {{ game.host }}\n          \n        \n      \n      \n        Players\n        \n          \n            @for (player of filterPlayers(game); track $index) {\n              {{ player }}\n            }\n          \n        \n      \n      \n        \n        \n          \n            @if (game.host === currentPlayer()?.username) {\n              \n                delete\n              \n            }\n            \n              login\n            \n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            refresh              add_circle                          Id        {{ game.gameId }}                    Host                              {{ game.host }}                                      Players                              @for (player of filterPlayers(game); track $index) {              {{ player }}            }                                                                    @if (game.host === currentPlayer()?.username) {                              delete                          }                          login                                                      '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LobbyPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletedStorageKey\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                setStorageKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletedStorageKey\n                        \n                    \n                \n            \n            \n                \ndeletedStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageKey\n                        \n                    \n                \n            \n            \n                \ngetStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageKey\n                        \n                    \n                \n            \n            \n                \nsetStorageKey(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  deletedStorageKey(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  getStorageKey(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  setStorageKey(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginFormData.html":{"url":"interfaces/LoginFormData.html","title":"interface - LoginFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/login-page/login-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/lobby']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatCard\n                            MatCardContent\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/login-page/login-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/lobby']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n          \n          Confirm\n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n        \n          \n          \n            Sign Up Here\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                            Username:                                    Password:                          .                            Confirm                                                @if (errorMessage()) {              {{ errorMessage() }}            }                                                          Sign Up Here                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutPageComponent.html":{"url":"components/LogoutPageComponent.html","title":"component - LogoutPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/logout-page/logout-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-page\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logout-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logout-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/logout-page/logout-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/logout-page/logout-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout-page',\n  standalone: true,\n  imports: [],\n  templateUrl: './logout-page.component.html',\n  styleUrl: './logout-page.component.scss',\n})\nexport class LogoutPageComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.authService.logout();\n    void this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        logout-page works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout-page works!'\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                owner\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:13\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:49\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:79\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:28\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:32\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PileAdapter.html":{"url":"classes/PileAdapter.html","title":"class - PileAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PileAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pile: Pile)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pile\n                                                  \n                                                        \n                                                                        Pile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:92\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:96\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileConfig.html":{"url":"interfaces/PileConfig.html","title":"interface - PileConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/pile-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawn\n                                        \n                                \n                                \n                                        \n                                            species\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        species\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        species:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalEnum } from './animal.constant';\nimport { PileIdEnum } from './pile.constant';\n\nexport interface PileConfig {\n  actionPawn: string;\n  species: string;\n}\n\nexport const pileIdsByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n]);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement | TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement | TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerAuthData.html":{"url":"interfaces/PlayerAuthData.html","title":"interface - PlayerAuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerAuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            accessTokenExpire\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenExpire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenExpire:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PlayerAuthData {\n  username: string;\n  accessToken: string;\n  accessTokenExpire: number;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlayer\n                            \n                            \n                                currentPlayer$\n                            \n                            \n                                    Private\n                                currentPlayerSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFriend\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                removeFriend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameManagementClientService: GameManagementClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addFriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Player | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentPlayerSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayerSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.currentPlayer)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from 'api-types/src/player';\nimport { AuthService } from '../auth/auth.service';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { ensureDefined } from '../../util/misc';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  currentPlayer: Player | undefined = undefined;\n  private currentPlayerSubject: BehaviorSubject = new BehaviorSubject(this.currentPlayer);\n  currentPlayer$ = this.currentPlayerSubject.asObservable();\n\n  constructor(\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n  ) {\n    this.authService.isLoggedIn$.pipe().subscribe((isLoggedIn) => {\n      if (isLoggedIn) {\n        this.gameManagementClientService\n          .getLoggedInPlayer()\n          .then((player) => {\n            this.currentPlayer = player;\n            this.currentPlayerSubject.next(this.currentPlayer);\n          })\n          .catch((error: unknown) => {\n            throw error;\n          });\n      } else {\n        this.currentPlayer = undefined;\n        this.currentPlayerSubject.next(this.currentPlayer);\n      }\n    });\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await this.gameManagementClientService.findPlayers(username);\n    return playerCollection.map((player) => player.username);\n  }\n\n  async addFriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends.push(username);\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n    this.currentPlayerSubject.next(this.currentPlayer);\n  }\n\n  async removeFriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends = ensureDefined(this.currentPlayer).friends.filter(\n      (friendUsername) => friendUsername !== username,\n    );\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n    this.currentPlayerSubject.next(this.currentPlayer);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpConfirmFormData.html":{"url":"interfaces/SignUpConfirmFormData.html","title":"interface - SignUpConfirmFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpConfirmFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpConfirmPageComponent.html":{"url":"components/SignUpConfirmPageComponent.html","title":"component - SignUpConfirmPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpConfirmPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-confirm-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-confirm-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-confirm-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpConfirmForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Confirm Sign Up\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Code:\n          \n        \n        .\n        \n          \n          \n            Confirm\n          \n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm Sign Up                            Username:                                    Code:                          .                                        Confirm                                                          @if (errorMessage()) {              {{ errorMessage() }}            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpConfirmPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpFormData.html":{"url":"interfaces/SignUpFormData.html","title":"interface - SignUpFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-page/sign-up-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpPageComponent.html":{"url":"components/SignUpPageComponent.html","title":"component - SignUpPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-page/sign-up-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardHeader\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up for VPA Games\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Email:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n        \n          \n          Sign Up\n        \n\n        \n\n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n            @if (signUpForm.invalid && signUpForm.dirty) {\n              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {\n                Please enter a valid email.\n              }\n              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {\n                Password must be at least 6 characters long.\n              }\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up for VPA Games                            Username:                                    Email:                                    Password:                          .                                    Sign Up                                                        @if (errorMessage()) {              {{ errorMessage() }}            }            @if (signUpForm.invalid && signUpForm.dirty) {              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {                Please enter a valid email.              }              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {                Password must be at least 6 characters long.              }            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateGamePageComponent', 'selector': 'app-create-game-page'},{'name': 'DominantSpeciesGameComponent', 'selector': 'app-dominant-species-game'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignUpService.html":{"url":"injectables/SignUpService.html","title":"injectable - SignUpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignUpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/sign-up.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/sign-up.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignUpService {\n  constructor(private cognitoClientService: CognitoClientService) {}\n\n  async signUp(username: string, email: string, password: string): Promise {\n    return this.cognitoClientService.signUp(username, email, password);\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    return this.cognitoClientService.confirmSignUp(username, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _action\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                removePiece\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    action\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: SpaceState)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        SpaceState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                        Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:20\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n\n                \n                    \n                        getaction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:31\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action } from './action.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\nimport { Piece, SpaceState } from 'api-types/src/game-state';\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(state: SpaceState) {\n    this.kind = state.kind;\n    this._piece = state.piece;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeciesPiece.html":{"url":"interfaces/SpeciesPiece.html","title":"interface - SpeciesPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeciesPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/species.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface SpeciesPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/component/create-game-page/create-game-page.component.ts\n            \n            component\n            CreateGamePageComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/engine/component/lobby-page/lobby-page.component.ts\n            \n            component\n            LobbyPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            interface\n            LoginFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/logout-page/logout-page.component.ts\n            \n            component\n            LogoutPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            component\n            SignUpConfirmPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            interface\n            SignUpConfirmFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            component\n            SignUpPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            interface\n            SignUpFormData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/gaurd/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/api-url.interceptor.ts\n            \n            function\n            apiUrlInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/auth.interceptor.ts\n            \n            function\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/error-handler.interceptor.ts\n            \n            function\n            errorHandlerInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            interface\n            InitialGameElementStatesFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            function\n            getEmptyInitialGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameElementStates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            type alias\n            InitialGameElementStatesFactoryConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            type alias\n            PieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            PileAdapter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerAuthData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/cognito-client.service.ts\n            \n            injectable\n            CognitoClientService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/sign-up.service.ts\n            \n            injectable\n            SignUpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game-management-client.service.ts\n            \n            injectable\n            GameManagementClientService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-initialization.service.ts\n            \n            injectable\n            GameStateInitializationService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/service/game-state/game-state-initialization.service.ts\n            \n            variable\n            FACTORY_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/engine/service/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            deepFreeze\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            ensureDefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            setDifference\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n            \n            component\n            AdaptionActionDisplayCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n            \n            component\n            ActionPawnSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/element-space/element-space.component.ts\n            \n            component\n            ElementSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n            \n            component\n            EyeballComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-pawn/action-pawn.component.ts\n            \n            component\n            ActionPawnComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/animal-card/animal-card.component.ts\n            \n            component\n            AnimalCardComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/game/component/dominant-species-game/dominant-species-game.component.ts\n            \n            component\n            DominantSpeciesGameComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/game/component/element/element.component.ts\n            \n            component\n            ElementComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/game/constant/animal.constant.ts\n            \n            type alias\n            AnimalKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            variable\n            elementAreaIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            type alias\n            AreaId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element-config.constant.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element.constant.ts\n            \n            type alias\n            ElementKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/game-state.constant.ts\n            \n            variable\n            ACTION_DISPLAY_ADAPTION_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/game-state.constant.ts\n            \n            variable\n            ELEMENT_DRAW_POOL_STATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/image.constant.ts\n            \n            variable\n            imgPathByKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            interface\n            PileConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/game/constant/pile-config.ts\n            \n            variable\n            pileIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/action-display.model.ts\n            \n            interface\n            ActionDisplayService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/action-pawn.model.ts\n            \n            interface\n            ActionPawnPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            AnimalElements\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            interface\n            AnimalConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/element.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/species.model.ts\n            \n            interface\n            SpeciesPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            injectable\n            ActionDisplayManagerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/adaption-action-display.service.ts\n            \n            injectable\n            AdaptionActionDisplayService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/game/service/animal-provider.service.ts\n            \n            injectable\n            AnimalProviderService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/game/service/game-element-states-factory.service.ts\n            \n            class\n            GameElementStatesFactoryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/game/service/game-ready.service.ts\n            \n            injectable\n            GameReadyService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @aws-sdk/client-cognito-identity-provider : ^3.670.0\n        \n            human-id : ^4.1.1\n        \n            jwt-decode : ^4.0.0\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalEnum   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../area.constant.ts)\n                        \n                        \n                            ElementEnum   (src/.../element.constant.ts)\n                        \n                        \n                            GameTitle   (src/.../game-title.constant.ts)\n                        \n                        \n                            LocalStorageKey   (src/.../local-storage.constant.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../piece.constant.ts)\n                        \n                        \n                            PileIdEnum   (src/.../pile.constant.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../area.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n\n    src/app/game/constant/area.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n    src/app/game/constant/element.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grass\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grub\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meat\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seed\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sun\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : water\n                            \n                        \n            \n        \n\n    src/app/engine/constant/game-title.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        GameTitle\n                    \n                \n                        \n                            \n                                 DOMINANT_SPECIES\n                            \n                        \n                        \n                            \n                                Value : dominant-species\n                            \n                        \n            \n        \n\n    src/app/engine/constant/local-storage.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageKey\n                    \n                \n                        \n                            \n                                 PLAYER_AUTH_DATA\n                            \n                        \n                        \n                            \n                                Value : playerAuthData\n                            \n                        \n            \n        \n\n    src/app/game/constant/piece.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 SPECIES\n                            \n                        \n                        \n                            \n                                Value : species\n                            \n                        \n            \n        \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PileIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrlInterceptor   (src/.../api-url.interceptor.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            deepCompare   (src/.../misc.ts)\n                        \n                        \n                            deepFreeze   (src/.../misc.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            ensureDefined   (src/.../misc.ts)\n                        \n                        \n                            errorHandlerInterceptor   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            getEmptyInitialGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            getOrThrow   (src/.../misc.ts)\n                        \n                        \n                            isFalse   (src/.../predicate.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                        \n                            isTrue   (src/.../predicate.ts)\n                        \n                        \n                            setDifference   (src/.../misc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/interceptor/api-url.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrlInterceptor\n                        \n                    \n                \n            \n            \n                \napiUrlInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n            \n                \nauthInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/misc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deepFreeze\n                        \n                    \n                \n            \n            \n                \ndeepFreeze(obj: T)\n                \n            \n\n\n\n\n            \n                \n                        Returns a readonly version of an object.\nThis is intended to be used with \"seed\" objects that should be copied to create a \"read/write\" object that can be used.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureDefined\n                        \n                    \n                \n            \n            \n                \nensureDefined(value)\n                \n            \n\n\n\n\n            \n                \n                        Ensures that a given value is defined (i.e., not undefined).\nTypically used for values that start as undefined and then are set during initialization by a subscription.\nIf the value is undefined, this function throws an error with a message\nindicating that the value is not defined. If the value is defined, it is\nreturned unchanged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be checked.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \nThe value itself if it is defined.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDifference\n                        \n                    \n                \n            \n            \n                \nsetDifference(setA: Set, setB: Set)\n                \n            \n\n\n\n\n            \n                \n                        Returns the items that are in setA, but not in setB\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                setA\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setB\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Set\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner, name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/error-handler.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorHandlerInterceptor\n                        \n                    \n                \n            \n            \n                \nerrorHandlerInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyInitialGameState\n                        \n                    \n                \n            \n            \n                \ngetEmptyInitialGameState(gameId: string, playerIds)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playerIds\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFalse\n                        \n                    \n                \n            \n            \n                \nisFalse(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTrue\n                        \n                    \n                \n            \n            \n                \nisTrue(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalKind   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaId   (src/.../area.constant.ts)\n                        \n                        \n                            ElementKind   (src/.../element.constant.ts)\n                        \n                        \n                            InitialGameElementStatesFactoryConstructor   (src/.../game-state.model.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/area.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/element.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/game-state.model.ts\n    \n    \n        \n            \n                \n                    \n                    InitialGameElementStatesFactoryConstructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTION_DISPLAY_ADAPTION_STATE   (src/.../game-state.constant.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            ELEMENT_DRAW_POOL_STATE   (src/.../game-state.constant.ts)\n                        \n                        \n                            elementAreaIdsByAnimal   (src/.../area.constant.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../element-config.constant.ts)\n                        \n                        \n                            emptyGameElementStates   (src/.../game-state.model.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            FACTORY_MAP   (src/.../game-state-initialization.service.ts)\n                        \n                        \n                            imgPathByKind   (src/.../image.constant.ts)\n                        \n                        \n                            pileIdsByAnimal   (src/.../pile-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/game-state.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACTION_DISPLAY_ADAPTION_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : deepFreeze({\n  id: AreaIdEnum.ACTION_DISPLAY_ADAPTION,\n  space: [\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ELEMENT, piece: null },\n    { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n    { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n    { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n  ],\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ELEMENT_DRAW_POOL_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : deepFreeze({\n  id: PileIdEnum.ELEMENT,\n  owner: null,\n  inventory: {\n    // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n    [ElementEnum.GRASS]: 18,\n    [ElementEnum.GRUB]: 18,\n    [ElementEnum.MEAT]: 18,\n    [ElementEnum.SEED]: 18,\n    [ElementEnum.SUN]: 18,\n    [ElementEnum.WATER]: 18,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(\n      withFetch(),\n      withInterceptors([apiUrlInterceptor, authInterceptor, errorHandlerInterceptor]),\n    ),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    {\n      provide: CognitoIdentityProviderClient,\n      useFactory: () => new CognitoIdentityProviderClient({ region: environment.cognito.region }),\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/engine/gaurd/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  if (inject(AuthService).checkIsLoggedIn()) {\n    return inject(AuthService).checkIsLoggedIn();\n  } else {\n    void inject(Router).navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/area.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementAreaIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [AnimalEnum.AMPHIBIAN, AreaIdEnum.AMPHIBIAN_ELEMENT],\n  [AnimalEnum.ARACHNID, AreaIdEnum.ARACHNID_ELEMENT],\n  [AnimalEnum.BIRD, AreaIdEnum.BIRD_ELEMENT],\n  [AnimalEnum.INSECT, AreaIdEnum.INSECT_ELEMENT],\n  [AnimalEnum.MAMMAL, AreaIdEnum.MAMMAL_ELEMENT],\n  [AnimalEnum.REPTILE, AreaIdEnum.REPTILE_ELEMENT],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/element-config.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameElementStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameElementStates\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [],\n  faction: [],\n  pile: [],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  gameId: 'placeholder',\n  patchId: 0,\n  playerIds: [],\n  gameElements: emptyGameElementStates,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/engine/service/game-state/game-state-initialization.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FACTORY_MAP\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map([\n  [GameTitle.DOMINANT_SPECIES, GameElementStatesFactoryService],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/image.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imgPathByKind\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  // elements /\n  ['grass', 'dominant-species/element/noun-grass-7195612.svg'],\n  ['grub', 'dominant-species/element/noun-grub-3386143.svg'],\n  ['meat', 'dominant-species/element/noun-cow-skull-151117.svg'],\n  ['seed', 'dominant-species/element/noun-seed-6850047.svg'],\n  ['sun', 'dominant-species/element/noun-sun-7300296.svg'],\n  ['water', 'dominant-species/element/noun-water-water-1235535.svg'],\n  // animals /\n  ['amphibian', 'dominant-species/animal/noun-gecko-367390.svg'],\n  ['arachnid', 'dominant-species/animal/noun-spider-7144060.svg'],\n  ['bird', 'dominant-species/animal/noun-eagle-6606521.svg'],\n  ['insect', 'dominant-species/animal/noun-grasshopper-7049525.svg'],\n  ['mammal', 'dominant-species/animal/noun-monkey-2997582.svg'],\n  ['reptile', 'dominant-species/animal/noun-snake-4412103.svg'],\n  // others /\n  ['eyeball', 'dominant-species/other/noun-eye-2037742.svg'],\n  ['elementSpace', 'dominant-species/other/noun-leaf-7290921.svg'],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/pile-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pileIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
