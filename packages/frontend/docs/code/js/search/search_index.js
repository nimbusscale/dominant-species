var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Action.html",[0,0.691,1,1.096]],["body/interfaces/Action.html",[0,1.068,1,1.977,2,2.414,3,0.222,4,0.222,5,0.197,6,5.282,7,0.101,8,0.724,9,2.417,10,0.849,11,0.149,12,0.014,13,0.222,14,0.013,15,0.013]],["title/injectables/ActionDisplayManagerService.html",[16,0.321,17,2.819]],["body/injectables/ActionDisplayManagerService.html",[1,1.213,3,0.159,4,0.159,5,0.141,7,0.073,8,0.588,11,0.158,12,0.015,13,0.211,14,0.01,15,0.01,16,0.47,17,4.127,18,1.168,19,5.121,20,5.585,21,2.612,22,3.401,23,1.092,24,4.923,25,4.75,26,0.785,27,5.121,28,0.734,29,3.78,30,4.292,31,0.63,32,5.762,33,0.541,34,0.377,35,0.541,36,4.354,37,0.567,38,0.936,39,4.75,40,4.354,41,2.146,42,0.309,43,0.541,44,1.657,45,3.119,46,1.944,47,3.78,48,2.278,49,3.18,50,1.528,51,1.042,52,2.544,53,3.78,54,1.124,55,1.083,56,0.164,57,2.544,58,3.78,59,1.139,60,3.78,61,3.401,62,3.78,63,3.78,64,5.002,65,3.119,66,3.401,67,3.119,68,3.78,69,3.78,70,2.544,71,2.063,72,0.861,73,3.78,74,3.78,75,3.78,76,3.78,77,2.544,78,3.78,79,3.119,80,3.78,81,3.78,82,3.78,83,3.78,84,3.78,85,3.78,86,3.78]],["title/interfaces/ActionDisplayServiceWithSetup.html",[0,0.691,39,2.615]],["body/interfaces/ActionDisplayServiceWithSetup.html",[0,1.025,2,2.317,3,0.214,4,0.214,5,0.19,7,0.097,8,0.707,11,0.169,12,0.015,13,0.214,14,0.012,15,0.012,25,5.077,27,5.473,38,0.795,39,4.604,41,2.386,42,0.263,51,1.398,87,4.563,88,5.071,89,3.825]],["title/classes/ActionDisplaySetupManager.html",[24,2.819,56,0.112]],["body/classes/ActionDisplaySetupManager.html",[1,1.144,3,0.15,4,0.15,5,0.133,7,0.069,8,0.566,11,0.164,12,0.015,13,0.203,14,0.01,15,0.01,16,0.452,17,2.943,19,5.289,20,5.769,21,2.698,22,3.21,23,1.143,24,4.493,25,4.659,26,0.755,27,5.022,28,0.692,30,3.665,31,0.662,33,0.511,34,0.356,35,0.511,37,0.722,38,0.955,39,4.906,41,2.097,42,0.302,43,0.511,44,1.564,45,2.943,46,2.117,47,3.567,48,2.15,49,3.06,50,1.442,51,0.984,52,2.401,53,3.567,54,1.061,55,1.022,56,0.158,57,2.401,58,3.567,59,1.24,60,3.567,61,3.21,62,3.567,63,3.567,64,6.087,65,4.493,66,4.33,67,3.97,68,4.812,69,3.567,70,2.401,71,3.182,72,0.812,73,3.567,74,3.567,75,3.567,76,3.567,77,2.401,78,3.567,79,2.943,80,3.567,81,3.567,82,3.567,83,3.567,84,3.567,85,3.567,86,3.567,90,1.947,91,5.544,92,4.109,93,1.096,94,0.973,95,4.109,96,4.109,97,4.109]],["title/components/ActionPawnComponent.html",[98,0.809,99,1.498]],["body/components/ActionPawnComponent.html",[1,2.095,3,0.142,4,0.142,5,0.126,7,0.065,10,0.689,11,0.095,12,0.015,13,0.142,14,0.01,15,0.01,21,1.421,31,0.601,34,0.596,42,0.295,43,0.484,44,1.48,52,2.273,56,0.111,93,0.769,94,0.683,98,1.253,99,2.498,100,2.119,101,1.61,102,1.61,103,1.61,104,4.274,105,4.571,106,3.377,107,1.61,108,2.309,109,2.309,110,2.783,111,2.897,112,2.42,113,1.951,114,1.605,115,1.951,116,5.341,117,1.951,118,5.341,119,3.548,120,2.89,121,1.733,122,3.366,123,4.368,124,2.89,125,3.879,126,3.89,127,3.89,128,3.89,129,2.786,130,3.89,131,2.786,132,3.89,133,1.682,134,3.318,135,2.147,136,2.416,137,2.786,138,1.935,139,1.843,140,1.421,141,1.421,142,1.062,143,3.89,144,3.89,145,4.172,146,2.786,147,1.61,148,2.211,149,1.253,150,1.61,151,2.717,152,1.61,153,1.61,154,1.48,155,2.211,156,1.48,157,2.211,158,1.48,159,1.262,160,1.48,161,1.61,162,1.48,163,1.313,164,1.421,165,1.61,166,1.48,167,1.61,168,1.48,169,1.48,170,1.61,171,1.48,172,1.61,173,2.717,174,1.421,175,1.421,176,1.48,177,1.543,178,1.421,179,1.951,180,1.875,181,1.421,182,1.421,183,1.421,184,1.61,185,1.61]],["title/interfaces/ActionPawnPiece.html",[0,0.691,124,1.865]],["body/interfaces/ActionPawnPiece.html",[0,1.025,2,2.317,3,0.214,4,0.214,5,0.19,7,0.097,8,0.707,11,0.143,12,0.015,13,0.214,14,0.012,15,0.012,42,0.312,87,4.563,122,4.218,124,3.284,186,5.071,187,2.749,188,3.675,189,5.473,190,4.563,191,1.2,192,1.296,193,1.296]],["title/components/ActionPawnSpaceComponent.html",[98,0.809,154,1.498]],["body/components/ActionPawnSpaceComponent.html",[1,2.134,3,0.147,4,0.147,5,0.131,7,0.067,11,0.098,12,0.015,13,0.147,14,0.01,15,0.01,21,1.472,31,0.369,34,0.473,42,0.313,43,0.501,44,1.533,52,2.354,56,0.114,93,0.796,94,0.707,98,1.276,99,2.535,100,2.17,101,1.668,102,1.668,103,1.668,104,3.398,105,2.677,107,1.668,108,2.365,109,2.365,110,2.795,111,2.909,112,3.068,113,1.999,114,1.644,115,1.999,117,1.999,119,3.634,120,3.3,124,2.943,133,1.742,134,3.398,135,2.224,140,1.999,141,2.434,147,1.668,148,2.264,149,1.276,150,1.668,151,2.758,152,1.668,153,1.668,154,2.535,155,2.264,156,1.533,157,2.264,158,1.533,159,1.307,160,1.533,161,1.668,162,1.533,163,1.359,164,1.472,165,1.668,166,2.535,167,1.668,168,1.533,169,2.535,170,1.668,171,1.533,172,1.668,173,2.758,174,1.472,175,1.472,176,1.533,177,1.598,178,1.472,179,1.999,180,1.92,181,1.472,182,1.472,183,1.472,184,1.668,185,1.668,194,4.748,195,4.273,196,3.147,197,2.474,198,4.748,199,4.748,200,3.497,201,2.886,202,3.147,203,4.029]],["title/components/AdaptionActionDisplayCardComponent.html",[98,0.809,156,1.498]],["body/components/AdaptionActionDisplayCardComponent.html",[1,2.199,3,0.121,4,0.121,5,0.108,7,0.108,8,0.487,11,0.081,12,0.015,13,0.121,14,0.009,15,0.009,21,2.849,26,0.65,28,0.558,29,2.876,30,3.944,31,0.56,33,0.412,34,0.484,35,0.412,37,0.431,38,0.451,42,0.331,43,0.412,44,2.76,45,2.373,48,1.733,49,1.829,51,0.793,52,1.936,56,0.094,57,1.936,93,0.943,94,0.837,98,1.149,99,1.261,100,1.893,101,1.371,102,1.371,103,1.371,104,4.026,107,1.371,108,2.063,109,2.063,110,2.722,111,2.834,112,2.218,113,1.743,114,1.433,115,1.743,117,1.743,120,2.26,124,1.57,133,1.433,135,1.829,140,1.743,147,1.371,148,1.975,149,1.332,150,1.371,151,2.532,152,1.371,153,1.371,154,2.327,155,1.975,156,2.327,157,1.975,158,1.261,159,1.075,160,1.261,161,1.371,162,1.261,163,1.118,164,1.211,165,1.371,166,1.261,167,1.371,168,2.327,169,2.327,170,1.371,171,1.261,172,1.371,173,2.532,174,1.211,175,1.211,176,1.261,177,1.314,178,1.211,179,1.743,180,1.675,181,1.211,182,1.211,183,1.211,184,1.371,185,1.371,195,3.726,204,4.834,205,5.062,206,2.588,207,3.417,208,4.367,209,4.141,210,3.085,211,4.141,212,4.141,213,5.626,214,2.931,215,4.777,216,4.77,217,3.313,218,3.391,219,3.313,220,1.829,221,3.417,222,4.141,223,3.313,224,1.499,225,2.058,226,2.876,227,2.588,228,2.058,229,3.313,230,3.313,231,3.313,232,3.313,233,3.313,234,2.876,235,4.38]],["title/injectables/AdaptionActionDisplayService.html",[16,0.321,30,2.3]],["body/injectables/AdaptionActionDisplayService.html",[1,2.127,3,0.094,4,0.094,5,0.084,7,0.09,8,0.404,11,0.166,12,0.015,13,0.094,14,0.007,15,0.007,16,0.323,18,0.692,19,5.47,23,1.047,25,3.202,26,0.539,27,3.872,28,0.667,30,2.313,31,0.696,33,0.672,34,0.468,35,0.672,37,0.834,38,0.873,42,0.321,43,0.321,46,0.87,48,2.072,49,2.185,51,0.617,52,1.507,54,0.666,55,0.641,56,0.073,59,1.307,65,3.451,66,3.093,67,2.836,70,1.507,71,2.561,72,0.51,77,1.507,93,1.392,94,1.236,120,2.283,124,3.28,125,2.828,135,1.424,139,1.222,141,2.249,142,0.779,149,0.53,163,0.87,188,1.969,191,0.53,192,0.572,193,0.572,197,2.991,204,5.47,213,5.343,214,2.784,224,3.131,225,1.602,228,1.602,236,2.239,237,4.819,238,4.819,239,2.548,240,3.451,241,3.451,242,3.959,243,3.959,244,3.437,245,5.406,246,5.832,247,2.579,248,3.824,249,4.59,250,3.959,251,3.959,252,3.962,253,2.579,254,2.579,255,3.959,256,2.579,257,3.959,258,2.579,259,2.579,260,2.579,261,2.579,262,2.579,263,3.959,264,2.579,265,2.579,266,3.959,267,2.579,268,2.579,269,2.579,270,2.836,271,2.579,272,2.579,273,3.959,274,2.579,275,2.579,276,1.714,277,1.602,278,1.424,279,2.579,280,1.714,281,2.239,282,1.714,283,2.994,284,1.602,285,1.349,286,1.714,287,1.602,288,2.579,289,2.579,290,3.959,291,2.579,292,2.579,293,1.714,294,2.579,295,2.239,296,2.579,297,2.579,298,3.959,299,3.437,300,2.239,301,2.579,302,2.579,303,3.202,304,2.579,305,2.579,306,1.714,307,2.579,308,2.579,309,3.959,310,2.579,311,2.579,312,2.579,313,1.424,314,1.507,315,2.579,316,2.46,317,2.579,318,2.015,319,2.579,320,3.959,321,2.579,322,2.579,323,1.424,324,1.847,325,2.579,326,2.579,327,2.239,328,1.847,329,2.579,330,2.579,331,2.579]],["title/classes/Animal.html",[56,0.112,159,1.277]],["body/classes/Animal.html",[0,0.581,1,0.921,3,0.121,4,0.121,5,0.107,7,0.055,8,0.486,9,1.744,10,0.538,11,0.158,12,0.015,13,0.204,14,0.009,15,0.009,23,1.152,28,0.803,31,0.674,33,0.411,34,0.529,35,0.411,38,0.649,42,0.338,46,1.608,51,0.792,56,0.135,59,1.333,72,1.208,90,1.568,120,2.647,121,1.547,124,1.568,129,2.37,135,1.826,139,1.568,142,1.172,149,0.979,159,1.547,197,2.526,214,2.764,224,3.052,228,2.055,239,2.312,240,2.37,241,2.37,270,2.37,280,2.198,283,2.055,284,2.055,285,1.731,286,2.198,287,2.055,303,4.06,306,2.198,314,1.814,316,2.055,323,1.826,324,2.37,328,2.37,332,2.37,333,3.744,334,4.377,335,4.619,336,2.708,337,4.377,338,3.083,339,3.723,340,3.797,341,4.766,342,2.585,343,4.062,344,3.309,345,3.309,346,3.309,347,2.872,348,3.309,349,3.309,350,3.309,351,3.309,352,3.309,353,3.309,354,3.309,355,3.309,356,2.055,357,2.312,358,2.37,359,3.724,360,2.198,361,2.198,362,2.055,363,2.585,364,1.731,365,3.413,366,4.363,367,2.585,368,2.585,369,2.585,370,2.585,371,2.585,372,2.585,373,2.585,374,3.723,375,2.585,376,2.585,377,2.585,378,3.166,379,2.585,380,2.585,381,2.585,382,2.585,383,2.585,384,2.37,385,2.585,386,2.585,387,2.585,388,2.585,389,2.585,390,2.585,391,2.585,392,2.585,393,2.585,394,3.723,395,2.585,396,3.723,397,2.585,398,3.723,399,2.585,400,2.585,401,2.585,402,2.585]],["title/components/AnimalCardComponent.html",[98,0.809,158,1.498]],["body/components/AnimalCardComponent.html",[1,1.736,3,0.097,4,0.097,5,0.086,7,0.099,8,0.414,11,0.065,12,0.015,13,0.097,14,0.007,15,0.007,21,0.973,23,0.993,26,0.552,28,0.684,31,0.659,33,0.331,34,0.425,35,0.331,37,0.64,38,0.669,42,0.337,43,0.331,44,1.013,48,1.393,49,2.239,50,0.935,51,0.637,52,1.555,56,0.076,77,1.555,93,1.232,94,1.094,98,1.01,99,2.091,100,1.609,101,1.102,102,1.102,103,1.102,105,1.769,107,1.102,108,1.754,109,1.754,110,2.628,111,2.736,112,1.056,113,1.482,114,1.477,115,1.482,117,1.482,119,2.695,124,2.604,133,1.151,134,1.654,135,1.469,139,1.261,140,1.482,141,0.973,142,0.431,147,1.102,148,1.679,149,1.215,150,1.102,151,2.275,152,1.102,153,1.102,154,1.013,155,1.679,156,1.013,157,1.679,158,2.091,159,2.103,160,1.013,161,1.102,162,1.013,163,0.898,164,0.973,165,1.102,166,2.091,167,1.102,168,1.013,169,1.013,170,1.102,171,1.013,172,1.102,173,2.275,174,0.973,175,0.973,176,1.013,177,1.056,178,0.973,179,1.482,180,1.424,181,0.973,182,0.973,183,0.973,184,1.102,185,1.102,201,1.907,202,2.08,206,2.08,207,2.905,208,3.839,209,3.521,210,2.712,211,3.521,212,3.521,214,2.675,215,4.293,218,3.095,220,1.469,224,1.204,225,1.654,228,1.654,234,2.311,235,3.936,276,1.769,285,1.393,336,2.372,338,2.239,356,1.654,403,6.323,404,5.69,405,4.914,406,4.914,407,4.914,408,4.914,409,4.914,410,5.915,411,4.914,412,5.915,413,5.915,414,5.495,415,5.495,416,2.662,417,4.141,418,4.026,419,2.662,420,2.662,421,4.057,422,2.662,423,2.662,424,2.662,425,5.915,426,4.057,427,2.662,428,5.495,429,2.662,430,4.057,431,4.057,432,2.662,433,2.662,434,2.662,435,2.662,436,1.654,437,2.311,438,2.08,439,2.311,440,2.662,441,2.662,442,2.311,443,2.311,444,2.08,445,2.08,446,2.311,447,2.662,448,2.662,449,2.662,450,2.662,451,2.662,452,2.662,453,2.662,454,2.662,455,2.662,456,4.057,457,2.662,458,2.662,459,2.662,460,2.662,461,2.662,462,2.662,463,2.662,464,2.662,465,2.662,466,2.662,467,4.057,468,4.057,469,4.057]],["title/interfaces/AnimalConfig.html",[0,0.691,340,2.445]],["body/interfaces/AnimalConfig.html",[0,0.62,1,0.984,2,1.402,3,0.129,4,0.129,5,0.115,7,0.059,8,0.51,9,1.104,10,0.564,11,0.162,12,0.015,13,0.212,14,0.009,15,0.009,23,1.076,28,0.596,34,0.306,38,0.68,42,0.343,46,1.686,51,0.846,56,0.142,59,1.363,72,1.245,120,1.675,124,1.675,135,1.951,139,1.675,142,1.191,149,1.027,159,1.147,197,2.621,214,2.26,224,3.119,228,2.196,239,2.75,240,2.532,241,2.532,270,2.532,280,2.349,283,2.196,284,2.196,285,1.85,286,2.349,287,2.196,303,4.184,306,2.349,314,1.901,316,2.196,323,1.951,324,2.532,328,2.532,332,2.532,333,3.132,334,4.759,335,4.184,336,2.841,337,4.759,338,1.951,339,2.761,340,3.6,343,3.882,356,2.196,357,2.935,358,2.532,359,4.167,360,2.349,361,2.349,362,2.196,363,2.761,364,1.85,365,4.759,366,4.526,367,2.761,368,2.761,369,2.761,370,2.761,371,2.761,372,2.761,373,2.761,374,3.903,375,2.761,376,2.761,377,2.761,378,3.319,379,2.761,380,2.761,381,2.761,382,2.761,383,2.761,384,2.532,385,2.761,386,2.761,387,2.761,388,2.761,389,2.761,390,2.761,391,2.761,392,2.761,393,2.761,394,3.903,395,2.761,396,3.903,397,2.761,398,3.903,399,2.761,400,2.761,401,2.761,402,2.761]],["title/classes/AnimalElements.html",[56,0.112,335,2.615]],["body/classes/AnimalElements.html",[0,0.578,1,0.918,3,0.12,4,0.12,5,0.107,7,0.055,8,0.485,9,1.029,10,0.537,11,0.136,12,0.015,13,0.204,14,0.009,15,0.009,23,1.093,26,0.647,28,0.801,31,0.651,33,0.693,34,0.528,35,0.693,37,0.619,38,0.831,42,0.338,46,1.881,51,0.789,56,0.135,59,1.373,72,1.206,90,1.562,93,0.939,94,0.834,120,1.562,121,1.542,124,1.562,135,1.819,139,1.562,142,1.171,149,1.253,159,1.069,197,2.521,214,2.759,224,3.325,228,2.047,239,2.677,240,2.36,241,3.992,244,4.125,270,3.404,280,2.189,283,2.047,284,2.047,285,1.724,286,2.189,287,2.047,303,4.053,306,2.189,314,1.809,316,2.047,323,1.819,324,2.36,328,2.36,332,2.36,333,3.034,334,3.404,335,4.297,336,2.461,337,3.404,338,1.819,339,2.574,340,2.952,343,3.779,356,2.047,357,2.307,358,2.36,359,4.058,360,2.189,361,2.189,362,2.047,363,2.574,364,1.724,365,3.992,366,4.353,367,4.353,368,2.574,369,2.574,370,2.574,371,2.574,372,2.574,373,3.712,374,3.712,375,2.574,376,2.574,377,3.712,378,3.157,379,2.574,380,2.574,381,2.574,382,2.574,383,2.574,384,2.36,385,2.574,386,4.353,387,2.574,388,2.574,389,4.353,390,2.574,391,2.574,392,2.574,393,2.574,394,3.712,395,2.574,396,3.712,397,2.574,398,3.712,399,2.574,400,2.574,401,2.574,402,2.574,470,4.752,471,3.296,472,4.752,473,3.296,474,3.296,475,3.296,476,3.296,477,3.296,478,3.296,479,3.296,480,3.296,481,3.296]],["title/injectables/AnimalProviderService.html",[16,0.321,417,2.615]],["body/injectables/AnimalProviderService.html",[3,0.118,4,0.118,5,0.105,7,0.054,8,0.479,9,1.722,10,0.623,11,0.157,12,0.015,13,0.118,14,0.008,15,0.008,16,0.383,18,0.867,23,1.175,26,0.639,28,0.79,31,0.661,33,0.752,34,0.524,35,0.752,37,0.787,38,0.824,42,0.329,43,0.402,46,1.861,48,2.453,49,2.588,50,1.646,51,0.775,54,0.835,55,0.804,56,0.092,59,1.425,72,1.365,77,1.89,93,1.195,94,1.061,138,1.609,139,1.533,142,0.758,159,2.241,248,3.757,276,3.664,277,2.01,278,3.044,281,2.808,293,2.149,333,2.743,334,2.317,336,2.692,337,2.317,340,4.29,342,2.527,356,2.01,359,1.786,360,2.149,361,2.149,365,2.317,417,3.115,482,6.355,483,2.808,484,5.515,485,4.788,486,5.515,487,6.048,488,4.689,489,4.689,490,6.048,491,3.235,492,4.29,493,4.588,494,4.689,495,4.689,496,4.689,497,3.235,498,4.689,499,3.235,500,3.235,501,3.115,502,3.235,503,3.235,504,4.689,505,3.235,506,2.772,507,3.235,508,2.149,509,2.808,510,2.149,511,2.01,512,2.149,513,2.527,514,3.235,515,3.235,516,3.235,517,3.235,518,3.235,519,2.808,520,3.235,521,3.235,522,3.235,523,3.235,524,3.235,525,2.808,526,3.235,527,4.689,528,3.235,529,5.515,530,3.235,531,3.235,532,3.235,533,3.235,534,3.235,535,4.07,536,3.235,537,3.235,538,4.689,539,3.235,540,3.235,541,3.235,542,3.235,543,3.235,544,3.235,545,3.235,546,3.235,547,3.235,548,3.235,549,3.235,550,3.235,551,2.317,552,3.235,553,3.235,554,3.235,555,3.235,556,3.235]],["title/components/AppComponent.html",[98,0.809,160,1.498]],["body/components/AppComponent.html",[1,1.811,3,0.161,4,0.161,5,0.143,7,0.074,8,0.594,10,0.499,11,0.108,12,0.015,13,0.161,14,0.01,15,0.01,21,1.614,31,0.405,34,0.503,42,0.292,43,0.549,44,1.681,55,1.446,56,0.125,93,0.873,94,0.775,98,1.336,99,1.681,100,2.308,101,1.828,102,1.828,103,1.828,107,1.828,110,2.826,111,2.941,112,1.752,113,2.125,114,1.748,115,2.125,117,2.125,140,2.125,147,1.828,148,2.408,149,1.336,150,1.828,151,2.861,152,1.828,153,1.828,154,1.681,155,2.408,156,1.681,157,2.408,158,1.681,159,1.433,160,2.631,161,1.828,162,2.631,163,1.49,164,2.376,165,1.828,166,1.681,167,1.828,168,1.681,169,1.681,170,1.828,171,1.681,172,1.828,173,2.861,174,1.614,175,1.614,176,1.681,177,1.752,178,1.614,179,2.125,180,2.042,181,1.614,182,1.614,183,1.614,184,1.828,185,1.828,338,3.21,557,3.834,558,6.504,559,5.817,560,5.817,561,6.504,562,4.543,563,4.416,564,2.311,565,4.416,566,3.45,567,4.416]],["title/classes/Area.html",[56,0.112,239,1.63]],["body/classes/Area.html",[3,0.129,4,0.129,5,0.115,7,0.097,8,0.51,9,1.966,10,0.779,11,0.182,12,0.015,13,0.129,14,0.009,15,0.009,23,1.094,26,0.68,28,0.596,31,0.698,33,0.72,34,0.502,35,0.72,37,0.82,38,0.789,41,1.966,42,0.283,46,2.125,51,0.846,56,0.1,59,1.245,70,2.065,71,2.984,72,0.987,90,1.675,141,2.301,142,0.572,187,1.982,191,0.726,192,0.784,193,1.474,197,3.331,239,2.399,299,3.069,303,2.349,313,1.951,314,1.901,316,4.69,327,4.337,333,3.43,364,1.85,568,3.069,569,3.788,570,5.795,571,5.831,572,3.807,573,3.578,574,3.319,575,4.996,576,3.319,577,4.15,578,4.996,579,4.996,580,3.535,581,3.535,582,3.535,583,2.065,584,3.476,585,2.761,586,2.761,587,2.761,588,3.535,589,4.996,590,3.535,591,2.882,592,3.069,593,3.319,594,4.184,595,3.535,596,1.951,597,2.761,598,3.535,599,1.104,600,3.535,601,3.535,602,3.535,603,5.795,604,3.535,605,3.535,606,3.535,607,3.535,608,3.535,609,3.535,610,3.535,611,2.761,612,4.996,613,2.761,614,3.069,615,3.069,616,3.069,617,3.903,618,3.535,619,3.535,620,3.535,621,2.349,622,3.535,623,3.535,624,3.535,625,3.535,626,3.535]],["title/injectables/AreaRegistryService.html",[16,0.321,248,2.445]],["body/injectables/AreaRegistryService.html",[3,0.164,4,0.164,5,0.145,7,0.075,8,0.599,9,1.399,10,0.663,11,0.181,12,0.015,13,0.164,14,0.011,15,0.011,16,0.479,18,1.201,23,1.101,26,0.8,28,0.755,31,0.691,33,0.814,34,0.567,35,0.814,37,0.764,38,0.61,41,1.399,42,0.324,43,0.557,50,2.061,54,1.157,55,1.114,56,0.127,59,1.295,93,1.374,94,1.22,149,0.921,187,2.329,191,0.921,192,0.994,193,0.994,214,2.026,239,2.431,248,3.648,277,3.648,278,2.473,501,2.977,506,2.711,584,3.874,594,2.977,599,1.399,627,2.061,628,2.783,629,4.523,630,3.241,631,4.205,632,3.836,633,3.072,634,4.48,635,4.978,636,3.889,637,5.872,638,3.5,639,3.615,640,2.977,641,3.889,642,3.5,643,3.209,644,3.5,645,3.5,646,3.209,647,3.5,648,3.889,649,2.228,650,2.783,651,4.48]],["title/injectables/AreaStateService.html",[16,0.321,635,2.819]],["body/injectables/AreaStateService.html",[3,0.155,4,0.155,5,0.138,7,0.071,8,0.579,9,1.327,10,0.64,11,0.178,12,0.015,13,0.155,14,0.01,15,0.01,16,0.463,18,1.14,23,1.125,26,0.772,31,0.693,33,0.846,34,0.589,35,0.846,37,0.923,38,0.927,42,0.306,43,0.528,50,1.99,54,1.097,55,1.057,56,0.121,59,1.121,71,3.024,93,1.121,94,0.995,121,1.84,142,0.687,149,0.873,187,2.25,191,0.873,192,0.943,193,1.258,239,2.936,277,3.522,506,2.347,572,4.111,584,3.897,594,4.523,599,1.327,627,1.99,630,3.13,632,3.13,633,2.967,635,4.061,639,3.522,648,3.689,649,2.114,652,2.64,653,4.522,654,4.061,655,4.061,656,4.061,657,4.57,658,5.67,659,3.32,660,4.061,661,3.32,662,3.044,663,3.32,664,3.32,665,3.044,666,3.32,667,3.044,668,3.32,669,3.32,670,3.044,671,3.32,672,4.25,673,4.25,674,4.25]],["title/injectables/AuthService.html",[16,0.321,675,2.06]],["body/injectables/AuthService.html",[3,0.13,4,0.13,5,0.115,7,0.059,8,0.511,10,0.801,11,0.169,12,0.015,13,0.13,14,0.009,15,0.009,16,0.408,18,0.951,23,1.123,26,0.682,28,0.844,31,0.684,33,0.784,34,0.546,35,0.784,37,0.866,38,0.682,41,1.812,42,0.326,43,0.441,46,1.958,51,0.849,54,0.915,55,0.881,56,0.101,59,0.989,72,1.147,79,4.157,114,1.065,121,1.625,125,2.619,142,1.147,175,1.829,177,2.502,285,1.855,314,1.349,323,1.957,333,3.433,675,2.619,676,3.077,677,5.038,678,5.804,679,5.006,680,5.804,681,3.391,682,5.006,683,5.143,684,5.804,685,3.077,686,4.586,687,5.082,688,5.006,689,5.006,690,5.474,691,3.545,692,5.804,693,3.545,694,4.346,695,3.684,696,3.545,697,2.264,698,2.925,699,3.545,700,5.006,701,3.545,702,3.545,703,3.545,704,3.545,705,3.545,706,3.545,707,3.586,708,2.355,709,3.077,710,3.545,711,2.769,712,2.769,713,2.769,714,2.769,715,3.545,716,2.539,717,3.077,718,3.545,719,3.545,720,3.545,721,3.545,722,3.545,723,3.545,724,2.769,725,3.545,726,3.545,727,3.077,728,3.545,729,3.077,730,3.545,731,3.077,732,3.545,733,2.202,734,3.545,735,3.545,736,3.545,737,3.545,738,3.545,739,3.545,740,2.202,741,5.006,742,3.545,743,3.545,744,3.545,745,3.545,746,3.545,747,3.077,748,3.545,749,3.545]],["title/injectables/CognitoClientService.html",[16,0.321,686,2.615]],["body/injectables/CognitoClientService.html",[3,0.126,4,0.126,5,0.112,7,0.058,8,0.501,10,0.906,11,0.161,12,0.015,13,0.126,14,0.009,15,0.009,16,0.401,18,0.925,23,0.85,26,0.669,28,0.964,31,0.627,33,0.774,34,0.57,35,0.774,37,0.811,38,0.669,42,0.296,43,0.429,54,0.891,55,0.858,56,0.098,59,1.231,72,1.392,94,0.606,114,1.476,134,3.553,141,1.795,142,1.164,175,1.795,179,1.261,180,1.212,191,0.709,681,4.278,686,3.264,690,2.996,694,4.264,695,4.339,697,3.312,698,3.998,707,2.472,711,2.696,712,2.696,713,2.696,714,2.696,724,2.696,733,3.553,740,3.052,750,6.112,751,2.472,752,5.719,753,4.264,754,4.912,755,4.264,756,4.264,757,4.264,758,4.462,759,3.451,760,4.912,761,3.451,762,3.451,763,5.719,764,3.451,765,4.264,766,4.716,767,3.451,768,6.231,769,3.451,770,3.451,771,4.912,772,3.451,773,3.451,774,3.451,775,3.451,776,2.996,777,3.451,778,3.451,779,3.451,780,3.451,781,3.451,782,3.451,783,5.719,784,5.719,785,3.451,786,5.719,787,3.451,788,5.719,789,6.231,790,5.719,791,3.451,792,5.719,793,4.912,794,4.912,795,3.451,796,3.451,797,3.451,798,3.451,799,3.451,800,3.518,801,3.451,802,3.451]],["title/components/DrawPoolGameComponent.html",[98,0.809,162,1.498]],["body/components/DrawPoolGameComponent.html",[1,1.952,3,0.087,4,0.087,5,0.077,7,0.04,8,0.38,10,0.42,11,0.137,12,0.015,13,0.087,14,0.007,15,0.007,21,1.673,23,1.006,26,0.506,28,0.627,30,3.636,31,0.606,33,0.296,34,0.396,35,0.296,37,0.596,38,0.811,42,0.339,43,0.296,44,0.905,45,1.704,48,1.245,49,2.053,51,0.569,56,0.068,70,1.39,71,2.453,72,1.177,77,1.39,93,1.11,94,1.162,98,0.941,99,1.97,100,1.475,101,0.985,102,0.985,103,0.985,105,1.58,107,0.985,110,2.574,111,2.68,112,0.944,113,1.359,114,1.376,115,1.359,117,1.359,120,2.17,125,3.369,140,1.359,141,1.359,147,0.985,148,1.539,149,1.064,150,0.985,151,2.143,152,0.985,153,0.985,154,0.905,155,1.539,156,1.97,157,1.539,158,1.97,159,1.486,160,0.905,161,0.985,162,1.97,163,2.1,164,2.84,165,0.985,166,1.97,167,0.985,168,1.97,169,1.97,170,0.985,171,0.905,172,0.985,173,2.143,174,0.869,175,0.869,176,0.905,177,0.944,178,0.869,179,1.359,180,1.305,181,0.869,182,0.869,183,0.869,184,0.985,185,0.985,201,1.704,202,1.858,204,2.664,205,1.858,221,1.704,222,2.065,226,2.065,235,2.664,239,1.895,248,3.866,276,3.732,277,1.478,278,2.053,280,1.58,282,1.58,284,1.478,293,1.58,295,2.065,336,2.451,356,1.478,404,1.858,417,4.134,418,3.866,442,2.065,443,2.065,445,1.858,492,3.216,511,1.478,525,2.065,551,2.664,566,5.288,599,1.754,649,1.183,740,2.31,803,5.877,804,2.065,805,2.527,806,3.975,807,3.719,808,3.719,809,4.579,810,4.579,811,5.618,812,5.618,813,4.579,814,5.177,815,5.177,816,2.065,817,3.44,818,4.579,819,3.719,820,3.228,821,2.379,822,2.379,823,2.379,824,2.379,825,2.379,826,2.379,827,2.379,828,3.719,829,2.379,830,1.313,831,2.065,832,1.245,833,3.719,834,2.379,835,1.858,836,2.379,837,2.379,838,2.379,839,2.379,840,2.379,841,2.379,842,2.379,843,2.379,844,1.58,845,2.379,846,3.719,847,3.719,848,2.379,849,2.379,850,1.858,851,2.379,852,2.379,853,2.379,854,2.379,855,2.379,856,2.379,857,2.379,858,2.379,859,2.379,860,2.379,861,2.379,862,2.379,863,2.379,864,2.905,865,3.719]],["title/components/ElementComponent.html",[98,0.809,166,1.498]],["body/components/ElementComponent.html",[1,1.725,3,0.147,4,0.147,5,0.13,7,0.067,10,0.7,11,0.098,12,0.015,13,0.147,14,0.01,15,0.01,21,1.465,31,0.609,34,0.602,42,0.299,43,0.498,44,1.526,56,0.114,93,0.792,94,0.704,98,1.273,99,1.526,100,2.163,101,1.66,102,1.66,103,1.66,107,1.66,108,2.358,109,2.358,110,2.793,111,2.908,112,1.591,113,1.992,114,1.638,115,1.992,117,1.992,119,3.622,121,1.769,123,4.437,125,3.907,129,2.872,131,2.872,133,1.734,134,3.387,136,2.491,137,2.872,138,1.994,139,1.9,140,1.465,142,1.075,146,2.872,147,1.66,148,2.257,149,1.534,150,1.66,151,2.752,152,1.66,153,1.66,154,1.526,155,2.257,156,1.526,157,2.257,158,1.526,159,1.301,160,1.526,161,1.66,162,1.526,163,1.353,164,1.465,165,1.66,166,2.53,167,1.66,168,1.526,169,1.526,170,1.66,171,1.526,172,1.66,173,2.752,174,1.465,175,1.465,176,1.526,177,1.591,178,1.465,179,1.992,180,1.914,181,1.465,182,1.465,183,1.465,184,1.66,185,1.66,224,2.802,225,2.491,591,3.081,866,3.48,867,5.452,868,5.452,869,4.009,870,4.009,871,4.009,872,4.009,873,4.009,874,4.009,875,4.009,876,4.733]],["title/interfaces/ElementConfig.html",[0,0.691,359,2.173]],["body/interfaces/ElementConfig.html",[0,0.843,2,1.905,3,0.175,4,0.175,5,0.156,7,0.08,8,0.627,11,0.165,12,0.015,13,0.224,14,0.011,15,0.011,42,0.304,50,1.685,59,0.949,72,1.214,252,3.956,282,3.19,359,3.389,510,3.19,591,3.931,877,3.75,878,3.75,879,5.78,880,6.862,881,5.111,882,3.75,883,4.801,884,4.801,885,3.19,886,4.168,887,3.75,888,3.75,889,4.168,890,4.168,891,4.168,892,3.75,893,4.168,894,5.761,895,4.168,896,3.75,897,4.168,898,4.168,899,3.75,900,4.168,901,4.168,902,3.75,903,4.168,904,4.168,905,3.75,906,4.168,907,4.168]],["title/injectables/ElementDrawPoolService.html",[16,0.321,249,2.819]],["body/injectables/ElementDrawPoolService.html",[3,0.132,4,0.132,5,0.118,7,0.06,8,0.519,11,0.17,12,0.015,13,0.132,14,0.009,15,0.009,16,0.415,18,0.971,23,1.147,25,4.743,26,0.692,28,0.61,31,0.687,33,0.73,34,0.508,35,0.73,37,0.764,38,0.867,41,1.988,42,0.321,43,0.45,46,1.982,48,1.895,49,2.806,51,0.867,54,0.935,55,0.901,56,0.103,57,2.117,59,1.161,61,2.83,65,4.206,67,3.641,70,2.117,71,3.017,77,2.117,93,1.325,94,1.177,114,1.089,121,1.65,125,3.331,141,1.324,142,1.03,163,2.559,188,2.528,191,0.744,192,0.804,193,0.804,224,3.144,225,2.251,249,3.641,252,2.97,276,2.407,278,2,293,2.407,314,1.379,357,2.636,358,2.595,493,4.23,512,2.407,740,3.158,908,6.584,909,3.145,910,5.872,911,3.971,912,3.971,913,5.872,914,4.587,915,3.623,916,5.083,917,5.083,918,3.623,919,5.083,920,3.623,921,2.83,922,3.377,923,3.971,924,3.623,925,2.83,926,3.623,927,3.623,928,5.083,929,3.623,930,3.623,931,3.623,932,2.83,933,3.623,934,2.83,935,3.623,936,3.623,937,3.623,938,3.623,939,6.367,940,3.623,941,3.623,942,3.623,943,3.623,944,3.623,945,3.623,946,3.623]],["title/interfaces/ElementPiece.html",[0,0.691,224,1.78]],["body/interfaces/ElementPiece.html",[0,1.016,2,2.296,3,0.212,4,0.212,5,0.188,7,0.096,8,0.703,11,0.141,12,0.015,13,0.212,14,0.012,15,0.012,42,0.31,122,4.205,141,2.114,187,2.734,188,3.66,191,1.189,192,1.284,193,1.284,224,3.117,591,3.789,881,5.456,947,5.023,948,5.787]],["title/components/ElementSpaceComponent.html",[98,0.809,168,1.498]],["body/components/ElementSpaceComponent.html",[1,1.729,3,0.147,4,0.147,5,0.131,7,0.067,10,0.455,11,0.098,12,0.015,13,0.147,14,0.01,15,0.01,21,1.472,31,0.501,34,0.473,42,0.313,43,0.501,44,1.533,56,0.114,93,0.796,94,0.707,98,1.276,99,1.533,100,2.17,101,1.668,102,1.668,103,1.668,104,3.858,107,1.668,108,2.365,109,2.365,110,2.795,111,2.909,112,1.598,113,1.999,114,1.644,115,1.999,117,1.999,119,3.634,121,1.775,123,4.448,131,2.886,133,1.742,134,3.398,136,2.503,137,2.886,138,2.004,139,1.909,140,1.999,141,2.434,142,0.652,146,2.886,147,1.668,148,2.264,149,1.621,150,1.668,151,2.758,152,1.668,153,1.668,154,1.533,155,2.264,156,1.533,157,2.264,158,1.533,159,1.307,160,1.533,161,1.668,162,1.533,163,1.359,164,1.472,165,1.668,166,2.535,167,1.668,168,2.535,169,1.533,170,1.668,171,1.533,172,1.668,173,2.758,174,1.472,175,1.472,176,1.533,177,1.598,178,1.472,179,1.999,180,1.92,181,1.472,182,1.472,183,1.472,184,1.668,185,1.668,196,3.147,197,2.474,198,4.748,199,4.748,200,3.497,201,2.886,221,4.448,224,2.809,225,2.503,378,2.677,835,4.851,949,4.029]],["title/components/EyeballComponent.html",[98,0.809,169,1.498]],["body/components/EyeballComponent.html",[1,1.817,3,0.163,4,0.163,5,0.144,7,0.074,10,0.502,12,0.015,13,0.163,14,0.011,15,0.011,21,1.625,31,0.408,34,0.506,42,0.293,43,0.553,44,1.693,56,0.126,98,1.341,99,1.693,100,2.318,101,1.841,102,1.841,103,1.841,104,3.63,107,1.841,108,2.527,109,2.527,110,2.828,111,2.944,112,1.765,113,2.135,114,1.756,115,2.135,117,2.135,121,1.896,123,4.674,131,3.186,133,1.923,136,2.763,137,3.186,138,2.212,139,2.108,140,1.625,142,0.719,146,3.186,147,1.841,148,2.419,149,1.341,150,1.841,151,2.869,152,1.841,153,1.841,154,1.693,155,2.419,156,1.693,157,2.419,158,1.693,159,1.443,160,1.693,161,1.841,162,1.693,163,1.501,164,1.625,165,1.841,166,1.693,167,1.841,168,1.693,169,2.638,170,1.841,171,1.693,172,1.841,173,2.869,174,1.625,175,1.625,176,1.693,177,1.765,178,1.625,179,2.135,180,2.051,181,1.625,182,1.625,183,1.625,184,1.841,185,1.841,950,3.861,951,5.665,952,5.844,953,5.844,954,4.448]],["title/classes/Faction.html",[56,0.112,336,1.498]],["body/classes/Faction.html",[3,0.151,4,0.151,5,0.134,7,0.069,8,0.568,10,0.629,11,0.181,12,0.015,13,0.151,14,0.01,15,0.01,26,0.758,31,0.712,33,0.837,34,0.64,35,0.837,37,0.915,38,1.024,41,1.291,42,0.25,46,1.396,56,0.118,90,1.96,121,1.807,129,2.963,142,1.018,187,2.209,191,0.85,192,0.918,193,1.559,252,4.499,336,2.119,364,2.164,506,1.712,569,3.935,572,3.995,573,3.988,574,3.699,576,3.699,577,4.508,583,3.678,584,3.677,585,3.231,586,3.231,587,3.231,593,2.748,596,2.283,597,3.231,599,1.291,955,3.591,956,5.568,957,5.568,958,5.568,959,4.508,960,5.464,961,5.568,962,4.136,963,7.239,964,5.568,965,4.136,966,5.568,967,4.136,968,3.591,969,3.231,970,2.417,971,2.963,972,2.963,973,3.231,974,2.963,975,2.417,976,1.871,977,4.136,978,4.136,979,4.136,980,4.136,981,4.136,982,2.57,983,4.136,984,4.136,985,6.734,986,4.917]],["title/interfaces/FactionAssignment.html",[0,0.691,844,2.615]],["body/interfaces/FactionAssignment.html",[0,0.861,2,1.946,3,0.179,4,0.179,5,0.159,7,0.082,8,0.635,9,2.318,10,0.857,11,0.152,12,0.015,13,0.228,14,0.011,15,0.011,16,0.508,23,0.925,38,0.668,41,1.944,42,0.341,43,0.61,46,2.101,51,1.174,54,1.267,55,1.22,56,0.139,59,0.97,149,1.008,187,1.946,191,1.008,192,1.088,193,1.088,278,2.707,336,2.603,492,3.047,511,3.047,551,3.513,599,1.532,613,3.832,627,1.722,628,3.047,629,3.637,640,3.259,649,2.44,650,3.047,844,4.932,850,3.832,959,5.317,982,3.047,987,3.832,988,4.136,989,4.258,990,4.258,991,4.258,992,4.258,993,4.258,994,4.258,995,4.258,996,4.258,997,4.258]],["title/injectables/FactionRegistryService.html",[16,0.321,492,2.445]],["body/injectables/FactionRegistryService.html",[0,0.674,3,0.14,4,0.14,5,0.125,7,0.064,8,0.54,9,1.892,10,0.738,11,0.181,12,0.015,13,0.194,14,0.01,15,0.01,16,0.432,18,1.03,23,1.149,26,0.721,28,0.647,31,0.696,33,0.753,34,0.524,35,0.753,37,0.689,38,0.721,41,2.039,42,0.318,43,0.478,46,2.044,50,1.859,51,0.92,54,0.992,55,0.955,56,0.109,59,1.354,93,1.434,94,1.273,149,0.789,187,2.101,191,0.789,192,0.852,193,0.852,214,1.738,278,2.12,336,2.607,492,3.289,501,2.552,506,2.508,511,4.255,551,2.751,584,3.705,599,1.199,613,3.001,627,2.404,628,2.387,629,4.383,630,2.922,631,3.792,632,3.604,633,2.77,638,3.001,639,2.12,640,3.518,642,3.001,643,2.751,644,3.001,645,3.001,646,2.751,647,3.001,649,1.911,650,2.387,844,4.984,850,3.001,959,3.792,982,2.387,987,3.001,988,4.338,989,5.259,990,4.596,991,4.596,992,4.596,993,3.335,994,3.335,995,3.335,996,3.335,997,3.335,998,3.842,999,3.842,1000,3.842,1001,3.842,1002,3.842,1003,3.842]],["title/injectables/FactionStateService.html",[16,0.321,988,2.615]],["body/injectables/FactionStateService.html",[3,0.155,4,0.155,5,0.138,7,0.071,8,0.579,9,1.327,10,0.64,11,0.178,12,0.015,13,0.155,14,0.01,15,0.01,16,0.463,18,1.14,23,1.125,26,0.772,31,0.693,33,0.846,34,0.589,35,0.846,37,0.923,38,0.927,42,0.306,43,0.528,50,1.99,54,1.097,55,1.057,56,0.121,59,1.121,71,3.024,93,1.121,94,0.995,121,1.84,142,0.687,149,0.873,187,2.25,191,0.873,192,0.943,193,1.258,336,2.699,506,2.347,511,3.522,572,4.111,584,3.897,599,1.327,627,1.99,630,3.13,632,3.13,633,2.967,639,3.522,649,2.114,652,2.64,653,4.522,654,4.061,655,4.061,656,4.061,657,4.57,659,3.32,660,4.061,661,3.32,662,3.044,663,3.32,664,3.32,665,3.044,666,3.32,667,3.044,668,3.32,669,3.32,670,3.044,671,3.32,982,4.229,987,3.32,988,3.767,1004,5.67,1005,4.25,1006,4.25,1007,4.25]],["title/classes/GameElement.html",[56,0.112,569,2.06]],["body/classes/GameElement.html",[3,0.152,4,0.152,5,0.135,7,0.07,8,0.572,9,2.11,10,0.471,11,0.172,12,0.015,13,0.152,14,0.01,15,0.01,26,0.763,28,0.703,31,0.69,33,0.696,34,0.485,35,0.696,37,0.729,38,0.861,41,1.974,42,0.284,46,2.133,51,0.999,56,0.119,59,1.107,90,1.976,121,1.817,142,0.906,191,0.857,192,0.926,193,1.749,314,1.588,347,3.621,506,2.318,569,2.93,572,4.213,573,4.528,574,4.2,576,3.72,577,4.839,583,4.506,593,3.72,596,3.489,611,3.258,614,3.621,615,3.621,617,3.258,969,4.374,970,3.272,971,4.011,972,4.011,973,4.374,974,4.011,975,3.272,976,2.533,1008,4.742,1009,3.621,1010,4.374,1011,5.6,1012,4.171,1013,4.171,1014,4.171,1015,4.171,1016,4.171,1017,3.258,1018,4.171,1019,2.771,1020,2.591,1021,2.591,1022,2.591,1023,2.987,1024,5.6,1025,3.621,1026,4.171,1027,3.621,1028,3.621,1029,4.171,1030,4.171,1031,2.987,1032,4.171,1033,4.171,1034,3.621]],["title/injectables/GameElementRegistryService.html",[16,0.321,629,2.3]],["body/injectables/GameElementRegistryService.html",[3,0.146,4,0.146,5,0.129,7,0.066,8,0.554,9,1.928,10,0.697,11,0.175,12,0.015,13,0.146,14,0.01,15,0.01,16,0.443,18,1.068,23,1.124,26,0.739,28,0.671,31,0.671,33,0.767,34,0.534,35,0.767,37,0.707,38,0.739,41,1.928,42,0.322,43,0.495,46,1.344,50,2.327,51,0.954,54,1.029,55,0.99,56,0.113,59,1.448,93,1.31,94,1.164,138,1.981,142,0.644,149,1.571,187,1.58,191,0.819,192,0.884,193,0.884,214,1.802,314,1.516,364,2.084,501,3.606,506,2.964,569,2.084,599,1.244,627,2.617,628,2.475,629,3.171,630,3.408,631,4.422,632,3.951,633,2.84,639,3.829,640,3.606,643,3.888,646,3.888,649,1.981,650,2.475,653,3.171,716,2.853,975,2.327,1023,2.853,1035,5.824,1036,3.984,1037,6.63,1038,5.428,1039,5.428,1040,3.984,1041,3.984,1042,3.984,1043,3.984,1044,3.984,1045,2.853,1046,3.458,1047,3.458,1048,3.984,1049,3.458,1050,3.458,1051,3.458,1052,3.984,1053,3.458,1054,3.112,1055,3.984,1056,3.984]],["title/injectables/GameElementStateService.html",[16,0.321,653,2.3]],["body/injectables/GameElementStateService.html",[3,0.13,4,0.13,5,0.116,7,0.059,8,0.513,9,1.816,10,0.657,11,0.174,12,0.015,13,0.13,14,0.009,15,0.009,16,0.41,18,0.955,23,1.134,26,0.684,28,0.6,31,0.676,33,0.828,34,0.577,35,0.828,37,0.867,38,0.988,41,1.568,42,0.311,43,0.443,50,2.218,51,0.852,54,0.919,55,0.885,56,0.101,59,1.317,70,2.08,71,2.994,72,0.704,93,0.992,94,0.881,121,1.63,138,1.771,142,0.576,149,1.581,191,0.732,192,0.79,193,1.114,314,1.355,364,1.863,506,2.615,569,1.863,572,3.921,599,1.112,627,2.624,630,3.211,632,3.211,633,2.627,639,4.071,649,1.771,650,2.212,652,2.212,653,2.934,654,3.597,655,3.597,656,3.597,657,4.166,660,3.597,662,3.597,665,3.597,667,2.55,670,2.55,716,2.55,816,3.091,817,4.197,820,4.359,832,1.863,975,2.08,1023,4.525,1035,5.84,1045,2.55,1046,6.297,1047,3.091,1049,3.091,1050,3.091,1051,3.091,1053,3.091,1054,2.781,1057,5.022,1058,3.56,1059,3.091,1060,3.56,1061,5.022,1062,3.56,1063,3.56,1064,3.091,1065,3.56,1066,3.56,1067,3.56,1068,3.56,1069,3.56,1070,3.56,1071,3.56,1072,3.56,1073,3.56,1074,3.56,1075,3.56,1076,3.56]],["title/classes/GameElementStatesFactoryService.html",[56,0.112,1077,2.819]],["body/classes/GameElementStatesFactoryService.html",[3,0.153,4,0.153,5,0.136,7,0.093,9,1.304,10,0.838,11,0.137,12,0.015,13,0.153,14,0.01,15,0.01,16,0.341,23,0.94,26,0.763,31,0.514,33,0.697,34,0.548,35,0.697,37,0.73,42,0.355,56,0.119,72,1.394,90,1.98,138,2.078,139,1.98,142,0.676,149,1.389,190,3.264,191,0.859,192,0.927,193,0.927,197,1.89,207,4.015,283,2.596,284,2.596,286,2.776,313,3.094,316,3.483,342,3.264,359,2.306,360,2.776,361,2.776,436,2.596,437,3.627,438,3.264,439,3.627,508,2.776,509,3.627,510,2.776,535,3.627,571,4.379,885,2.776,959,2.993,960,3.627,974,2.993,1019,2.776,1020,2.596,1021,2.596,1022,2.596,1077,4.015,1078,5.492,1079,4.942,1080,3.627,1081,4.531,1082,3.725,1083,6.327,1084,4.866,1085,4.178,1086,3.697,1087,5.679,1088,4.178,1089,4.178,1090,4.178,1091,4.178,1092,3.627,1093,3.264,1094,3.264,1095,4.178,1096,4.178,1097,3.264,1098,4.178,1099,4.178,1100,2.776,1101,4.178,1102,4.178,1103,4.178,1104,4.178,1105,4.178,1106,6.327,1107,4.178,1108,4.178,1109,4.178,1110,4.178,1111,4.178,1112,4.178,1113,4.178]],["title/injectables/GameManagementClientService.html",[16,0.321,1114,2.615]],["body/injectables/GameManagementClientService.html",[3,0.12,4,0.12,5,0.106,7,0.055,10,0.848,11,0.173,12,0.015,13,0.12,14,0.009,15,0.009,16,0.386,18,0.877,23,0.702,26,0.643,28,0.796,31,0.672,33,0.882,34,0.614,35,0.882,37,0.941,42,0.311,43,0.406,51,0.783,54,0.844,55,0.813,56,0.093,72,0.934,114,0.982,142,1.043,191,1.14,192,1.048,193,0.725,599,2.098,627,2.609,675,3.625,681,4.697,697,2.916,698,4.569,733,4.49,751,2.342,756,2.838,976,3.039,1114,3.139,1115,6.452,1116,4.938,1117,3.691,1118,3.691,1119,4.102,1120,5.276,1121,4.725,1122,5.276,1123,4.725,1124,4.725,1125,4.725,1126,3.269,1127,6.078,1128,3.269,1129,4.725,1130,3.691,1131,3.269,1132,2.608,1133,4.725,1134,4.102,1135,3.269,1136,3.269,1137,4.725,1138,3.269,1139,3.269,1140,4.725,1141,3.269,1142,4.725,1143,5.036,1144,3.269,1145,4.725,1146,3.269,1147,3.269,1148,2.554,1149,4.725,1150,5.548,1151,4.102,1152,2.554,1153,3.269,1154,3.269,1155,4.725,1156,2.838,1157,3.269,1158,3.269,1159,3.269,1160,3.269,1161,3.269,1162,3.269,1163,3.269,1164,3.269,1165,3.269,1166,3.269,1167,3.269,1168,3.269]],["title/injectables/GameService.html",[16,0.321,1169,2.819]],["body/injectables/GameService.html",[3,0.147,4,0.147,5,0.131,7,0.067,9,1.258,10,0.856,11,0.163,12,0.015,13,0.147,14,0.01,15,0.01,16,0.446,18,1.08,23,0.923,26,0.745,28,0.922,31,0.638,33,0.828,34,0.577,35,0.828,37,0.867,42,0.336,43,0.501,54,1.04,55,1.002,56,0.114,72,1.228,142,0.885,191,1.124,192,1.214,193,1.214,599,2.08,627,2.521,675,3.758,681,4.553,698,4.368,708,2.677,733,4.327,832,2.108,976,1.822,1017,4.273,1086,3.892,1094,3.147,1100,4.881,1114,4.881,1116,2.677,1117,4.273,1118,4.273,1120,5.783,1130,4.273,1132,3.965,1148,3.147,1156,4.748,1169,3.918,1170,3.497,1171,3.147,1172,4.029,1173,4.029,1174,5.47,1175,4.029,1176,5.47,1177,4.029,1178,5.47,1179,4.029,1180,5.47,1181,3.497,1182,4.029,1183,3.147,1184,3.497,1185,4.029,1186,3.497,1187,4.029,1188,4.029,1189,4.029,1190,4.029,1191,4.029,1192,4.029,1193,4.029,1194,4.029]],["title/injectables/GameStateClientService.html",[16,0.321,1195,2.819]],["body/injectables/GameStateClientService.html",[3,0.196,4,0.196,5,0.174,7,0.089,11,0.131,12,0.015,13,0.196,14,0.012,15,0.012,16,0.536,18,1.435,26,0.895,31,0.602,33,0.665,34,0.463,35,0.665,37,0.696,38,0.895,41,2.052,42,0.32,43,0.665,51,1.281,54,1.381,55,1.33,56,0.152,121,2.133,142,0.865,191,1.099,192,1.187,193,1.646,627,2.497,751,3.832,832,3.722,970,4.334,1195,4.707,1196,6.572,1197,6.572,1198,5.795,1199,5.35,1200,5.35,1201,5.35,1202,5.35,1203,5.35]],["title/injectables/GameStateInitializationService.html",[16,0.321,1100,2.615]],["body/injectables/GameStateInitializationService.html",[3,0.17,4,0.17,5,0.151,7,0.078,8,0.615,10,0.881,11,0.147,12,0.015,13,0.17,14,0.011,15,0.011,16,0.491,18,1.249,23,0.992,26,0.82,31,0.552,33,0.579,34,0.403,35,0.579,37,0.606,42,0.328,43,0.579,50,2.114,54,1.202,55,1.158,56,0.132,59,1.394,72,1.319,93,0.92,94,0.817,142,0.753,149,0.957,191,0.957,192,1.033,193,1.621,314,1.772,627,2.342,832,3.491,976,3.304,1045,3.335,1077,4.779,1079,3.638,1082,4.433,1086,4.122,1094,3.638,1097,3.638,1100,4,1132,3.683,1183,5.212,1184,4.042,1204,4.042,1205,6.673,1206,6.021,1207,4.657,1208,6.021,1209,4.657,1210,3.638,1211,3.335,1212,4.657,1213,4.657,1214,3.638,1215,6.673,1216,4.657,1217,4.657,1218,4.657,1219,4.657,1220,4.657,1221,4.042]],["title/injectables/GameStatePatchService.html",[16,0.321,1222,2.819]],["body/injectables/GameStatePatchService.html",[3,0.172,4,0.172,5,0.153,7,0.078,11,0.148,12,0.015,13,0.172,14,0.011,15,0.011,16,0.494,18,1.26,26,0.825,31,0.555,33,0.753,34,0.524,35,0.753,37,0.789,42,0.301,43,0.584,54,1.214,55,1.169,56,0.134,72,0.929,125,2.46,142,0.98,191,0.966,192,1.043,193,1.571,596,4.044,627,2.353,740,2.92,832,3.507,922,3.123,970,3.916,976,3.626,1019,3.123,1020,2.92,1021,2.92,1022,3.763,1132,2.595,1198,5.86,1222,4.339,1223,4.081,1224,3.123,1225,5.259,1226,6.058,1227,6.058,1228,6.058,1229,6.058,1230,6.058,1231,4.701,1232,6.058,1233,6.058,1234,4.701,1235,6.058,1236,4.701,1237,4.701,1238,3.672,1239,4.701,1240,4.701,1241,6.058,1242,4.701,1243,4.701,1244,4.701,1245,4.701,1246,4.701,1247,4.701]],["title/injectables/GameStateService.html",[16,0.321,817,2.615]],["body/injectables/GameStateService.html",[0,0.769,3,0.108,4,0.108,5,0.096,7,0.049,11,0.168,12,0.015,13,0.108,14,0.008,15,0.008,16,0.358,18,0.791,23,0.963,26,0.597,28,0.739,31,0.693,33,0.857,34,0.597,35,0.857,37,0.946,38,1.068,41,1.807,42,0.291,43,0.367,48,1.544,51,0.706,54,0.762,55,0.734,56,0.084,59,0.866,72,0.583,121,1.422,142,0.846,191,0.606,192,0.655,193,1.529,239,2.164,314,2.203,318,3.423,323,1.628,336,1.99,357,2.164,594,4.457,596,3.576,599,1.632,627,2.674,652,1.833,708,1.96,800,3.139,817,3.845,832,3.986,970,3.381,976,1.982,982,4.168,1059,2.561,1064,2.561,1195,4.145,1198,4.521,1222,4.145,1224,1.96,1248,3.804,1249,4.383,1250,4.383,1251,4.383,1252,4.383,1253,3.804,1254,4.383,1255,4.383,1256,4.383,1257,5.024,1258,3.804,1259,3.804,1260,3.804,1261,5.787,1262,5.024,1263,3.804,1264,3.804,1265,3.804,1266,5.024,1267,2.95,1268,4.145,1269,5.229,1270,5.229,1271,4.383,1272,4.383,1273,2.95,1274,3.804,1275,2.95,1276,3.804,1277,2.95,1278,3.804,1279,4.168,1280,2.95,1281,2.95,1282,5.368,1283,4.539,1284,4.383,1285,4.383,1286,4.383,1287,2.95,1288,3.804,1289,2.95,1290,3.804,1291,2.95,1292,3.804,1293,2.95,1294,2.95,1295,2.561,1296,2.95,1297,2.561,1298,2.95,1299,2.561,1300,2.95,1301,2.95,1302,2.95,1303,2.95,1304,2.95,1305,2.95,1306,2.95,1307,2.95,1308,5.229,1309,2.561,1310,2.95,1311,2.95,1312,2.95,1313,2.95,1314,2.95,1315,2.95,1316,2.561,1317,2.95,1318,2.95,1319,2.95,1320,2.95,1321,2.95,1322,2.95,1323,2.95,1324,2.95,1325,2.95]],["title/injectables/GameStateStoreService.html",[16,0.321,1268,2.819]],["body/injectables/GameStateStoreService.html",[3,0.06,4,0.06,5,0.053,7,0.077,8,0.281,11,0.163,12,0.015,13,0.06,14,0.005,15,0.005,16,0.224,18,0.44,23,1.071,26,0.566,28,0.598,31,0.66,33,0.784,34,0.534,35,0.766,37,0.853,38,0.993,41,1.873,42,0.208,43,0.204,46,1.198,50,0.576,51,0.393,54,0.423,55,0.408,56,0.047,59,1.35,72,0.822,89,0.905,93,0.544,94,0.73,110,0.576,121,0.892,141,2.042,142,0.904,149,0.854,191,0.337,192,0.364,193,1.682,214,0.742,239,1.47,293,1.827,314,2.126,318,1.281,323,1.518,336,1.352,357,2.205,384,1.969,506,1.47,519,2.387,583,1.607,591,2.068,594,3.538,596,3.673,621,1.827,627,2.545,633,3.039,709,2.387,832,3.793,864,2.148,894,2.148,922,2.762,970,1.607,971,1.969,972,1.969,975,2.429,976,3.565,982,3.308,1019,1.089,1020,1.019,1021,1.019,1022,1.019,1023,3.814,1031,2.978,1034,2.387,1045,1.174,1054,3.247,1087,2.544,1097,1.281,1116,1.827,1224,2.36,1225,2.387,1248,2.387,1253,2.387,1257,4.351,1258,2.387,1259,2.387,1260,2.387,1262,4.351,1263,2.387,1264,2.387,1265,3.609,1266,4.351,1268,4.002,1274,2.387,1276,2.387,1278,2.387,1279,3.308,1282,5.478,1283,3.609,1288,2.387,1290,2.387,1292,2.387,1295,1.423,1297,1.423,1299,1.423,1309,1.423,1316,3.609,1326,1.423,1327,2.75,1328,2.75,1329,2.75,1330,2.75,1331,2.387,1332,2.75,1333,2.148,1334,2.75,1335,2.75,1336,2.75,1337,5.587,1338,2.75,1339,4.157,1340,2.75,1341,2.75,1342,2.75,1343,2.75,1344,4.157,1345,5.013,1346,2.978,1347,2.75,1348,2.75,1349,2.75,1350,4.422,1351,2.75,1352,6.439,1353,2.75,1354,2.75,1355,3.618,1356,2.387,1357,2.75,1358,5.587,1359,4.157,1360,2.75,1361,2.75,1362,5.03,1363,2.75,1364,2.75,1365,4.157,1366,2.978,1367,3.609,1368,3.33,1369,2.75,1370,2.75,1371,2.387,1372,2.75,1373,3.083,1374,2.75,1375,4.157,1376,2.75,1377,4.157,1378,2.175,1379,2.75,1380,2.387,1381,3.551,1382,3.551,1383,3.551,1384,2.75,1385,2.75,1386,3.551,1387,3.551,1388,3.551,1389,2.75,1390,2.75,1391,1.64,1392,1.64,1393,2.75,1394,1.64,1395,1.64,1396,1.64,1397,1.64,1398,1.64,1399,6.166,1400,1.64,1401,6.977,1402,2.75,1403,2.75,1404,4.157,1405,1.64,1406,1.64,1407,1.64,1408,2.75,1409,1.64,1410,1.64,1411,1.64,1412,1.64,1413,4.632,1414,2.75,1415,2.75,1416,1.64,1417,2.75,1418,1.64,1419,1.64,1420,1.64,1421,1.64,1422,1.64,1423,1.64,1424,1.64,1425,1.64,1426,1.64,1427,1.174,1428,1.64,1429,1.64,1430,1.64,1431,1.64,1432,1.64,1433,2.75,1434,5.809,1435,1.64,1436,1.64,1437,2.75,1438,1.64,1439,2.75,1440,2.75,1441,2.75,1442,2.75,1443,1.64,1444,2.75,1445,2.75,1446,1.64,1447,1.64,1448,1.64,1449,1.64,1450,2.75,1451,1.64,1452,1.64,1453,1.64,1454,1.64,1455,1.64,1456,1.64,1457,1.64,1458,1.423,1459,1.64,1460,1.64,1461,1.64,1462,1.64,1463,3.551,1464,1.64,1465,1.64,1466,1.64,1467,1.64,1468,1.64,1469,1.64,1470,1.64,1471,1.64,1472,1.64]],["title/interfaces/InitialGameElementStatesFactory.html",[0,0.691,1081,2.819]],["body/interfaces/InitialGameElementStatesFactory.html",[0,0.876,2,1.981,3,0.183,4,0.183,5,0.162,7,0.083,10,0.843,11,0.154,12,0.015,13,0.265,14,0.011,15,0.011,26,0.857,31,0.458,33,0.621,34,0.432,35,0.621,37,0.65,42,0.225,59,0.987,71,2.367,72,0.987,89,2.757,142,0.808,191,1.026,192,1.108,193,1.397,239,2.606,313,3.475,336,2.396,357,2.606,599,1.966,621,3.318,747,4.335,976,3.119,1008,3.911,1081,4.939,1082,4.183,1084,5.466,1086,4.361,1087,4.939,1132,3.806,1211,3.577,1214,3.901,1221,4.335,1238,4.918,1368,3.318,1427,3.577,1473,3.318,1474,4.994,1475,4.994,1476,4.994,1477,4.994,1478,4.335,1479,5.466]],["title/components/LobbyPageComponent.html",[98,0.809,171,1.498]],["body/components/LobbyPageComponent.html",[1,1.389,3,0.1,4,0.1,5,0.088,7,0.083,8,0.422,9,1.29,10,0.793,11,0.146,12,0.015,13,0.1,14,0.007,15,0.007,21,0.996,23,0.614,26,0.563,28,0.696,31,0.631,33,0.691,34,0.544,35,0.691,37,0.778,38,0.371,42,0.316,43,0.339,44,1.038,56,0.077,93,0.986,94,0.875,98,1.025,99,1.038,100,1.639,101,1.129,102,1.129,103,1.129,107,1.129,110,2.639,111,2.747,112,1.082,113,1.509,114,1.241,115,1.509,117,1.509,140,1.509,142,0.441,147,1.129,148,1.71,149,1.025,150,1.129,151,2.303,152,1.129,153,1.129,154,1.038,155,1.71,156,1.038,157,1.71,158,1.038,159,0.885,160,1.038,161,1.129,162,1.038,163,0.92,164,0.996,165,1.129,166,1.038,167,1.129,168,1.038,169,1.038,170,1.129,171,2.117,172,2.705,173,2.303,174,0.996,175,1.822,176,1.038,177,1.082,178,0.996,179,1.509,180,1.45,181,0.996,182,0.996,183,1.822,184,1.129,185,1.129,191,0.849,192,0.605,218,2.609,235,2.959,333,2.48,418,4.059,445,2.13,599,1.964,681,4.228,698,3.932,733,3.456,805,2.752,806,4.329,830,1.505,831,2.367,1086,2.413,1117,3.227,1118,4.346,1130,3.227,1132,3.299,1143,4.914,1152,2.13,1169,4.505,1186,4.829,1371,3.586,1480,6.098,1481,6.098,1482,1.427,1483,4.987,1484,4.987,1485,4.987,1486,4.987,1487,4.987,1488,4.987,1489,4.987,1490,4.987,1491,4.987,1492,4.987,1493,4.987,1494,4.987,1495,4.987,1496,4.987,1497,2.28,1498,2.28,1499,4.329,1500,4.329,1501,4.987,1502,5.563,1503,4.131,1504,4.131,1505,2.727,1506,4.131,1507,2.727,1508,2.727,1509,2.727,1510,5.563,1511,2.727,1512,4.131,1513,2.727,1514,4.131,1515,2.727,1516,2.727,1517,4.131,1518,2.727,1519,2.727,1520,2.727,1521,2.727,1522,2.727,1523,2.727,1524,4.987,1525,2.727,1526,2.727,1527,5.978,1528,2.727,1529,2.727,1530,2.727,1531,2.727,1532,2.727,1533,2.727,1534,2.727,1535,2.727,1536,2.727,1537,2.727,1538,2.727,1539,4.131,1540,4.131,1541,4.131,1542,4.131,1543,4.131,1544,4.131]],["title/injectables/LocalStorageService.html",[16,0.321,687,2.819]],["body/injectables/LocalStorageService.html",[3,0.185,4,0.185,5,0.164,7,0.084,10,0.917,11,0.17,12,0.015,13,0.185,14,0.011,15,0.011,16,0.518,18,1.358,26,0.865,31,0.636,33,0.863,34,0.601,35,0.863,37,0.903,38,0.991,42,0.228,43,0.63,54,1.308,55,1.26,56,0.144,94,1.277,141,2.321,142,0.819,687,4.55,1350,4.611,1545,6.317,1546,4.397,1547,6.353,1548,6.353,1549,6.353,1550,6.353,1551,5.066,1552,6.353,1553,5.066,1554,6.353,1555,5.066,1556,5.066,1557,5.066,1558,5.066]],["title/interfaces/LoginFormData.html",[0,0.691,1559,2.819]],["body/interfaces/LoginFormData.html",[0,0.801,2,1.81,3,0.167,4,0.167,5,0.148,7,0.076,8,0.606,10,0.84,11,0.145,12,0.015,13,0.167,14,0.011,15,0.011,23,0.982,28,0.769,38,0.9,42,0.335,43,0.567,56,0.13,72,0.902,98,1.221,108,1.973,109,1.973,110,1.602,111,1.667,113,1.667,114,1.371,115,1.667,117,1.667,133,1.973,140,1.667,174,1.667,175,2.414,183,1.667,210,3.279,218,3.109,220,2.518,564,2.387,675,3.457,695,4.348,697,3.366,805,3.279,830,2.518,1378,2.387,1482,2.387,1497,2.518,1498,2.518,1559,4.733,1560,3.564,1561,3.564,1562,4.105,1563,3.691,1564,3.691,1565,2.834,1566,2.666,1567,3.861,1568,5.158,1569,3.564,1570,3.691,1571,3.961,1572,2.666,1573,3.961,1574,2.834,1575,3.691,1576,2.834,1577,3.961,1578,3.961,1579,3.961,1580,3.268,1581,2.834,1582,3.961,1583,3.961,1584,2.834,1585,2.834,1586,2.834,1587,2.834]],["title/components/LoginPageComponent.html",[98,0.809,174,1.438]],["body/components/LoginPageComponent.html",[0,0.593,1,1.574,3,0.124,4,0.124,5,0.11,7,0.056,8,0.494,10,0.547,11,0.118,12,0.015,13,0.124,14,0.009,15,0.009,21,1.235,23,0.84,26,0.659,28,0.816,31,0.566,33,0.42,34,0.489,35,0.42,37,0.44,38,0.841,42,0.306,43,0.42,44,1.287,56,0.096,72,0.668,93,0.668,94,0.593,98,1.162,99,1.287,100,1.92,101,1.4,102,1.4,103,1.4,107,1.4,108,2.093,109,2.093,110,2.73,111,2.842,112,1.341,113,1.769,114,1.454,115,1.769,117,1.769,133,1.462,140,1.769,147,1.4,148,2.004,149,1.162,150,1.4,151,2.555,152,1.4,153,1.4,154,1.287,155,2.004,156,1.287,157,2.004,158,1.287,159,1.097,160,1.287,161,1.4,162,1.287,163,1.141,164,1.235,165,1.4,166,1.287,167,1.4,168,1.287,169,1.287,170,1.4,171,1.287,172,1.4,173,2.555,174,2.255,175,2.662,176,1.287,177,1.341,178,1.235,179,2.255,180,2.167,181,2.066,182,1.235,183,2.066,184,1.4,185,1.4,210,3.12,218,2.958,220,1.866,564,1.769,675,3.661,695,3.816,697,2.954,805,3.12,830,1.866,1378,1.769,1482,1.769,1497,2.671,1498,2.671,1559,3.467,1560,5.102,1561,5.102,1562,4.222,1563,3.512,1564,3.512,1565,2.1,1566,1.975,1567,4.089,1568,4.908,1569,2.641,1570,3.512,1571,4.908,1572,4.089,1573,2.935,1574,2.1,1575,3.007,1576,3.834,1577,2.935,1578,2.935,1579,2.935,1580,2.421,1581,2.1,1582,2.935,1583,2.935,1584,2.1,1585,2.1,1586,2.1,1587,2.1,1588,2.641,1589,3.781,1590,2.935,1591,2.935,1592,4.84]],["title/components/LogoutPageComponent.html",[98,0.809,176,1.498]],["body/components/LogoutPageComponent.html",[1,1.754,3,0.151,4,0.151,5,0.134,7,0.069,11,0.101,12,0.015,13,0.151,14,0.01,15,0.01,21,1.514,23,0.829,26,0.759,28,0.939,31,0.511,33,0.515,34,0.545,35,0.515,37,0.539,38,0.759,42,0.283,43,0.515,44,1.577,56,0.118,98,1.294,99,1.577,100,2.212,101,1.715,102,1.715,103,1.715,107,1.715,110,2.805,111,2.919,112,1.644,113,2.037,114,1.675,115,2.037,117,2.037,140,1.514,147,1.715,148,2.308,149,1.294,150,1.715,151,2.789,152,1.715,153,1.715,154,1.577,155,2.308,156,1.577,157,2.308,158,1.577,159,1.345,160,1.577,161,1.715,162,1.577,163,1.398,164,1.514,165,1.715,166,1.577,167,1.715,168,1.577,169,1.577,170,1.715,171,1.577,172,1.715,173,2.789,174,1.514,175,1.514,176,2.565,177,3.024,178,1.514,179,2.037,180,1.957,181,1.514,182,1.514,183,2.569,184,1.715,185,1.715,207,3.993,208,4.921,215,5.264,564,2.168,675,3.789,1171,3.237,1482,2.168,1497,3.077,1498,3.077,1567,4.324,1569,3.237,1593,5.469,1594,5.469,1595,4.143,1596,4.143,1597,4.143,1598,3.237,1599,5.575]],["title/classes/Pile.html",[56,0.112,357,1.63]],["body/classes/Pile.html",[3,0.089,4,0.089,5,0.079,7,0.041,8,0.387,10,0.428,11,0.17,12,0.015,13,0.138,14,0.007,15,0.007,23,1.048,26,0.516,28,0.41,31,0.68,33,0.652,34,0.454,35,0.652,37,0.887,38,0.855,41,1.773,42,0.236,46,1.769,51,0.583,56,0.108,57,1.423,59,0.481,72,1.188,89,2.09,90,1.154,93,0.481,94,0.665,121,1.229,122,2.565,141,2.49,142,1.078,145,2.958,163,1.278,164,1.916,187,1.502,188,3.664,191,0.5,192,0.54,193,1.393,252,4.055,313,3.582,333,2.991,343,1.423,357,3.217,364,1.274,436,2.353,506,1.008,569,3.396,572,3.319,573,2.712,574,2.516,576,2.516,577,3.328,583,3.792,584,2.971,585,1.902,586,1.902,587,1.902,591,3.452,593,1.618,596,1.344,597,1.902,599,0.76,621,1.618,911,2.958,912,4.095,914,5.07,921,4.697,922,4.17,923,3.63,925,6.07,932,1.902,968,2.114,969,1.902,970,1.423,971,1.744,972,1.744,973,1.902,974,1.744,975,1.423,976,1.101,986,1.902,1010,2.958,1031,3.755,1082,2.516,1224,3.483,1279,3.257,1333,2.958,1346,3.328,1350,3.483,1355,2.958,1362,2.958,1366,4.068,1368,2.516,1378,1.981,1600,1.902,1601,4.551,1602,4.034,1603,5.176,1604,4.551,1605,3.287,1606,4.93,1607,3.787,1608,4.034,1609,3.287,1610,3.287,1611,3.287,1612,3.287,1613,3.287,1614,3.287,1615,2.435,1616,2.435,1617,2.435,1618,2.435,1619,4.034,1620,2.435,1621,3.287,1622,4.095,1623,4.095,1624,3.287,1625,3.287,1626,3.287,1627,2.435,1628,2.435,1629,3.287,1630,2.435,1631,3.287,1632,2.114,1633,1.902,1634,2.114,1635,2.114,1636,2.114,1637,2.114,1638,2.114,1639,2.114,1640,2.114,1641,2.114,1642,3.287,1643,3.287,1644,2.114,1645,2.114,1646,2.114,1647,2.114,1648,2.114,1649,1.902,1650,3.287,1651,3.287,1652,2.114,1653,3.287,1654,3.287,1655,2.114,1656,2.114,1657,3.287,1658,3.287,1659,2.114,1660,1.902,1661,3.287,1662,3.287,1663,3.287,1664,2.114,1665,2.114]],["title/classes/PileAdapter.html",[56,0.112,343,2.3]],["body/classes/PileAdapter.html",[3,0.112,4,0.112,5,0.1,7,0.051,10,0.347,11,0.131,12,0.015,13,0.165,14,0.008,15,0.008,23,0.878,26,0.615,28,0.518,31,0.623,33,0.666,34,0.464,35,0.666,37,0.819,38,0.804,41,1.672,42,0.265,46,1.525,51,0.736,56,0.128,57,1.797,59,0.608,72,1.3,89,1.697,90,1.457,93,0.608,94,0.793,121,1.466,122,1.697,141,2.548,142,1.151,145,3.529,163,1.038,164,1.651,187,1.22,188,3.599,191,0.632,192,0.682,193,1.003,252,3.972,313,3.849,333,2.247,343,2.64,357,3.174,364,1.609,436,2.807,569,2.364,583,4.075,591,3.128,599,0.96,621,2.043,911,2.402,912,4.184,914,5.447,921,4.612,922,4.369,923,4.184,925,5.951,932,3.529,986,2.402,1010,2.402,1031,4.229,1082,2.043,1279,2.807,1333,2.402,1346,2.202,1350,3.002,1355,2.402,1362,2.402,1366,3.236,1368,2.043,1378,1.609,1600,2.402,1601,3.922,1602,2.669,1603,4.869,1604,2.669,1605,3.922,1606,5.46,1608,2.669,1609,2.669,1610,2.669,1611,2.669,1612,2.669,1613,2.669,1614,2.669,1619,4.65,1621,2.669,1622,3.529,1623,3.529,1624,2.669,1625,2.669,1626,2.669,1629,2.669,1631,2.669,1632,2.669,1633,2.402,1634,2.669,1635,2.669,1636,2.669,1637,2.669,1638,2.669,1639,2.669,1640,2.669,1641,2.669,1642,3.922,1643,3.922,1644,2.669,1645,2.669,1646,2.669,1647,2.669,1648,2.669,1649,2.402,1650,3.922,1651,3.922,1652,2.669,1653,3.922,1654,3.922,1655,2.669,1656,2.669,1657,3.922,1658,3.922,1659,2.669,1660,2.402,1661,3.922,1662,3.922,1663,3.922,1664,2.669,1665,2.669,1666,3.075,1667,3.075,1668,3.075,1669,3.075,1670,3.075,1671,3.075,1672,3.075]],["title/interfaces/PileConfig.html",[0,0.691,1673,3.075]],["body/interfaces/PileConfig.html",[0,0.893,2,2.018,3,0.186,4,0.186,5,0.165,7,0.085,8,0.65,10,0.865,11,0.156,12,0.015,13,0.233,14,0.011,15,0.011,42,0.286,50,1.786,59,1.005,72,1.005,120,3.781,338,4.404,508,3.379,885,3.379,886,4.415,887,3.973,888,3.973,892,3.973,896,3.973,899,3.973,902,3.973,905,3.973,934,3.973,1673,4.975,1674,3.973,1675,3.973,1676,5.087,1677,4.415,1678,4.415,1679,4.415,1680,4.415,1681,4.415,1682,4.415,1683,4.415,1684,4.415,1685,4.415,1686,4.415,1687,4.415,1688,4.415]],["title/injectables/PileRegistryService.html",[16,0.321,493,2.615]],["body/injectables/PileRegistryService.html",[3,0.164,4,0.164,5,0.145,7,0.075,8,0.599,9,1.399,10,0.663,11,0.181,12,0.015,13,0.164,14,0.011,15,0.011,16,0.479,18,1.201,23,1.101,26,0.8,28,0.755,31,0.691,33,0.814,34,0.567,35,0.814,37,0.764,38,0.61,41,1.399,42,0.324,43,0.557,50,2.061,54,1.157,55,1.114,56,0.127,59,1.295,93,1.374,94,1.22,149,0.921,187,2.329,191,0.921,192,0.994,193,0.994,214,2.026,278,2.473,357,2.431,493,3.901,501,2.977,506,2.711,512,3.901,584,3.874,599,1.399,627,2.061,628,2.783,629,4.523,630,3.241,631,4.205,632,3.836,633,3.072,636,3.889,638,3.5,639,3.615,640,2.977,641,3.889,642,3.5,643,3.209,644,3.5,645,3.5,646,3.209,647,3.5,649,2.228,650,2.783,1279,2.783,1689,4.48,1690,4.978,1691,5.872,1692,3.889,1693,4.48]],["title/injectables/PileStateService.html",[16,0.321,1690,2.819]],["body/injectables/PileStateService.html",[3,0.155,4,0.155,5,0.138,7,0.071,8,0.579,9,1.327,10,0.64,11,0.178,12,0.015,13,0.155,14,0.01,15,0.01,16,0.463,18,1.14,23,1.125,26,0.772,31,0.693,33,0.846,34,0.589,35,0.846,37,0.923,38,0.927,42,0.306,43,0.528,50,1.99,54,1.097,55,1.057,56,0.121,59,1.121,71,3.024,93,1.121,94,0.995,121,1.84,142,0.687,149,0.873,187,2.25,191,0.873,192,0.943,193,1.258,357,2.936,506,2.347,512,3.767,572,4.111,584,3.897,599,1.327,627,1.99,630,3.13,632,3.13,633,2.967,639,3.522,649,2.114,652,2.64,653,4.522,654,4.061,655,4.061,656,4.061,657,4.57,659,3.32,660,4.061,661,3.32,662,3.044,663,3.32,664,3.32,665,3.044,666,3.32,667,3.044,668,3.32,669,3.32,670,3.044,671,3.32,1279,4.229,1690,4.061,1692,3.689,1694,5.67,1695,4.25,1696,4.25,1697,4.25]],["title/interfaces/PlayerAuthData.html",[0,0.691,683,2.615]],["body/interfaces/PlayerAuthData.html",[0,1.002,2,2.264,3,0.209,4,0.209,5,0.185,7,0.095,8,0.698,10,0.912,11,0.185,12,0.014,13,0.209,14,0.012,15,0.012,252,4.274,683,4.541,697,3.43,727,6.583,729,6.583,731,6.583,1698,4.954]],["title/injectables/PlayerService.html",[16,0.321,418,2.445]],["body/injectables/PlayerService.html",[3,0.14,4,0.14,5,0.124,7,0.064,8,0.54,10,0.847,11,0.173,12,0.015,13,0.14,14,0.01,15,0.01,16,0.432,18,1.028,23,1.017,26,0.72,28,0.891,31,0.664,33,0.811,34,0.565,35,0.811,37,0.788,42,0.318,43,0.477,46,2.043,51,0.918,54,0.99,55,0.954,56,0.109,59,1.045,72,0.758,93,1.197,94,1.062,125,3.582,142,0.62,191,0.788,285,2.007,314,1.46,418,3.286,599,1.198,627,2.594,675,3.703,677,3.33,681,4.382,697,2.952,698,4.135,708,2.548,716,2.747,733,3.761,800,2.747,1114,4.818,1116,2.548,1119,4.591,1122,3.33,1134,4.591,1143,5.097,1148,2.996,1151,3.33,1152,2.996,1171,2.996,1499,6.143,1649,2.996,1699,3.33,1700,6.054,1701,5.289,1702,5.289,1703,5.289,1704,5.289,1705,3.836,1706,3.836,1707,5.289,1708,3.836,1709,3.836,1710,5.289,1711,5.289,1712,3.836,1713,3.836,1714,3.836,1715,3.836,1716,5.289,1717,5.289,1718,3.836,1719,3.836,1720,3.836,1721,3.836,1722,3.836,1723,5.289,1724,3.836,1725,3.836,1726,5.289]],["title/interfaces/SignUpConfirmFormData.html",[0,0.691,1727,2.819]],["body/interfaces/SignUpConfirmFormData.html",[0,0.785,2,1.774,3,0.163,4,0.163,5,0.145,7,0.075,8,0.599,10,0.836,11,0.143,12,0.015,13,0.163,14,0.011,15,0.011,23,0.973,28,0.754,38,0.891,42,0.333,43,0.556,56,0.127,72,0.884,98,1.205,108,1.934,109,1.934,110,1.57,111,1.634,113,1.634,114,1.344,115,1.634,117,1.634,133,1.934,140,1.634,178,1.634,179,2.391,180,2.598,181,2.635,183,1.634,210,3.237,218,3.068,220,2.468,564,2.34,697,3.347,758,5.301,805,3.237,830,2.468,1378,2.34,1482,2.34,1497,2.468,1498,2.468,1562,4.065,1563,3.643,1564,3.643,1565,2.778,1566,2.613,1567,3.823,1570,3.643,1572,2.613,1574,2.778,1575,3.643,1576,2.778,1581,2.778,1584,2.778,1585,2.778,1586,2.778,1587,2.778,1598,3.493,1727,4.687,1728,2.971,1729,2.971,1730,3.823,1731,3.203,1732,3.203,1733,3.882,1734,3.882,1735,3.882,1736,3.882,1737,3.882,1738,3.882,1739,3.203,1740,3.882]],["title/components/SignUpConfirmPageComponent.html",[98,0.809,178,1.438]],["body/components/SignUpConfirmPageComponent.html",[0,0.57,1,1.539,3,0.119,4,0.119,5,0.105,7,0.054,8,0.48,10,0.531,11,0.115,12,0.015,13,0.119,14,0.008,15,0.008,21,1.187,23,0.822,26,0.64,28,0.792,31,0.555,33,0.404,34,0.478,35,0.404,37,0.423,38,0.825,42,0.301,43,0.404,44,1.236,56,0.092,72,0.642,93,0.642,94,0.57,98,1.136,99,1.236,100,1.866,101,1.345,102,1.345,103,1.345,107,1.345,108,2.033,109,2.033,110,2.714,111,2.825,112,1.289,113,1.718,114,1.413,115,1.718,117,1.718,133,1.405,140,1.718,147,1.345,148,1.947,149,1.136,150,1.345,151,2.508,152,1.345,153,1.345,154,1.236,155,1.947,156,1.236,157,1.947,158,1.236,159,1.054,160,1.236,161,1.345,162,1.236,163,1.096,164,1.187,165,1.345,166,1.236,167,1.345,168,1.236,169,1.236,170,1.345,171,1.236,172,1.345,173,2.508,174,1.187,175,1.187,176,1.236,177,1.289,178,2.214,179,2.678,180,2.775,181,2.889,182,1.187,183,2.02,184,1.345,185,1.345,210,3.051,218,2.892,220,1.793,564,1.699,697,2.908,758,4.606,805,3.051,830,1.793,1378,1.699,1482,1.699,1497,2.595,1498,2.595,1562,4.165,1563,3.434,1564,3.434,1565,2.018,1566,1.898,1567,4.04,1570,3.434,1572,4.04,1574,2.018,1575,2.921,1576,3.764,1581,2.018,1584,2.018,1585,2.018,1586,2.018,1587,2.018,1588,2.537,1589,3.673,1590,2.819,1591,2.819,1598,2.537,1727,3.368,1728,4.272,1729,4.272,1730,4.04,1731,2.326,1732,2.326,1733,4.798,1734,2.819,1735,2.819,1736,2.819,1737,2.819,1738,2.819,1739,2.326,1740,2.819]],["title/interfaces/SignUpFormData.html",[0,0.691,1741,2.819]],["body/interfaces/SignUpFormData.html",[0,0.757,2,1.712,3,0.158,4,0.158,5,0.14,7,0.072,8,0.585,10,0.868,11,0.157,12,0.015,13,0.158,14,0.01,15,0.01,23,0.956,28,0.727,38,0.876,42,0.329,43,0.537,56,0.123,72,0.853,98,1.177,108,1.867,109,1.867,110,1.515,111,1.577,113,1.577,114,1.297,115,1.577,117,1.577,133,1.867,140,1.577,179,2.35,180,2.625,181,1.577,182,1.577,183,1.577,210,3.162,218,2.997,220,2.382,564,2.258,695,4.282,697,3.315,766,5.355,805,3.162,830,2.382,1378,2.258,1482,2.258,1497,2.382,1498,2.382,1562,3.995,1563,3.559,1564,3.559,1565,2.681,1566,2.522,1567,3.757,1570,3.559,1572,2.522,1574,2.681,1575,3.995,1576,2.681,1580,3.091,1581,2.681,1584,2.681,1585,2.681,1586,2.681,1587,2.681,1728,2.868,1729,2.868,1730,3.757,1731,3.091,1732,3.091,1739,3.091,1741,4.606,1742,4.973,1743,3.747,1744,3.747,1745,3.747,1746,3.747,1747,3.747,1748,3.747,1749,3.747,1750,3.747,1751,3.747,1752,3.747]],["title/components/SignUpPageComponent.html",[98,0.809,182,1.438]],["body/components/SignUpPageComponent.html",[0,0.537,1,1.487,3,0.112,4,0.112,5,0.099,7,0.051,8,0.459,10,0.603,11,0.11,12,0.015,13,0.112,14,0.008,15,0.008,21,1.118,23,0.794,26,0.613,28,0.759,31,0.54,33,0.38,34,0.462,35,0.38,37,0.398,38,0.802,42,0.295,43,0.38,44,1.164,56,0.087,72,0.605,93,0.605,94,0.537,98,1.097,99,1.164,100,1.786,101,1.267,102,1.267,103,1.267,107,1.267,108,1.947,109,1.947,110,2.69,111,2.8,112,1.214,113,1.645,114,1.353,115,1.645,117,1.645,133,1.323,140,1.645,147,1.267,148,1.864,149,1.097,150,1.267,151,2.438,152,1.267,153,1.267,154,1.164,155,1.864,156,1.164,157,1.864,158,1.164,159,0.993,160,1.164,161,1.267,162,1.164,163,1.032,164,1.118,165,1.267,166,1.164,167,1.267,168,1.164,169,1.164,170,1.267,171,1.164,172,1.267,173,2.438,174,1.118,175,1.118,176,1.164,177,1.214,178,1.118,179,2.709,180,2.783,181,1.645,182,2.152,183,1.952,184,1.267,185,1.267,210,2.948,218,2.795,220,1.689,564,1.601,695,3.966,697,2.839,766,4.988,805,2.948,830,1.689,1378,1.601,1482,1.601,1497,2.485,1498,2.485,1500,3.908,1562,4.078,1563,3.318,1564,3.318,1565,1.901,1566,1.788,1567,3.966,1570,3.318,1572,3.966,1574,1.901,1575,3.318,1576,3.659,1580,2.191,1581,1.901,1584,1.901,1585,1.901,1586,1.901,1587,1.901,1588,2.39,1589,2.39,1728,4.171,1729,4.171,1730,3.966,1731,2.191,1732,2.191,1739,2.191,1741,3.224,1742,4.636,1743,4.636,1744,2.656,1745,2.656,1746,2.656,1747,2.656,1748,2.656,1749,2.656,1750,2.656,1751,2.656,1752,2.656,1753,4.502,1754,3.06,1755,4.502,1756,4.502,1757,4.502,1758,4.502,1759,4.502,1760,4.502,1761,4.502,1762,4.502,1763,4.502,1764,4.502,1765,4.502]],["title/injectables/SignUpService.html",[16,0.321,1730,2.3]],["body/injectables/SignUpService.html",[3,0.179,4,0.179,5,0.159,7,0.082,10,0.917,11,0.167,12,0.015,13,0.179,14,0.011,15,0.011,16,0.507,18,1.313,26,0.847,28,0.825,31,0.626,33,0.849,34,0.591,35,0.849,37,0.809,42,0.279,43,0.609,54,1.264,55,1.217,56,0.139,57,2.86,142,1.005,681,4.43,685,4.25,686,5.037,695,4.199,697,2.812,698,4.199,707,3.506,708,3.253,753,5.397,755,5.397,757,5.397,758,5.148,765,5.397,766,5.148,1730,3.633,1766,6.239,1767,4.25,1768,4.896,1769,4.896,1770,4.896,1771,4.896,1772,4.896]],["title/classes/Space.html",[56,0.112,197,1.78]],["body/classes/Space.html",[1,1.998,3,0.135,4,0.135,5,0.12,7,0.061,8,0.525,10,0.762,11,0.179,12,0.015,13,0.135,14,0.009,15,0.009,23,1.105,26,0.701,28,0.621,31,0.704,33,0.737,34,0.513,35,0.737,37,0.772,38,0.807,41,1.851,42,0.288,51,0.883,56,0.105,59,1.268,72,0.729,90,1.747,93,1.017,94,0.903,121,1.67,141,2.554,142,1.038,188,3.933,191,0.758,192,0.818,193,1.592,197,2.902,314,2.256,323,2.035,333,2.949,571,5.461,574,3.939,576,3.419,591,3.568,593,3.419,596,2.035,611,4.02,616,3.201,617,2.88,876,5.146,975,2.154,1017,2.88,1019,3.419,1020,2.291,1021,2.291,1022,2.291,1025,3.201,1027,3.201,1028,3.201,1773,3.201,1774,5.929,1775,5.929,1776,5.147,1777,6.416,1778,5.147,1779,5.147,1780,3.687,1781,3.687,1782,3.687,1783,6.416,1784,3.687,1785,5.147,1786,3.687,1787,3.687,1788,3.687,1789,3.687,1790,3.687,1791,3.687,1792,3.687,1793,3.687,1794,3.687,1795,7.319,1796,3.687,1797,3.687,1798,5.147,1799,3.687,1800,3.687,1801,3.687]],["title/interfaces/SpeciesPiece.html",[0,0.691,362,2.445]],["body/interfaces/SpeciesPiece.html",[0,1.028,2,2.323,3,0.214,4,0.214,5,0.19,7,0.098,8,0.708,11,0.143,12,0.015,13,0.214,14,0.012,15,0.012,42,0.312,122,4.221,187,2.753,188,3.678,189,5.477,190,4.574,191,1.203,192,1.299,193,1.299,362,4.311,1802,5.083]],["title/coverage.html",[1803,4.674]],["body/coverage.html",[0,1.259,1,1.432,5,0.076,6,2.04,11,0.145,12,0.015,14,0.007,15,0.007,16,0.626,17,1.683,19,3.253,20,2.877,21,1.879,22,2.877,24,1.683,30,1.373,39,1.561,56,0.192,59,0.464,87,2.877,88,2.04,89,3.958,98,1.474,99,0.894,104,3.469,105,1.561,106,2.04,112,1.461,124,1.113,136,1.46,138,1.169,149,0.933,154,0.894,156,0.894,158,0.894,159,0.762,160,0.894,162,0.894,163,0.793,164,1.346,166,0.894,168,0.894,169,0.894,171,0.894,174,0.858,176,0.894,178,0.858,180,2.251,181,1.879,182,0.858,186,2.04,189,1.683,193,1.141,194,2.04,195,1.835,196,2.877,197,1.063,204,2.638,205,1.835,206,2.877,221,1.683,224,1.063,227,1.835,236,2.04,239,0.973,248,1.46,249,1.683,277,2.288,285,1.229,287,1.46,313,4.547,332,3.253,335,1.561,336,0.894,340,1.46,343,1.373,357,0.973,359,1.297,362,1.46,403,2.04,404,1.835,417,1.561,418,1.46,436,1.46,444,1.835,482,2.04,483,2.04,492,1.46,493,1.561,508,1.561,510,1.561,511,2.822,512,2.447,513,1.835,557,2.04,566,1.835,568,2.04,569,1.229,627,2.59,628,3.469,629,1.373,635,1.683,652,3.469,653,1.373,675,1.229,676,2.04,683,1.561,686,1.561,687,1.683,750,2.04,751,3.253,803,2.04,804,2.04,817,1.561,832,2.922,835,1.835,844,1.561,866,2.04,877,2.877,878,2.877,879,1.683,881,1.683,908,2.04,909,2.04,947,2.04,950,2.04,955,2.04,988,1.561,1008,3.469,1009,2.04,1035,2.877,1077,1.683,1078,2.04,1079,1.835,1080,2.04,1081,1.683,1093,1.835,1100,1.561,1114,1.561,1115,2.04,1116,1.561,1169,1.683,1170,2.04,1195,1.683,1204,2.04,1210,1.835,1211,1.683,1222,1.683,1223,2.04,1268,1.683,1326,2.04,1427,1.683,1473,3.416,1480,2.04,1481,2.04,1482,3.355,1545,2.04,1546,2.04,1559,1.683,1560,2.877,1561,2.877,1593,2.04,1594,2.04,1600,2.877,1603,1.683,1673,1.835,1674,2.877,1675,2.877,1690,1.683,1698,2.04,1699,2.04,1727,1.683,1728,3.416,1729,3.416,1730,1.373,1741,1.683,1766,2.04,1767,2.04,1773,2.04,1802,2.04,1803,2.04,1804,2.35,1805,2.35,1806,2.35,1807,6.746,1808,2.04,1809,6.413,1810,2.04,1811,7.644,1812,5.142,1813,6.194,1814,6.594,1815,5.142,1816,2.04,1817,2.04,1818,2.04,1819,2.04,1820,2.04,1821,2.04,1822,1.835,1823,2.04,1824,2.04,1825,1.835,1826,3.683,1827,2.35,1828,2.35,1829,2.04,1830,2.35,1831,5.585,1832,2.877,1833,3.683,1834,2.35,1835,4.542,1836,3.683,1837,6.194,1838,3.683,1839,5.142,1840,2.35,1841,3.683,1842,2.35,1843,2.35,1844,4.464,1845,2.04,1846,5.585,1847,5.585,1848,4.848,1849,2.04,1850,2.04,1851,1.835,1852,2.638,1853,2.04,1854,1.835,1855,2.04,1856,2.04,1857,2.04,1858,2.35,1859,2.35,1860,2.35]],["title/dependencies.html",[1861,2.849,1862,4.113]],["body/dependencies.html",[9,1.719,12,0.015,14,0.012,15,0.012,43,0.684,51,1.318,446,4.778,564,2.88,707,3.942,711,4.3,712,4.3,713,4.3,714,4.3,724,4.3,776,4.778,1020,3.419,1021,3.419,1022,3.419,1092,4.778,1181,4.778,1566,3.216,1862,4.778,1863,5.504,1864,7.971,1865,5.504,1866,6.687,1867,5.504,1868,5.504,1869,6.687,1870,6.687,1871,5.504,1872,5.504,1873,5.504,1874,5.504,1875,5.504,1876,5.504,1877,5.504,1878,5.504,1879,5.504,1880,5.504,1881,5.504]],["title/miscellaneous/enumerations.html",[1882,1.811,1883,4.113]],["body/miscellaneous/enumerations.html",[7,0.071,12,0.015,14,0.01,15,0.01,94,1.458,120,2.699,149,1.403,282,3.784,283,3.539,338,3.534,438,4.45,562,3.343,683,2.843,717,4.945,882,4.45,885,3.784,934,4.45,1183,4.45,1851,3.343,1852,3.065,1854,3.343,1882,2.362,1883,3.715,1884,3.715,1885,4.45,1886,3.715,1887,3.065,1888,5.696,1889,4.279,1890,5.696,1891,4.279,1892,4.279,1893,4.945,1894,4.945,1895,4.945,1896,4.945,1897,4.945,1898,4.945,1899,4.279,1900,4.279,1901,4.279,1902,4.279,1903,4.279,1904,4.279,1905,4.279,1906,4.279,1907,4.279,1908,4.279,1909,4.279,1910,4.279,1911,4.279,1912,4.279,1913,4.279,1914,4.279,1915,5.696,1916,4.945,1917,4.945,1918,4.945,1919,4.945,1920,4.945,1921,4.945,1922,4.279,1923,4.279,1924,4.279,1925,4.279,1926,4.279,1927,4.279,1928,4.279,1929,4.279,1930,4.279,1931,4.279,1932,4.279,1933,4.279,1934,4.279,1935,4.279,1936,4.279,1937,4.279,1938,4.279,1939,4.279,1940,4.279,1941,4.279,1942,4.279,1943,4.279,1944,4.279,1945,4.279,1946,4.279,1947,4.279,1948,4.279,1949,4.279,1950,4.279,1951,4.279]],["title/miscellaneous/functions.html",[1882,1.811,1952,4.113]],["body/miscellaneous/functions.html",[7,0.059,10,0.781,11,0.174,12,0.015,14,0.009,15,0.009,31,0.579,33,0.963,34,0.678,35,0.969,37,1.001,41,1.112,50,2.218,79,2.55,89,1.965,93,0.992,94,1.381,122,2.772,125,3.044,138,2.497,141,1.835,188,1.771,227,3.922,285,2.627,287,3.12,314,1.355,436,3.12,444,3.922,506,2.862,513,3.922,583,4.039,591,1.771,592,3.091,800,4.166,864,2.781,976,1.61,1008,2.212,1086,2.934,1132,1.965,1210,3.922,1214,2.781,1224,3.336,1350,4.72,1356,3.091,1366,2.55,1367,3.091,1368,4.197,1373,3.091,1380,3.091,1458,3.091,1473,3.336,1572,2.934,1622,2.781,1623,2.781,1633,2.781,1818,3.091,1819,4.359,1820,4.359,1821,3.091,1822,3.922,1823,3.091,1824,4.359,1825,3.922,1832,2.781,1844,3.091,1845,4.359,1848,3.091,1849,4.359,1850,4.359,1882,1.965,1887,2.55,1952,3.091,1953,3.56,1954,3.56,1955,6.318,1956,3.091,1957,3.56,1958,6.662,1959,3.56,1960,6.913,1961,6.913,1962,6.913,1963,5.817,1964,3.56,1965,3.56,1966,5.022,1967,3.56,1968,3.56,1969,3.56,1970,3.56,1971,3.56,1972,3.56,1973,3.56,1974,3.56,1975,5.817,1976,3.56,1977,5.022,1978,3.56,1979,3.56,1980,3.56,1981,3.56,1982,5.022,1983,3.56,1984,3.56,1985,3.56,1986,3.56,1987,3.56,1988,3.56,1989,3.56,1990,3.56,1991,3.56,1992,3.56,1993,3.56,1994,3.56,1995,5.817,1996,3.56,1997,5.022,1998,3.56,1999,3.56,2000,3.56,2001,3.56,2002,3.56,2003,3.56,2004,3.56]],["title/index.html",[7,0.066,2005,3.417]],["body/index.html",[2,2.5,12,0.013,14,0.013,15,0.013,18,1.69,90,2.986,100,2.5,1829,6.288,2005,5.47,2006,6.302,2007,6.302]],["title/modules.html",[2008,4.674]],["body/modules.html",[12,0.013,14,0.013,15,0.013,2008,5.584]],["title/properties.html",[8,0.484,1861,2.849]],["body/properties.html",[8,0.651,12,0.014,14,0.013,15,0.013,2009,6.383,2010,6.383]],["title/miscellaneous/typealiases.html",[1882,1.811,2011,4.738]],["body/miscellaneous/typealiases.html",[7,0.1,11,0.146,12,0.013,14,0.013,15,0.013,89,3.302,189,5.034,282,3.975,879,5.034,881,5.034,882,4.673,885,3.975,1008,3.716,1211,5.034,1473,4.669,1603,5.034,1832,4.673,1851,4.673,1852,4.285,1854,4.673,1882,3.302,1884,5.193,1885,4.673,1886,5.193,1887,4.285,1956,5.193,2012,5.982]],["title/miscellaneous/variables.html",[1882,1.811,2013,4.113]],["body/miscellaneous/variables.html",[7,0.049,9,1.365,11,0.168,12,0.015,14,0.008,15,0.008,38,0.4,50,2.028,59,1.142,72,0.581,93,1.361,94,1.208,114,0.883,120,3.066,122,1.623,136,2.715,141,2.515,142,0.707,188,3.333,197,1.33,214,2.36,239,1.809,300,4.529,306,3.838,313,1.623,336,1.664,338,3.571,357,1.809,378,1.953,485,2.552,508,2.904,510,2.904,562,5.859,591,3.696,599,0.918,740,1.826,877,2.297,878,3.414,879,4.635,880,5.617,887,4.513,888,4.076,889,3.794,890,2.552,891,3.794,892,4.076,893,3.794,894,5.055,895,3.794,896,4.076,897,3.794,898,3.794,899,4.076,900,3.794,901,3.794,902,4.076,903,3.794,904,3.794,905,4.076,906,3.794,907,3.794,951,2.552,976,1.977,1008,1.826,1086,1.718,1087,2.106,1093,3.414,1132,1.623,1238,2.297,1331,2.552,1346,2.106,1427,3.131,1473,2.904,1478,2.552,1479,2.552,1660,2.297,1674,2.297,1675,3.414,1677,2.552,1678,2.552,1679,2.552,1680,2.552,1681,2.552,1682,2.552,1683,2.552,1684,2.552,1685,2.552,1686,2.552,1687,2.552,1688,2.552,1808,2.552,1810,3.794,1816,2.552,1817,3.794,1822,2.297,1825,2.297,1852,2.106,1853,3.794,1855,2.552,1856,3.794,1857,2.552,1882,1.623,1885,2.297,1887,3.131,1893,2.552,1894,2.552,1895,2.552,1896,2.552,1897,2.552,1898,2.552,1916,3.794,1917,3.794,1918,2.552,1919,3.794,1920,3.794,1921,4.529,2013,2.552,2014,2.94,2015,2.94,2016,2.94,2017,2.94,2018,2.94,2019,2.94,2020,2.94,2021,2.94,2022,2.94,2023,2.94,2024,2.94,2025,2.94,2026,2.94,2027,2.94,2028,2.94,2029,4.371,2030,2.94,2031,2.94,2032,2.94,2033,2.94,2034,2.94,2035,2.94,2036,2.94,2037,2.94,2038,6.701,2039,2.94,2040,2.94,2041,2.94,2042,2.94,2043,6.471,2044,2.94,2045,2.94,2046,2.94,2047,2.94,2048,2.94,2049,2.94,2050,2.94,2051,2.94,2052,6.471,2053,2.94,2054,2.94,2055,2.94,2056,2.94,2057,2.94,2058,2.94,2059,2.94,2060,2.94,2061,2.94,2062,2.94,2063,2.94,2064,2.94,2065,4.371,2066,2.94,2067,2.94,2068,2.94,2069,2.94]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":313,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2010,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1815,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":922,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["1/1",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2007,"title":{},"body":{"index.html":{}}}],["100",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["1235535.svg",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1829,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["15",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["151117.svg",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.2.0",{"_index":1864,"title":{},"body":{"dependencies.html":{}}}],["18.2.7",{"_index":1866,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":894,"title":{},"body":{"interfaces/ElementConfig.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["2/13",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2037742.svg",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":2006,"title":{},"body":{"index.html":{}}}],["2997582.svg",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":890,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["3.1.1",{"_index":1873,"title":{},"body":{"dependencies.html":{}}}],["3.670.0",{"_index":1872,"title":{},"body":{"dependencies.html":{}}}],["3/19",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["3386143.svg",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["367390.svg",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":1874,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1876,"title":{},"body":{"dependencies.html":{}}}],["4412103.svg",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5/15",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1763,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["6606521.svg",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6850047.svg",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["7049525.svg",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7144060.svg",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7195612.svg",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7290921.svg",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7300296.svg",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_action",{"_index":1774,"title":{},"body":{"classes/Space.html":{}}}],["_drawpool",{"_index":910,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["_gamestate",{"_index":1381,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_piece",{"_index":1775,"title":{},"body":{"classes/Space.html":{}}}],["_setgamestate",{"_index":1384,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_setgamestate(newstate",{"_index":1390,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["_state",{"_index":573,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["_transactionstate",{"_index":1382,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["abstract",{"_index":1046,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["accessible",{"_index":1330,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["accessors",{"_index":121,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{}}}],["accesstoken",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["accesstokenexpire",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["action",{"_index":1,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"coverage.html":{}}}],["action.model",{"_index":1794,"title":{},"body":{"classes/Space.html":{}}}],["action_display_abundance",{"_index":1899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_display_adaption",{"_index":1901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn",{"_index":1915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_amphibian",{"_index":1928,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_arachnid",{"_index":1930,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_bird",{"_index":1932,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_insect",{"_index":1934,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_mammal",{"_index":1936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action_pawn_reptile",{"_index":1938,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayabundance",{"_index":1900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplayadaption",{"_index":1902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actiondisplaymanagerservice",{"_index":17,"title":{"injectables/ActionDisplayManagerService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplayservicewithsetup",{"_index":39,"title":{"interfaces/ActionDisplayServiceWithSetup.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplaysetupmanager",{"_index":24,"title":{"classes/ActionDisplaySetupManager.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["actiondisplaysetupmanager([adaptionactiondisplayservice",{"_index":60,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["actionpawn",{"_index":120,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actionpawnamphibian",{"_index":1929,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnarachnid",{"_index":1931,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnbird",{"_index":1933,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawncomponent",{"_index":99,"title":{"components/ActionPawnComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnforheader",{"_index":409,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawninsect",{"_index":1935,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnmammal",{"_index":1937,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawnpiece",{"_index":124,"title":{"interfaces/ActionPawnPiece.html":{}},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["actionpawnpile",{"_index":334,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["actionpawnpileid",{"_index":537,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["actionpawnpilelength",{"_index":410,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["actionpawnreptile",{"_index":1939,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actionpawns",{"_index":213,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnspacecomponent",{"_index":154,"title":{"components/ActionPawnSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["actionpawnspaces",{"_index":237,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actionpawnssubject",{"_index":238,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["actions",{"_index":1371,"title":{},"body":{"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{}}}],["actionserviceswithsetup",{"_index":64,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["acts",{"_index":1609,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["actual_component",{"_index":185,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaption",{"_index":44,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["adaptionactiondisplaycardcomponent",{"_index":156,"title":{"components/AdaptionActionDisplayCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["adaptionactiondisplayservice",{"_index":30,"title":{"injectables/AdaptionActionDisplayService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["adaptionarea",{"_index":809,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["add",{"_index":521,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["add_circle",{"_index":1540,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["addactionpawn",{"_index":242,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["addactionpawn(index",{"_index":251,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["added",{"_index":384,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/GameStateStoreService.html":{}}}],["addedelements",{"_index":389,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addedelementspaces",{"_index":367,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addelement",{"_index":470,"title":{},"body":{"classes/AnimalElements.html":{}}}],["addelement(element",{"_index":373,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["addfriend",{"_index":1701,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addfriend(username",{"_index":1704,"title":{},"body":{"injectables/PlayerService.html":{}}}],["addpiece",{"_index":1776,"title":{},"body":{"classes/Space.html":{}}}],["addpiece(piece",{"_index":1785,"title":{},"body":{"classes/Space.html":{}}}],["alias",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2012,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allelements",{"_index":386,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["already",{"_index":975,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["always",{"_index":1646,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["amount",{"_index":963,"title":{},"body":{"classes/Faction.html":{}}}],["amphibian",{"_index":1893,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["amphibian_element",{"_index":1903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amphibianelement",{"_index":1904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular/animations",{"_index":1863,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1865,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":446,"title":{},"body":{"components/AnimalCardComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1147,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["angular/compiler",{"_index":1867,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1566,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1868,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":830,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/card",{"_index":220,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["angular/material/chips",{"_index":1521,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/grid",{"_index":440,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["angular/material/icon",{"_index":1520,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/table",{"_index":1519,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["angular/material/tooltip",{"_index":831,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["angular/platform",{"_index":1869,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"dependencies.html":{}}}],["animal",{"_index":159,"title":{"classes/Animal.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animal(animalconfig",{"_index":533,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animal.actionpawn.length$.subscribe((length",{"_index":462,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.actionpawn.pullone",{"_index":855,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.constant",{"_index":886,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{}}}],["animal.elements.addelement(element",{"_index":862,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["animal.elements.elements$.subscribe((elements",{"_index":459,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.id",{"_index":455,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animal.species.length$.subscribe((length",{"_index":464,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalbyid",{"_index":484,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalcard",{"_index":1111,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["animalcardcomponent",{"_index":158,"title":{"components/AnimalCardComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["animalconfig",{"_index":340,"title":{"interfaces/AnimalConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["animalelements",{"_index":335,"title":{"classes/AnimalElements.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["animalelements(config.elementarea",{"_index":399,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["animalenum",{"_index":885,"title":{},"body":{"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["animalenum.amphibian",{"_index":888,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.arachnid",{"_index":892,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.bird",{"_index":896,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.insect",{"_index":899,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.mammal",{"_index":902,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalenum.reptile",{"_index":905,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["animalfactory",{"_index":488,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalfactory(animalconfig",{"_index":496,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["animalkind",{"_index":189,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["animalproviderservice",{"_index":417,"title":{"injectables/AnimalProviderService.html":{}},"body":{"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["animals",{"_index":485,"title":{},"body":{"injectables/AnimalProviderService.html":{},"miscellaneous/variables.html":{}}}],["animals.find((animal",{"_index":454,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["animalssubject",{"_index":486,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["api",{"_index":191,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["apiurlinterceptor",{"_index":1820,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiurlinterceptor(req",{"_index":1959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["app.component.html",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":160,"title":{"components/AppComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":1226,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply",{"_index":1228,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["apply(oldstate",{"_index":1230,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["applygsp",{"_index":1256,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applygsp(gsp",{"_index":1272,"title":{},"body":{"injectables/GameStateService.html":{}}}],["applypatch",{"_index":1235,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["arachnid",{"_index":1894,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arachnid_element",{"_index":1905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arachnidelement",{"_index":1906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":239,"title":{"classes/Area.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area.constant",{"_index":884,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["areaid",{"_index":879,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["areaidenum",{"_index":282,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["areaidenum.action_display_adaption",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["areaidenum.amphibian_element",{"_index":891,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.arachnid_element",{"_index":895,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.bird_element",{"_index":898,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.insect_element",{"_index":901,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.mammal_element",{"_index":904,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaidenum.reptile_element",{"_index":907,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["areaids",{"_index":544,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaids.has(elementareaid",{"_index":546,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["arearegistryservice",{"_index":248,"title":{"injectables/AreaRegistryService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["arearegistrysvc",{"_index":495,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["areaservice",{"_index":1341,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["areastate",{"_index":594,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["areastateservice",{"_index":635,"title":{"injectables/AreaStateService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"coverage.html":{}}}],["areastatesvc",{"_index":637,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["array",{"_index":1625,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["assignedanimal",{"_index":1106,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["associated",{"_index":1993,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assume",{"_index":1659,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["async",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["auth/auth.service",{"_index":1148,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{}}}],["authenticationresult",{"_index":789,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authenticationresulttype",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["authflow",{"_index":781,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authguard",{"_index":1817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor",{"_index":1822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authinterceptor(req",{"_index":1964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authparameters",{"_index":785,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["authresult",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresulttoplayerauth(authresult",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":675,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["available",{"_index":324,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace",{"_index":374,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespace.addpiece(element",{"_index":376,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["availablespaces",{"_index":624,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces.length",{"_index":625,"title":{},"body":{"classes/Area.html":{}}}],["availablespaces[0",{"_index":626,"title":{},"body":{"classes/Area.html":{}}}],["await",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["aws",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["back",{"_index":973,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["bag",{"_index":2039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1369,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["basegameelementstates",{"_index":1093,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["before",{"_index":318,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["behaviorsubject",{"_index":46,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{}}}],["behaviorsubject(false",{"_index":66,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this._gamestate",{"_index":1429,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["behaviorsubject(this.actionpawns",{"_index":266,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.checkisloggedin",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.currentplayer",{"_index":1711,"title":{},"body":{"injectables/PlayerService.html":{}}}],["behaviorsubject(this.elements",{"_index":273,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["behaviorsubject(this.length",{"_index":1638,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["behaviorsubject(this.ready",{"_index":928,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["behaviorsubject(this.spaces",{"_index":605,"title":{},"body":{"classes/Area.html":{}}}],["behaviorsubject(this.state",{"_index":1026,"title":{},"body":{"classes/GameElement.html":{}}}],["behaviorsubject>(new",{"_index":643,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["being",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bird",{"_index":1895,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["bird_element",{"_index":1907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["birdelement",{"_index":1908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blur",{"_index":1748,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["browser",{"_index":1870,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1082,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["build(gametitle",{"_index":1206,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["build(playerids",{"_index":1084,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["buildanimal",{"_index":489,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimal(faction",{"_index":498,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildanimals",{"_index":490,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["buildfactions",{"_index":1083,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["buildfactions(playerids",{"_index":1088,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["building",{"_index":518,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["built",{"_index":1098,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["call",{"_index":1284,"title":{},"body":{"injectables/GameStateService.html":{}}}],["called",{"_index":1376,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["calling",{"_index":1377,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["canactivatefn",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":209,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card'},{'name",{"_index":157,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["card.component",{"_index":833,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["card.component.html",{"_index":211,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.scss",{"_index":212,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["card.component.ts",{"_index":206,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:21",{"_index":219,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:22",{"_index":216,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:26",{"_index":217,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["card.component.ts:36",{"_index":421,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:37",{"_index":433,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:38",{"_index":434,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:39",{"_index":429,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:40",{"_index":435,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:41",{"_index":427,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:42",{"_index":432,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:44",{"_index":419,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:51",{"_index":424,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:55",{"_index":423,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card.component.ts:76",{"_index":422,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["card/adaption",{"_index":205,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["card/animal",{"_index":404,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["case",{"_index":1375,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["catch",{"_index":792,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["catch((error",{"_index":1718,"title":{},"body":{"injectables/PlayerService.html":{}}}],["change",{"_index":448,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["changedetection",{"_index":108,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy",{"_index":133,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":109,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["characters",{"_index":1764,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["checked",{"_index":1979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["checkisloggedin",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":56,"title":{"classes/ActionDisplaySetupManager.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"coverage.html":{}}}],["classes",{"_index":90,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"classes/Animal.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"index.html":{}}}],["cleared",{"_index":317,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["client.service",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["client.service.ts",{"_index":751,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameStateClientService.html":{},"coverage.html":{}}}],["client.service.ts:12",{"_index":1128,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:13",{"_index":1201,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["client.service.ts:18",{"_index":756,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{}}}],["client.service.ts:22",{"_index":1136,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:26",{"_index":764,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:31",{"_index":1131,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:35",{"_index":1146,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:39",{"_index":1138,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:43",{"_index":1141,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:47",{"_index":1139,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:50",{"_index":761,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:51",{"_index":1135,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:54",{"_index":767,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:60",{"_index":1144,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["client.service.ts:76",{"_index":759,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["client.service.ts:9",{"_index":1199,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["clientid",{"_index":783,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["code",{"_index":758,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"injectables/SignUpService.html":{}}}],["code).then((success",{"_index":1738,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["cognito",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"dependencies.html":{}}}],["cognitoclient",{"_index":752,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoclientservice",{"_index":686,"title":{"injectables/CognitoClientService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["cognitoidentityproviderclient",{"_index":768,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["cognitoidtokenjwt",{"_index":763,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["combinelatest",{"_index":47,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["combinelatest(readyobs",{"_index":76,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["combinelatestwith",{"_index":281,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{}}}],["combinelatestwith(this.arearegistryservice.registeredids",{"_index":289,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["combinelatestwith(this.pileregistryservice.registeredids",{"_index":543,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["command",{"_index":786,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["commit",{"_index":1309,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["committransaction",{"_index":1257,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["compare",{"_index":1236,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["compare(oldstate.gameelements",{"_index":1240,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["complains",{"_index":1648,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["complete",{"_index":1159,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["completegame",{"_index":1117,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["completegame(gameid",{"_index":1130,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["component",{"_index":98,"title":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":152,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["components",{"_index":100,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"index.html":{}}}],["computed",{"_index":425,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["config",{"_index":342,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["config.constant",{"_index":361,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["config.constant.ts",{"_index":878,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.elementconfig",{"_index":400,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.faction",{"_index":393,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["config.ts",{"_index":1675,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":181,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["confirmation",{"_index":1740,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["confirmationcode",{"_index":798,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirming",{"_index":802,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignup",{"_index":753,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignup(username",{"_index":757,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["confirmsignupcommand",{"_index":769,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["confirmsignupcommand(input",{"_index":799,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console",{"_index":1586,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["console.error('error",{"_index":801,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error('unexpected",{"_index":791,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.error(e",{"_index":794,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["console.log('create",{"_index":842,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["console.log(`created",{"_index":1191,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log(`joining",{"_index":1536,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["console.log(authresult",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(await",{"_index":1537,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["console.log(json.stringify(gsp",{"_index":1202,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["const",{"_index":72,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["constant/animal.constant",{"_index":190,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/SpeciesPiece.html":{}}}],["constant/area.constant",{"_index":284,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/element",{"_index":360,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/element.constant",{"_index":948,"title":{},"body":{"interfaces/ElementPiece.html":{}}}],["constant/game",{"_index":1094,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{}}}],["constant/image.constant",{"_index":137,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["constant/local",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["constant/piece.constant",{"_index":439,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/pile",{"_index":509,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["constant/pile.constant",{"_index":935,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["constructor(actionserviceswithsetup",{"_index":68,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["constructor(adaptionactiondisplayservice",{"_index":29,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"components/AdaptionActionDisplayCardComponent.html":{}}}],["constructor(animalproviderservice",{"_index":416,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["constructor(arearegistryservice",{"_index":247,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["constructor(arearegistrysvc",{"_index":491,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["constructor(areastatesvc",{"_index":634,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["constructor(authservice",{"_index":1171,"title":{},"body":{"injectables/GameService.html":{},"components/LogoutPageComponent.html":{},"injectables/PlayerService.html":{}}}],["constructor(cognitoclientservice",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SignUpService.html":{}}}],["constructor(config",{"_index":339,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["constructor(elementarea",{"_index":471,"title":{},"body":{"classes/AnimalElements.html":{}}}],["constructor(factionstatesvc",{"_index":998,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["constructor(formbuilder",{"_index":1588,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["constructor(gameelementstatesvc",{"_index":1036,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["constructor(gameservice",{"_index":1505,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["constructor(gamestatestore",{"_index":1267,"title":{},"body":{"injectables/GameStateService.html":{}}}],["constructor(gamestatesvc",{"_index":816,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["constructor(http",{"_index":1126,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["constructor(id",{"_index":578,"title":{},"body":{"classes/Area.html":{}}}],["constructor(kind",{"_index":1778,"title":{},"body":{"classes/Space.html":{}}}],["constructor(pile",{"_index":1666,"title":{},"body":{"classes/PileAdapter.html":{}}}],["constructor(pileregistrysvc",{"_index":915,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["constructor(pilestatesvc",{"_index":1689,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["constructor(private",{"_index":57,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/SignUpService.html":{}}}],["constructor(protected",{"_index":650,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{}}}],["constructor(state",{"_index":1010,"title":{},"body":{"classes/GameElement.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["corresponding",{"_index":1988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["count",{"_index":921,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["coverage",{"_index":1803,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cow",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create",{"_index":1229,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["create(oldstate",{"_index":1233,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["creategame",{"_index":1118,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["creategame(game",{"_index":1133,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["creategame(otherplayers",{"_index":1174,"title":{},"body":{"injectables/GameService.html":{}}}],["creates",{"_index":1225,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{}}}],["current",{"_index":621,"title":{},"body":{"classes/Area.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentcount",{"_index":1653,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentitemcount",{"_index":1661,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["currentplayer",{"_index":1499,"title":{},"body":{"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["currentplayer()?.username",{"_index":1543,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["currentplayeranimal",{"_index":411,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["currentplayerfaction",{"_index":810,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["currentplayersubject",{"_index":1700,"title":{},"body":{"injectables/PlayerService.html":{}}}],["custom",{"_index":1989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date.now",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["decode",{"_index":776,"title":{},"body":{"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["decodejwttoken",{"_index":754,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decodejwttoken(token",{"_index":760,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["decreasescore",{"_index":956,"title":{},"body":{"classes/Faction.html":{}}}],["decreasescore(amount",{"_index":961,"title":{},"body":{"classes/Faction.html":{}}}],["deepclone",{"_index":1019,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["deepclone(basegameelementstates",{"_index":1101,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["deepclone(emptygamestate",{"_index":1417,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(oldstate",{"_index":1242,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["deepclone(this._gamestate",{"_index":1450,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepclone(this._state",{"_index":1030,"title":{},"body":{"classes/GameElement.html":{}}}],["deepclone(this._transactionstate",{"_index":1451,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["deepcompare",{"_index":1845,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepcompare(object1",{"_index":1965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":93,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultpiecefactory",{"_index":436,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["defaultpiecefactory(kind",{"_index":1998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultpiecefactory(piecekindenum.action_pawn",{"_index":466,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["defaults",{"_index":1624,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["defined",{"_index":31,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["defining",{"_index":2040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["definition",{"_index":1610,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["delete",{"_index":1544,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["deletedstoragekey",{"_index":1547,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deletedstoragekey(key",{"_index":1550,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["demand",{"_index":1099,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["dependencies",{"_index":1862,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":1224,"title":{},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"miscellaneous/functions.html":{}}}],["detect",{"_index":1460,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["determine",{"_index":1967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directive",{"_index":150,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["directives",{"_index":184,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["display",{"_index":21,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["display.model",{"_index":53,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["display.model.ts",{"_index":88,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"coverage.html":{}}}],["display.service",{"_index":45,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["display.service.ts",{"_index":236,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["display.service.ts:103",{"_index":256,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:18",{"_index":268,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:19",{"_index":265,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:20",{"_index":262,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:21",{"_index":267,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:22",{"_index":264,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:23",{"_index":272,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:24",{"_index":269,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:25",{"_index":274,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:26",{"_index":271,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:27",{"_index":275,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:28",{"_index":250,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:37",{"_index":254,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:69",{"_index":261,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:73",{"_index":260,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:89",{"_index":258,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:93",{"_index":259,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display.service.ts:99",{"_index":253,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["display/action",{"_index":20,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["display/adaption",{"_index":204,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["display/space/action",{"_index":194,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"coverage.html":{}}}],["display/space/element",{"_index":835,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component",{"_index":834,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["display/space/eyeball/eyeball.component.ts",{"_index":950,"title":{},"body":{"components/EyeballComponent.html":{},"coverage.html":{}}}],["display/space/eyeball/eyeball.component.ts:14",{"_index":954,"title":{},"body":{"components/EyeballComponent.html":{}}}],["distinctuntilchanged",{"_index":1633,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["documentation",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1033,"title":{},"body":{"classes/GameElement.html":{}}}],["dom",{"_index":102,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["dominant",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dominant_species",{"_index":1923,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["done",{"_index":1370,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["draw",{"_index":163,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["drawpool",{"_index":913,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["drawpoolgamecomponent",{"_index":162,"title":{"components/DrawPoolGameComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["ds",{"_index":2042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":1373,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":1871,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":793,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["each",{"_index":1346,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["eagle",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":149,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element'},{'name",{"_index":167,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["element.component.html",{"_index":867,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.component.scss",{"_index":868,"title":{},"body":{"components/ElementComponent.html":{}}}],["element.constant",{"_index":883,"title":{},"body":{"interfaces/ElementConfig.html":{}}}],["element.id",{"_index":1053,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["element.kind",{"_index":381,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["element.model",{"_index":364,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/Faction.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["element.model.ts",{"_index":1009,"title":{},"body":{"classes/GameElement.html":{},"coverage.html":{}}}],["element.model.ts:16",{"_index":1016,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:20",{"_index":1018,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:28",{"_index":1015,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:36",{"_index":1014,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:6",{"_index":1012,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:7",{"_index":1013,"title":{},"body":{"classes/GameElement.html":{}}}],["element.model.ts:8",{"_index":1011,"title":{},"body":{"classes/GameElement.html":{}}}],["element.setstate(elementstate",{"_index":1071,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element.state$.pipe(skip(1)).subscribe((state",{"_index":1074,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["element/area",{"_index":277,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["element/element.component",{"_index":201,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["element/faction",{"_index":511,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["element/game",{"_index":1035,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"coverage.html":{}}}],["element/pile",{"_index":512,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["elementarea",{"_index":365,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["elementareaid",{"_index":534,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["elementareaidsbyanimal",{"_index":1853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementbyid",{"_index":630,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["elementcomponent",{"_index":166,"title":{"components/ElementComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementconfig",{"_index":359,"title":{"interfaces/ElementConfig.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{}}}],["elementconfig.inherentcount",{"_index":371,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementconfigbyanimal",{"_index":510,"title":{},"body":{"injectables/AnimalProviderService.html":{},"interfaces/ElementConfig.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementdrawpoolservice",{"_index":249,"title":{"injectables/ElementDrawPoolService.html":{}},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["elementenum",{"_index":882,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["elementenum.grass",{"_index":900,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.grub",{"_index":893,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.meat",{"_index":903,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.seed",{"_index":897,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.sun",{"_index":906,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementenum.water",{"_index":889,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["elementkind",{"_index":881,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["elementpiece",{"_index":224,"title":{"interfaces/ElementPiece.html":{}},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["elementpiece).filter(isnotnull",{"_index":391,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elements",{"_index":214,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"miscellaneous/variables.html":{}}}],["elements.foreach((element",{"_index":1048,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["elements.foreach((faction",{"_index":995,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["elements.length).fill(null",{"_index":461,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["elementspace",{"_index":378,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/ElementSpaceComponent.html":{},"miscellaneous/variables.html":{}}}],["elementspace.removepiece",{"_index":382,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacecomponent",{"_index":168,"title":{"components/ElementSpaceComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["elementspaces",{"_index":240,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.length",{"_index":370,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspaces.slice(elementconfig.inherentcount",{"_index":372,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementspacesstate",{"_index":1112,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["elementssubject",{"_index":241,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["elementstate",{"_index":657,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["email",{"_index":766,"title":{},"body":{"injectables/CognitoClientService.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["emit",{"_index":1365,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["emitpilestate",{"_index":1604,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emitstate",{"_index":577,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["emitted",{"_index":972,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["empty",{"_index":1333,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["emptyelementspace",{"_index":468,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptyelementspaces",{"_index":412,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["emptygamestate",{"_index":1427,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["engine/model/area.model",{"_index":280,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/faction.model",{"_index":356,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["engine/model/game",{"_index":1096,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/piece.model",{"_index":437,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/model/pile.model",{"_index":358,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/model/space.model",{"_index":286,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/service/game",{"_index":276,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["engine/util/misc",{"_index":139,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["engine/util/predicate",{"_index":228,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensure",{"_index":1379,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["ensuredefined",{"_index":285,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"injectables/PlayerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ensuredefined(authresult.idtoken",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(authresult.refreshtoken",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt.exp",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(jwt['cognito:username",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].addpiece(actionpawn",{"_index":330,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.actionpawnspaces)[index].removepiece",{"_index":331,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.area).nextavailablespace(spacekindenum.element",{"_index":321,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.currentplayer).friends",{"_index":1724,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.filter",{"_index":1725,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.currentplayer).friends.push(username",{"_index":1722,"title":{},"body":{"injectables/PlayerService.html":{}}}],["ensuredefined(this.elementarea",{"_index":387,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).nextavailablespace",{"_index":375,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementarea).spaces",{"_index":368,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementconfig",{"_index":369,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["ensuredefined(this.elementspaces",{"_index":326,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.elementspaces)[index].removepiece",{"_index":325,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ensuredefined(this.playerservice.currentplayer).username",{"_index":431,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ensuredefined(value",{"_index":1970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensures",{"_index":1458,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["enter",{"_index":1760,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["entire",{"_index":1361,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["entities",{"_index":667,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["entities.foreach((element",{"_index":1072,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["entities.foreach((elementstate",{"_index":1068,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["enumerations",{"_index":1883,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":773,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.clientid",{"_index":784,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environment.cognito.region",{"_index":780,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["environments/environment",{"_index":774,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["equal",{"_index":1968,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":800,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/GameStateService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["error(\"can't",{"_index":1456,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(\"new",{"_index":1032,"title":{},"body":{"classes/GameElement.html":{}}}],["error('can",{"_index":1447,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('element",{"_index":315,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["error('gamestate",{"_index":1454,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('must",{"_index":1435,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error('no",{"_index":323,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AuthService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{}}}],["error('number",{"_index":620,"title":{},"body":{"classes/Area.html":{}}}],["error('pile",{"_index":942,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["error('space",{"_index":1797,"title":{},"body":{"classes/Space.html":{}}}],["error('state",{"_index":616,"title":{},"body":{"classes/Area.html":{},"classes/Space.html":{}}}],["error('transaction",{"_index":1315,"title":{},"body":{"injectables/GameStateService.html":{}}}],["error(`animal",{"_index":383,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["error(`element",{"_index":1052,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["error(`entity",{"_index":1076,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["error(`state",{"_index":1444,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["error(`unable",{"_index":1220,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["errorhandlerinterceptor",{"_index":1825,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorhandlerinterceptor(req",{"_index":1999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errormessage",{"_index":1572,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/functions.html":{}}}],["eventcoalescing",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exist",{"_index":1985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["existing",{"_index":1034,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{}}}],["export",{"_index":13,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["extends",{"_index":187,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SpeciesPiece.html":{}}}],["eye",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eyeball",{"_index":951,"title":{},"body":{"components/EyeballComponent.html":{},"miscellaneous/variables.html":{}}}],["eyeball'},{'name",{"_index":170,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["eyeball.component.html",{"_index":952,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball.component.scss",{"_index":953,"title":{},"body":{"components/EyeballComponent.html":{}}}],["eyeball/eyeball.component",{"_index":203,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{}}}],["eyeballcomponent",{"_index":169,"title":{"components/EyeballComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["faction",{"_index":336,"title":{"classes/Faction.html":{}},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["faction().name",{"_index":467,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["faction.id",{"_index":551,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["faction.id).actionpawn",{"_index":539,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).areaid",{"_index":536,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.id).species",{"_index":541,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["faction.ownerid",{"_index":850,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionassignment",{"_index":844,"title":{"interfaces/FactionAssignment.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionassignment.id",{"_index":526,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionassignments.map((factionassignment",{"_index":525,"title":{},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{}}}],["factionassignments[0",{"_index":845,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionassignmentsubject",{"_index":989,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factionids",{"_index":524,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess",{"_index":527,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionidstoprocess.foreach((factionid",{"_index":530,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["factionregistryservice",{"_index":492,"title":{"injectables/FactionRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"coverage.html":{}}}],["factionregistrysvc",{"_index":818,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factions",{"_index":811,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["factionstate",{"_index":982,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["factionstateservice",{"_index":988,"title":{"injectables/FactionStateService.html":{}},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"coverage.html":{}}}],["factionstatesvc",{"_index":992,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["factory",{"_index":1612,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["factory.service",{"_index":1213,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["factory.service.ts",{"_index":1080,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{}}}],["factory.service.ts:17",{"_index":1085,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factory.service.ts:22",{"_index":1089,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["factorybygametitle",{"_index":1205,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["failed",{"_index":1584,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["false",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1020,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["fetchgames",{"_index":1502,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["filter",{"_index":48,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateService.html":{}}}],["filter((ids",{"_index":838,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["filter((player",{"_index":1526,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filter((registeredids",{"_index":937,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["filter((serviceready",{"_index":81,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["filter((space",{"_index":327,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["filter(isnotundefined",{"_index":457,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["filterplayers",{"_index":1503,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["filterplayers(game",{"_index":1510,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["findplayers",{"_index":1119,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["findplayers(username",{"_index":1134,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["first",{"_index":49,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["first()).subscribe",{"_index":230,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["formbuilder",{"_index":1562,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["formgroup",{"_index":1563,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["found",{"_index":1990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["friends",{"_index":1167,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["friendusername",{"_index":1726,"title":{},"body":{"injectables/PlayerService.html":{}}}],["function",{"_index":89,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1952,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":599,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"miscellaneous/variables.html":{}}}],["game'},{'name",{"_index":165,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["game.component",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["game.component.html",{"_index":807,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.scss",{"_index":808,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts",{"_index":804,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game.component.ts:39",{"_index":827,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:40",{"_index":825,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:41",{"_index":826,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:42",{"_index":824,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:43",{"_index":819,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:57",{"_index":821,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:68",{"_index":822,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.component.ts:85",{"_index":823,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["game.gameid",{"_index":1541,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.host",{"_index":1527,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game.playerids",{"_index":1525,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["game/component/draw",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["game/draw",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["game/service/game",{"_index":1212,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gamecollection",{"_index":1149,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gamecollection.games",{"_index":1157,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["gameelement",{"_index":569,"title":{"classes/GameElement.html":{}},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["gameelement:28",{"_index":968,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:32",{"_index":595,"title":{},"body":{"classes/Area.html":{}}}],["gameelement:36",{"_index":597,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:6",{"_index":585,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:7",{"_index":587,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelement:8",{"_index":586,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/Pile.html":{}}}],["gameelementregistryservice",{"_index":629,"title":{"injectables/GameElementRegistryService.html":{}},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["gameelementregistryservice:16",{"_index":645,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:17",{"_index":642,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:18",{"_index":644,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:19",{"_index":647,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:23",{"_index":638,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:27",{"_index":641,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["gameelementregistryservice:31",{"_index":1000,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["gameelements",{"_index":1479,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["gameelementsfactory",{"_index":1217,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementsfactory.build(playerids",{"_index":1219,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementsfactoryclass",{"_index":1215,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gameelementstate",{"_index":1023,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["gameelementstates",{"_index":1087,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["gameelementstates.faction.push",{"_index":1108,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["gameelementstateservice",{"_index":653,"title":{"injectables/GameElementStateService.html":{}},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["gameelementstateservice:14",{"_index":659,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:15",{"_index":669,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:16",{"_index":668,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:18",{"_index":661,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:26",{"_index":664,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:37",{"_index":663,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstateservice:41",{"_index":666,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["gameelementstatesfactoryservice",{"_index":1077,"title":{"classes/GameElementStatesFactoryService.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["gameelementstatesvc",{"_index":1039,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["gameid",{"_index":1132,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamemanagementclientservice",{"_index":1114,"title":{"injectables/GameManagementClientService.html":{}},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["gamemanagementservice",{"_index":828,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamemanagementsvc",{"_index":836,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["games",{"_index":1500,"title":{},"body":{"components/LobbyPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["gameservice",{"_index":1169,"title":{"injectables/GameService.html":{}},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["gamestarted",{"_index":812,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["gamestate",{"_index":976,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gamestate.gameelements",{"_index":1218,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["gamestate.gameelements.area",{"_index":1464,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.faction",{"_index":1467,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestate.gameelements.pile",{"_index":1470,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateclient",{"_index":1270,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestateclientservice",{"_index":1195,"title":{"injectables/GameStateClientService.html":{}},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateelement",{"_index":1401,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateelements",{"_index":1334,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestateinitializationservice",{"_index":1100,"title":{"injectables/GameStateInitializationService.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["gamestatepatch",{"_index":1198,"title":{},"body":{"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{}}}],["gamestatepatches",{"_index":1227,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gamestatepatchservice",{"_index":1222,"title":{"injectables/GameStatePatchService.html":{}},"body":{"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestateservice",{"_index":817,"title":{"injectables/GameStateService.html":{}},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"coverage.html":{}}}],["gamestatestore",{"_index":1271,"title":{},"body":{"injectables/GameStateService.html":{}}}],["gamestatestoreservice",{"_index":1268,"title":{"injectables/GameStateStoreService.html":{}},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["gamestatesubject",{"_index":1383,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["gamestatesvc",{"_index":820,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{}}}],["gamestoreservice",{"_index":1475,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["gametablecolumns",{"_index":1501,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["gametitle",{"_index":1183,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"miscellaneous/enumerations.html":{}}}],["gametitle.dominant_species",{"_index":1189,"title":{},"body":{"injectables/GameService.html":{}}}],["gecko",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(id",{"_index":501,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["getaction",{"_index":1790,"title":{},"body":{"classes/Space.html":{}}}],["getactionpawn",{"_index":350,"title":{},"body":{"classes/Animal.html":{}}}],["getactionpawnforheader",{"_index":414,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getaddedelements",{"_index":480,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getaddedelementspaces",{"_index":476,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getallelements",{"_index":478,"title":{},"body":{"classes/AnimalElements.html":{}}}],["getanimal",{"_index":415,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["getarea",{"_index":1295,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getdrawpool",{"_index":930,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["getelements",{"_index":352,"title":{},"body":{"classes/Animal.html":{}}}],["getelementstate",{"_index":670,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getemptyinitialgamestate",{"_index":1210,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getemptyinitialgamestate(gameid",{"_index":1214,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/functions.html":{}}}],["getentity",{"_index":656,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getentity(id",{"_index":662,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["getfaction",{"_index":1297,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getgamesforloggedinplayer",{"_index":1120,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["getgamestate",{"_index":1420,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getgsp",{"_index":1200,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["getid",{"_index":347,"title":{},"body":{"classes/Animal.html":{},"classes/GameElement.html":{}}}],["getimgpath",{"_index":131,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getkind",{"_index":870,"title":{},"body":{"components/ElementComponent.html":{}}}],["getlatestgamestate",{"_index":1121,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getlatestgamestate(gameid",{"_index":1137,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getlength",{"_index":932,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["getloggedinplayer",{"_index":1122,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["getloggedinusername",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["getname",{"_index":129,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"components/ElementComponent.html":{},"classes/Faction.html":{}}}],["getobservableforkey",{"_index":1385,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getobservableforkey(selector",{"_index":1393,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["getorthrow",{"_index":138,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AnimalProviderService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getorthrow(elementconfigbyanimal",{"_index":535,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["getorthrow(imgpathbykind",{"_index":146,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["getorthrow(map",{"_index":1981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorthrow(pileidsbyanimal",{"_index":538,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.animalbyid",{"_index":556,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["getorthrow(this.elementbyid",{"_index":1047,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["getowner",{"_index":127,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["getownerid",{"_index":978,"title":{},"body":{"classes/Faction.html":{}}}],["getpiece",{"_index":1792,"title":{},"body":{"classes/Space.html":{}}}],["getpile",{"_index":1299,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["getplayer",{"_index":1123,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayer(username",{"_index":1140,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["getplayerauthdata",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["getscore",{"_index":980,"title":{},"body":{"classes/Faction.html":{}}}],["getspecies",{"_index":354,"title":{},"body":{"classes/Animal.html":{}}}],["getstate",{"_index":1017,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameService.html":{},"classes/Space.html":{}}}],["getstate(gameid",{"_index":1178,"title":{},"body":{"injectables/GameService.html":{}}}],["getstoragekey",{"_index":1548,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getstoragekey(key",{"_index":1552,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["gettransactionstate",{"_index":1422,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["given",{"_index":1623,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["grass",{"_index":1916,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["grasshopper",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grub",{"_index":1917,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gsp",{"_index":970,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["gsp.patch",{"_index":1244,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gsp.patchid",{"_index":1247,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["gspservice",{"_index":1269,"title":{},"body":{"injectables/GameStateService.html":{}}}],["handler.interceptor.ts",{"_index":1824,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["happens",{"_index":969,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{}}}],["here",{"_index":1592,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["host",{"_index":1186,"title":{},"body":{"injectables/GameService.html":{},"components/LobbyPageComponent.html":{}}}],["html",{"_index":148,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["http",{"_index":1129,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httpclient",{"_index":1127,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["httphandlerfn",{"_index":1962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httprequest",{"_index":1960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["human",{"_index":1181,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["humanid",{"_index":1180,"title":{},"body":{"injectables/GameService.html":{}}}],["i.e",{"_index":1971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":9,"title":{},"body":{"interfaces/Action.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["ids.has(areaidenum.action_display_adaption",{"_index":839,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["imgpath",{"_index":123,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{}}}],["imgpathbykind",{"_index":136,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":207,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"components/LogoutPageComponent.html":{}}}],["import",{"_index":42,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["imports",{"_index":140,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["included",{"_index":1608,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["increasescore",{"_index":957,"title":{},"body":{"classes/Faction.html":{}}}],["increasescore(amount",{"_index":964,"title":{},"body":{"classes/Faction.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":1976,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["information",{"_index":1587,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["inherent",{"_index":1113,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["inherentcount",{"_index":880,"title":{},"body":{"interfaces/ElementConfig.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":584,"title":{},"body":{"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["initial",{"_index":1221,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["initialgameelementstatesfactory",{"_index":1081,"title":{"interfaces/InitialGameElementStatesFactory.html":{}},"body":{"classes/GameElementStatesFactoryService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{}}}],["initialgameelementstatesfactoryconstructor",{"_index":1211,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["initialgamestate",{"_index":1187,"title":{},"body":{"injectables/GameService.html":{}}}],["initialization",{"_index":1972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initialization.service",{"_index":1182,"title":{},"body":{"injectables/GameService.html":{}}}],["initialization.service.ts",{"_index":1204,"title":{},"body":{"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["initialization.service.ts:14",{"_index":1209,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["initialization.service.ts:19",{"_index":1207,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["initialize",{"_index":71,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"injectables/PileStateService.html":{}}}],["initiateauthcommand",{"_index":770,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommand(input",{"_index":787,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["initiateauthcommandinput",{"_index":771,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["inject(authservice).checkisloggedin",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router).navigate(['/login",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":16,"title":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["injectables",{"_index":18,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"index.html":{}}}],["input",{"_index":134,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"injectables/CognitoClientService.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["input.required",{"_index":450,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["inputs",{"_index":119,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["insect",{"_index":1896,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["insect_element",{"_index":1909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["insectelement",{"_index":1910,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instantiated",{"_index":1332,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interact",{"_index":1251,"title":{},"body":{"injectables/GameStateService.html":{}}}],["interested",{"_index":1349,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameStateService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/AnimalConfig.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"interfaces/FactionAssignment.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"interfaces/LoginFormData.html":{},"interfaces/PileConfig.html":{},"interfaces/PlayerAuthData.html":{},"interfaces/SignUpConfirmFormData.html":{},"interfaces/SignUpFormData.html":{},"interfaces/SpeciesPiece.html":{},"index.html":{}}}],["inventory",{"_index":1660,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/variables.html":{}}}],["isfalse",{"_index":1849,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isfalse(value",{"_index":2000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloggedin",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PlayerService.html":{}}}],["isloggedinsubject",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotnull",{"_index":287,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotnull(value",{"_index":2001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnotundefined",{"_index":444,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnotundefined(value",{"_index":2002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isnull",{"_index":1850,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnull(value",{"_index":2003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isready",{"_index":290,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["istrue",{"_index":227,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["istrue(value",{"_index":2004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":974,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Pile.html":{}}}],["item.id",{"_index":1441,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["items",{"_index":1996,"title":{},"body":{"miscellaneous/functions.html":{}}}],["itself",{"_index":1980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["joingame",{"_index":1504,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["joingame(gameid",{"_index":1512,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["joins",{"_index":1477,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["json",{"_index":1021,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["json.parse(playerauthdata",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(element",{"_index":385,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["json.stringify(newgamestateelement",{"_index":1445,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["json.stringify(this.authresulttoplayerauth(authresult",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":775,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["jwtdecode(token",{"_index":795,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["k",{"_index":1982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["key",{"_index":1350,"title":{},"body":{"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["keyof",{"_index":1433,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["keys",{"_index":1344,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["kind",{"_index":591,"title":{},"body":{"classes/Area.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"interfaces/ElementPiece.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":1150,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/game/${gameid}/state",{"_index":1161,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.get(`/player/${username",{"_index":1162,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/game/${gameid",{"_index":1158,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.patch(`/player/${player.username",{"_index":1166,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post('/game",{"_index":1153,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["lastvaluefrom(this.http.post(`/game/${gamestate.gameid}/state",{"_index":1160,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["leaf",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leaving",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":147,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["length",{"_index":914,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["lengthsubject",{"_index":1602,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["level",{"_index":1343,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["list",{"_index":441,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["lobby",{"_index":172,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["lobbypagecomponent",{"_index":171,"title":{"components/LobbyPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["local",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameStateStoreService.html":{}}}],["localstorage.getitem(key",{"_index":1557,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1556,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":1558,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstoragekey",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["localstoragekey.player_auth_data",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorageservice",{"_index":687,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["lodash",{"_index":1092,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"dependencies.html":{}}}],["log",{"_index":813,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["logged",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedinusername",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":175,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["login(username",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{}}}],["loginform",{"_index":1571,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["loginformdata",{"_index":1559,"title":{"interfaces/LoginFormData.html":{}},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["loginpagecomponent",{"_index":174,"title":{"components/LoginPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["logout",{"_index":177,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["logoutpagecomponent",{"_index":176,"title":{"components/LogoutPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["long",{"_index":1765,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["maintain",{"_index":1328,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["making",{"_index":1329,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["mammal",{"_index":1897,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mammal_element",{"_index":1911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mammalelement",{"_index":1912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["management",{"_index":1116,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["management.service",{"_index":829,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["management/game",{"_index":1115,"title":{},"body":{"injectables/GameManagementClientService.html":{},"coverage.html":{}}}],["management/game.service",{"_index":1518,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["management/game.service.ts",{"_index":1170,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["management/game.service.ts:13",{"_index":1172,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:20",{"_index":1175,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:37",{"_index":1177,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:41",{"_index":1173,"title":{},"body":{"injectables/GameService.html":{}}}],["management/game.service.ts:45",{"_index":1179,"title":{},"body":{"injectables/GameService.html":{}}}],["management/player.service",{"_index":445,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["management/player.service.ts",{"_index":1699,"title":{},"body":{"injectables/PlayerService.html":{},"coverage.html":{}}}],["management/player.service.ts:12",{"_index":1709,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:13",{"_index":1712,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:16",{"_index":1703,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:40",{"_index":1706,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:45",{"_index":1705,"title":{},"body":{"injectables/PlayerService.html":{}}}],["management/player.service.ts:50",{"_index":1708,"title":{},"body":{"injectables/PlayerService.html":{}}}],["manager.service.ts",{"_index":22,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"coverage.html":{}}}],["manager.service.ts:10",{"_index":40,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:11",{"_index":32,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:18",{"_index":36,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{}}}],["manager.service.ts:24",{"_index":92,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:25",{"_index":95,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:26",{"_index":91,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:33",{"_index":96,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["manager.service.ts:46",{"_index":97,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{}}}],["map",{"_index":50,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/ElementConfig.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["map((animals",{"_index":453,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["map((gamestate",{"_index":1431,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["map((serviceready",{"_index":78,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["map((space",{"_index":328,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["map([[gametitle.dominant_species",{"_index":1208,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["matbutton",{"_index":805,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcard",{"_index":210,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardcontent",{"_index":1570,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardheader",{"_index":1742,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["matcardtitle",{"_index":405,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matcell",{"_index":1486,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcelldef",{"_index":1492,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["match",{"_index":617,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["matches",{"_index":1414,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["matching",{"_index":15,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchip",{"_index":1496,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matchipset",{"_index":1495,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matcolumndef",{"_index":1484,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matgridlist",{"_index":406,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matgridtile",{"_index":407,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["matheadercell",{"_index":1485,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheadercelldef",{"_index":1491,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrow",{"_index":1487,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matheaderrowdef",{"_index":1489,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["maticon",{"_index":1493,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matminifabbutton",{"_index":1494,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matrow",{"_index":1488,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["matrowdef",{"_index":1490,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["mattable",{"_index":1483,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["mattooltip",{"_index":806,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["meat",{"_index":1918,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":1975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["metadata",{"_index":107,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["method",{"_index":1337,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["methods",{"_index":26,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{}}}],["minimize",{"_index":517,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["miscellaneous",{"_index":1882,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model/action",{"_index":52,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{}}}],["model/animal.model",{"_index":514,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["model/area.model",{"_index":648,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{}}}],["model/element.model",{"_index":225,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{}}}],["model/faction.model",{"_index":987,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{}}}],["model/game",{"_index":1045,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{}}}],["model/pile.model",{"_index":1692,"title":{},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["model/player.model",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["modules",{"_index":2008,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monkey",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":1378,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":1335,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["new",{"_index":59,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newdocument",{"_index":1245,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newgamestateelement",{"_index":1399,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newgamestateelement.id",{"_index":1442,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["newstate",{"_index":596,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["newstate.gameelements",{"_index":1241,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.id",{"_index":614,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["newstate.kind",{"_index":1800,"title":{},"body":{"classes/Space.html":{}}}],["newstate.patchid",{"_index":1246,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["newstate.piece",{"_index":1801,"title":{},"body":{"classes/Space.html":{}}}],["newstate.space.foreach((spacestate",{"_index":622,"title":{},"body":{"classes/Area.html":{}}}],["newstate.space.length",{"_index":619,"title":{},"body":{"classes/Area.html":{}}}],["next",{"_index":1961,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nextactionpawnspaceindex",{"_index":856,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextavailablespace",{"_index":575,"title":{},"body":{"classes/Area.html":{}}}],["nextavailablespace(kind",{"_index":589,"title":{},"body":{"classes/Area.html":{}}}],["nextelementspaceindex",{"_index":858,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["nextspace",{"_index":320,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["nextspace.addpiece(element",{"_index":322,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["ngclass",{"_index":408,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["ngoninit",{"_index":215,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LogoutPageComponent.html":{}}}],["null",{"_index":141,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/Area.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":252,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PlayerAuthData.html":{}}}],["object",{"_index":1362,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["object.keys(this._state.inventory).reduce",{"_index":1641,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["object1",{"_index":1969,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object2",{"_index":1966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objects",{"_index":1380,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["observable",{"_index":41,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["observables",{"_index":1345,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["of(0",{"_index":944,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["of(undefined",{"_index":1203,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["oldstate",{"_index":1232,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameelements",{"_index":1243,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.gameid",{"_index":1237,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["oldstate.patchid",{"_index":1239,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["once",{"_index":1403,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["one",{"_index":1355,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["oninit",{"_index":208,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LogoutPageComponent.html":{}}}],["onpush",{"_index":449,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["onsubmit",{"_index":1576,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["orchestrating",{"_index":1252,"title":{},"body":{"injectables/GameStateService.html":{}}}],["otherplayers",{"_index":1176,"title":{},"body":{"injectables/GameService.html":{}}}],["others",{"_index":1331,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/variables.html":{}}}],["override",{"_index":613,"title":{},"body":{"classes/Area.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["overview",{"_index":2005,"title":{"index.html":{}},"body":{"index.html":{}}}],["overwrites",{"_index":1363,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["owner",{"_index":122,"title":{},"body":{"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ownerid",{"_index":959,"title":{},"body":{"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["package",{"_index":1861,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":183,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page'},{'name",{"_index":173,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.html",{"_index":1497,"title":{},"body":{"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.scss",{"_index":1498,"title":{},"body":{"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts",{"_index":1482,"title":{},"body":{"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:12",{"_index":1595,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:18",{"_index":1596,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["page.component.ts:22",{"_index":1591,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:23",{"_index":1589,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["page.component.ts:24",{"_index":1753,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:36",{"_index":1590,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["page.component.ts:41",{"_index":1754,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["page.component.ts:48",{"_index":1515,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:49",{"_index":1516,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:50",{"_index":1506,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:62",{"_index":1511,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:69",{"_index":1509,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:73",{"_index":1508,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:78",{"_index":1507,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page.component.ts:83",{"_index":1513,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["page/lobby",{"_index":1481,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["page/login",{"_index":1561,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["page/logout",{"_index":1594,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["page/sign",{"_index":1729,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["param",{"_index":1031,"title":{},"body":{"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1155,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["particular",{"_index":1354,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["passed",{"_index":1415,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["password",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["password).then((success",{"_index":1580,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["patch",{"_index":1022,"title":{},"body":{"classes/GameElement.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateStoreService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["patch.service",{"_index":1302,"title":{},"body":{"injectables/GameStateService.html":{}}}],["patch.service.ts",{"_index":1223,"title":{},"body":{"injectables/GameStatePatchService.html":{},"coverage.html":{}}}],["patch.service.ts:12",{"_index":1234,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patch.service.ts:20",{"_index":1231,"title":{},"body":{"injectables/GameStatePatchService.html":{}}}],["patchid",{"_index":1238,"title":{},"body":{"injectables/GameStatePatchService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["pawn",{"_index":112,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pawn'},{'name",{"_index":153,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["pawn.component",{"_index":202,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["pawn.component.html",{"_index":116,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.scss",{"_index":118,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts",{"_index":106,"title":{},"body":{"components/ActionPawnComponent.html":{},"coverage.html":{}}}],["pawn.component.ts:15",{"_index":126,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:17",{"_index":128,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:21",{"_index":130,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.component.ts:25",{"_index":132,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["pawn.model",{"_index":135,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pawn.model.ts",{"_index":186,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["pawn/action",{"_index":105,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["pawns",{"_index":469,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["piece",{"_index":188,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["piece.model",{"_index":1632,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piececount",{"_index":1650,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["piecefactory",{"_index":1603,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["piecekindenum",{"_index":438,"title":{},"body":{"components/AnimalCardComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"miscellaneous/enumerations.html":{}}}],["pieces",{"_index":925,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(null",{"_index":1656,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieces.push(this.piecefactory(kind",{"_index":1655,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount.length",{"_index":1651,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pieceswithcount[math.floor(math.random",{"_index":1652,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pile",{"_index":357,"title":{"classes/Pile.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pile.constant",{"_index":1676,"title":{},"body":{"interfaces/PileConfig.html":{}}}],["pileadapter",{"_index":343,"title":{"classes/PileAdapter.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["pileadapter(config.actionpawnpile",{"_index":395,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileadapter(config.speciespile",{"_index":397,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["pileconfig",{"_index":1673,"title":{"interfaces/PileConfig.html":{}},"body":{"interfaces/PileConfig.html":{},"coverage.html":{}}}],["pileidenum",{"_index":934,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{}}}],["pileidenum.action_pawn_amphibian",{"_index":1677,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_arachnid",{"_index":1679,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_bird",{"_index":1681,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_insect",{"_index":1683,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_mammal",{"_index":1685,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.action_pawn_reptile",{"_index":1687,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.element",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pileidenum.species_amphibian",{"_index":1678,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_arachnid",{"_index":1680,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_bird",{"_index":1682,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_insect",{"_index":1684,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_mammal",{"_index":1686,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileidenum.species_reptile",{"_index":1688,"title":{},"body":{"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["pileids",{"_index":545,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(actionpawnpileid",{"_index":547,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileids.has(speciespileid",{"_index":548,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["pileidsbyanimal",{"_index":508,"title":{},"body":{"injectables/AnimalProviderService.html":{},"classes/GameElementStatesFactoryService.html":{},"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pileregistryservice",{"_index":493,"title":{"injectables/PileRegistryService.html":{}},"body":{"injectables/AnimalProviderService.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["pileregistrysvc",{"_index":917,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pileservice",{"_index":1340,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["pilestate",{"_index":1279,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["pilestateservice",{"_index":1690,"title":{"injectables/PileStateService.html":{}},"body":{"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["pilestatesvc",{"_index":1691,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["pipe",{"_index":77,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{}}}],["placeholder",{"_index":1478,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["player",{"_index":1143,"title":{},"body":{"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["player.friends",{"_index":1168,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["player.username",{"_index":1721,"title":{},"body":{"injectables/PlayerService.html":{}}}],["player_auth_data",{"_index":1925,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["playerauthdata",{"_index":683,"title":{"interfaces/PlayerAuthData.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["playercollection",{"_index":1151,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/PlayerService.html":{}}}],["playercollection.map((player",{"_index":1720,"title":{},"body":{"injectables/PlayerService.html":{}}}],["playercollection.players",{"_index":1165,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["playerid",{"_index":1110,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["playerids",{"_index":1086,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["playerids.foreach((playerid",{"_index":1105,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["players",{"_index":1542,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["playerservice",{"_index":418,"title":{"injectables/PlayerService.html":{}},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["please",{"_index":1759,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["pool",{"_index":164,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["pool.service",{"_index":279,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["pool.service.ts",{"_index":909,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["pool.service.ts:15",{"_index":926,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:16",{"_index":927,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:17",{"_index":929,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:18",{"_index":916,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:24",{"_index":918,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:37",{"_index":931,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:45",{"_index":933,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:53",{"_index":920,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pool.service.ts:57",{"_index":924,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["possible",{"_index":523,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["previous",{"_index":1364,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["private",{"_index":23,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{}}}],["processedfactionids",{"_index":487,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["progress",{"_index":1283,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["promise",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"interfaces/ActionPawnPiece.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"properties.html":{}}}],["protected",{"_index":572,"title":{},"body":{"classes/Area.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementStateService.html":{},"classes/Pile.html":{},"injectables/PileStateService.html":{}}}],["provideanimationsasync('noop",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providedin",{"_index":54,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["providehttpclient",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["provider.service",{"_index":443,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["provider.service.ts",{"_index":483,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["provider.service.ts:16",{"_index":507,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:17",{"_index":503,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:18",{"_index":505,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:19",{"_index":494,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:28",{"_index":500,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:46",{"_index":497,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:50",{"_index":499,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["provider.service.ts:78",{"_index":502,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["providerouter(routes",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":1248,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["providezonechangedetection",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pull",{"_index":911,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pull(count",{"_index":919,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["pulled",{"_index":1626,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany",{"_index":1605,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullmany(count",{"_index":1619,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pullone",{"_index":1606,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["pulls",{"_index":1621,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put",{"_index":912,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["put(pieces",{"_index":923,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["puts",{"_index":1629,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["quickly",{"_index":522,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["random",{"_index":1601,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reactiveformsmodule",{"_index":1564,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["readonly",{"_index":333,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"classes/Space.html":{}}}],["readonlymap",{"_index":887,"title":{},"body":{"interfaces/ElementConfig.html":{},"interfaces/PileConfig.html":{},"miscellaneous/variables.html":{}}}],["ready",{"_index":25,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["readyobs",{"_index":73,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["readysubject",{"_index":65,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["received",{"_index":971,"title":{},"body":{"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{}}}],["refactored",{"_index":1476,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["refresh",{"_index":1539,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["refreshtoken",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlayerAuthData.html":{}}}],["regardless",{"_index":1353,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["region",{"_index":779,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["register",{"_index":633,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["register(elements",{"_index":640,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["register(entities",{"_index":665,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerarea",{"_index":1258,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerarea(newstate",{"_index":1274,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registered",{"_index":1054,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registeredareaids",{"_index":291,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredareaids.has(areaidenum.action_display_adaption",{"_index":292,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["registeredelementsubject",{"_index":631,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registeredids",{"_index":632,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["registeredids.has(pileidenum.element",{"_index":938,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["registerentitystate",{"_index":654,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["registerentitystate(area",{"_index":658,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["registerentitystate(element",{"_index":1061,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["registerentitystate(faction",{"_index":1004,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["registerentitystate(pile",{"_index":1694,"title":{},"body":{"injectables/PileStateService.html":{}}}],["registerfaction",{"_index":1259,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerfaction(newstate",{"_index":1276,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile",{"_index":1260,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registerpile(newstate",{"_index":1278,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement",{"_index":1386,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registertransactionstateelement(key",{"_index":1398,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["registry.service",{"_index":278,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts",{"_index":628,"title":{},"body":{"injectables/AreaRegistryService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:14",{"_index":636,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["registry.service.ts:16",{"_index":1044,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:17",{"_index":1042,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:18",{"_index":1043,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:19",{"_index":1038,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:21",{"_index":1001,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:22",{"_index":1003,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:23",{"_index":1040,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["registry.service.ts:25",{"_index":1002,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:26",{"_index":999,"title":{},"body":{"injectables/FactionRegistryService.html":{}}}],["registry.service.ts:27",{"_index":1041,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["related",{"_index":1254,"title":{},"body":{"injectables/GameStateService.html":{}}}],["remove",{"_index":1799,"title":{},"body":{"classes/Space.html":{}}}],["removeactionpawn",{"_index":243,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removeactionpawn(index",{"_index":255,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removedpiece",{"_index":1798,"title":{},"body":{"classes/Space.html":{}}}],["removeelement",{"_index":244,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/AnimalElements.html":{}}}],["removeelement(element",{"_index":377,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["removeelement(index",{"_index":257,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["removefriend",{"_index":1702,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removefriend(username",{"_index":1707,"title":{},"body":{"injectables/PlayerService.html":{}}}],["removepiece",{"_index":1777,"title":{},"body":{"classes/Space.html":{}}}],["removeremainingelements",{"_index":245,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["replenish",{"_index":246,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["represents",{"_index":1611,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["reptile",{"_index":1898,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["reptile_element",{"_index":1913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reptileelement",{"_index":1914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["req",{"_index":1963,"title":{},"body":{"miscellaneous/functions.html":{}}}],["require",{"_index":1286,"title":{},"body":{"injectables/GameStateService.html":{}}}],["required",{"_index":420,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["requiretransaction",{"_index":1261,"title":{},"body":{"injectables/GameStateService.html":{}}}],["responsible",{"_index":1327,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rest",{"_index":1249,"title":{},"body":{"injectables/GameStateService.html":{}}}],["results",{"_index":14,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":1983,"title":{},"body":{"miscellaneous/functions.html":{}}}],["return",{"_index":142,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1977,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":37,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["rollback",{"_index":1462,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["rollbacktransaction",{"_index":1262,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["root",{"_index":55,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/LocalStorageService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"injectables/SignUpService.html":{}}}],["root'},{'name",{"_index":161,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["router",{"_index":1567,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["routerlink",{"_index":1568,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["routeroutlet",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs",{"_index":51,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"dependencies.html":{}}}],["same",{"_index":1402,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["score",{"_index":960,"title":{},"body":{"classes/Faction.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["sdk/client",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"dependencies.html":{}}}],["see",{"_index":1585,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["seed",{"_index":1919,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1614,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["selector",{"_index":110,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["selector(gamestate",{"_index":1432,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sendgsptobackend",{"_index":1196,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["sendgsptobackend(gsp",{"_index":1197,"title":{},"body":{"injectables/GameStateClientService.html":{}}}],["service",{"_index":1338,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["service.ready",{"_index":75,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["service.setup",{"_index":86,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["service/action",{"_index":226,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/animal",{"_index":442,"title":{},"body":{"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["service/auth/auth.service",{"_index":1569,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{}}}],["service/auth/sign",{"_index":1731,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["service/game",{"_index":1517,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["serviceready",{"_index":82,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["serviceready.every((ready",{"_index":80,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["services",{"_index":1255,"title":{},"body":{"injectables/GameStateService.html":{}}}],["set",{"_index":506,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"classes/Faction.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"miscellaneous/functions.html":{}}}],["seta",{"_index":1997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setarea",{"_index":1263,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setarea(newstate",{"_index":1288,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setb",{"_index":1995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setdifference",{"_index":513,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setdifference(factionids",{"_index":528,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["setdifference(seta",{"_index":1994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setentitystate",{"_index":655,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setentitystate(state",{"_index":660,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileStateService.html":{}}}],["setfaction",{"_index":1264,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfaction(newstate",{"_index":1290,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setfriends",{"_index":1124,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setfriends(player",{"_index":1142,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setgamestate",{"_index":1359,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setgamestate(newstate",{"_index":1408,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setinitialgamestate",{"_index":1125,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setinitialgamestate(gamestate",{"_index":1145,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["setpile",{"_index":1265,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setpile(newstate",{"_index":1292,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["setscore",{"_index":958,"title":{},"body":{"classes/Faction.html":{}}}],["setscore(amount",{"_index":966,"title":{},"body":{"classes/Faction.html":{}}}],["setstate",{"_index":576,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["setstate(newstate",{"_index":593,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["setstoragekey",{"_index":1549,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setstoragekey(key",{"_index":1554,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settransactionstateelement",{"_index":1387,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["settransactionstateelement(key",{"_index":1411,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["setup",{"_index":27,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{}}}],["several",{"_index":519,"title":{},"body":{"injectables/AnimalProviderService.html":{},"injectables/GameStateStoreService.html":{}}}],["shuffle",{"_index":1090,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffle(object.values(animalenum",{"_index":1104,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffledanimals",{"_index":1103,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["shuffledanimals[index",{"_index":1107,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["sign",{"_index":179,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal",{"_index":218,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signal(0",{"_index":428,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["signal(undefined",{"_index":1514,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["signup",{"_index":755,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signup(username",{"_index":765,"title":{},"body":{"injectables/CognitoClientService.html":{},"injectables/SignUpService.html":{}}}],["signupcommand",{"_index":772,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupcommand(input",{"_index":797,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["signupconfirmform",{"_index":1733,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["signupconfirmformdata",{"_index":1727,"title":{"interfaces/SignUpConfirmFormData.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"coverage.html":{}}}],["signupconfirmpagecomponent",{"_index":178,"title":{"components/SignUpConfirmPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupform",{"_index":1743,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["signupform.dirty",{"_index":1757,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"email\")?.errors?.[\"email",{"_index":1758,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.get(\"password\")?.errors?.[\"minlength",{"_index":1762,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupform.invalid",{"_index":1756,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["signupformdata",{"_index":1741,"title":{"interfaces/SignUpFormData.html":{}},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signuppagecomponent",{"_index":182,"title":{"components/SignUpPageComponent.html":{}},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["signupservice",{"_index":1730,"title":{"injectables/SignUpService.html":{}},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"coverage.html":{}}}],["skip",{"_index":1066,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["skull",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":1528,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["snake",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["someone",{"_index":1348,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sort",{"_index":1529,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["space",{"_index":197,"title":{"classes/Space.html":{}},"body":{"components/ActionPawnSpaceComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"components/ElementSpaceComponent.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Space.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["space'},{'name",{"_index":155,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["space.component",{"_index":222,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{}}}],["space.component.html",{"_index":198,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.scss",{"_index":199,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts",{"_index":196,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space.component.ts:16",{"_index":200,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/ElementSpaceComponent.html":{}}}],["space.component.ts:18",{"_index":949,"title":{},"body":{"components/ElementSpaceComponent.html":{}}}],["space.kind",{"_index":299,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{}}}],["space.model",{"_index":598,"title":{},"body":{"classes/Area.html":{}}}],["space.piece",{"_index":303,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{}}}],["space.piece.kind",{"_index":380,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["space.removepiece",{"_index":329,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["space.state",{"_index":601,"title":{},"body":{"classes/Area.html":{}}}],["space.state$.subscribe((spacestate",{"_index":609,"title":{},"body":{"classes/Area.html":{}}}],["space/action",{"_index":195,"title":{},"body":{"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"coverage.html":{}}}],["space/element",{"_index":221,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementSpaceComponent.html":{},"coverage.html":{}}}],["space/eyeball/eyeball.component",{"_index":223,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["spacekindenum",{"_index":283,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/GameElementStatesFactoryService.html":{},"miscellaneous/enumerations.html":{}}}],["spacekindenum.action_pawn",{"_index":300,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"miscellaneous/variables.html":{}}}],["spacekindenum.element",{"_index":306,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"miscellaneous/variables.html":{}}}],["spaces",{"_index":316,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{}}}],["spaces.filter",{"_index":298,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["spaces.filter((space",{"_index":388,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["spaces.map((space",{"_index":600,"title":{},"body":{"classes/Area.html":{}}}],["spacessubject",{"_index":570,"title":{},"body":{"classes/Area.html":{}}}],["spacestate",{"_index":571,"title":{},"body":{"classes/Area.html":{},"classes/GameElementStatesFactoryService.html":{},"classes/Space.html":{}}}],["species",{"_index":338,"title":{},"body":{"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"components/AppComponent.html":{},"interfaces/PileConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["species.model",{"_index":363,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["species/animal/noun",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/element/noun",{"_index":2043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species/other/noun",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["species_amphibian",{"_index":1940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_arachnid",{"_index":1942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_bird",{"_index":1944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_insect",{"_index":1946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_mammal",{"_index":1948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["species_reptile",{"_index":1950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesamphibian",{"_index":1941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesarachnid",{"_index":1943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesbird",{"_index":1945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesinsect",{"_index":1947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciesmammal",{"_index":1949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["speciespiece",{"_index":362,"title":{"interfaces/SpeciesPiece.html":{}},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["speciespile",{"_index":337,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{}}}],["speciespileid",{"_index":540,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["speciespilelength",{"_index":413,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["speciesreptile",{"_index":1951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specified",{"_index":1622,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["spider",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../animal.constant.ts",{"_index":1884,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.config.ts",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../area.constant.ts",{"_index":1885,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":1954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../element",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../element.constant.ts",{"_index":1886,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../error",{"_index":1957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../game",{"_index":1887,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../image.constant.ts",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":1889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../misc.ts",{"_index":1955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../piece.constant.ts",{"_index":1891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../piece.model.ts",{"_index":1956,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../pile",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pile.constant.ts",{"_index":1892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../predicate.ts",{"_index":1958,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/component/lobby",{"_index":1480,"title":{},"body":{"components/LobbyPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/login",{"_index":1560,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/logout",{"_index":1593,"title":{},"body":{"components/LogoutPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/component/sign",{"_index":1728,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["src/app/engine/constant/game",{"_index":1922,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/constant/local",{"_index":1924,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/engine/gaurd/auth.guard.ts",{"_index":1816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/interceptor/api",{"_index":1818,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/auth.interceptor.ts",{"_index":1821,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/interceptor/error",{"_index":1823,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/model/action.model.ts",{"_index":6,"title":{},"body":{"interfaces/Action.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts",{"_index":568,"title":{},"body":{"classes/Area.html":{},"coverage.html":{}}}],["src/app/engine/model/area.model.ts:10",{"_index":579,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:22",{"_index":588,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:48",{"_index":590,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:7",{"_index":580,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:8",{"_index":582,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/area.model.ts:9",{"_index":581,"title":{},"body":{"classes/Area.html":{}}}],["src/app/engine/model/faction.model.ts",{"_index":955,"title":{},"body":{"classes/Faction.html":{},"coverage.html":{}}}],["src/app/engine/model/faction.model.ts:13",{"_index":981,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:17",{"_index":965,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:22",{"_index":962,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:27",{"_index":967,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:5",{"_index":977,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/faction.model.ts:9",{"_index":979,"title":{},"body":{"classes/Faction.html":{}}}],["src/app/engine/model/game",{"_index":1008,"title":{},"body":{"classes/GameElement.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/engine/model/piece.model.ts",{"_index":1832,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/engine/model/pile.model.ts",{"_index":1600,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"coverage.html":{}}}],["src/app/engine/model/pile.model.ts:10",{"_index":1616,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:100",{"_index":1668,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:104",{"_index":1669,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:108",{"_index":1670,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:11",{"_index":1617,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:12",{"_index":1615,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:13",{"_index":1607,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:32",{"_index":1630,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:39",{"_index":1618,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:49",{"_index":1620,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:71",{"_index":1627,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:79",{"_index":1628,"title":{},"body":{"classes/Pile.html":{}}}],["src/app/engine/model/pile.model.ts:89",{"_index":1667,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:92",{"_index":1671,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/pile.model.ts:96",{"_index":1672,"title":{},"body":{"classes/PileAdapter.html":{}}}],["src/app/engine/model/player.model.ts",{"_index":1698,"title":{},"body":{"interfaces/PlayerAuthData.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts",{"_index":1773,"title":{},"body":{"classes/Space.html":{},"coverage.html":{}}}],["src/app/engine/model/space.model.ts:10",{"_index":1784,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:11",{"_index":1779,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:19",{"_index":1789,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:26",{"_index":1791,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:30",{"_index":1793,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:34",{"_index":1786,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:43",{"_index":1787,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:54",{"_index":1788,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:7",{"_index":1782,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:8",{"_index":1780,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/model/space.model.ts:9",{"_index":1781,"title":{},"body":{"classes/Space.html":{}}}],["src/app/engine/service/auth/auth.service.ts",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/auth.service.ts:14",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:15",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:25",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:35",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:50",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:57",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:66",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:74",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/auth.service.ts:78",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/engine/service/auth/cognito",{"_index":750,"title":{},"body":{"injectables/CognitoClientService.html":{},"coverage.html":{}}}],["src/app/engine/service/auth/sign",{"_index":1766,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["src/app/engine/service/game",{"_index":627,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"coverage.html":{}}}],["src/app/engine/service/local",{"_index":1545,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/engine/util/misc.ts",{"_index":1844,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/engine/util/predicate.ts",{"_index":1848,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/game/component/action",{"_index":104,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"coverage.html":{}}}],["src/app/game/component/animal",{"_index":403,"title":{},"body":{"components/AnimalCardComponent.html":{},"coverage.html":{}}}],["src/app/game/component/draw",{"_index":803,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts",{"_index":866,"title":{},"body":{"components/ElementComponent.html":{},"coverage.html":{}}}],["src/app/game/component/element/element.component.ts:16",{"_index":869,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:18",{"_index":871,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:22",{"_index":872,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/component/element/element.component.ts:26",{"_index":873,"title":{},"body":{"components/ElementComponent.html":{}}}],["src/app/game/constant/animal.constant.ts",{"_index":1851,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/area.constant.ts",{"_index":1852,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element",{"_index":877,"title":{},"body":{"interfaces/ElementConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/element.constant.ts",{"_index":1854,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/game/constant/game",{"_index":1855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/image.constant.ts",{"_index":1857,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/piece.constant.ts",{"_index":1926,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/constant/pile",{"_index":1674,"title":{},"body":{"interfaces/PileConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/game/constant/pile.constant.ts",{"_index":1927,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/game/model/action",{"_index":87,"title":{},"body":{"interfaces/ActionDisplayServiceWithSetup.html":{},"interfaces/ActionPawnPiece.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts",{"_index":332,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"coverage.html":{}}}],["src/app/game/model/animal.model.ts:103",{"_index":353,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:107",{"_index":355,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:23",{"_index":473,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:24",{"_index":472,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:33",{"_index":477,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:43",{"_index":474,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:55",{"_index":475,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:67",{"_index":479,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:73",{"_index":481,"title":{},"body":{"classes/AnimalElements.html":{}}}],["src/app/game/model/animal.model.ts:79",{"_index":345,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:80",{"_index":344,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:81",{"_index":346,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:82",{"_index":341,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:91",{"_index":348,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:95",{"_index":349,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/animal.model.ts:99",{"_index":351,"title":{},"body":{"classes/Animal.html":{}}}],["src/app/game/model/element.model.ts",{"_index":947,"title":{},"body":{"interfaces/ElementPiece.html":{},"coverage.html":{}}}],["src/app/game/model/species.model.ts",{"_index":1802,"title":{},"body":{"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["src/app/game/service/action",{"_index":19,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"coverage.html":{}}}],["src/app/game/service/animal",{"_index":482,"title":{},"body":{"injectables/AnimalProviderService.html":{},"coverage.html":{}}}],["src/app/game/service/element",{"_index":908,"title":{},"body":{"injectables/ElementDrawPoolService.html":{},"coverage.html":{}}}],["src/app/game/service/game",{"_index":1078,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"coverage.html":{}}}],["standalone",{"_index":113,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["start",{"_index":864,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["startcase",{"_index":1091,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["startcase(assignedanimal",{"_index":1109,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["started",{"_index":1316,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["startgame",{"_index":814,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["starttransaction",{"_index":1266,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["state",{"_index":193,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{}}}],["state.constant",{"_index":1095,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["state.constant.ts",{"_index":1856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.model",{"_index":1097,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{}}}],["state.model.ts",{"_index":1473,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["state.model.ts:29",{"_index":1474,"title":{},"body":{"interfaces/InitialGameElementStatesFactory.html":{}}}],["state.owner",{"_index":1635,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["state.service",{"_index":649,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"components/DrawPoolGameComponent.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts",{"_index":652,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{},"injectables/PileStateService.html":{},"coverage.html":{}}}],["state.service.ts:10",{"_index":671,"title":{},"body":{"injectables/AreaStateService.html":{},"injectables/FactionStateService.html":{},"injectables/PileStateService.html":{}}}],["state.service.ts:15",{"_index":1064,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{}}}],["state.service.ts:16",{"_index":1057,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:22",{"_index":1065,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:23",{"_index":1062,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:24",{"_index":1063,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:26",{"_index":1059,"title":{},"body":{"injectables/GameElementStateService.html":{},"injectables/GameStateService.html":{}}}],["state.service.ts:30",{"_index":1294,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:34",{"_index":1273,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:37",{"_index":1058,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:41",{"_index":1060,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["state.service.ts:47",{"_index":1287,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:54",{"_index":1281,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:60",{"_index":1296,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:64",{"_index":1289,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:68",{"_index":1275,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:72",{"_index":1298,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:76",{"_index":1291,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:79",{"_index":1277,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:83",{"_index":1300,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:87",{"_index":1293,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state.service.ts:91",{"_index":1280,"title":{},"body":{"injectables/GameStateService.html":{}}}],["state/game",{"_index":832,"title":{},"body":{"components/DrawPoolGameComponent.html":{},"injectables/GameElementStateService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["statements",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1079,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{},"injectables/GameStateInitializationService.html":{},"coverage.html":{}}}],["statesubject",{"_index":574,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"classes/Pile.html":{},"classes/Space.html":{}}}],["static",{"_index":2041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage.constant",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.constant.ts",{"_index":1890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["storage.service",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage.service.ts",{"_index":1546,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1553,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:15",{"_index":1555,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:7",{"_index":1551,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store.service",{"_index":1301,"title":{},"body":{"injectables/GameStateService.html":{}}}],["store.service.ts",{"_index":1326,"title":{},"body":{"injectables/GameStateStoreService.html":{},"coverage.html":{}}}],["store.service.ts:106",{"_index":1421,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:110",{"_index":1423,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:118",{"_index":1391,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:123",{"_index":1409,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:131",{"_index":1416,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:139",{"_index":1392,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:148",{"_index":1405,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:158",{"_index":1424,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:162",{"_index":1406,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:166",{"_index":1395,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:170",{"_index":1425,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:174",{"_index":1407,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:178",{"_index":1396,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:182",{"_index":1426,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:186",{"_index":1410,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:190",{"_index":1397,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:39",{"_index":1418,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:40",{"_index":1419,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:41",{"_index":1389,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:47",{"_index":1394,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:63",{"_index":1412,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["store.service.ts:89",{"_index":1400,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["stores",{"_index":1404,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/Action.html":{},"components/ActionPawnComponent.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["styleurl",{"_index":117,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["subject",{"_index":1783,"title":{},"body":{"classes/Space.html":{}}}],["subscribe",{"_index":293,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"injectables/AnimalProviderService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStateStoreService.html":{}}}],["subscribe((allready",{"_index":83,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["subscribe((animal",{"_index":458,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["subscribers",{"_index":1459,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["subscription",{"_index":1973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["substatearray",{"_index":1437,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.findindex((item",{"_index":1440,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray.push(newgamestateelement",{"_index":1449,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["substatearray[index",{"_index":1443,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["success",{"_index":1581,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["such",{"_index":1339,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["sum",{"_index":1642,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["sun",{"_index":1920,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":602,"title":{},"body":{"classes/Area.html":{}}}],["super(areastatesvc",{"_index":651,"title":{},"body":{"injectables/AreaRegistryService.html":{}}}],["super(factionstatesvc",{"_index":993,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["super(pilestatesvc",{"_index":1693,"title":{},"body":{"injectables/PileRegistryService.html":{}}}],["super(state",{"_index":1634,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["super.register(elements",{"_index":994,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["system",{"_index":1250,"title":{},"body":{"injectables/GameStateService.html":{}}}],["t",{"_index":583,"title":{},"body":{"classes/Area.html":{},"classes/Faction.html":{},"classes/GameElement.html":{},"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":865,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["takeaction",{"_index":815,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["taken",{"_index":1372,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["takes",{"_index":1360,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["template",{"_index":101,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["templateurl",{"_index":115,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["tester2",{"_index":1533,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["tester3",{"_index":1534,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["tgameelement",{"_index":639,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{}}}],["tgameelementstatesvc",{"_index":1037,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["then((player",{"_index":1715,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this._action",{"_index":1796,"title":{},"body":{"classes/Space.html":{}}}],["this._drawpool",{"_index":939,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this._gamestate",{"_index":1452,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._gamestate.gameelements[key",{"_index":1448,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._piece",{"_index":1795,"title":{},"body":{"classes/Space.html":{}}}],["this._setgamestate(deepclone(this._gamestate",{"_index":1461,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(newstate",{"_index":1455,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._setgamestate(this._transactionstate",{"_index":1457,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._state",{"_index":1024,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.id",{"_index":1029,"title":{},"body":{"classes/GameElement.html":{}}}],["this._state.inventory[key",{"_index":1643,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[kind",{"_index":1654,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.inventory[piece.kind",{"_index":1662,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this._state.name",{"_index":983,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.ownerid",{"_index":984,"title":{},"body":{"classes/Faction.html":{}}}],["this._state.score",{"_index":985,"title":{},"body":{"classes/Faction.html":{}}}],["this._transactionstate",{"_index":1434,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this._transactionstate.gameelements",{"_index":1438,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.actiondisplaysetupmanager",{"_index":58,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actiondisplaysetupmanager.ready",{"_index":62,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actiondisplaysetupmanager.setup",{"_index":63,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionpawn?.name",{"_index":144,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawn?.owner",{"_index":143,"title":{},"body":{"components/ActionPawnComponent.html":{}}}],["this.actionpawnpile",{"_index":394,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.actionpawnpilelength.set(length",{"_index":463,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.actionpawns",{"_index":301,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawns.set(actionpawns",{"_index":232,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.actionpawnspaces",{"_index":297,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnspaces.map",{"_index":302,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.asobservable",{"_index":263,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionpawnssubject.next(this.actionpawns",{"_index":304,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.actionserviceswithsetup",{"_index":69,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionserviceswithsetup.foreach((service",{"_index":85,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.actionserviceswithsetup.map((service",{"_index":74,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.adaptionactiondisplayservice.actionpawns$.subscribe((actionpawns",{"_index":231,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.actionpawns.findindex",{"_index":857,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.addactionpawn(nextactionpawnspaceindex",{"_index":860,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.elements$.subscribe((elements",{"_index":233,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.elements.findindex",{"_index":859,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionactiondisplayservice.ready$.pipe(filter(istrue",{"_index":229,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{}}}],["this.adaptionactiondisplayservice.removeelement(nextelementspaceindex",{"_index":861,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.adaptionarea",{"_index":840,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.addedelementspaces.find",{"_index":379,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.addedelementspaces.map((space",{"_index":390,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalbyid.set(faction.id",{"_index":553,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalelements",{"_index":398,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.animalfactory(animalconfig",{"_index":554,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalproviderservice.animals",{"_index":452,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.animalproviderservice.get(ensuredefined(this.currentplayerfaction).id",{"_index":854,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.animalssubject.asobservable",{"_index":504,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.animalssubject.next(array.from(this.animalbyid.values",{"_index":555,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.applygsp(gsp",{"_index":1305,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.area",{"_index":294,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.area.spaces$.subscribe((spaces",{"_index":296,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.arearegistryservice.get(areaidenum.action_display_adaption",{"_index":295,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"components/DrawPoolGameComponent.html":{}}}],["this.arearegistryservice.registeredids",{"_index":837,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.arearegistrysvc.get(elementareaid",{"_index":550,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.arearegistrysvc.registeredids",{"_index":542,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.authservice.isloggedin$.pipe().subscribe((isloggedin",{"_index":1713,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.authservice.loggedinusername",{"_index":1156,"title":{},"body":{"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{}}}],["this.authservice.login(username",{"_index":1579,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.authservice.logout",{"_index":1597,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["this.buildanimal(faction",{"_index":532,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildanimals",{"_index":515,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.buildfactions(playerids",{"_index":1102,"title":{},"body":{"classes/GameElementStatesFactoryService.html":{}}}],["this.cognitoclient",{"_index":778,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclient.send(command",{"_index":790,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["this.cognitoclientservice.confirmsignup(username",{"_index":1772,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.cognitoclientservice.decodejwttoken(ensuredefined(authresult.idtoken",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.login(username",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cognitoclientservice.signup(username",{"_index":1771,"title":{},"body":{"injectables/SignUpService.html":{}}}],["this.currentplayer",{"_index":1716,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayer.set(player",{"_index":1523,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.currentplayerfaction",{"_index":848,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.currentplayersubject.asobservable",{"_index":1710,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.currentplayersubject.next(this.currentplayer",{"_index":1717,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.drawpool.length",{"_index":943,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.pullmany(count",{"_index":945,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.drawpool.put(pieces",{"_index":946,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.element?.kind",{"_index":874,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.element?.name",{"_index":875,"title":{},"body":{"components/ElementComponent.html":{}}}],["this.elementbyid.set(element.id",{"_index":1050,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.elementdrawpoolservice.pull(4).foreach((element",{"_index":319,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementdrawpoolservice.ready",{"_index":288,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements",{"_index":307,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.filter(isnotnull).length",{"_index":312,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elements.set(elements",{"_index":234,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{}}}],["this.elementspaces",{"_index":305,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementspaces.map((space",{"_index":308,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementssubject.asobservable",{"_index":270,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.allelements",{"_index":366,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.elementssubject.next(this.elements",{"_index":309,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.elementstate$.subscribe((entities",{"_index":1067,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.emitpilestate",{"_index":1657,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emitstate",{"_index":986,"title":{},"body":{"classes/Faction.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.emptyelementspaces.set(array(6",{"_index":460,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.errormessage.set('login",{"_index":1583,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.errormessage.set('sign",{"_index":1739,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.faction",{"_index":392,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction().id",{"_index":456,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction().ownerid",{"_index":430,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.faction.id",{"_index":401,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.faction.name",{"_index":402,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.factionassignment",{"_index":990,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignment.push",{"_index":996,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.asobservable",{"_index":991,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionassignmentsubject.next(this.factionassignment",{"_index":997,"title":{},"body":{"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{}}}],["this.factionregistryservice.factionassignment$.subscribe((factionassignments",{"_index":516,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistryservice.get(factionid",{"_index":531,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.factionregistrysvc.factionassignment$.subscribe((factionassignments",{"_index":843,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factionregistrysvc.get(factionassignment.id",{"_index":847,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions",{"_index":846,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factions.find",{"_index":849,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.factorybygametitle.get(gametitle",{"_index":1216,"title":{},"body":{"injectables/GameStateInitializationService.html":{}}}],["this.fetchgames",{"_index":1524,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.formbuilder.group",{"_index":1574,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.gameelementstatesvc.register(elements",{"_index":1056,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.gamemanagementclientservice",{"_index":1714,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.completegame(gameid",{"_index":1193,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.creategame",{"_index":1185,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.findplayers(username",{"_index":1719,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.getgamesforloggedinplayer",{"_index":1192,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.getlatestgamestate(gameid",{"_index":1194,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementclientservice.setfriends(ensuredefined(this.currentplayer",{"_index":1723,"title":{},"body":{"injectables/PlayerService.html":{}}}],["this.gamemanagementclientservice.setinitialgamestate(initialgamestate",{"_index":1190,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemanagementsvc.creategame",{"_index":841,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.games.set(await",{"_index":1530,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.completegame(gameid",{"_index":1535,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.creategame(['tester1",{"_index":1532,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.getgamesforloggedinplayer",{"_index":1531,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gameservice.getstate(gameid",{"_index":1538,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.gamestarted",{"_index":852,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestateclient.gsp$.pipe(filter((gsp",{"_index":1303,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateclient.sendgsptobackend(gsp",{"_index":1313,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestateinitializationservice.build",{"_index":1188,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamestatestore.area",{"_index":1317,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.committransaction",{"_index":1312,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.faction",{"_index":1320,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.gamestate",{"_index":1311,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.pile",{"_index":1323,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerarea(newstate",{"_index":1319,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerfaction(newstate",{"_index":1322,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.registerpile(newstate",{"_index":1325,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.rollbacktransaction",{"_index":1314,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setarea(newstate",{"_index":1318,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setfaction(newstate",{"_index":1321,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setgamestate(this.gspservice.apply(this.gamestatestore.gamestate",{"_index":1306,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.setpile(newstate",{"_index":1324,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.starttransaction",{"_index":1307,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatestore.transactionstate",{"_index":1308,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.gamestatesubject",{"_index":1428,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.asobservable().pipe",{"_index":1430,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesubject.next(this.gamestate",{"_index":1453,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.gamestatesvc.area",{"_index":672,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.committransaction",{"_index":863,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.gamestatesvc.faction",{"_index":1005,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.pile",{"_index":1695,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.registerarea(area.state",{"_index":673,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.registerfaction(faction.state",{"_index":1006,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.registerpile(pile.state",{"_index":1696,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.setarea(state",{"_index":674,"title":{},"body":{"injectables/AreaStateService.html":{}}}],["this.gamestatesvc.setfaction(state",{"_index":1007,"title":{},"body":{"injectables/FactionStateService.html":{}}}],["this.gamestatesvc.setpile(state",{"_index":1697,"title":{},"body":{"injectables/PileStateService.html":{}}}],["this.gamestatesvc.starttransaction",{"_index":853,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.getactionpawnforheader",{"_index":426,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getanimal",{"_index":451,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.getentity(elementstate.id",{"_index":1070,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.getobservableforkey((gamestate",{"_index":1463,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.getplayer(this.authservice.loggedinusername",{"_index":1163,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.gspservice.create",{"_index":1310,"title":{},"body":{"injectables/GameStateService.html":{}}}],["this.http.get('/game",{"_index":1154,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.http.get('/player",{"_index":1164,"title":{},"body":{"injectables/GameManagementClientService.html":{}}}],["this.id",{"_index":615,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{}}}],["this.initialize",{"_index":70,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameElementStateService.html":{}}}],["this.isloggedin",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.asobservable",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(false",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isloggedinsubject.next(true",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.kind",{"_index":876,"title":{},"body":{"components/ElementComponent.html":{},"classes/Space.html":{}}}],["this.length",{"_index":1639,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject",{"_index":1637,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.asobservable().pipe(distinctuntilchanged",{"_index":1640,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.lengthsubject.next(this.length",{"_index":1644,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.localstorageservice.deletedstoragekey(localstoragekey.player_auth_data",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.getstoragekey(localstoragekey.player_auth_data",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.setstoragekey",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginform",{"_index":1573,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.valid",{"_index":1577,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.loginform.value",{"_index":1578,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.owner",{"_index":145,"title":{},"body":{"components/ActionPawnComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piececounts.get(key",{"_index":1645,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.piecefactory",{"_index":1636,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.length",{"_index":1663,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.pullmany(count",{"_index":1664,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pile.put(pieces",{"_index":1665,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.pileregistryservice.get(actionpawnpileid",{"_index":549,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistryservice.get(speciespileid",{"_index":552,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pileregistrysvc.get(pileidenum.element",{"_index":940,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.pileregistrysvc.registeredids",{"_index":936,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.playerauthdata",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playerauthdata.username",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.playerservice.currentplayer$.subscribe((player",{"_index":1522,"title":{},"body":{"components/LobbyPageComponent.html":{}}}],["this.playerservice.currentplayer.id",{"_index":851,"title":{},"body":{"components/DrawPoolGameComponent.html":{}}}],["this.processedfactionids",{"_index":529,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["this.pullmany(1)[0",{"_index":1658,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["this.ready",{"_index":61,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.asobservable",{"_index":67,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(allready",{"_index":84,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"classes/ActionDisplaySetupManager.html":{}}}],["this.readysubject.next(this.ready",{"_index":941,"title":{},"body":{"injectables/ElementDrawPoolService.html":{}}}],["this.readysubject.next(true",{"_index":310,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.registeredelementsubject.asobservable",{"_index":646,"title":{},"body":{"injectables/AreaRegistryService.html":{},"injectables/FactionRegistryService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/PileRegistryService.html":{}}}],["this.registeredelementsubject.next(this.registeredids",{"_index":1055,"title":{},"body":{"injectables/GameElementRegistryService.html":{}}}],["this.registeredids.add(element.id",{"_index":1051,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(element.id",{"_index":1049,"title":{},"body":{"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{}}}],["this.registeredids.has(elementstate.id",{"_index":1069,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registerentitystate(element",{"_index":1073,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.registertransactionstateelement('area",{"_index":1466,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('faction",{"_index":1469,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.registertransactionstateelement('pile",{"_index":1472,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.replenish",{"_index":311,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{}}}],["this.router.navigate(['/lobby",{"_index":1582,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1598,"title":{},"body":{"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.router.navigate(['/sign",{"_index":1752,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.setentitystate(state",{"_index":1075,"title":{},"body":{"injectables/GameElementStateService.html":{}}}],["this.settransactionstateelement('area",{"_index":1465,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('faction",{"_index":1468,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.settransactionstateelement('pile",{"_index":1471,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["this.signupconfirmform",{"_index":1734,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.valid",{"_index":1735,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupconfirmform.value",{"_index":1736,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupform",{"_index":1744,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.valid",{"_index":1749,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupform.value",{"_index":1750,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.signupservice.confirmsignup(username",{"_index":1737,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{}}}],["this.signupservice.signup(username",{"_index":1751,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["this.spaces",{"_index":603,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.foreach((space",{"_index":608,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces.length",{"_index":618,"title":{},"body":{"classes/Area.html":{}}}],["this.spaces[index].setstate(spacestate",{"_index":623,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject",{"_index":604,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.asobservable",{"_index":606,"title":{},"body":{"classes/Area.html":{}}}],["this.spacessubject.next(this.spaces",{"_index":612,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate",{"_index":607,"title":{},"body":{"classes/Area.html":{}}}],["this.spacestate[index",{"_index":610,"title":{},"body":{"classes/Area.html":{}}}],["this.speciespile",{"_index":396,"title":{},"body":{"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{}}}],["this.speciespilelength.set(length",{"_index":465,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["this.state",{"_index":1027,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject",{"_index":1025,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject.asobservable",{"_index":1028,"title":{},"body":{"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.statesubject.next(this.state",{"_index":611,"title":{},"body":{"classes/Area.html":{},"classes/GameElement.html":{},"classes/Space.html":{}}}],["this.transactionstate",{"_index":1446,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["those",{"_index":1347,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["throw",{"_index":314,"title":{},"body":{"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"classes/Area.html":{},"injectables/AuthService.html":{},"injectables/ElementDrawPoolService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"injectables/PlayerService.html":{},"classes/Space.html":{},"miscellaneous/functions.html":{}}}],["throwing",{"_index":1984,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":1974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["times",{"_index":520,"title":{},"body":{"injectables/AnimalProviderService.html":{}}}],["title",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["title.constant",{"_index":1184,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameStateInitializationService.html":{}}}],["title.constant.ts",{"_index":1888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["todo",{"_index":447,"title":{},"body":{"components/AnimalCardComponent.html":{}}}],["token",{"_index":762,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["top",{"_index":1342,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["total",{"_index":1631,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["track",{"_index":235,"title":{},"body":{"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/LobbyPageComponent.html":{}}}],["transaction",{"_index":1282,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["transactionstate",{"_index":1388,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["tree",{"_index":103,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["true",{"_index":114,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":788,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["tsc",{"_index":1647,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["tslib",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1374,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["two",{"_index":1356,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/Action.html":{},"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"interfaces/ActionPawnPiece.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"interfaces/ElementConfig.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"components/ElementSpaceComponent.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"interfaces/PileConfig.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2011,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1439,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["types/src/auth",{"_index":777,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["types/src/game",{"_index":192,"title":{},"body":{"interfaces/ActionPawnPiece.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/ElementDrawPoolService.html":{},"interfaces/ElementPiece.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"classes/GameElementStatesFactoryService.html":{},"injectables/GameManagementClientService.html":{},"injectables/GameService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStatePatchService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"components/LobbyPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"classes/Space.html":{},"interfaces/SpeciesPiece.html":{}}}],["types/src/player",{"_index":1152,"title":{},"body":{"injectables/GameManagementClientService.html":{},"components/LobbyPageComponent.html":{},"injectables/PlayerService.html":{}}}],["typically",{"_index":1367,"title":{},"body":{"injectables/GameStateStoreService.html":{},"miscellaneous/functions.html":{}}}],["unchanged",{"_index":1978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["undefined",{"_index":125,"title":{},"body":{"components/ActionPawnComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"injectables/AuthService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"injectables/GameStatePatchService.html":{},"injectables/PlayerService.html":{},"miscellaneous/functions.html":{}}}],["undefined)).subscribe((gsp",{"_index":1304,"title":{},"body":{"injectables/GameStateService.html":{}}}],["unknown",{"_index":1649,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PlayerService.html":{}}}],["up",{"_index":180,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"coverage.html":{}}}],["up.service",{"_index":1732,"title":{},"body":{"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["up.service.ts",{"_index":1767,"title":{},"body":{"injectables/SignUpService.html":{},"coverage.html":{}}}],["up.service.ts:10",{"_index":1770,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:14",{"_index":1769,"title":{},"body":{"injectables/SignUpService.html":{}}}],["up.service.ts:7",{"_index":1768,"title":{},"body":{"injectables/SignUpService.html":{}}}],["update",{"_index":1413,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updated",{"_index":1352,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["updateon",{"_index":1747,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["updates",{"_index":1285,"title":{},"body":{"injectables/GameStateService.html":{}}}],["updating",{"_index":1436,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["url.interceptor.ts",{"_index":1819,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":1613,"title":{},"body":{"classes/Pile.html":{},"classes/PileAdapter.html":{}}}],["used",{"_index":1368,"title":{},"body":{"injectables/GameStateStoreService.html":{},"interfaces/InitialGameElementStatesFactory.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/InitialGameElementStatesFactory.html":{}}}],["user_password_auth",{"_index":782,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["userattributes",{"_index":796,"title":{},"body":{"injectables/CognitoClientService.html":{}}}],["username",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"injectables/GameManagementClientService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/PlayerAuthData.html":{},"injectables/PlayerService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"injectables/SignUpService.html":{}}}],["using",{"_index":1336,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["util/misc",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/PlayerService.html":{}}}],["v",{"_index":1992,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":1761,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["validateplayerauthdata",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateplayerauthdata(playerauthdata",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["validators",{"_index":1565,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.email",{"_index":1745,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.minlength(6",{"_index":1746,"title":{},"body":{"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["validators.required",{"_index":1575,"title":{},"body":{"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{}}}],["value",{"_index":94,"title":{},"body":{"classes/ActionDisplaySetupManager.html":{},"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"components/AnimalCardComponent.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"components/AppComponent.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"injectables/ElementDrawPoolService.html":{},"components/ElementSpaceComponent.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateInitializationService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"injectables/PlayerService.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1366,"title":{},"body":{"injectables/GameStateStoreService.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":151,"title":{},"body":{"components/ActionPawnComponent.html":{},"components/ActionPawnSpaceComponent.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"components/AnimalCardComponent.html":{},"components/AppComponent.html":{},"components/DrawPoolGameComponent.html":{},"components/ElementComponent.html":{},"components/ElementSpaceComponent.html":{},"components/EyeballComponent.html":{},"components/LobbyPageComponent.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"components/SignUpConfirmPageComponent.html":{},"components/SignUpPageComponent.html":{}}}],["variable",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2013,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1253,"title":{},"body":{"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{}}}],["version",{"_index":2009,"title":{},"body":{"properties.html":{}}}],["via",{"_index":1358,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["void",{"_index":38,"title":{},"body":{"injectables/ActionDisplayManagerService.html":{},"interfaces/ActionDisplayServiceWithSetup.html":{},"classes/ActionDisplaySetupManager.html":{},"components/AdaptionActionDisplayCardComponent.html":{},"injectables/AdaptionActionDisplayService.html":{},"classes/Animal.html":{},"components/AnimalCardComponent.html":{},"interfaces/AnimalConfig.html":{},"classes/AnimalElements.html":{},"injectables/AnimalProviderService.html":{},"classes/Area.html":{},"injectables/AreaRegistryService.html":{},"injectables/AreaStateService.html":{},"injectables/AuthService.html":{},"injectables/CognitoClientService.html":{},"components/DrawPoolGameComponent.html":{},"injectables/ElementDrawPoolService.html":{},"classes/Faction.html":{},"interfaces/FactionAssignment.html":{},"injectables/FactionRegistryService.html":{},"injectables/FactionStateService.html":{},"classes/GameElement.html":{},"injectables/GameElementRegistryService.html":{},"injectables/GameElementStateService.html":{},"injectables/GameStateClientService.html":{},"injectables/GameStateService.html":{},"injectables/GameStateStoreService.html":{},"components/LobbyPageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginFormData.html":{},"components/LoginPageComponent.html":{},"components/LogoutPageComponent.html":{},"classes/Pile.html":{},"classes/PileAdapter.html":{},"injectables/PileRegistryService.html":{},"injectables/PileStateService.html":{},"interfaces/SignUpConfirmFormData.html":{},"components/SignUpConfirmPageComponent.html":{},"interfaces/SignUpFormData.html":{},"components/SignUpPageComponent.html":{},"classes/Space.html":{},"miscellaneous/variables.html":{}}}],["vpa",{"_index":1755,"title":{},"body":{"components/SignUpPageComponent.html":{}}}],["water",{"_index":1921,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ways",{"_index":1357,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whenever",{"_index":1351,"title":{},"body":{"injectables/GameStateStoreService.html":{}}}],["whose",{"_index":1987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["withfetch",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([apiurlinterceptor",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":1599,"title":{},"body":{"components/LogoutPageComponent.html":{}}}],["yes",{"_index":592,"title":{},"body":{"classes/Area.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/action.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Action {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActionDisplayManagerService.html":{"url":"injectables/ActionDisplayManagerService.html","title":"injectable - ActionDisplayManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActionDisplayManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionDisplaySetupManager\n                            \n                            \n                                ready$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionDisplaySetupManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionDisplayServiceWithSetup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\nimport { ActionDisplayServiceWithSetup } from '../../model/action-display.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private actionDisplaySetupManager: ActionDisplayServiceWithSetup;\n  ready$: Observable;\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.actionDisplaySetupManager = new ActionDisplaySetupManager([adaptionActionDisplayService]);\n    this.ready$ = this.actionDisplaySetupManager.ready$;\n  }\n\n  setup(): void {\n    this.actionDisplaySetupManager.setup();\n  }\n}\n\nexport class ActionDisplaySetupManager {\n  private actionServicesWithSetup: ActionDisplayServiceWithSetup[];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[]) {\n    this.actionServicesWithSetup = actionServicesWithSetup;\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const readyObs = this.actionServicesWithSetup.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n\n  setup(): void {\n    this.actionServicesWithSetup.forEach((service) => {\n      service.setup();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionDisplayServiceWithSetup.html":{"url":"interfaces/ActionDisplayServiceWithSetup.html","title":"interface - ActionDisplayServiceWithSetup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionDisplayServiceWithSetup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-display.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ready$\n                                        \n                                \n                                \n                                        \n                                            setup\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ready$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ready$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setup:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface ActionDisplayServiceWithSetup {\n  ready$: Observable;\n  setup: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionDisplaySetupManager.html":{"url":"classes/ActionDisplaySetupManager.html","title":"class - ActionDisplaySetupManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionDisplaySetupManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/action-display-manager.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionServicesWithSetup\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[])\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actionServicesWithSetup\n                                                  \n                                                        \n                                                                    ActionDisplayServiceWithSetup[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionServicesWithSetup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActionDisplayServiceWithSetup[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/action-display-manager.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/action-display-manager.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AdaptionActionDisplayService } from './adaption-action-display.service';\nimport { BehaviorSubject, combineLatest, filter, first, map, Observable } from 'rxjs';\nimport { ActionDisplayServiceWithSetup } from '../../model/action-display.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionDisplayManagerService {\n  private actionDisplaySetupManager: ActionDisplayServiceWithSetup;\n  ready$: Observable;\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {\n    this.actionDisplaySetupManager = new ActionDisplaySetupManager([adaptionActionDisplayService]);\n    this.ready$ = this.actionDisplaySetupManager.ready$;\n  }\n\n  setup(): void {\n    this.actionDisplaySetupManager.setup();\n  }\n}\n\nexport class ActionDisplaySetupManager {\n  private actionServicesWithSetup: ActionDisplayServiceWithSetup[];\n  private readySubject: BehaviorSubject = new BehaviorSubject(false);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(actionServicesWithSetup: ActionDisplayServiceWithSetup[]) {\n    this.actionServicesWithSetup = actionServicesWithSetup;\n    this.initialize();\n  }\n\n  private initialize(): void {\n    const readyObs = this.actionServicesWithSetup.map((service) => service.ready$);\n    combineLatest(readyObs)\n      .pipe(\n        map((serviceReady: boolean[]) => serviceReady.every((ready) => ready)),\n        filter((serviceReady) => serviceReady),\n        first(),\n      )\n      .subscribe((allReady) => {\n        this.readySubject.next(allReady);\n      });\n  }\n\n  setup(): void {\n    this.actionServicesWithSetup.forEach((service) => {\n      service.setup();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnComponent.html":{"url":"components/ActionPawnComponent.html","title":"component - ActionPawnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-pawn/action-pawn.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./action-pawn.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    owner\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        owner\n                    \n                \n\n                \n                    \n                        getowner()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:17\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-pawn/action-pawn.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-action-pawn',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './action-pawn.component.html',\n  styleUrl: './action-pawn.component.scss',\n})\nexport class ActionPawnComponent {\n  @Input() actionPawn: ActionPawnPiece | undefined = undefined;\n\n  get owner(): string | null | undefined {\n    return this.actionPawn?.owner;\n  }\n\n  get name(): string | undefined {\n    return this.actionPawn?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.owner) {\n      return getOrThrow(imgPathByKind, this.owner);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionPawnPiece.html":{"url":"interfaces/ActionPawnPiece.html","title":"interface - ActionPawnPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActionPawnPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/action-pawn.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ActionPawnPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionPawnSpaceComponent.html":{"url":"components/ActionPawnSpaceComponent.html","title":"component - ActionPawnSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionPawnSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-pawn-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                                ActionPawnComponent\n                                EyeballComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./action-pawn-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./action-pawn-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n                \n                    \n                        Type :     ActionPawnPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ActionPawnPiece } from '../../../../model/action-pawn.model';\nimport { ElementComponent } from '../../../element/element.component';\nimport { ActionPawnComponent } from '../../../action-pawn/action-pawn.component';\nimport { EyeballComponent } from '../eyeball/eyeball.component';\n\n@Component({\n  selector: 'app-action-pawn-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent, ActionPawnComponent, EyeballComponent],\n  templateUrl: './action-pawn-space.component.html',\n  styleUrl: './action-pawn-space.component.scss',\n})\nexport class ActionPawnSpaceComponent {\n  @Input() actionPawn: ActionPawnPiece | null = null;\n}\n\n    \n\n    \n        \n  \n    @if (actionPawn) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (actionPawn) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionPawnSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdaptionActionDisplayCardComponent.html":{"url":"components/AdaptionActionDisplayCardComponent.html","title":"component - AdaptionActionDisplayCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdaptionActionDisplayCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-adaption-action-display-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                                ElementSpaceComponent\n                                EyeballComponent\n                                ActionPawnSpaceComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./adaption-action-display-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./adaption-action-display-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                elements\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit, signal } from '@angular/core';\nimport { MatCard } from '@angular/material/card';\nimport { ElementSpaceComponent } from '../space/element-space/element-space.component';\nimport { EyeballComponent } from '../space/eyeball/eyeball.component';\nimport { ActionPawnSpaceComponent } from '../space/action-pawn-space/action-pawn-space.component';\nimport { ElementPiece } from '../../../model/element.model';\nimport { ActionPawnPiece } from '../../../model/action-pawn.model';\nimport { AdaptionActionDisplayService } from '../../../service/action-display/adaption-action-display.service';\nimport { filter, first } from 'rxjs';\nimport { isTrue } from '../../../../engine/util/predicate';\n\n@Component({\n  selector: 'app-adaption-action-display-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatCard, ElementSpaceComponent, EyeballComponent, ActionPawnSpaceComponent],\n  templateUrl: './adaption-action-display-card.component.html',\n  styleUrl: './adaption-action-display-card.component.scss',\n})\nexport class AdaptionActionDisplayCardComponent implements OnInit {\n  actionPawns = signal([]);\n  elements = signal([]);\n\n  constructor(private adaptionActionDisplayService: AdaptionActionDisplayService) {}\n\n  ngOnInit() {\n    this.adaptionActionDisplayService.ready$.pipe(filter(isTrue), first()).subscribe(() => {\n      this.adaptionActionDisplayService.actionPawns$.subscribe((actionPawns) => {\n        this.actionPawns.set(actionPawns);\n      });\n      this.adaptionActionDisplayService.elements$.subscribe((elements) => {\n        this.elements.set(elements);\n      });\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Adaption\n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n      \n      \n        @for (actionPawn of actionPawns(); track $index) {\n          \n        }\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Adaption                  @for (element of elements(); track $index) {                  }                    @for (actionPawn of actionPawns(); track $index) {                  }            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdaptionActionDisplayCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdaptionActionDisplayService.html":{"url":"injectables/AdaptionActionDisplayService.html","title":"injectable - AdaptionActionDisplayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdaptionActionDisplayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/action-display/adaption-action-display.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawns\n                            \n                            \n                                actionPawns$\n                            \n                            \n                                actionPawnSpaces\n                            \n                            \n                                    Private\n                                actionPawnsSubject\n                            \n                            \n                                area\n                            \n                            \n                                elements\n                            \n                            \n                                elements$\n                            \n                            \n                                elementSpaces\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActionPawn\n                            \n                            \n                                initialize\n                            \n                            \n                                removeActionPawn\n                            \n                            \n                                removeElement\n                            \n                            \n                                removeRemainingElements\n                            \n                            \n                                replenish\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistryService: AreaRegistryService, elementDrawPoolService: ElementDrawPoolService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementDrawPoolService\n                                                  \n                                                        \n                                                                        ElementDrawPoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addActionPawn\n                        \n                    \n                \n            \n            \n                \naddActionPawn(index: number, actionPawn: ActionPawnPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actionPawn\n                                            \n                                                            ActionPawnPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeActionPawn\n                        \n                    \n                \n            \n            \n                \nremoveActionPawn(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ElementPiece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRemainingElements\n                        \n                    \n                \n            \n            \n                \nremoveRemainingElements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ElementPiece[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replenish\n                        \n                    \n                \n            \n            \n                \nreplenish()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/action-display/adaption-action-display.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     (ActionPawnPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawns$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.actionPawnsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        actionPawnsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.actionPawns)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        area\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         (ElementPiece | null)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.elements)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/action-display/adaption-action-display.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { ElementDrawPoolService } from '../element-draw-pool.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { ElementPiece } from '../../model/element.model';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaIdEnum, SpaceKindEnum } from '../../constant/area.constant';\nimport { ensureDefined } from '../../../engine/util/misc';\nimport { Space } from '../../../engine/model/space.model';\nimport { isNotNull } from '../../../engine/util/predicate';\nimport { Piece } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdaptionActionDisplayService {\n  area: Area | undefined = undefined;\n  actionPawnSpaces: Space[] = [];\n  actionPawns: (ActionPawnPiece | null)[] = [];\n  private actionPawnsSubject = new BehaviorSubject(this.actionPawns);\n  actionPawns$ = this.actionPawnsSubject.asObservable();\n  elementSpaces: Space[] = [];\n  elements: (ElementPiece | null)[] = [];\n  private elementsSubject = new BehaviorSubject(this.elements);\n  elements$ = this.elementsSubject.asObservable();\n  private readySubject = new BehaviorSubject(false);\n  ready$ = this.readySubject.asObservable();\n\n  constructor(\n    private areaRegistryService: AreaRegistryService,\n    private elementDrawPoolService: ElementDrawPoolService,\n  ) {\n    this.initialize();\n  }\n\n  initialize() {\n    this.elementDrawPoolService.ready$\n      .pipe(\n        combineLatestWith(this.areaRegistryService.registeredIds$),\n        filter(\n          ([isReady, registeredAreaIds]) =>\n            isReady && registeredAreaIds.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        this.area = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n\n        this.area.spaces$.subscribe((spaces) => {\n          this.actionPawnSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ACTION_PAWN,\n          );\n          this.actionPawns = this.actionPawnSpaces.map(\n            (space) => space.piece,\n          ) as (ActionPawnPiece | null)[];\n          this.actionPawnsSubject.next(this.actionPawns);\n\n          this.elementSpaces = spaces.filter(\n            (space) => (space.kind as SpaceKindEnum) === SpaceKindEnum.ELEMENT,\n          );\n          this.elements = this.elementSpaces.map((space) => space.piece) as (ElementPiece | null)[];\n          this.elementsSubject.next(this.elements);\n          this.readySubject.next(true);\n        });\n      });\n  }\n\n  setup(): void {\n    this.replenish();\n  }\n\n  replenish(): void {\n    if (this.elements.filter(isNotNull).length > 0) {\n      throw new Error('Element spaces must be cleared before replenish');\n    }\n\n    this.elementDrawPoolService.pull(4).forEach((element) => {\n      const nextSpace = ensureDefined(this.area).nextAvailableSpace(SpaceKindEnum.ELEMENT);\n      if (nextSpace) {\n        nextSpace.addPiece(element as Piece);\n      } else {\n        throw new Error('No Spaces available');\n      }\n    });\n    this.elementsSubject.next(this.elements);\n  }\n\n  removeElement(index: number): ElementPiece {\n    return ensureDefined(this.elementSpaces)[index].removePiece() as ElementPiece;\n  }\n\n  removeRemainingElements(): ElementPiece[] {\n    return ensureDefined(this.elementSpaces)\n      .filter((space) => space.piece)\n      .map((space) => space.removePiece() as ElementPiece);\n  }\n\n  addActionPawn(index: number, actionPawn: ActionPawnPiece): void {\n    ensureDefined(this.actionPawnSpaces)[index].addPiece(actionPawn);\n  }\n\n  removeActionPawn(index: number): ActionPawnPiece {\n    return ensureDefined(this.actionPawnSpaces)[index].removePiece() as ActionPawnPiece;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                actionPawnPile\n                            \n                            \n                                    Private\n                                    Readonly\n                                animalElements\n                            \n                            \n                                    Private\n                                    Readonly\n                                faction\n                            \n                            \n                                    Private\n                                    Readonly\n                                speciesPile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    name\n                                \n                                \n                                    actionPawn\n                                \n                                \n                                    elements\n                                \n                                \n                                    species\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AnimalConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        AnimalConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        actionPawnPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimalElements\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        faction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        speciesPile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PileAdapter\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:81\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:91\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:95\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        actionPawn\n                    \n                \n\n                \n                    \n                        getactionPawn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:99\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        elements\n                    \n                \n\n                \n                    \n                        getelements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:103\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        species\n                    \n                \n\n                \n                    \n                        getspecies()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:107\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimalCardComponent.html":{"url":"components/AnimalCardComponent.html","title":"component - AnimalCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnimalCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/animal-card/animal-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animal-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCard\n                            MatCardTitle\n                                ActionPawnComponent\n                            MatGridList\n                            MatGridTile\n                                ElementComponent\n                            NgClass\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animal-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animal-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionPawnForHeader\n                            \n                            \n                                actionPawnPileLength\n                            \n                            \n                                currentPlayerAnimal\n                            \n                            \n                                elements\n                            \n                            \n                                emptyElementSpaces\n                            \n                            \n                                faction\n                            \n                            \n                                speciesPileLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getActionPawnForHeader\n                            \n                            \n                                    Private\n                                getAnimal\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                faction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(animalProviderService: AnimalProviderService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        faction\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getActionPawnForHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActionPawnForHeader()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ActionPawnPiece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAnimal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/animal-card/animal-card.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnForHeader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.getActionPawnForHeader())\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        actionPawnPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emptyElementSpaces\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faction\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speciesPileLength\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/animal-card/animal-card.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, computed, input, OnInit, signal } from '@angular/core';\nimport { MatCard, MatCardTitle } from '@angular/material/card';\nimport { defaultPieceFactory } from '../../../engine/model/piece.model';\nimport { PieceKindEnum } from '../../constant/piece.constant';\nimport { ActionPawnPiece } from '../../model/action-pawn.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { MatGridList, MatGridTile } from '@angular/material/grid-list';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { filter, first, map } from 'rxjs';\nimport { ElementPiece } from '../../model/element.model';\nimport { ElementComponent } from '../element/element.component';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { isNotUndefined } from '../../../engine/util/predicate';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { NgClass } from '@angular/common';\nimport { ensureDefined } from '../../../engine/util/misc';\n\n// Todo: change to OnPush\n@Component({\n  selector: 'app-animal-card',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    MatCard,\n    MatCardTitle,\n    ActionPawnComponent,\n    MatGridList,\n    MatGridTile,\n    ElementComponent,\n    NgClass,\n  ],\n  templateUrl: './animal-card.component.html',\n  styleUrl: './animal-card.component.scss',\n})\nexport class AnimalCardComponent implements OnInit {\n  faction = input.required();\n  elements = signal([]);\n  emptyElementSpaces = signal([]);\n  actionPawnPileLength = signal(0);\n  speciesPileLength = signal(0);\n  actionPawnForHeader = computed(() => this.getActionPawnForHeader());\n  currentPlayerAnimal = computed(\n    () => this.faction().ownerId === ensureDefined(this.playerService.currentPlayer).username,\n  );\n\n  constructor(\n    private animalProviderService: AnimalProviderService,\n    private playerService: PlayerService,\n  ) {}\n\n  ngOnInit() {\n    this.getAnimal();\n  }\n\n  private getAnimal(): void {\n    this.animalProviderService.animals$\n      .pipe(\n        map((animals) => animals.find((animal) => animal.id === this.faction().id)),\n        filter(isNotUndefined),\n        first(),\n      )\n      .subscribe((animal) => {\n        animal.elements.elements$.subscribe((elements) => {\n          this.elements.set(elements);\n          this.emptyElementSpaces.set(Array(6 - elements.length).fill(null) as null[]);\n        });\n        animal.actionPawn.length$.subscribe((length) => {\n          this.actionPawnPileLength.set(length);\n        });\n        animal.species.length$.subscribe((length) => {\n          this.speciesPileLength.set(length);\n        });\n      });\n  }\n\n  private getActionPawnForHeader(): ActionPawnPiece {\n    return defaultPieceFactory(PieceKindEnum.ACTION_PAWN, this.faction().id) as ActionPawnPiece;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        {{\n          faction().name\n        }}\n      \n    \n    \n      \n        @for (element of elements(); track $index) {\n          \n        }\n        @for (emptyElementSpace of emptyElementSpaces(); track $index) {\n          \n        }\n      \n    \n    \n      \n        Action Pawns\n      \n      Species\n      \n        {{ actionPawnPileLength() }}\n      \n      {{ speciesPileLength() }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{          faction().name        }}                            @for (element of elements(); track $index) {                  }        @for (emptyElementSpace of emptyElementSpaces(); track $index) {                  }                            Action Pawns            Species              {{ actionPawnPileLength() }}            {{ speciesPileLength() }}            '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimalCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnimalConfig.html":{"url":"interfaces/AnimalConfig.html","title":"interface - AnimalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnimalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawnPile\n                                        \n                                \n                                \n                                        \n                                            elementArea\n                                        \n                                \n                                \n                                        \n                                            elementConfig\n                                        \n                                \n                                \n                                        \n                                            faction\n                                        \n                                \n                                \n                                        \n                                            speciesPile\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawnPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawnPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementArea\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementArea:         Area\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Area\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elementConfig:         ElementConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        faction:         Faction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Faction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speciesPile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        speciesPile:         Pile\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pile\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalElements.html":{"url":"classes/AnimalElements.html","title":"class - AnimalElements","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalElements\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/animal.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elements$\n                            \n                            \n                                    Private\n                                elementsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElement\n                            \n                            \n                                removeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addedElementSpaces\n                                \n                                \n                                    allElements\n                                \n                                \n                                    addedElements\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementArea: Area, elementConfig: ElementConfig)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/model/animal.model.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementArea\n                                                  \n                                                        \n                                                                        Area\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementConfig\n                                                  \n                                                        \n                                                                        ElementConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        elements$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.elementsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/model/animal.model.ts:23\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addElement\n                        \n                    \n                \n            \n            \n                \naddElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeElement\n                        \n                    \n                \n            \n            \n                \nremoveElement(element: ElementPiece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/model/animal.model.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                            ElementPiece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        addedElementSpaces\n                    \n                \n\n                \n                    \n                        getaddedElementSpaces()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allElements\n                    \n                \n\n                \n                    \n                        getallElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        addedElements\n                    \n                \n\n                \n                    \n                        getaddedElements()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/model/animal.model.ts:73\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Faction } from '../../engine/model/faction.model';\nimport { Pile, PileAdapter } from '../../engine/model/pile.model';\nimport { ElementConfig } from '../constant/element-config.constant';\nimport { Area } from '../../engine/model/area.model';\nimport { ensureDefined } from '../../engine/util/misc';\nimport { ActionPawnPiece } from './action-pawn.model';\nimport { SpeciesPiece } from './species.model';\nimport { Space } from '../../engine/model/space.model';\nimport { ElementPiece } from './element.model';\nimport { isNotNull } from '../../engine/util/predicate';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface AnimalConfig {\n  faction: Faction;\n  actionPawnPile: Pile;\n  elementArea: Area;\n  elementConfig: ElementConfig;\n  speciesPile: Pile;\n}\n\nexport class AnimalElements {\n  private elementsSubject = new BehaviorSubject([]);\n  elements$ = this.elementsSubject.asObservable();\n\n  constructor(\n    private elementArea: Area,\n    private elementConfig: ElementConfig,\n  ) {\n    this.elementsSubject.next(this.allElements);\n  }\n\n  private get addedElementSpaces(): Space[] {\n    const elementSpaces = ensureDefined(this.elementArea).spaces;\n    const elementConfig = ensureDefined(this.elementConfig);\n    if (elementSpaces.length > elementConfig.inherentCount) {\n      return elementSpaces.slice(elementConfig.inherentCount);\n    } else {\n      return [];\n    }\n  }\n\n  addElement(element: ElementPiece): void {\n    const availableSpace = ensureDefined(this.elementArea).nextAvailableSpace(\n      SpaceKindEnum.ELEMENT,\n    );\n    if (availableSpace) {\n      availableSpace.addPiece(element);\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error('No available element spaces');\n    }\n  }\n\n  removeElement(element: ElementPiece): void {\n    const elementSpace = this.addedElementSpaces.find(\n      (space) => space.piece && space.piece.kind === element.kind,\n    );\n    if (elementSpace) {\n      elementSpace.removePiece();\n      this.elementsSubject.next(this.allElements);\n    } else {\n      throw new Error(`Animal does not have added element ${JSON.stringify(element)}`);\n    }\n  }\n\n  get allElements(): ElementPiece[] {\n    return ensureDefined(this.elementArea)\n      .spaces.filter((space) => space.piece)\n      .map((space) => space.piece) as ElementPiece[];\n  }\n\n  get addedElements(): ElementPiece[] {\n    return this.addedElementSpaces.map((space) => space.piece as ElementPiece).filter(isNotNull);\n  }\n}\n\nexport class Animal {\n  private readonly faction: Faction;\n  private readonly actionPawnPile: PileAdapter;\n  private readonly speciesPile: PileAdapter;\n  private readonly animalElements: AnimalElements;\n\n  constructor(config: AnimalConfig) {\n    this.faction = config.faction;\n    this.actionPawnPile = new PileAdapter(config.actionPawnPile);\n    this.speciesPile = new PileAdapter(config.speciesPile);\n    this.animalElements = new AnimalElements(config.elementArea, config.elementConfig);\n  }\n\n  get id(): string {\n    return this.faction.id;\n  }\n\n  get name(): string {\n    return this.faction.name;\n  }\n\n  get actionPawn(): PileAdapter {\n    return this.actionPawnPile;\n  }\n\n  get elements(): AnimalElements {\n    return this.animalElements;\n  }\n\n  get species(): PileAdapter {\n    return this.speciesPile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalProviderService.html":{"url":"injectables/AnimalProviderService.html","title":"injectable - AnimalProviderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnimalProviderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/animal-provider.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animalById\n                            \n                            \n                                animals$\n                            \n                            \n                                    Private\n                                animalsSubject\n                            \n                            \n                                    Private\n                                processedFactionIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animalFactory\n                            \n                            \n                                    Private\n                                buildAnimal\n                            \n                            \n                                    Private\n                                buildAnimals\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaRegistrySvc: AreaRegistryService, factionRegistryService: FactionRegistryService, pileRegistryService: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaRegistrySvc\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistryService\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pileRegistryService\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalFactory\n                        \n                    \n                \n            \n            \n                \n                        \n                    animalFactory(animalConfig: AnimalConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animalConfig\n                                            \n                                                            AnimalConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimal\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimal(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildAnimals\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildAnimals()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/animal-provider.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Animal\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animalById\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animals$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.animalsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        animalsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processedFactionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/animal-provider.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../engine/model/faction.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { BehaviorSubject, combineLatestWith, filter, first } from 'rxjs';\nimport { AreaRegistryService } from '../../engine/service/game-element/area-registry.service';\nimport { FactionRegistryService } from '../../engine/service/game-element/faction-registry.service';\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { getOrThrow, setDifference } from '../../engine/util/misc';\nimport { Animal, AnimalConfig } from '../model/animal.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimalProviderService {\n  private processedFactionIds: Set = new Set();\n  private readonly animalById = new Map();\n  private animalsSubject = new BehaviorSubject([]);\n  animals$ = this.animalsSubject.asObservable();\n\n  constructor(\n    private areaRegistrySvc: AreaRegistryService,\n    private factionRegistryService: FactionRegistryService,\n    private pileRegistryService: PileRegistryService,\n  ) {\n    this.buildAnimals();\n  }\n  private buildAnimals(): void {\n    this.factionRegistryService.factionAssignment$.subscribe((factionAssignments) => {\n      // To minimize any building an animal several times, we add the animal id to processedFactionIds as quickly as possible /\n      const factionIds = new Set(\n        factionAssignments.map((factionAssignment) => factionAssignment.id),\n      );\n      const factionIdsToProcess = setDifference(factionIds, this.processedFactionIds);\n      this.processedFactionIds = new Set([\n        ...factionIdsToProcess,\n        ...this.processedFactionIds,\n      ]);\n      factionIdsToProcess.forEach((factionId) => {\n        const faction = this.factionRegistryService.get(factionId);\n        this.buildAnimal(faction);\n      });\n    });\n  }\n\n  private animalFactory(animalConfig: AnimalConfig): Animal {\n    return new Animal(animalConfig);\n  }\n\n  private buildAnimal(faction: Faction): void {\n    const elementAreaId = getOrThrow(elementConfigByAnimal, faction.id).areaId;\n    const actionPawnPileId = getOrThrow(pileIdsByAnimal, faction.id).actionPawn;\n    const speciesPileId = getOrThrow(pileIdsByAnimal, faction.id).species;\n    this.areaRegistrySvc.registeredIds$\n      .pipe(\n        combineLatestWith(this.pileRegistryService.registeredIds$),\n        filter(\n          ([areaIds, pileIds]) =>\n            areaIds.has(elementAreaId) &&\n            pileIds.has(actionPawnPileId) &&\n            pileIds.has(speciesPileId),\n        ),\n        first(),\n      )\n      .subscribe(() => {\n        const animalConfig: AnimalConfig = {\n          faction: faction,\n          actionPawnPile: this.pileRegistryService.get(actionPawnPileId),\n          elementArea: this.areaRegistrySvc.get(elementAreaId),\n          elementConfig: getOrThrow(elementConfigByAnimal, faction.id),\n          speciesPile: this.pileRegistryService.get(speciesPileId),\n        };\n        this.animalById.set(faction.id, this.animalFactory(animalConfig));\n        this.animalsSubject.next(Array.from(this.animalById.values()));\n      });\n  }\n\n  get(id: string): Animal {\n    return getOrThrow(this.animalById, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                DrawPoolGameComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'dominant-species'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DrawPoolGameComponent } from './game/component/draw-pool-game/draw-pool-game.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DrawPoolGameComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'dominant-species';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Area.html":{"url":"classes/Area.html","title":"class - Area","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Area\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/area.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                spaces\n                            \n                            \n                                spaces$\n                            \n                            \n                                    Private\n                                spacesSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                spaceState\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                nextAvailableSpace\n                            \n                            \n                                    \n                                setState\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, spaces: Space[])\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/area.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spaces\n                                                  \n                                                        \n                                                                        Space[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        spaces\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Space[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spaces$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spacesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        spaceState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpaceState[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/area.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextAvailableSpace\n                        \n                    \n                \n            \n            \n                \nnextAvailableSpace(kind?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/area.model.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Space | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setState(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Space } from './space.model';\nimport { GameElement } from './game-element.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AreaState, SpaceState } from 'api-types/src/game-state';\n\nexport class Area extends GameElement {\n  readonly spaces: Space[];\n  private spacesSubject: BehaviorSubject;\n  spaces$: Observable;\n  private readonly spaceState: SpaceState[];\n\n  constructor(id: string, spaces: Space[]) {\n    const spaceState = spaces.map((space) => space.state);\n    super({ id: id, space: spaceState });\n    this.spaces = spaces;\n    this.spacesSubject = new BehaviorSubject(this.spaces);\n    this.spaces$ = this.spacesSubject.asObservable();\n    this.spaceState = spaceState;\n    this.initialize();\n  }\n\n  private initialize() {\n    this.spaces.forEach((space, index) => {\n      space.state$.subscribe((spaceState) => {\n        this.spaceState[index] = spaceState;\n        this.stateSubject.next(this.state);\n        this.spacesSubject.next(this.spaces);\n      });\n    });\n  }\n\n  override setState(newState: AreaState) {\n    if (newState.id != this.id) {\n      throw new Error('State does not match area id');\n    }\n\n    if (this.spaces.length != newState.space.length) {\n      throw new Error('Number of spaces in the new state does not match current state');\n    }\n\n    newState.space.forEach((spaceState, index) => {\n      this.spaces[index].setState(spaceState);\n    });\n\n    this.spacesSubject.next(this.spaces);\n  }\n\n  nextAvailableSpace(kind?: string): Space | null {\n    const availableSpaces = this.spaces\n      .filter((space) => !kind || space.kind === kind)\n      .filter((space) => space.piece === null);\n\n    return availableSpaces.length > 0 ? availableSpaces[0] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaRegistryService.html":{"url":"injectables/AreaRegistryService.html","title":"injectable - AreaRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(areaStateSvc: AreaStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/area-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        areaStateSvc\n                                                  \n                                                        \n                                                                        AreaStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { AreaStateService } from './area-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaRegistryService extends GameElementRegistryService {\n  constructor(protected areaStateSvc: AreaStateService) {\n    super(areaStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AreaStateService.html":{"url":"injectables/AreaStateService.html","title":"injectable - AreaStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AreaStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/area-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(area: Area)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                area\n                                            \n                                                            Area\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: AreaState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/area-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Area } from '../../model/area.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { AreaState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AreaStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.area$;\n  }\n\n  protected registerEntityState(area: Area) {\n    this.gameStateSvc.registerArea(area.state);\n  }\n\n  protected setEntityState(state: AreaState) {\n    this.gameStateSvc.setArea(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isLoggedIn$\n                            \n                            \n                                    Private\n                                    Readonly\n                                isLoggedInSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authResultToPlayerAuth\n                            \n                            \n                                checkIsLoggedIn\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                validatePlayerAuthData\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerAuthData\n                                \n                                \n                                    loggedInUsername\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authResultToPlayerAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    authResultToPlayerAuth(authResult: AuthenticationResultType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authResult\n                                            \n                                                        AuthenticationResultType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PlayerAuthData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIsLoggedIn\n                        \n                    \n                \n            \n            \n                \ncheckIsLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validatePlayerAuthData\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePlayerAuthData(playerAuthData: PlayerAuthData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerAuthData\n                                            \n                                                            PlayerAuthData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        isLoggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/auth.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerAuthData\n                    \n                \n\n                \n                    \n                        getplayerAuthData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:57\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loggedInUsername\n                    \n                \n\n                \n                    \n                        getloggedInUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/auth/auth.service.ts:66\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\nimport { LocalStorageService } from '../local-storage.service';\nimport { AuthenticationResultType } from '@aws-sdk/client-cognito-identity-provider';\nimport { PlayerAuthData } from '../../model/player.model';\nimport { ensureDefined } from '../../util/misc';\nimport { LocalStorageKey } from '../../constant/local-storage.constant';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private readonly isLoggedInSubject: BehaviorSubject;\n  readonly isLoggedIn$: Observable;\n\n  constructor(\n    private cognitoClientService: CognitoClientService,\n    private localStorageService: LocalStorageService,\n  ) {\n    this.isLoggedInSubject = new BehaviorSubject(this.checkIsLoggedIn());\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n  }\n\n  private authResultToPlayerAuth(authResult: AuthenticationResultType): PlayerAuthData {\n    const jwt = this.cognitoClientService.decodeJwtToken(ensureDefined(authResult.IdToken));\n    return {\n      username: ensureDefined(jwt['cognito:username']),\n      accessToken: ensureDefined(authResult.IdToken),\n      accessTokenExpire: ensureDefined(jwt.exp),\n      refreshToken: ensureDefined(authResult.RefreshToken),\n    };\n  }\n\n  async login(username: string, password: string): Promise {\n    const authResult = await this.cognitoClientService.login(username, password);\n    console.log(authResult);\n    if (authResult) {\n      this.localStorageService.setStorageKey(\n        LocalStorageKey.PLAYER_AUTH_DATA,\n        JSON.stringify(this.authResultToPlayerAuth(authResult)),\n      );\n      this.isLoggedInSubject.next(true);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout(): void {\n    if (this.playerAuthData) {\n      this.localStorageService.deletedStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    }\n    this.isLoggedInSubject.next(false);\n  }\n\n  get playerAuthData(): PlayerAuthData | undefined {\n    const playerAuthData = this.localStorageService.getStorageKey(LocalStorageKey.PLAYER_AUTH_DATA);\n    if (playerAuthData) {\n      return JSON.parse(playerAuthData) as PlayerAuthData;\n    } else {\n      return undefined;\n    }\n  }\n\n  get loggedInUsername(): string {\n    if (this.playerAuthData) {\n      return this.playerAuthData.username;\n    } else {\n      throw new Error('No user logged in');\n    }\n  }\n\n  private validatePlayerAuthData(playerAuthData: PlayerAuthData): boolean {\n    return Date.now() \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CognitoClientService.html":{"url":"injectables/CognitoClientService.html","title":"injectable - CognitoClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CognitoClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/cognito-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cognitoClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                decodeJwtToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeJwtToken\n                        \n                    \n                \n            \n            \n                \ndecodeJwtToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     CognitoIdTokenJwt\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/cognito-client.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cognitoClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CognitoIdentityProviderClient\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/auth/cognito-client.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AuthenticationResultType,\n  CognitoIdentityProviderClient,\n  ConfirmSignUpCommand,\n  InitiateAuthCommand,\n  InitiateAuthCommandInput,\n  SignUpCommand,\n} from '@aws-sdk/client-cognito-identity-provider';\nimport { environment } from '../../../../environments/environment';\nimport { jwtDecode } from 'jwt-decode';\nimport { CognitoIdTokenJwt } from 'api-types/src/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CognitoClientService {\n  private cognitoClient: CognitoIdentityProviderClient;\n\n  constructor() {\n    this.cognitoClient = new CognitoIdentityProviderClient({\n      region: environment.cognito.region,\n    });\n  }\n\n  async login(username: string, password: string): Promise {\n    const input = {\n      AuthFlow: 'USER_PASSWORD_AUTH',\n      ClientId: environment.cognito.clientId,\n      AuthParameters: {\n        USERNAME: username,\n        PASSWORD: password,\n      },\n    } as InitiateAuthCommandInput;\n    const command = new InitiateAuthCommand(input);\n    try {\n      const { AuthenticationResult } = await this.cognitoClient.send(command);\n      if (AuthenticationResult) {\n        return AuthenticationResult;\n      } else {\n        console.error('Unexpected AuthenticationResult');\n        return null;\n      }\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  decodeJwtToken(token: string): CognitoIdTokenJwt {\n    return jwtDecode(token);\n  }\n\n  async signUp(username: string, email: string, password: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: [\n        {\n          Name: 'email',\n          Value: email,\n        },\n      ],\n    };\n    try {\n      const command = new SignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    const input = {\n      ClientId: environment.cognito.clientId,\n      Username: username,\n      ConfirmationCode: code,\n    };\n    try {\n      const command = new ConfirmSignUpCommand(input);\n      void (await this.cognitoClient.send(command));\n      return true;\n    } catch (error) {\n      console.error('Error confirming sign up: ', error);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DrawPoolGameComponent.html":{"url":"components/DrawPoolGameComponent.html","title":"component - DrawPoolGameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DrawPoolGameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-draw-pool-game\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatTooltip\n                                ElementComponent\n                                ActionPawnComponent\n                                AnimalCardComponent\n                                EyeballComponent\n                                ElementSpaceComponent\n                                AdaptionActionDisplayCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./draw-pool-game.component.html\n            \n\n\n\n            \n                styleUrl\n                ./draw-pool-game.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adaptionArea\n                            \n                            \n                                currentPlayerFaction\n                            \n                            \n                                factions\n                            \n                            \n                                gameStarted\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                startGame\n                            \n                            \n                                takeAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService, factionRegistrySvc: FactionRegistryService, playerService: PlayerService, areaRegistryService: AreaRegistryService, animalProviderService: AnimalProviderService, adaptionActionDisplayService: AdaptionActionDisplayService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        factionRegistrySvc\n                                                  \n                                                        \n                                                                        FactionRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        areaRegistryService\n                                                  \n                                                        \n                                                                        AreaRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animalProviderService\n                                                  \n                                                        \n                                                                        AnimalProviderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adaptionActionDisplayService\n                                                  \n                                                        \n                                                                        AdaptionActionDisplayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startGame\n                        \n                    \n                \n            \n            \n                \nstartGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        takeAction\n                        \n                    \n                \n            \n            \n                \ntakeAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adaptionArea\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Area | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerFaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Faction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/component/draw-pool-game/draw-pool-game.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n// import { GameManagementService } from '../../../engine/service/game-management.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatTooltip } from '@angular/material/tooltip';\nimport { GameStateService } from '../../../engine/service/game-state/game-state.service';\nimport { filter, first } from 'rxjs';\nimport { FactionRegistryService } from '../../../engine/service/game-element/faction-registry.service';\nimport { ElementComponent } from '../element/element.component';\nimport { Faction } from '../../../engine/model/faction.model';\nimport { ActionPawnComponent } from '../action-pawn/action-pawn.component';\nimport { AnimalCardComponent } from '../animal-card/animal-card.component';\nimport { PlayerService } from '../../../engine/service/game-management/player.service';\nimport { EyeballComponent } from '../action-display/space/eyeball/eyeball.component';\nimport { ElementSpaceComponent } from '../action-display/space/element-space/element-space.component';\nimport { AdaptionActionDisplayCardComponent } from '../action-display/adaption-action-display-card/adaption-action-display-card.component';\nimport { AreaRegistryService } from '../../../engine/service/game-element/area-registry.service';\nimport { Area } from '../../../engine/model/area.model';\nimport { AreaIdEnum } from '../../constant/area.constant';\nimport { AnimalProviderService } from '../../service/animal-provider.service';\nimport { AdaptionActionDisplayService } from '../../service/action-display/adaption-action-display.service';\n\n@Component({\n  selector: 'app-draw-pool-game',\n  standalone: true,\n  imports: [\n    MatButton,\n    MatTooltip,\n    ElementComponent,\n    ActionPawnComponent,\n    AnimalCardComponent,\n    EyeballComponent,\n    ElementSpaceComponent,\n    AdaptionActionDisplayCardComponent,\n  ],\n  templateUrl: './draw-pool-game.component.html',\n  styleUrl: './draw-pool-game.component.scss',\n})\nexport class DrawPoolGameComponent {\n  gameStarted = false;\n  currentPlayerFaction: Faction | undefined = undefined;\n  factions: Faction[] = [];\n  adaptionArea: Area | undefined = undefined;\n  log: string[] = [];\n\n  constructor(\n    // private gameManagementSvc: GameManagementService,\n    private gameStateSvc: GameStateService,\n    private factionRegistrySvc: FactionRegistryService,\n    private playerService: PlayerService,\n    private areaRegistryService: AreaRegistryService,\n    private animalProviderService: AnimalProviderService,\n    private adaptionActionDisplayService: AdaptionActionDisplayService,\n  ) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.areaRegistryService.registeredIds$\n      .pipe(\n        filter((ids) => ids.has(AreaIdEnum.ACTION_DISPLAY_ADAPTION)),\n        first(),\n      )\n      .subscribe(() => {\n        this.adaptionArea = this.areaRegistryService.get(AreaIdEnum.ACTION_DISPLAY_ADAPTION);\n      });\n  }\n\n  startGame(): void {\n    // this.gameManagementSvc.createGame();\n    // console.log('Create Game');\n    // this.factionRegistrySvc.factionAssignment$.subscribe((factionAssignments) => {\n    //   const factionAssignment = factionAssignments[0];\n    //   this.factions = [this.factionRegistrySvc.get(factionAssignment.id)];\n    //\n    //   this.factions = factionAssignments.map((factionAssignment) =>\n    //     this.factionRegistrySvc.get(factionAssignment.id),\n    //   );\n    //   this.currentPlayerFaction = this.factions.find(\n    //     (faction) => faction.ownerId === this.playerService.currentPlayer.id,\n    //   );\n    // });\n    // this.gameStarted = true;\n  }\n\n  takeAction(): void {\n    // this.gameStateSvc.startTransaction();\n    // const animal = this.animalProviderService.get(ensureDefined(this.currentPlayerFaction).id);\n    // const actionPawn = animal.actionPawn.pullOne();\n    // if (actionPawn) {\n    //   const nextActionPawnSpaceIndex = this.adaptionActionDisplayService.actionPawns.findIndex(\n    //     (value) => value === null,\n    //   );\n    //   const nextElementSpaceIndex = this.adaptionActionDisplayService.elements.findIndex(\n    //     (value) => value !== null,\n    //   );\n    //   this.adaptionActionDisplayService.addActionPawn(nextActionPawnSpaceIndex, actionPawn);\n    //   const element = this.adaptionActionDisplayService.removeElement(nextElementSpaceIndex);\n    //   animal.elements.addElement(element);\n    // }\n    // this.gameStateSvc.commitTransaction();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Start Game\n      Take Action\n    \n    @if (gameStarted) {\n      \n        \n        \n          @for (faction of factions; track faction.id) {\n            \n          }\n        \n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Start Game      Take Action        @if (gameStarted) {                                @for (faction of factions; track faction.id) {                      }                  }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DrawPoolGameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementComponent.html":{"url":"components/ElementComponent.html","title":"component - ElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/element/element.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./element.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    kind\n                                \n                                \n                                    name\n                                \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         ElementPiece | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/element/element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        kind\n                    \n                \n\n                \n                    \n                        getkind()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/element/element.component.ts:26\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../model/element.model';\n\nimport { imgPathByKind } from '../../constant/image.constant';\nimport { getOrThrow } from '../../../engine/util/misc';\n\n@Component({\n  selector: 'app-element',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [],\n  templateUrl: './element.component.html',\n  styleUrl: './element.component.scss',\n})\nexport class ElementComponent {\n  @Input() element: ElementPiece | undefined = undefined;\n\n  get kind(): string | undefined {\n    return this.element?.kind;\n  }\n\n  get name(): string | undefined {\n    return this.element?.name;\n  }\n\n  get imgPath(): string | undefined {\n    if (this.kind) {\n      return getOrThrow(imgPathByKind, this.kind);\n    } else {\n      return undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementConfig.html":{"url":"interfaces/ElementConfig.html","title":"interface - ElementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/element-config.constant.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            areaId\n                                        \n                                \n                                \n                                        \n                                            inherentCount\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        areaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        areaId:         AreaId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AreaId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inherentCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inherentCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementEnum, ElementKind } from './element.constant';\nimport { AreaId, AreaIdEnum } from './area.constant';\nimport { AnimalEnum } from './animal.constant';\n\nexport interface ElementConfig {\n  kind: ElementKind;\n  inherentCount: number;\n  areaId: AreaId;\n}\n\nexport const elementConfigByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElementDrawPoolService.html":{"url":"injectables/ElementDrawPoolService.html","title":"injectable - ElementDrawPoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ElementDrawPoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/element-draw-pool.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _drawPool\n                            \n                            \n                                    Private\n                                ready\n                            \n                            \n                                ready$\n                            \n                            \n                                    Private\n                                readySubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                pull\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    drawPool\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileRegistrySvc: PileRegistryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileRegistrySvc\n                                                  \n                                                        \n                                                                        PileRegistryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pull\n                        \n                    \n                \n            \n            \n                \npull(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: ElementPiece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/element-draw-pool.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                            ElementPiece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _drawPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pile | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ready\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.readySubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        readySubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.ready)\n                    \n                \n                    \n                        \n                                Defined in src/app/game/service/element-draw-pool.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        drawPool\n                    \n                \n\n                \n                    \n                        getdrawPool()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/service/element-draw-pool.service.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../engine/model/pile.model';\nimport { BehaviorSubject, filter, first, Observable, of } from 'rxjs';\n\nimport { PileRegistryService } from '../../engine/service/game-element/pile-registry.service';\nimport { PileIdEnum } from '../constant/pile.constant';\nimport { ElementPiece } from '../model/element.model';\n\nimport { Piece } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElementDrawPoolService {\n  private _drawPool: Pile | undefined = undefined;\n  private ready = false;\n  private readySubject: BehaviorSubject = new BehaviorSubject(this.ready);\n  ready$: Observable = this.readySubject.asObservable();\n\n  constructor(private pileRegistrySvc: PileRegistryService) {\n    this.initialize();\n  }\n\n  private initialize(): void {\n    this.pileRegistrySvc.registeredIds$\n      .pipe(\n        filter((registeredIds) => registeredIds.has(PileIdEnum.ELEMENT)),\n        first(),\n      )\n      .subscribe(() => {\n        this._drawPool = this.pileRegistrySvc.get(PileIdEnum.ELEMENT);\n        this.ready = true;\n        this.readySubject.next(this.ready);\n      });\n  }\n\n  private get drawPool(): Pile {\n    if (this._drawPool) {\n      return this._drawPool;\n    } else {\n      throw new Error('Pile not ready');\n    }\n  }\n\n  get length$(): Observable {\n    if (this._drawPool) {\n      return this.drawPool.length$;\n    } else {\n      return of(0);\n    }\n  }\n\n  pull(count = 1): (ElementPiece | null)[] {\n    return this.drawPool.pullMany(count) as ElementPiece[];\n  }\n\n  put(pieces: ElementPiece[]): void {\n    this.drawPool.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ElementPiece.html":{"url":"interfaces/ElementPiece.html","title":"interface - ElementPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ElementPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/element.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         ElementKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ElementKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ElementKind } from '../constant/element.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface ElementPiece extends Piece {\n  kind: ElementKind;\n  owner: null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ElementSpaceComponent.html":{"url":"components/ElementSpaceComponent.html","title":"component - ElementSpaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ElementSpaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/element-space/element-space.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-element-space\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                ElementComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./element-space.component.html\n            \n\n\n\n            \n                styleUrl\n                ./element-space.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                element\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n                \n                    \n                        Type :         ElementPiece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/element-space/element-space.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ElementPiece } from '../../../../model/element.model';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\nimport { ElementComponent } from '../../../element/element.component';\n\n@Component({\n  selector: 'app-element-space',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ElementComponent],\n  templateUrl: './element-space.component.html',\n  styleUrl: './element-space.component.scss',\n})\nexport class ElementSpaceComponent {\n  @Input() element: ElementPiece | null = null;\n\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'elementSpace');\n  }\n}\n\n    \n\n    \n        \n  \n    @if (element) {\n      \n    } @else {\n      \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      @if (element) {          } @else {          }  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ElementSpaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EyeballComponent.html":{"url":"components/EyeballComponent.html","title":"component - EyeballComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EyeballComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-eyeball\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./eyeball.component.html\n            \n\n\n\n            \n                styleUrl\n                ./eyeball.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    imgPath\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        imgPath\n                    \n                \n\n                \n                    \n                        getimgPath()\n                    \n                \n                            \n                                \n                                    Defined in src/app/game/component/action-display/space/eyeball/eyeball.component.ts:14\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { getOrThrow } from '../../../../../engine/util/misc';\nimport { imgPathByKind } from '../../../../constant/image.constant';\n\n@Component({\n  selector: 'app-eyeball',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [],\n  templateUrl: './eyeball.component.html',\n  styleUrl: './eyeball.component.scss',\n})\nexport class EyeballComponent {\n  get imgPath(): string {\n    return getOrThrow(imgPathByKind, 'eyeball');\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EyeballComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Faction.html":{"url":"classes/Faction.html","title":"class - Faction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Faction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/faction.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decreaseScore\n                            \n                            \n                                increaseScore\n                            \n                            \n                                setScore\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    ownerId\n                                \n                                \n                                    score\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decreaseScore\n                        \n                    \n                \n            \n            \n                \ndecreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        increaseScore\n                        \n                    \n                \n            \n            \n                \nincreaseScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScore\n                        \n                    \n                \n            \n            \n                \nsetScore(amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/faction.model.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:28\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:5\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ownerId\n                    \n                \n\n                \n                    \n                        getownerId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:9\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        score\n                    \n                \n\n                \n                    \n                        getscore()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/faction.model.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { GameElement } from './game-element.model';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport class Faction extends GameElement {\n  get name(): string {\n    return this._state.name;\n  }\n\n  get ownerId(): string {\n    return this._state.ownerId;\n  }\n\n  get score(): number {\n    return this._state.score;\n  }\n\n  increaseScore(amount: number): void {\n    this._state.score += amount;\n    this.emitState();\n  }\n\n  decreaseScore(amount: number): void {\n    this._state.score -= amount;\n    this.emitState();\n  }\n\n  setScore(amount: number): void {\n    this._state.score = amount;\n    this.emitState();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FactionAssignment.html":{"url":"interfaces/FactionAssignment.html","title":"interface - FactionAssignment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FactionAssignment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionRegistryService.html":{"url":"injectables/FactionRegistryService.html","title":"injectable - FactionRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factionAssignment\n                            \n                            \n                                factionAssignment$\n                            \n                            \n                                    Private\n                                factionAssignmentSubject\n                            \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                register\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(factionStateSvc: FactionStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        factionStateSvc\n                                                  \n                                                        \n                                                                        FactionStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(elements: Faction[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:31\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                            Faction[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FactionAssignment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        factionAssignment$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.factionAssignmentSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factionAssignmentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.factionAssignment,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/faction-registry.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { FactionStateService } from './faction-state.service';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactionState } from 'api-types/src/game-state';\n\nexport interface FactionAssignment {\n  id: string;\n  ownerId: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionRegistryService extends GameElementRegistryService {\n  private factionAssignment: FactionAssignment[] = [];\n  private factionAssignmentSubject = new BehaviorSubject(\n    this.factionAssignment,\n  );\n  factionAssignment$: Observable =\n    this.factionAssignmentSubject.asObservable();\n  constructor(protected factionStateSvc: FactionStateService) {\n    super(factionStateSvc);\n  }\n\n  override register(elements: Faction[]): void {\n    super.register(elements);\n    elements.forEach((faction) => {\n      this.factionAssignment.push({\n        id: faction.id,\n        ownerId: faction.ownerId,\n      });\n    });\n    this.factionAssignmentSubject.next(this.factionAssignment);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FactionStateService.html":{"url":"injectables/FactionStateService.html","title":"injectable - FactionStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FactionStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/faction-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(faction: Faction)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                faction\n                                            \n                                                            Faction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: FactionState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/faction-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Faction } from '../../model/faction.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { FactionState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactionStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.faction$;\n  }\n\n  protected registerEntityState(faction: Faction) {\n    this.gameStateSvc.registerFaction(faction.state);\n  }\n\n  protected setEntityState(state: FactionState) {\n    this.gameStateSvc.setFaction(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElement.html":{"url":"classes/GameElement.html","title":"class - GameElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-element.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                                \n                                    state\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/game-element.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-element.model.ts:28\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/game-element.model.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, Observable } from 'rxjs';\nimport { deepClone } from 'fast-json-patch';\nimport { GameElementState } from 'api-types/src/game-state';\n\nexport class GameElement {\n  protected _state: T;\n  protected stateSubject: BehaviorSubject;\n  state$: Observable;\n\n  constructor(state: T) {\n    this._state = state;\n    this.stateSubject = new BehaviorSubject(this.state);\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get id(): string {\n    return this._state.id;\n  }\n\n  get state(): T {\n    return deepClone(this._state) as T;\n  }\n\n  /**\n   * Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n   * @param newState\n   */\n  setState(newState: T) {\n    if (newState.id === this.id) {\n      this._state = newState;\n    } else {\n      throw new Error(\"new id doesn't match existing it\");\n    }\n  }\n\n  protected emitState(): void {\n    this.stateSubject.next(this.state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementRegistryService.html":{"url":"injectables/GameElementRegistryService.html","title":"injectable - GameElementRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-registry.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameElementStateSvc: TgameElementStateSvc)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameElementStateSvc\n                                                  \n                                                        \n                                                                    TgameElementStateSvc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-registry.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-registry.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GameElementStateService } from './game-element-state.service';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementRegistryService,\n  TgameElementStateSvc extends GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n  private registeredElementSubject = new BehaviorSubject>(new Set());\n  registeredIds$: Observable> = this.registeredElementSubject.asObservable();\n\n  constructor(protected gameElementStateSvc: TgameElementStateSvc) {}\n\n  get(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(elements: TgameElement[]): void {\n    elements.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.elementById.set(element.id, element);\n        this.registeredIds.add(element.id);\n      } else {\n        throw new Error(`Element with id ${element.id} already registered.`);\n      }\n    });\n    this.registeredElementSubject.next(this.registeredIds);\n    this.gameElementStateSvc.register(elements);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameElementStateService.html":{"url":"injectables/GameElementStateService.html","title":"injectable - GameElementStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameElementStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/game-element-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                    Abstract\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                    Abstract\n                                setEntityState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateSvc: GameStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateSvc\n                                                  \n                                                        \n                                                                        GameStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(element: TgameElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        TgameElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-element/game-element-state.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-element/game-element-state.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/game-element-state.service.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateService } from '../game-state/game-state.service';\nimport { Observable, skip } from 'rxjs';\nimport { GameElement } from '../../model/game-element.model';\nimport { getOrThrow } from '../../util/misc';\nimport { GameElementState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class GameElementStateService,\n> {\n  private registeredIds: Set = new Set();\n  private elementById: Map = new Map();\n\n  constructor(protected gameStateSvc: GameStateService) {\n    this.initialize();\n  }\n\n  protected abstract get elementState$(): Observable;\n  protected abstract registerEntityState(element: TgameElement): void;\n  protected abstract setEntityState(state: GameElementState): void;\n\n  private initialize(): void {\n    this.elementState$.subscribe((entities) => {\n      entities.forEach((elementState) => {\n        if (this.registeredIds.has(elementState.id)) {\n          const element: TgameElement = this.getEntity(elementState.id);\n          element.setState(elementState);\n        }\n      });\n    });\n  }\n\n  private getEntity(id: string): TgameElement {\n    return getOrThrow(this.elementById, id);\n  }\n\n  register(entities: TgameElement[]): void {\n    entities.forEach((element) => {\n      if (!this.registeredIds.has(element.id)) {\n        this.registeredIds.add(element.id);\n        this.elementById.set(element.id, element);\n        this.registerEntityState(element);\n        element.state$.pipe(skip(1)).subscribe((state) => {\n          this.setEntityState(state);\n        });\n      } else {\n        throw new Error(`Entity for id ${element.id} already registered.`);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameElementStatesFactoryService.html":{"url":"classes/GameElementStatesFactoryService.html","title":"class - GameElementStatesFactoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameElementStatesFactoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/service/game-element-states-factory.service.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            InitialGameElementStatesFactory\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                            \n                                    Private\n                                buildFactions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameElementStates\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildFactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildFactions(playerIds: string[], gameElementStates: GameElementStates)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/game/service/game-element-states-factory.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameElementStates\n                                            \n                                                            GameElementStates\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameElementStates\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { GameElementStates, SpaceState } from 'api-types/src/game-state';\nimport { shuffle, startCase } from 'lodash';\nimport { AnimalEnum } from '../constant/animal.constant';\nimport { getOrThrow } from '../../engine/util/misc';\nimport { elementConfigByAnimal } from '../constant/element-config.constant';\nimport { baseGameElementStates } from '../constant/game-state.constant';\nimport { deepClone } from 'fast-json-patch';\nimport { Space } from '../../engine/model/space.model';\nimport { SpaceKindEnum } from '../constant/area.constant';\nimport { defaultPieceFactory } from '../../engine/model/piece.model';\nimport { pileIdsByAnimal } from '../constant/pile-config';\nimport { PieceKindEnum } from '../constant/piece.constant';\nimport { InitialGameElementStatesFactory } from '../../engine/model/game-state.model';\n\n// Not injectable as it's built on-demand by GameStateInitializationService\nexport class GameElementStatesFactoryService implements InitialGameElementStatesFactory {\n  build(playerIds: string[]): GameElementStates {\n    const gameElementStates = deepClone(baseGameElementStates) as GameElementStates;\n    return this.buildFactions(playerIds, gameElementStates);\n  }\n\n  private buildFactions(\n    playerIds: string[],\n    gameElementStates: GameElementStates,\n  ): GameElementStates {\n    const shuffledAnimals = shuffle(Object.values(AnimalEnum));\n    playerIds.forEach((playerId: string, index) => {\n      const assignedAnimal = shuffledAnimals[index];\n      const elementConfig = getOrThrow(elementConfigByAnimal, assignedAnimal);\n\n      gameElementStates.faction.push({\n        id: assignedAnimal,\n        name: startCase(assignedAnimal),\n        ownerId: playerId,\n        score: 0,\n      });\n\n      // AnimalCard Spaces\n      const elementSpacesState: SpaceState[] = [];\n      // inherent element spaces\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameManagementClientService.html":{"url":"injectables/GameManagementClientService.html","title":"injectable - GameManagementClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameManagementClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game-management-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                getLatestGameState\n                            \n                            \n                                    Async\n                                getLoggedInPlayer\n                            \n                            \n                                    Async\n                                getPlayer\n                            \n                            \n                                    Async\n                                setFriends\n                            \n                            \n                                    Async\n                                setInitialGameState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game-management-client.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLatestGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatestGameState(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPlayer(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setFriends\n                        \n                    \n                \n            \n            \n                \n                        \n                    setFriends(player: Player)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                player\n                                            \n                                                        Player\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setInitialGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setInitialGameState(gameState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game-management-client.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth/auth.service';\nimport { Game, GameCollection } from 'api-types/src/game';\nimport { lastValueFrom } from 'rxjs';\nimport { Player, PlayerCollection } from 'api-types/src/player';\nimport { GameState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameManagementClientService {\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n  ) {}\n\n  async createGame(game: Game): Promise {\n    await lastValueFrom(this.http.post('/game', game));\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    const gameCollection = await lastValueFrom(\n      this.http.get('/game', {\n        params: { username: this.authService.loggedInUsername },\n      }),\n    );\n    return gameCollection.games;\n  }\n\n  async completeGame(gameId: string): Promise {\n    await lastValueFrom(this.http.patch(`/game/${gameId}`, { complete: true }));\n  }\n\n  async setInitialGameState(gameState: GameState): Promise {\n    await lastValueFrom(this.http.post(`/game/${gameState.gameId}/state`, gameState));\n  }\n\n  async getLatestGameState(gameId: string): Promise {\n    return await lastValueFrom(this.http.get(`/game/${gameId}/state`));\n  }\n\n  async getPlayer(username: string): Promise {\n    return await lastValueFrom(this.http.get(`/player/${username}`));\n  }\n\n  async getLoggedInPlayer(): Promise {\n    return await this.getPlayer(this.authService.loggedInUsername);\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await lastValueFrom(\n      this.http.get('/player', {\n        params: { username: username },\n      }),\n    );\n    return playerCollection.players;\n  }\n\n  async setFriends(player: Player): Promise {\n    await lastValueFrom(this.http.patch(`/player/${player.username}`, { friends: player.friends }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                getGamesForLoggedInPlayer\n                            \n                            \n                                    Async\n                                getState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameManagementClientService: GameManagementClientService, gameStateInitializationService: GameStateInitializationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/game.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateInitializationService\n                                                  \n                                                        \n                                                                        GameStateInitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame(otherPlayers: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                otherPlayers\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGamesForLoggedInPlayer\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGamesForLoggedInPlayer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getState\n                        \n                    \n                \n            \n            \n                \n                        \n                    getState(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/game.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { humanId } from 'human-id';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Game } from 'api-types/src/game';\nimport { GameStateInitializationService } from '../game-state/game-state-initialization.service';\nimport { GameTitle } from '../../constant/game-title.constant';\nimport { GameState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameService {\n  constructor(\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n    private gameStateInitializationService: GameStateInitializationService,\n  ) {}\n\n  async createGame(otherPlayers: string[]): Promise {\n    const gameId = humanId();\n    const playerIds = [this.authService.loggedInUsername, ...otherPlayers];\n    await this.gameManagementClientService.createGame({\n      gameId,\n      host: this.authService.loggedInUsername,\n      playerIds: playerIds,\n    });\n    const initialGameState = this.gameStateInitializationService.build(\n      GameTitle.DOMINANT_SPECIES,\n      gameId,\n      playerIds,\n    );\n    await this.gameManagementClientService.setInitialGameState(initialGameState);\n    console.log(`created game: ${gameId}`);\n  }\n\n  async getGamesForLoggedInPlayer(): Promise {\n    return await this.gameManagementClientService.getGamesForLoggedInPlayer();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameManagementClientService.completeGame(gameId);\n  }\n\n  async getState(gameId: string): Promise {\n    return await this.gameManagementClientService.getLatestGameState(gameId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateClientService.html":{"url":"injectables/GameStateClientService.html","title":"injectable - GameStateClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendGspToBackend\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gsp$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sendGspToBackend\n                        \n                    \n                \n            \n            \n                \nsendGspToBackend(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-client.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gsp$\n                    \n                \n\n                \n                    \n                        getgsp$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-client.service.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { GameStatePatch } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateClientService {\n  sendGspToBackend(gsp: GameStatePatch): void {\n    console.log(JSON.stringify(gsp));\n  }\n\n  get gsp$(): Observable {\n    return of(undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateInitializationService.html":{"url":"injectables/GameStateInitializationService.html","title":"injectable - GameStateInitializationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateInitializationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-initialization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                factoryByGameTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(gameTitle: string, gameId: string, playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameTitle\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        factoryByGameTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map([[GameTitle.DOMINANT_SPECIES, GameElementStatesFactoryService]])\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-initialization.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  getEmptyInitialGameState,\n  InitialGameElementStatesFactoryConstructor,\n} from '../../model/game-state.model';\nimport { GameTitle } from '../../constant/game-title.constant';\nimport { GameElementStatesFactoryService } from '../../../game/service/game-element-states-factory.service';\nimport { GameState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateInitializationService {\n  private factoryByGameTitle: Map = new Map([[GameTitle.DOMINANT_SPECIES, GameElementStatesFactoryService]]);\n\n  build(gameTitle: string, gameId: string, playerIds: string[]): GameState {\n    const gameState = getEmptyInitialGameState(gameId, playerIds);\n    const gameElementsFactoryClass = this.factoryByGameTitle.get(gameTitle);\n    if (gameElementsFactoryClass) {\n      const gameElementsFactory = new gameElementsFactoryClass();\n      gameState.gameElements = gameElementsFactory.build(playerIds);\n      return gameState;\n    } else {\n      throw new Error(`Unable to build initial state for ${gameTitle}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStatePatchService.html":{"url":"injectables/GameStatePatchService.html","title":"injectable - GameStatePatchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStatePatchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-patch.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates and applies GameStatePatches\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(oldState: GameState, gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(oldState: GameState, newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-patch.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oldState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameStatePatch\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { applyPatch, compare, deepClone } from 'fast-json-patch';\nimport { GameState, GameStatePatch } from 'api-types/src/game-state';\n\n/**\n * Creates and applies GameStatePatches\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStatePatchService {\n  create(oldState: GameState, newState: GameState): GameStatePatch {\n    return {\n      gameId: oldState.gameId,\n      patchId: oldState.patchId + 1,\n      patch: compare(oldState.gameElements, newState.gameElements),\n    };\n  }\n\n  apply(oldState: GameState, gsp: GameStatePatch): GameState {\n    const newState = deepClone(oldState) as GameState;\n    newState.gameElements = applyPatch(\n      oldState.gameElements,\n      gsp.patch,\n      undefined,\n      false,\n    ).newDocument;\n    newState.patchId = gsp.patchId;\n    return newState;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateService.html":{"url":"injectables/GameStateService.html","title":"injectable - GameStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GameStateService provides an interface for the rest of the system to interact with state.\nIt does this by orchestrating the various other GameState related services.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyGsp\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                requireTransaction\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setPile\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameStateStore: GameStateStoreService, gspService: GameStatePatchService, gameStateClient: GameStateClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameStateStore\n                                                  \n                                                        \n                                                                        GameStateStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gspService\n                                                  \n                                                        \n                                                                        GameStatePatchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameStateClient\n                                                  \n                                                        \n                                                                        GameStateClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyGsp\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyGsp(gsp: GameStatePatch)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gsp\n                                            \n                                                        GameStatePatch\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requireTransaction\n                        \n                    \n                \n            \n            \n                \nrequireTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state.service.ts:83\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GameStateStoreService } from './game-state-store.service';\nimport { GameStatePatchService } from './game-state-patch.service';\nimport { GameStateClientService } from './game-state-client.service';\nimport { filter, Observable } from 'rxjs';\nimport { AreaState, FactionState, GameStatePatch, PileState } from 'api-types/src/game-state';\n\n/**\n * The GameStateService provides an interface for the rest of the system to interact with state.\n * It does this by orchestrating the various other GameState related services.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateService {\n  constructor(\n    private gameStateStore: GameStateStoreService,\n    private gspService: GameStatePatchService,\n    private gameStateClient: GameStateClientService,\n  ) {\n    this.gameStateClient.gsp$.pipe(filter((gsp) => gsp != undefined)).subscribe((gsp) => {\n      this.applyGsp(gsp);\n    });\n  }\n\n  private applyGsp(gsp: GameStatePatch): void {\n    this.gameStateStore.setGameState(this.gspService.apply(this.gameStateStore.gameState, gsp));\n  }\n\n  startTransaction(): void {\n    this.gameStateStore.startTransaction();\n  }\n\n  commitTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('No transaction in progress to commit');\n    } else {\n      const gsp = this.gspService.create(\n        this.gameStateStore.gameState,\n        this.gameStateStore.transactionState,\n      );\n      this.gameStateStore.commitTransaction();\n      this.gameStateClient.sendGspToBackend(gsp);\n    }\n  }\n\n  rollbackTransaction(): void {\n    this.gameStateStore.rollbackTransaction();\n  }\n\n  /**\n   * Will throw error if there is not a transaction in progress. Call before state updates that require a transaction.\n   */\n  requireTransaction(): void {\n    if (!this.gameStateStore.transactionState) {\n      throw new Error('Transaction has not been started.');\n    }\n  }\n\n  get area$(): Observable {\n    return this.gameStateStore.area$;\n  }\n\n  setArea(newState: AreaState): void {\n    this.gameStateStore.setArea(newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.gameStateStore.registerArea(newState);\n  }\n\n  get faction$(): Observable {\n    return this.gameStateStore.faction$;\n  }\n\n  setFaction(newState: FactionState): void {\n    this.gameStateStore.setFaction(newState);\n  }\n  registerFaction(newState: FactionState): void {\n    this.gameStateStore.registerFaction(newState);\n  }\n\n  get pile$(): Observable {\n    return this.gameStateStore.pile$;\n  }\n\n  setPile(newState: PileState): void {\n    this.gameStateStore.setPile(newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.gameStateStore.registerPile(newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameStateStoreService.html":{"url":"injectables/GameStateStoreService.html","title":"injectable - GameStateStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameStateStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-state/game-state-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\nWhen a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\nusing the register method of the state element management service such as PileService or AreaService.\nThe GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\nSo if someone was interested in the pile key, then they could subscribe to the pile$ observable.\nA value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\nThe GameState can be updated in one of two ways:\n1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\nwill then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\nthe state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\nIn Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\ncurrent GameState.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _gameState\n                            \n                            \n                                    Private\n                                _transactionState\n                            \n                            \n                                    Private\n                                gameStateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _setGameState\n                            \n                            \n                                commitTransaction\n                            \n                            \n                                    Private\n                                getObservableForKey\n                            \n                            \n                                registerArea\n                            \n                            \n                                registerFaction\n                            \n                            \n                                registerPile\n                            \n                            \n                                    Private\n                                registerTransactionStateElement\n                            \n                            \n                                rollbackTransaction\n                            \n                            \n                                setArea\n                            \n                            \n                                setFaction\n                            \n                            \n                                setGameState\n                            \n                            \n                                setPile\n                            \n                            \n                                    Private\n                                setTransactionStateElement\n                            \n                            \n                                startTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    gameState\n                                \n                                \n                                    transactionState\n                                \n                                \n                                    area$\n                                \n                                \n                                    faction$\n                                \n                                \n                                    pile$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:41\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _setGameState\n                        \n                    \n                \n            \n            \n                \n                        \n                    _setGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commitTransaction\n                        \n                    \n                \n            \n            \n                \ncommitTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getObservableForKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getObservableForKey(selector: (state: GameState) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selector\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerArea\n                        \n                    \n                \n            \n            \n                \nregisterArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerFaction\n                        \n                    \n                \n            \n            \n                \nregisterFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerPile\n                        \n                    \n                \n            \n            \n                \nregisterPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Used to register a new GameStateElement.\nA transaction must NOT be started. Cannot register the same GameStateElement more than once.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rollbackTransaction\n                        \n                    \n                \n            \n            \n                \nrollbackTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArea\n                        \n                    \n                \n            \n            \n                \nsetArea(newState: AreaState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            AreaState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFaction\n                        \n                    \n                \n            \n            \n                \nsetFaction(newState: FactionState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            FactionState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameState\n                        \n                    \n                \n            \n            \n                \nsetGameState(newState: GameState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        GameState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPile\n                        \n                    \n                \n            \n            \n                \nsetPile(newState: PileState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTransactionStateElement\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransactionStateElement(key, newGameStateElement: GameElementState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Used to update the state of an already registered GameStateElement.\nA transaction must be started.\nGameStateElement will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    key of the GameState object that stores this kind of GameStateElement\n\n                                            \n                                        \n                                        \n                                                newGameStateElement\n                                            \n                                                            GameElementState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the GameStateElement to update. An existing GameStateElement that matches this passed in\nGameStateElement will be updated.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTransaction\n                        \n                    \n                \n            \n            \n                \nstartTransaction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-state/game-state-store.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _gameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState\n\n                    \n                \n                \n                    \n                        Default value : deepClone(emptyGameState) as GameState\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _transactionState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameStateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-state/game-state-store.service.ts:41\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        gameState\n                    \n                \n\n                \n                    \n                        getgameState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:106\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        transactionState\n                    \n                \n\n                \n                    \n                        gettransactionState()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:110\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        area$\n                    \n                \n\n                \n                    \n                        getarea$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        faction$\n                    \n                \n\n                \n                    \n                        getfaction$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:170\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        pile$\n                    \n                \n\n                \n                    \n                        getpile$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-state/game-state-store.service.ts:182\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { BehaviorSubject, map, Observable } from 'rxjs';\nimport { emptyGameState } from '../../model/game-state.model';\nimport { Injectable } from '@angular/core';\nimport { deepClone } from 'fast-json-patch';\n\nimport {\n  AreaState,\n  FactionState,\n  GameElementState,\n  GameElementStates,\n  GameState,\n  PileState,\n} from 'api-types/src/game-state';\n\n/**\n * GameStateStoreService is responsible for maintain the GameState and making it accessible to others.\n *\n * When a GameStateStoreService is instantiated, it creates an empty GameState and the various GameStateElements will need to be added by\n * using the register method of the state element management service such as PileService or AreaService.\n *\n * The GameState has several top level keys, and GameStateStoreService provides observables for each of those keys.\n * So if someone was interested in the pile key, then they could subscribe to the pile$ observable.\n * A value will be emitted on each observable whenever the GameState is updated, regardless of if the particular key has been updated.\n *\n * The GameState can be updated in one of two ways:\n *\n * 1.) Via the setGameState method which will takes an entire GameState object and overwrites the previous GameState object. All observables\n * will then emit the values from the new GameState object. This method is typically used when the GameState is updated based on a received GSP.\n *\n * 2.) Via a transaction, which is typically done via actions taken during a turn. In this case, the startTransaction method is called and\n * the state is updated via calling one or more set methods (such as setPile) and then calling commitTransaction or rollbackTransaction.\n * In Either case, all observables will then emit the values from the new GameState object. This is to ensure that all local objects have the\n * current GameState.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameStateStoreService {\n  private _gameState: GameState = deepClone(emptyGameState) as GameState;\n  private _transactionState: GameState | null = null;\n  private gameStateSubject: BehaviorSubject;\n\n  constructor() {\n    this.gameStateSubject = new BehaviorSubject(this._gameState);\n  }\n\n  private getObservableForKey(selector: (state: GameState) => T): Observable {\n    return this.gameStateSubject.asObservable().pipe(\n      map((gameState) => {\n        return selector(gameState);\n      }),\n    );\n  }\n\n  /**\n   * Used to update the state of an already registered GameStateElement.\n   * A transaction must be started.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to update. An existing GameStateElement that matches this passed in\n   * GameStateElement will be updated.\n   * @private\n   */\n  private setTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (!this._transactionState) {\n      throw new Error('Must start transaction before updating GameState.');\n    }\n    const subStateArray = this._transactionState.gameElements[\n      key\n    ] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      subStateArray[index] = newGameStateElement;\n    } else {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} not registered`);\n    }\n  }\n\n  /**\n   * Used to register a new GameStateElement.\n   * A transaction must NOT be started. Cannot register the same GameStateElement more than once.\n   * @param key key of the GameState object that stores this kind of GameStateElement\n   * @param newGameStateElement the GameStateElement to register.\n   * @private\n   */\n  private registerTransactionStateElement(\n    key: keyof GameElementStates,\n    newGameStateElement: GameElementState,\n  ): void {\n    if (this.transactionState) {\n      throw new Error('Can not register new State Elements while a transaction is in progress.');\n    }\n    const subStateArray = this._gameState.gameElements[key] as (typeof newGameStateElement)[];\n    const index = subStateArray.findIndex((item) => item.id === newGameStateElement.id);\n\n    if (index > -1) {\n      throw new Error(`State Element ${JSON.stringify(newGameStateElement)} already registered`);\n    } else {\n      subStateArray.push(newGameStateElement);\n    }\n  }\n\n  get gameState(): GameState {\n    return deepClone(this._gameState) as GameState;\n  }\n\n  get transactionState(): GameState | null {\n    if (this._transactionState) {\n      return deepClone(this._transactionState) as GameState;\n    } else {\n      return null;\n    }\n  }\n\n  private _setGameState(newState: GameState) {\n    this._gameState = newState;\n    this.gameStateSubject.next(this.gameState);\n  }\n\n  setGameState(newState: GameState) {\n    if (this._transactionState) {\n      throw new Error('GameState can not be set during a transaction.');\n    } else {\n      this._setGameState(newState);\n    }\n  }\n\n  startTransaction(): void {\n    if (!this._transactionState) {\n      this._transactionState = deepClone(this._gameState) as GameState;\n    } else {\n      throw new Error(\"Can't start transaction as one already in progress.\");\n    }\n  }\n\n  commitTransaction(): void {\n    if (this._transactionState) {\n      this._setGameState(this._transactionState);\n      this._transactionState = null;\n    } else {\n      throw new Error('No transaction in progress to commit');\n    }\n  }\n\n  rollbackTransaction(): void {\n    if (this._transactionState) {\n      this._transactionState = null;\n      // Ensures gameState is a new object so that subscribers can detect the update\n      this._setGameState(deepClone(this._gameState) as GameState);\n    } else {\n      throw new Error('No transaction in progress to rollback');\n    }\n  }\n\n  get area$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.area);\n  }\n\n  setArea(newState: AreaState): void {\n    this.setTransactionStateElement('area', newState);\n  }\n\n  registerArea(newState: AreaState): void {\n    this.registerTransactionStateElement('area', newState);\n  }\n\n  get faction$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.faction);\n  }\n\n  setFaction(newState: FactionState): void {\n    this.setTransactionStateElement('faction', newState);\n  }\n\n  registerFaction(newState: FactionState): void {\n    this.registerTransactionStateElement('faction', newState);\n  }\n\n  get pile$(): Observable {\n    return this.getObservableForKey((gameState) => gameState.gameElements.pile);\n  }\n\n  setPile(newState: PileState): void {\n    this.setTransactionStateElement('pile', newState);\n  }\n\n  registerPile(newState: PileState): void {\n    this.registerTransactionStateElement('pile', newState);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitialGameElementStatesFactory.html":{"url":"interfaces/InitialGameElementStatesFactory.html","title":"interface - InitialGameElementStatesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InitialGameElementStatesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/game-state.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        build\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(playerIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/game-state.model.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GameElementStates\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { GameElementStates, GameState } from 'api-types/src/game-state';\n\n// current used to initialize GameStoreService, but should be refactored to get the Initial Game State when user joins the game.\nexport const emptyGameState: GameState = {\n  gameId: 'placeholder',\n  patchId: 0,\n  playerIds: [],\n  gameElements: {\n    area: [],\n    faction: [],\n    pile: [],\n  },\n};\n\nexport function getEmptyInitialGameState(gameId: string, playerIds: string[]): GameState {\n  return {\n    gameId: gameId,\n    patchId: 0,\n    playerIds: playerIds,\n    gameElements: {\n      area: [],\n      faction: [],\n      pile: [],\n    },\n  };\n}\n\nexport interface InitialGameElementStatesFactory {\n  build(playerIds: string[]): GameElementStates;\n}\n\nexport type InitialGameElementStatesFactoryConstructor = new () => InitialGameElementStatesFactory;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LobbyPageComponent.html":{"url":"components/LobbyPageComponent.html","title":"component - LobbyPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LobbyPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/lobby-page/lobby-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lobby-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatTable\n                            MatColumnDef\n                            MatHeaderCell\n                            MatCell\n                            MatHeaderRow\n                            MatRow\n                            MatHeaderRowDef\n                            MatRowDef\n                            MatHeaderCellDef\n                            MatCellDef\n                            MatButton\n                            MatIcon\n                            MatMiniFabButton\n                            MatChipSet\n                            MatChip\n                            MatTooltip\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./lobby-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./lobby-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPlayer\n                            \n                            \n                                games\n                            \n                            \n                                gameTableColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                completeGame\n                            \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                fetchGames\n                            \n                            \n                                filterPlayers\n                            \n                            \n                                    Async\n                                joinGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, playerService: PlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playerService\n                                                  \n                                                        \n                                                                        PlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        completeGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    completeGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    createGame()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchGames\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchGames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterPlayers\n                        \n                    \n                \n            \n            \n                \nfilterPlayers(game: Game)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                game\n                                            \n                                                        Game\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        joinGame\n                        \n                    \n                \n            \n            \n                \n                        \n                    joinGame(gameId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameTableColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['gameId', 'host', 'playerIds', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/lobby-page/lobby-page.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { Game } from 'api-types/src/game';\nimport { GameService } from '../../service/game-management/game.service';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatHeaderCell,\n  MatHeaderCellDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef,\n  MatTable,\n} from '@angular/material/table';\nimport { MatButton, MatMiniFabButton } from '@angular/material/button';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatChip, MatChipSet } from '@angular/material/chips';\nimport { PlayerService } from '../../service/game-management/player.service';\nimport { Player } from 'api-types/src/player';\nimport { MatTooltip } from '@angular/material/tooltip';\n\n@Component({\n  selector: 'app-lobby-page',\n  standalone: true,\n  imports: [\n    MatTable,\n    MatColumnDef,\n    MatHeaderCell,\n    MatCell,\n    MatHeaderRow,\n    MatRow,\n    MatHeaderRowDef,\n    MatRowDef,\n    MatHeaderCellDef,\n    MatCellDef,\n    MatButton,\n    MatIcon,\n    MatMiniFabButton,\n    MatChipSet,\n    MatChip,\n    MatTooltip,\n  ],\n  templateUrl: './lobby-page.component.html',\n  styleUrl: './lobby-page.component.scss',\n})\nexport class LobbyPageComponent {\n  games = signal([]);\n  gameTableColumns: string[] = ['gameId', 'host', 'playerIds', 'actions'];\n  readonly currentPlayer = signal(undefined);\n\n  constructor(\n    private gameService: GameService,\n    private playerService: PlayerService,\n  ) {\n    this.playerService.currentPlayer$.subscribe((player) => {\n      this.currentPlayer.set(player);\n      void this.fetchGames();\n    });\n  }\n\n  filterPlayers(game: Game): string[] {\n    return game.playerIds\n      .filter((player) => player !== game.host)\n      .slice()\n      .sort();\n  }\n\n  async fetchGames(): Promise {\n    this.games.set(await this.gameService.getGamesForLoggedInPlayer());\n  }\n\n  async createGame(): Promise {\n    await this.gameService.createGame(['tester1', 'tester2', 'tester3']);\n    await this.fetchGames();\n  }\n\n  async completeGame(gameId: string): Promise {\n    await this.gameService.completeGame(gameId);\n    await this.fetchGames();\n  }\n\n  async joinGame(gameId: string): Promise {\n    console.log(`Joining game ${gameId}`);\n    console.log(await this.gameService.getState(gameId));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      refresh\n    \n    \n      add_circle\n    \n  \n  \n    \n      \n        Id\n        {{ game.gameId }}\n      \n      \n        Host\n        \n          \n            {{ game.host }}\n          \n        \n      \n      \n        Players\n        \n          \n            @for (player of filterPlayers(game); track $index) {\n              {{ player }}\n            }\n          \n        \n      \n      \n        \n        \n          \n            @if (game.host === currentPlayer()?.username) {\n              \n                delete\n              \n            }\n            \n              login\n            \n          \n        \n      \n\n      \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            refresh              add_circle                          Id        {{ game.gameId }}                    Host                              {{ game.host }}                                      Players                              @for (player of filterPlayers(game); track $index) {              {{ player }}            }                                                                    @if (game.host === currentPlayer()?.username) {                              delete                          }                          login                                                      '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LobbyPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletedStorageKey\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                setStorageKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deletedStorageKey\n                        \n                    \n                \n            \n            \n                \ndeletedStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStorageKey\n                        \n                    \n                \n            \n            \n                \ngetStorageKey(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStorageKey\n                        \n                    \n                \n            \n            \n                \nsetStorageKey(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/local-storage.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  deletedStorageKey(key: string): void {\n    localStorage.removeItem(key);\n  }\n\n  getStorageKey(key: string): string | null {\n    return localStorage.getItem(key);\n  }\n\n  setStorageKey(key: string, value: string): void {\n    localStorage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginFormData.html":{"url":"interfaces/LoginFormData.html","title":"interface - LoginFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/login-page/login-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/lobby']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatButton\n                            MatCard\n                            MatCardContent\n                            ReactiveFormsModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/login-page/login-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/login-page/login-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { MatButton } from '@angular/material/button';\nimport { MatCard, MatCardContent } from '@angular/material/card';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [MatButton, MatCard, MatCardContent, ReactiveFormsModule, RouterLink],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss',\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value as LoginFormData;\n      void this.authService.login(username, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/lobby']);\n        } else {\n          this.errorMessage.set('Login failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Login\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n          \n          Confirm\n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n        \n          \n          \n            Sign Up Here\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                            Username:                                    Password:                          .                            Confirm                                                @if (errorMessage()) {              {{ errorMessage() }}            }                                                          Sign Up Here                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutPageComponent.html":{"url":"components/LogoutPageComponent.html","title":"component - LogoutPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/logout-page/logout-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-page\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logout-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logout-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/logout-page/logout-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/logout-page/logout-page.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-logout-page',\n  standalone: true,\n  imports: [],\n  templateUrl: './logout-page.component.html',\n  styleUrl: './logout-page.component.scss',\n})\nexport class LogoutPageComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.authService.logout();\n    void this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        logout-page works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logout-page works!'\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pile.html":{"url":"classes/Pile.html","title":"class - Pile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n            \n                Description\n            \n            \n                A Pile is used to draw one or more random pieces for a defined pool of pieces.\n\n            \n\n            \n                Extends\n            \n            \n                            GameElement\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length$\n                            \n                            \n                                    Private\n                                lengthSubject\n                            \n                            \n                                    Private\n                                    Readonly\n                                owner\n                            \n                            \n                                    Private\n                                    Readonly\n                                pieceFactory\n                            \n                            \n                                    Protected\n                                _state\n                            \n                            \n                                state$\n                            \n                            \n                                    Protected\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitPileState\n                            \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                            \n                                    Protected\n                                emitState\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(state: PileState, pieceFactory: PieceFactory)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:13\n                            \n                        \n\n                \n                    \n                            Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        PileState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object that acts as the definition for the pool of pieces the Pile represents.\nEach key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\nthe pile.\n\n                                                        \n                                                \n                                                \n                                                        pieceFactory\n                                                  \n                                                        \n                                                                        PieceFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A factory function use to build the random selected piece.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lengthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        pieceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PieceFactory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/pile.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                        \n                            \n                                Inherited from         GameElement\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElement:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        emitPileState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitPileState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:49\n                        \n                    \n\n\n            \n                \n                        Pulls a specified number of pieces from the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                            \n                                                    The number of pieces to pull. Defaults to 1.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of pieces pulled from the pile, or null values if the pile is empty.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: Piece[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:79\n                        \n                    \n\n\n            \n                \n                        Puts the specified pieces into the pile of the given kind.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        Piece[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pieces to put into the pile.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        emitState\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitState()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:36\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElement\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElement:28\n\n                        \n                    \n\n\n            \n                \n                        Set state happens when a GSP is received, so state is not emitted back as it's already in the GameState\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:32\n                                \n                            \n                    \n                        \n                                Returns the total number of pieces in the pile.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PileAdapter.html":{"url":"classes/PileAdapter.html","title":"class - PileAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PileAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/pile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pullMany\n                            \n                            \n                                pullOne\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                                \n                                    length$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pile: Pile)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/pile.model.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pile\n                                                  \n                                                        \n                                                                        Pile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        pullMany\n                        \n                    \n                \n            \n            \n                \npullMany(count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pullOne\n                        \n                    \n                \n            \n            \n                \npullOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     T | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        put\n                        \n                    \n                \n            \n            \n                \nput(pieces: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/pile.model.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pieces\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:92\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        length$\n                    \n                \n\n                \n                    \n                        getlength$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/pile.model.ts:96\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { defaultPieceFactory, PieceFactory } from './piece.model';\nimport { BehaviorSubject, distinctUntilChanged, Observable } from 'rxjs';\nimport { GameElement } from './game-element.model';\nimport { Piece, PileState } from 'api-types/src/game-state';\n\n/**\n * A Pile is used to draw one or more random pieces for a defined pool of pieces.\n */\nexport class Pile extends GameElement {\n  private readonly owner: string | null;\n  private readonly pieceFactory: PieceFactory;\n  private lengthSubject: BehaviorSubject;\n  length$: Observable;\n\n  /**\n   * @param state An object that acts as the definition for the pool of pieces the Pile represents.\n   * Each key is the kind of pieces included in the Pile, and the values are the count of that kind of piece in\n   * the pile.\n   * @param pieceFactory A factory function use to build the random selected piece.\n   */\n  constructor(state: PileState, pieceFactory: PieceFactory = defaultPieceFactory) {\n    super(state);\n    this.owner = state.owner;\n    this.pieceFactory = pieceFactory;\n    this.lengthSubject = new BehaviorSubject(this.length);\n    this.length$ = this.lengthSubject.asObservable().pipe(distinctUntilChanged());\n  }\n\n  /**\n   * Returns the total number of pieces in the pile.\n   */\n  get length(): number {\n    return Object.keys(this._state.inventory).reduce(\n      (sum, key) => sum + (this._state.inventory[key] ?? 0),\n      0,\n    );\n  }\n\n  private emitPileState(): void {\n    this.emitState();\n    this.lengthSubject.next(this.length);\n  }\n\n  /**\n   * Pulls a specified number of pieces from the pile of the given kind.\n   * @param count The number of pieces to pull. Defaults to 1.\n   * @returns An array of pieces pulled from the pile, or null values if the pile is empty.\n   */\n  pullMany(count = 1): (Piece | null)[] {\n    const pieces: (Piece | null)[] = [];\n    for (let i = 0; i  {\n        /** this.pieceCounts.get(key) will always return a value, but TSC complains it could be unknown. */\n        const pieceCount = this._state.inventory[key] ?? 0;\n        return pieceCount > 0;\n      });\n\n      if (piecesWithCount.length) {\n        const kind = piecesWithCount[Math.floor(Math.random() * piecesWithCount.length)];\n        const currentCount = this._state.inventory[kind] ?? 0;\n        pieces.push(this.pieceFactory(kind, this.owner));\n        this._state.inventory[kind] = currentCount - 1;\n      } else {\n        pieces.push(null);\n      }\n    }\n    this.emitPileState();\n    return pieces;\n  }\n\n  pullOne(): Piece | null {\n    return this.pullMany(1)[0];\n  }\n\n  /**\n   * Puts the specified pieces into the pile of the given kind.\n   * @param pieces The pieces to put into the pile.\n   */\n  put(pieces: Piece[]): void {\n    for (const piece of pieces) {\n      // Assume the current count is 0 if the piece is not yet in the inventory\n      const currentItemCount = this._state.inventory[piece.kind] || 0;\n      this._state.inventory[piece.kind] = currentItemCount + 1;\n    }\n    this.emitPileState();\n  }\n}\n\nexport class PileAdapter {\n  constructor(private pile: Pile) {}\n\n  get length(): number {\n    return this.pile.length;\n  }\n\n  get length$(): Observable {\n    return this.pile.length$;\n  }\n\n  pullMany(count = 1): (T | null)[] {\n    return this.pile.pullMany(count) as T[];\n  }\n\n  pullOne(): T | null {\n    return this.pullMany(1)[0] as T;\n  }\n\n  put(pieces: T[]): void {\n    this.pile.put(pieces as Piece[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PileConfig.html":{"url":"interfaces/PileConfig.html","title":"interface - PileConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PileConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/constant/pile-config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actionPawn\n                                        \n                                \n                                \n                                        \n                                            species\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionPawn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionPawn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        species\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        species:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalEnum } from './animal.constant';\nimport { PileIdEnum } from './pile.constant';\n\nexport interface PileConfig {\n  actionPawn: string;\n  species: string;\n}\n\nexport const pileIdsByAnimal: ReadonlyMap = new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n]);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileRegistryService.html":{"url":"injectables/PileRegistryService.html","title":"injectable - PileRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-registry.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementRegistryService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredElementSubject\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                            \n                                registeredIds$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pileStateSvc: PileStateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-element/pile-registry.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pileStateSvc\n                                                  \n                                                        \n                                                                        PileStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:23\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(elements: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementRegistryService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementRegistryService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                elements\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredElementSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject>(new Set())\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registeredIds$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                \n                    \n                        Default value : this.registeredElementSubject.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementRegistryService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementRegistryService:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { PileStateService } from './pile-state.service';\nimport { GameElementRegistryService } from './game-element-registry.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileRegistryService extends GameElementRegistryService {\n  constructor(protected pileStateSvc: PileStateService) {\n    super(pileStateSvc);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PileStateService.html":{"url":"injectables/PileStateService.html","title":"injectable - PileStateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PileStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-element/pile-state.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GameElementStateService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elementById\n                            \n                            \n                                    Private\n                                registeredIds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                registerEntityState\n                            \n                            \n                                    Protected\n                                setEntityState\n                            \n                            \n                                    Private\n                                getEntity\n                            \n                            \n                                    Private\n                                initialize\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    elementState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntityState(pile: Pile)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:14\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pile\n                                            \n                                                            Pile\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        setEntityState\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEntityState(state: PileState)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:18\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                            PileState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TgameElement\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(entities: TgameElement[])\n                \n            \n\n\n                    \n                        \n                            Inherited from         GameElementStateService\n\n                        \n                    \n                    \n                        \n                                Defined in         GameElementStateService:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entities\n                                            \n                                                        TgameElement[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elementById\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registeredIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                        \n                            \n                                Inherited from         GameElementStateService\n\n                            \n                        \n                    \n                        \n                                Defined in         GameElementStateService:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        elementState$\n                    \n                \n\n                \n                    \n                        getelementState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/service/game-element/pile-state.service.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Pile } from '../../model/pile.model';\nimport { GameElementStateService } from './game-element-state.service';\nimport { PileState } from 'api-types/src/game-state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PileStateService extends GameElementStateService {\n  protected get elementState$() {\n    return this.gameStateSvc.pile$;\n  }\n\n  protected registerEntityState(pile: Pile) {\n    this.gameStateSvc.registerPile(pile.state);\n  }\n\n  protected setEntityState(state: PileState) {\n    this.gameStateSvc.setPile(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerAuthData.html":{"url":"interfaces/PlayerAuthData.html","title":"interface - PlayerAuthData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerAuthData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/player.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            accessTokenExpire\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenExpire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenExpire:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PlayerAuthData {\n  username: string;\n  accessToken: string;\n  accessTokenExpire: number;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlayerService.html":{"url":"injectables/PlayerService.html","title":"injectable - PlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/game-management/player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPlayer\n                            \n                            \n                                currentPlayer$\n                            \n                            \n                                    Private\n                                currentPlayerSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addfriend\n                            \n                            \n                                    Async\n                                findPlayers\n                            \n                            \n                                    Async\n                                removeFriend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, gameManagementClientService: GameManagementClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gameManagementClientService\n                                                  \n                                                        \n                                                                        GameManagementClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addfriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addfriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPlayers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPlayers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeFriend\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFriend(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/game-management/player.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Player | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayer$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentPlayerSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentPlayerSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(this.currentPlayer)\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/service/game-management/player.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Player } from 'api-types/src/player';\nimport { AuthService } from '../auth/auth.service';\nimport { GameManagementClientService } from './game-management-client.service';\nimport { ensureDefined } from '../../util/misc';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlayerService {\n  currentPlayer: Player | undefined = undefined;\n  private currentPlayerSubject: BehaviorSubject = new BehaviorSubject(this.currentPlayer);\n  currentPlayer$ = this.currentPlayerSubject.asObservable();\n\n  constructor(\n    private authService: AuthService,\n    private gameManagementClientService: GameManagementClientService,\n  ) {\n    this.authService.isLoggedIn$.pipe().subscribe((isLoggedIn) => {\n      if (isLoggedIn) {\n        this.gameManagementClientService\n          .getLoggedInPlayer()\n          .then((player) => {\n            this.currentPlayer = player;\n            this.currentPlayerSubject.next(this.currentPlayer);\n          })\n          .catch((error: unknown) => {\n            throw error;\n          });\n      } else {\n        this.currentPlayer = undefined;\n        this.currentPlayerSubject.next(this.currentPlayer);\n      }\n    });\n  }\n\n  async findPlayers(username: string): Promise {\n    const playerCollection = await this.gameManagementClientService.findPlayers(username);\n    return playerCollection.map((player) => player.username);\n  }\n\n  async addfriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends.push(username);\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n  }\n\n  async removeFriend(username: string): Promise {\n    ensureDefined(this.currentPlayer).friends = ensureDefined(this.currentPlayer).friends.filter(\n      (friendUsername) => friendUsername !== username,\n    );\n    await this.gameManagementClientService.setFriends(ensureDefined(this.currentPlayer));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpConfirmFormData.html":{"url":"interfaces/SignUpConfirmFormData.html","title":"interface - SignUpConfirmFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpConfirmFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpConfirmPageComponent.html":{"url":"components/SignUpConfirmPageComponent.html","title":"component - SignUpConfirmPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpConfirmPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-confirm-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-confirm-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-confirm-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpConfirmForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpConfirmForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { MatCard, MatCardContent } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpConfirmFormData {\n  username: string;\n  code: string;\n}\n\n@Component({\n  selector: 'app-sign-up-confirm-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardContent, MatButton],\n  templateUrl: './sign-up-confirm-page.component.html',\n  styleUrl: './sign-up-confirm-page.component.scss',\n})\nexport class SignUpConfirmPageComponent {\n  signUpConfirmForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpConfirmForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      code: ['', Validators.required],\n    });\n  }\n\n  onSubmit(): void {\n    if (this.signUpConfirmForm.valid) {\n      const { username, code } = this.signUpConfirmForm.value as SignUpConfirmFormData;\n      void this.signUpService.confirmSignUp(username, code).then((success) => {\n        if (success) {\n          void this.router.navigate(['/login']);\n        } else {\n          this.errorMessage.set('Sign up confirmation failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Confirm Sign Up\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Code:\n          \n        \n        .\n        \n          \n          \n            Confirm\n          \n        \n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Confirm Sign Up                            Username:                                    Code:                          .                                        Confirm                                                          @if (errorMessage()) {              {{ errorMessage() }}            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpConfirmPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpFormData.html":{"url":"interfaces/SignUpFormData.html","title":"interface - SignUpFormData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpFormData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/component/sign-up-page/sign-up-page.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpPageComponent.html":{"url":"components/SignUpPageComponent.html","title":"component - SignUpPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignUpPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/engine/component/sign-up-page/sign-up-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            MatCard\n                            MatCardHeader\n                            MatCardContent\n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-up-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-up-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                signUpForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, signUpService: SignUpService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpService\n                                                  \n                                                        \n                                                                        SignUpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/component/sign-up-page/sign-up-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, signal } from '@angular/core';\nimport { SignUpService } from '../../service/auth/sign-up.service';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatCard, MatCardContent, MatCardHeader } from '@angular/material/card';\nimport { MatButton } from '@angular/material/button';\nimport { Router } from '@angular/router';\n\ninterface SignUpFormData {\n  username: string;\n  email: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-sign-up-page',\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [ReactiveFormsModule, MatCard, MatCardHeader, MatCardContent, MatButton],\n  templateUrl: './sign-up-page.component.html',\n  styleUrl: './sign-up-page.component.scss',\n})\nexport class SignUpPageComponent {\n  signUpForm: FormGroup;\n  errorMessage = signal('');\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private signUpService: SignUpService,\n    private router: Router,\n  ) {\n    this.signUpForm = this.formBuilder.group(\n      {\n        username: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n      },\n      { updateOn: 'blur' },\n    );\n  }\n\n  onSubmit(): void {\n    if (this.signUpForm.valid) {\n      const { username, email, password } = this.signUpForm.value as SignUpFormData;\n      void this.signUpService.signUp(username, email, password).then((success) => {\n        if (success) {\n          void this.router.navigate(['/sign-up-confirm']);\n        } else {\n          this.errorMessage.set('Sign up failed. See console for more information.');\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up for VPA Games\n    \n      \n        \n          Username:\n          \n        \n\n        \n          Email:\n          \n        \n\n        \n          Password:\n          \n        \n        .\n        \n        \n          \n          Sign Up\n        \n\n        \n\n        \n          \n          \n            @if (errorMessage()) {\n              {{ errorMessage() }}\n            }\n            @if (signUpForm.invalid && signUpForm.dirty) {\n              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {\n                Please enter a valid email.\n              }\n              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {\n                Password must be at least 6 characters long.\n              }\n            }\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up for VPA Games                            Username:                                    Email:                                    Password:                          .                                    Sign Up                                                        @if (errorMessage()) {              {{ errorMessage() }}            }            @if (signUpForm.invalid && signUpForm.dirty) {              @if (signUpForm.get(\"email\")?.errors?.[\"email\"]) {                Please enter a valid email.              }              @if (signUpForm.get(\"password\")?.errors?.[\"minlength\"]) {                Password must be at least 6 characters long.              }            }                              '\n    var COMPONENTS = [{'name': 'ActionPawnComponent', 'selector': 'app-action-pawn'},{'name': 'ActionPawnSpaceComponent', 'selector': 'app-action-pawn-space'},{'name': 'AdaptionActionDisplayCardComponent', 'selector': 'app-adaption-action-display-card'},{'name': 'AnimalCardComponent', 'selector': 'app-animal-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DrawPoolGameComponent', 'selector': 'app-draw-pool-game'},{'name': 'ElementComponent', 'selector': 'app-element'},{'name': 'ElementSpaceComponent', 'selector': 'app-element-space'},{'name': 'EyeballComponent', 'selector': 'app-eyeball'},{'name': 'LobbyPageComponent', 'selector': 'app-lobby-page'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LogoutPageComponent', 'selector': 'app-logout-page'},{'name': 'SignUpConfirmPageComponent', 'selector': 'app-sign-up-confirm-page'},{'name': 'SignUpPageComponent', 'selector': 'app-sign-up-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SignUpService.html":{"url":"injectables/SignUpService.html","title":"injectable - SignUpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SignUpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/service/auth/sign-up.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                confirmSignUp\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cognitoClientService: CognitoClientService)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/service/auth/sign-up.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cognitoClientService\n                                                  \n                                                        \n                                                                        CognitoClientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmSignUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmSignUp(username: string, code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(username: string, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/service/auth/sign-up.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CognitoClientService } from './cognito-client.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SignUpService {\n  constructor(private cognitoClientService: CognitoClientService) {}\n\n  async signUp(username: string, email: string, password: string): Promise {\n    return this.cognitoClientService.signUp(username, email, password);\n  }\n\n  async confirmSignUp(username: string, code: string): Promise {\n    return this.cognitoClientService.confirmSignUp(username, code);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Space.html":{"url":"classes/Space.html","title":"class - Space","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Space\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/engine/model/space.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _action\n                            \n                            \n                                    Private\n                                _piece\n                            \n                            \n                                    Readonly\n                                kind\n                            \n                            \n                                state$\n                            \n                            \n                                    Private\n                                stateSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPiece\n                            \n                            \n                                removePiece\n                            \n                            \n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    state\n                                \n                                \n                                    action\n                                \n                                \n                                    piece\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(kind: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/engine/model/space.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        kind\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Action[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _piece\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Piece | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kind\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stateSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/engine/model/space.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPiece\n                        \n                    \n                \n            \n            \n                \naddPiece(piece: Piece)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                piece\n                                            \n                                                        Piece\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePiece\n                        \n                    \n                \n            \n            \n                \nremovePiece()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Piece\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setState\n                        \n                    \n                \n            \n            \n                \nsetState(newState: SpaceState)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/engine/model/space.model.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newState\n                                            \n                                                            SpaceState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:19\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n\n                \n                    \n                        getaction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:26\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        piece\n                    \n                \n\n                \n                    \n                        getpiece()\n                    \n                \n                            \n                                \n                                    Defined in src/app/engine/model/space.model.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Action } from './action.model';\nimport { deepClone } from 'fast-json-patch';\nimport { Observable, Subject } from 'rxjs';\nimport { Piece, SpaceState } from 'api-types/src/game-state';\n\nexport class Space {\n  readonly kind: string;\n  private _action: Action[] = [];\n  private _piece: Piece | null = null;\n  private stateSubject: Subject;\n  state$: Observable;\n\n  constructor(kind: string) {\n    this.kind = kind;\n    this.stateSubject = new Subject();\n    this.state$ = this.stateSubject.asObservable();\n  }\n\n  get state(): SpaceState {\n    return deepClone({\n      kind: this.kind,\n      piece: this._piece,\n    }) as SpaceState;\n  }\n\n  get action(): Action[] {\n    return this._action;\n  }\n\n  get piece(): Piece | null {\n    return this._piece;\n  }\n\n  addPiece(piece: Piece): void {\n    if (!this._piece) {\n      this._piece = piece;\n      this.stateSubject.next(this.state);\n    } else {\n      throw new Error('space already has a piece');\n    }\n  }\n\n  removePiece(): Piece {\n    if (this._piece) {\n      const removedPiece = this._piece;\n      this._piece = null;\n      this.stateSubject.next(this.state);\n      return removedPiece;\n    } else {\n      throw new Error('no piece to remove from space');\n    }\n  }\n\n  setState(newState: SpaceState) {\n    if (newState.kind == this.kind) {\n      this._piece = newState.piece;\n    } else {\n      throw new Error('State does not match space kind');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeciesPiece.html":{"url":"interfaces/SpeciesPiece.html","title":"interface - SpeciesPiece","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpeciesPiece\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/model/species.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Piece\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         AnimalKind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnimalKind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AnimalKind } from '../constant/animal.constant';\nimport { Piece } from 'api-types/src/game-state';\n\nexport interface SpeciesPiece extends Piece {\n  owner: AnimalKind;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/component/lobby-page/lobby-page.component.ts\n            \n            component\n            LobbyPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/login-page/login-page.component.ts\n            \n            interface\n            LoginFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/logout-page/logout-page.component.ts\n            \n            component\n            LogoutPageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            component\n            SignUpConfirmPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-confirm-page/sign-up-confirm-page.component.ts\n            \n            interface\n            SignUpConfirmFormData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            component\n            SignUpPageComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/component/sign-up-page/sign-up-page.component.ts\n            \n            interface\n            SignUpFormData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/gaurd/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/api-url.interceptor.ts\n            \n            function\n            apiUrlInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/auth.interceptor.ts\n            \n            function\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/interceptor/error-handler.interceptor.ts\n            \n            function\n            errorHandlerInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/action.model.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/model/area.model.ts\n            \n            class\n            Area\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/engine/model/faction.model.ts\n            \n            class\n            Faction\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-element.model.ts\n            \n            class\n            GameElement\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/engine/model/game-state.model.ts\n            \n            interface\n            InitialGameElementStatesFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            function\n            getEmptyInitialGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            variable\n            emptyGameState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/game-state.model.ts\n            \n            type alias\n            InitialGameElementStatesFactoryConstructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            function\n            defaultPieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/model/piece.model.ts\n            \n            type alias\n            PieceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            Pile\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/app/engine/model/pile.model.ts\n            \n            class\n            PileAdapter\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/player.model.ts\n            \n            interface\n            PlayerAuthData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/engine/model/space.model.ts\n            \n            class\n            Space\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/cognito-client.service.ts\n            \n            injectable\n            CognitoClientService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/engine/service/auth/sign-up.service.ts\n            \n            injectable\n            SignUpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-registry.service.ts\n            \n            injectable\n            AreaRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/area-state.service.ts\n            \n            injectable\n            AreaStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            injectable\n            FactionRegistryService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-registry.service.ts\n            \n            interface\n            FactionAssignment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/faction-state.service.ts\n            \n            injectable\n            FactionStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-registry.service.ts\n            \n            injectable\n            GameElementRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/game-element-state.service.ts\n            \n            injectable\n            GameElementStateService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-registry.service.ts\n            \n            injectable\n            PileRegistryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-element/pile-state.service.ts\n            \n            injectable\n            PileStateService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game-management-client.service.ts\n            \n            injectable\n            GameManagementClientService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-management/player.service.ts\n            \n            injectable\n            PlayerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-client.service.ts\n            \n            injectable\n            GameStateClientService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-initialization.service.ts\n            \n            injectable\n            GameStateInitializationService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-patch.service.ts\n            \n            injectable\n            GameStatePatchService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state-store.service.ts\n            \n            injectable\n            GameStateStoreService\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/app/engine/service/game-state/game-state.service.ts\n            \n            injectable\n            GameStateService\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                src/app/engine/service/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            deepCompare\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            ensureDefined\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            getOrThrow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/misc.ts\n            \n            function\n            setDifference\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isFalse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNotUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isNull\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/engine/util/predicate.ts\n            \n            function\n            isTrue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/adaption-action-display-card/adaption-action-display-card.component.ts\n            \n            component\n            AdaptionActionDisplayCardComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/action-pawn-space/action-pawn-space.component.ts\n            \n            component\n            ActionPawnSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/element-space/element-space.component.ts\n            \n            component\n            ElementSpaceComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/action-display/space/eyeball/eyeball.component.ts\n            \n            component\n            EyeballComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/component/action-pawn/action-pawn.component.ts\n            \n            component\n            ActionPawnComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/component/animal-card/animal-card.component.ts\n            \n            component\n            AnimalCardComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/game/component/draw-pool-game/draw-pool-game.component.ts\n            \n            component\n            DrawPoolGameComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/component/element/element.component.ts\n            \n            component\n            ElementComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/game/constant/animal.constant.ts\n            \n            type alias\n            AnimalKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            variable\n            elementAreaIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/area.constant.ts\n            \n            type alias\n            AreaId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/element-config.constant.ts\n            \n            interface\n            ElementConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element-config.constant.ts\n            \n            variable\n            elementConfigByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/element.constant.ts\n            \n            type alias\n            ElementKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/game-state.constant.ts\n            \n            variable\n            baseGameElementStates\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/game/constant/image.constant.ts\n            \n            variable\n            imgPathByKind\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/constant/pile-config.ts\n            \n            interface\n            PileConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/game/constant/pile-config.ts\n            \n            variable\n            pileIdsByAnimal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/game/model/action-display.model.ts\n            \n            interface\n            ActionDisplayServiceWithSetup\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/action-pawn.model.ts\n            \n            interface\n            ActionPawnPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            class\n            AnimalElements\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/animal.model.ts\n            \n            interface\n            AnimalConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/game/model/element.model.ts\n            \n            interface\n            ElementPiece\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/game/model/species.model.ts\n            \n            interface\n            SpeciesPiece\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            class\n            ActionDisplaySetupManager\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/action-display-manager.service.ts\n            \n            injectable\n            ActionDisplayManagerService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/game/service/action-display/adaption-action-display.service.ts\n            \n            injectable\n            AdaptionActionDisplayService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/game/service/animal-provider.service.ts\n            \n            injectable\n            AnimalProviderService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/game/service/element-draw-pool.service.ts\n            \n            injectable\n            ElementDrawPoolService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/game/service/game-element-states-factory.service.ts\n            \n            class\n            GameElementStatesFactoryService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.7\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/material : ^18.2.7\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @aws-sdk/client-cognito-identity-provider : ^3.670.0\n        \n            fast-json-patch : ^3.1.1\n        \n            human-id : ^4.1.1\n        \n            jwt-decode : ^4.0.0\n        \n            lodash : ^4.17.21\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalEnum   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaIdEnum   (src/.../area.constant.ts)\n                        \n                        \n                            ElementEnum   (src/.../element.constant.ts)\n                        \n                        \n                            GameTitle   (src/.../game-title.constant.ts)\n                        \n                        \n                            LocalStorageKey   (src/.../local-storage.constant.ts)\n                        \n                        \n                            PieceKindEnum   (src/.../piece.constant.ts)\n                        \n                        \n                            PileIdEnum   (src/.../pile.constant.ts)\n                        \n                        \n                            SpaceKindEnum   (src/.../area.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AnimalEnum\n                    \n                \n                        \n                            \n                                 AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : amphibian\n                            \n                        \n                        \n                            \n                                 ARACHNID\n                            \n                        \n                        \n                            \n                                Value : arachnid\n                            \n                        \n                        \n                            \n                                 BIRD\n                            \n                        \n                        \n                            \n                                Value : bird\n                            \n                        \n                        \n                            \n                                 INSECT\n                            \n                        \n                        \n                            \n                                Value : insect\n                            \n                        \n                        \n                            \n                                 MAMMAL\n                            \n                        \n                        \n                            \n                                Value : mammal\n                            \n                        \n                        \n                            \n                                 REPTILE\n                            \n                        \n                        \n                            \n                                Value : reptile\n                            \n                        \n            \n        \n\n    src/app/game/constant/area.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        AreaIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_DISPLAY_ABUNDANCE\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAbundance\n                            \n                        \n                        \n                            \n                                 ACTION_DISPLAY_ADAPTION\n                            \n                        \n                        \n                            \n                                Value : actionDisplayAdaption\n                            \n                        \n                        \n                            \n                                 AMPHIBIAN_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : amphibianElement\n                            \n                        \n                        \n                            \n                                 ARACHNID_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : arachnidElement\n                            \n                        \n                        \n                            \n                                 BIRD_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : birdElement\n                            \n                        \n                        \n                            \n                                 INSECT_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : insectElement\n                            \n                        \n                        \n                            \n                                 MAMMAL_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : mammalElement\n                            \n                        \n                        \n                            \n                                 REPTILE_ELEMENT\n                            \n                        \n                        \n                            \n                                Value : reptileElement\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SpaceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n            \n        \n\n    src/app/game/constant/element.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        ElementEnum\n                    \n                \n                        \n                            \n                                 GRASS\n                            \n                        \n                        \n                            \n                                Value : grass\n                            \n                        \n                        \n                            \n                                 GRUB\n                            \n                        \n                        \n                            \n                                Value : grub\n                            \n                        \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : meat\n                            \n                        \n                        \n                            \n                                 SEED\n                            \n                        \n                        \n                            \n                                Value : seed\n                            \n                        \n                        \n                            \n                                 SUN\n                            \n                        \n                        \n                            \n                                Value : sun\n                            \n                        \n                        \n                            \n                                 WATER\n                            \n                        \n                        \n                            \n                                Value : water\n                            \n                        \n            \n        \n\n    src/app/engine/constant/game-title.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        GameTitle\n                    \n                \n                        \n                            \n                                 DOMINANT_SPECIES\n                            \n                        \n                        \n                            \n                                Value : dominant-species\n                            \n                        \n            \n        \n\n    src/app/engine/constant/local-storage.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageKey\n                    \n                \n                        \n                            \n                                 PLAYER_AUTH_DATA\n                            \n                        \n                        \n                            \n                                Value : playerAuthData\n                            \n                        \n            \n        \n\n    src/app/game/constant/piece.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PieceKindEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN\n                            \n                        \n                        \n                            \n                                Value : actionPawn\n                            \n                        \n                        \n                            \n                                 SPECIES\n                            \n                        \n                        \n                            \n                                Value : species\n                            \n                        \n            \n        \n\n    src/app/game/constant/pile.constant.ts\n    \n        \n            \n                \n                    \n                        \n                        PileIdEnum\n                    \n                \n                        \n                            \n                                 ACTION_PAWN_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : actionPawnAmphibian\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : actionPawnArachnid\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_BIRD\n                            \n                        \n                        \n                            \n                                Value : actionPawnBird\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_INSECT\n                            \n                        \n                        \n                            \n                                Value : actionPawnInsect\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : actionPawnMammal\n                            \n                        \n                        \n                            \n                                 ACTION_PAWN_REPTILE\n                            \n                        \n                        \n                            \n                                Value : actionPawnReptile\n                            \n                        \n                        \n                            \n                                 ELEMENT\n                            \n                        \n                        \n                            \n                                Value : element\n                            \n                        \n                        \n                            \n                                 SPECIES_AMPHIBIAN\n                            \n                        \n                        \n                            \n                                Value : speciesAmphibian\n                            \n                        \n                        \n                            \n                                 SPECIES_ARACHNID\n                            \n                        \n                        \n                            \n                                Value : speciesArachnid\n                            \n                        \n                        \n                            \n                                 SPECIES_BIRD\n                            \n                        \n                        \n                            \n                                Value : speciesBird\n                            \n                        \n                        \n                            \n                                 SPECIES_INSECT\n                            \n                        \n                        \n                            \n                                Value : speciesInsect\n                            \n                        \n                        \n                            \n                                 SPECIES_MAMMAL\n                            \n                        \n                        \n                            \n                                Value : speciesMammal\n                            \n                        \n                        \n                            \n                                 SPECIES_REPTILE\n                            \n                        \n                        \n                            \n                                Value : speciesReptile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrlInterceptor   (src/.../api-url.interceptor.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            deepCompare   (src/.../misc.ts)\n                        \n                        \n                            defaultPieceFactory   (src/.../piece.model.ts)\n                        \n                        \n                            ensureDefined   (src/.../misc.ts)\n                        \n                        \n                            errorHandlerInterceptor   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            getEmptyInitialGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            getOrThrow   (src/.../misc.ts)\n                        \n                        \n                            isFalse   (src/.../predicate.ts)\n                        \n                        \n                            isNotNull   (src/.../predicate.ts)\n                        \n                        \n                            isNotUndefined   (src/.../predicate.ts)\n                        \n                        \n                            isNull   (src/.../predicate.ts)\n                        \n                        \n                            isTrue   (src/.../predicate.ts)\n                        \n                        \n                            setDifference   (src/.../misc.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/engine/interceptor/api-url.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrlInterceptor\n                        \n                    \n                \n            \n            \n                \napiUrlInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n            \n                \nauthInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/misc.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepCompare\n                        \n                    \n                \n            \n            \n                \ndeepCompare(object1, object2)\n                \n            \n\n\n\n\n            \n                \n                        Used to determine if two objects are equal. Often used in distinctUntilChanged().\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object1\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                object2\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureDefined\n                        \n                    \n                \n            \n            \n                \nensureDefined(value)\n                \n            \n\n\n\n\n            \n                \n                        Ensures that a given value is defined (i.e., not undefined).\nTypically used for values that start as undefined and then are set during initialization by a subscription.\nIf the value is undefined, this function throws an error with a message\nindicating that the value is not defined. If the value is defined, it is\nreturned unchanged.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be checked.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \nThe value itself if it is defined.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrThrow\n                        \n                    \n                \n            \n            \n                \ngetOrThrow(map, key: K, errorMessage?: string)\n                \n            \n\n\n\n\n            \n                \n                        Retrieves a value from a Map by its key, throwing an error if the key does not exist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                map\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The map to retrieve the value from.\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The key whose corresponding value is to be returned.\n\n                                            \n                                        \n                                        \n                                                errorMessage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    An optional custom error message to throw if the key is not found.\n If not provided, a default message is used.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     V\n\n                        \n                            \n                                The value associated with the specified key in the map.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDifference\n                        \n                    \n                \n            \n            \n                \nsetDifference(setA: Set, setB: Set)\n                \n            \n\n\n\n\n            \n                \n                        Returns the items that are in setA, but not in setB\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                setA\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setB\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Set\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPieceFactory\n                        \n                    \n                \n            \n            \n                \ndefaultPieceFactory(kind: string, owner, name)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                kind\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                owner\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                name\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Piece\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/interceptor/error-handler.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorHandlerInterceptor\n                        \n                    \n                \n            \n            \n                \nerrorHandlerInterceptor(req: HttpRequest, next: HttpHandlerFn)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandlerFn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEmptyInitialGameState\n                        \n                    \n                \n            \n            \n                \ngetEmptyInitialGameState(gameId: string, playerIds)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gameId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playerIds\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     GameState\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/engine/util/predicate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isFalse\n                        \n                    \n                \n            \n            \n                \nisFalse(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotNull\n                        \n                    \n                \n            \n            \n                \nisNotNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNotUndefined\n                        \n                    \n                \n            \n            \n                \nisNotUndefined(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNull\n                        \n                    \n                \n            \n            \n                \nisNull(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTrue\n                        \n                    \n                \n            \n            \n                \nisTrue(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    24 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnimalKind   (src/.../animal.constant.ts)\n                        \n                        \n                            AreaId   (src/.../area.constant.ts)\n                        \n                        \n                            ElementKind   (src/.../element.constant.ts)\n                        \n                        \n                            InitialGameElementStatesFactoryConstructor   (src/.../game-state.model.ts)\n                        \n                        \n                            PieceFactory   (src/.../piece.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/game/constant/animal.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AnimalKind\n                \n            \n            \n                \n                             `${AnimalEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/area.constant.ts\n    \n    \n        \n            \n                \n                    \n                    AreaId\n                \n            \n            \n                \n                             `${AreaIdEnum}`\n\n                \n            \n        \n    \n    src/app/game/constant/element.constant.ts\n    \n    \n        \n            \n                \n                    \n                    ElementKind\n                \n            \n            \n                \n                             `${ElementEnum}`\n\n                \n            \n        \n    \n    src/app/engine/model/game-state.model.ts\n    \n    \n        \n            \n                \n                    \n                    InitialGameElementStatesFactoryConstructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/engine/model/piece.model.ts\n    \n    \n        \n            \n                \n                    \n                    PieceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            baseGameElementStates   (src/.../game-state.constant.ts)\n                        \n                        \n                            elementAreaIdsByAnimal   (src/.../area.constant.ts)\n                        \n                        \n                            elementConfigByAnimal   (src/.../element-config.constant.ts)\n                        \n                        \n                            emptyGameState   (src/.../game-state.model.ts)\n                        \n                        \n                            imgPathByKind   (src/.../image.constant.ts)\n                        \n                        \n                            pileIdsByAnimal   (src/.../pile-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideHttpClient(\n      withFetch(),\n      withInterceptors([apiUrlInterceptor, authInterceptor, errorHandlerInterceptor]),\n    ),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideAnimationsAsync('noop'),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/engine/gaurd/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : () => {\n  if (inject(AuthService).checkIsLoggedIn()) {\n    return inject(AuthService).checkIsLoggedIn();\n  } else {\n    void inject(Router).navigate(['/login']);\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/game-state.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseGameElementStates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameElementStates\n\n                    \n                \n                \n                    \n                        Default value : {\n  area: [\n    {\n      id: AreaIdEnum.ACTION_DISPLAY_ADAPTION,\n      space: [\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ELEMENT, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n        { kind: SpaceKindEnum.ACTION_PAWN, piece: null },\n      ],\n    },\n  ],\n  faction: [],\n  pile: [\n    {\n      id: PileIdEnum.ELEMENT,\n      owner: null,\n      inventory: {\n        // 20 Elements each, with 2 being places on Earth, leaving 18 in the bag\n        [ElementEnum.GRASS]: 18,\n        [ElementEnum.GRUB]: 18,\n        [ElementEnum.MEAT]: 18,\n        [ElementEnum.SEED]: 18,\n        [ElementEnum.SUN]: 18,\n        [ElementEnum.WATER]: 18,\n      },\n    },\n  ],\n}\n                    \n                \n\n            \n                \n                    GameState defining the static elements of the DS game\n\n                \n            \n\n        \n    \n\n    src/app/game/constant/area.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementAreaIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [AnimalEnum.AMPHIBIAN, AreaIdEnum.AMPHIBIAN_ELEMENT],\n  [AnimalEnum.ARACHNID, AreaIdEnum.ARACHNID_ELEMENT],\n  [AnimalEnum.BIRD, AreaIdEnum.BIRD_ELEMENT],\n  [AnimalEnum.INSECT, AreaIdEnum.INSECT_ELEMENT],\n  [AnimalEnum.MAMMAL, AreaIdEnum.MAMMAL_ELEMENT],\n  [AnimalEnum.REPTILE, AreaIdEnum.REPTILE_ELEMENT],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/element-config.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elementConfigByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { kind: ElementEnum.WATER, inherentCount: 3, areaId: AreaIdEnum.AMPHIBIAN_ELEMENT },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { kind: ElementEnum.GRUB, inherentCount: 2, areaId: AreaIdEnum.ARACHNID_ELEMENT },\n  ],\n  [AnimalEnum.BIRD, { kind: ElementEnum.SEED, inherentCount: 2, areaId: AreaIdEnum.BIRD_ELEMENT }],\n  [\n    AnimalEnum.INSECT,\n    { kind: ElementEnum.GRASS, inherentCount: 2, areaId: AreaIdEnum.INSECT_ELEMENT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { kind: ElementEnum.MEAT, inherentCount: 2, areaId: AreaIdEnum.MAMMAL_ELEMENT },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { kind: ElementEnum.SUN, inherentCount: 2, areaId: AreaIdEnum.REPTILE_ELEMENT },\n  ],\n] as const)\n                    \n                \n\n\n        \n    \n\n    src/app/engine/model/game-state.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emptyGameState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GameState\n\n                    \n                \n                \n                    \n                        Default value : {\n  gameId: 'placeholder',\n  patchId: 0,\n  playerIds: [],\n  gameElements: {\n    area: [],\n    faction: [],\n    pile: [],\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/image.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        imgPathByKind\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  // elements /\n  ['grass', 'dominant-species/element/noun-grass-7195612.svg'],\n  ['grub', 'dominant-species/element/noun-grub-3386143.svg'],\n  ['meat', 'dominant-species/element/noun-cow-skull-151117.svg'],\n  ['seed', 'dominant-species/element/noun-seed-6850047.svg'],\n  ['sun', 'dominant-species/element/noun-sun-7300296.svg'],\n  ['water', 'dominant-species/element/noun-water-water-1235535.svg'],\n  // animals /\n  ['amphibian', 'dominant-species/animal/noun-gecko-367390.svg'],\n  ['arachnid', 'dominant-species/animal/noun-spider-7144060.svg'],\n  ['bird', 'dominant-species/animal/noun-eagle-6606521.svg'],\n  ['insect', 'dominant-species/animal/noun-grasshopper-7049525.svg'],\n  ['mammal', 'dominant-species/animal/noun-monkey-2997582.svg'],\n  ['reptile', 'dominant-species/animal/noun-snake-4412103.svg'],\n  // others /\n  ['eyeball', 'dominant-species/other/noun-eye-2037742.svg'],\n  ['elementSpace', 'dominant-species/other/noun-leaf-7290921.svg'],\n])\n                    \n                \n\n\n        \n    \n\n    src/app/game/constant/pile-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pileIdsByAnimal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReadonlyMap\n\n                    \n                \n                \n                    \n                        Default value : new Map([\n  [\n    AnimalEnum.AMPHIBIAN,\n    { actionPawn: PileIdEnum.ACTION_PAWN_AMPHIBIAN, species: PileIdEnum.SPECIES_AMPHIBIAN },\n  ],\n  [\n    AnimalEnum.ARACHNID,\n    { actionPawn: PileIdEnum.ACTION_PAWN_ARACHNID, species: PileIdEnum.SPECIES_ARACHNID },\n  ],\n  [AnimalEnum.BIRD, { actionPawn: PileIdEnum.ACTION_PAWN_BIRD, species: PileIdEnum.SPECIES_BIRD }],\n  [\n    AnimalEnum.INSECT,\n    { actionPawn: PileIdEnum.ACTION_PAWN_INSECT, species: PileIdEnum.SPECIES_INSECT },\n  ],\n  [\n    AnimalEnum.MAMMAL,\n    { actionPawn: PileIdEnum.ACTION_PAWN_MAMMAL, species: PileIdEnum.SPECIES_MAMMAL },\n  ],\n  [\n    AnimalEnum.REPTILE,\n    { actionPawn: PileIdEnum.ACTION_PAWN_REPTILE, species: PileIdEnum.SPECIES_REPTILE },\n  ],\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
